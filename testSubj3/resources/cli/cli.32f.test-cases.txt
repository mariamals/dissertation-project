Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/HelpFormatterTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/HelpFormatterTest.class
Class name: HelpFormatterTest
Method name: testFindWrapPos
Start line: 37
End line: 52
Method source code: 
    public void testFindWrapPos() throws Exception
    {
        HelpFormatter hf = new HelpFormatter();

        String text = "This is a test.";
        assertEquals("wrap position", 7, hf.findWrapPos(text, 8, 0));
        
        assertEquals("wrap position 2", -1, hf.findWrapPos(text, 8, 8));
        
        text = "aaaa aa";
        assertEquals("wrap position 3", 3, hf.findWrapPos(text, 3, 0));
        
        text = "aaaaaa aaaaaa";
        assertEquals("wrap position 4", 6, hf.findWrapPos(text, 6, 0));
        assertEquals("wrap position 4", -1, hf.findWrapPos(text, 6, 7));
    }
Method byte code: 
0: new           #2
3: dup
4: invokespecial #3
7: astore_1
8: ldc           #4
10: astore_2
11: ldc           #5
13: bipush        7
15: aload_1
16: aload_2
17: bipush        8
19: iconst_0
20: invokevirtual #6
23: invokestatic  #7
26: ldc           #8
28: iconst_m1
29: aload_1
30: aload_2
31: bipush        8
33: bipush        8
35: invokevirtual #6
38: invokestatic  #7
41: ldc           #9
43: astore_2
44: ldc           #10
46: iconst_3
47: aload_1
48: aload_2
49: iconst_3
50: iconst_0
51: invokevirtual #6
54: invokestatic  #7
57: ldc           #11
59: astore_2
60: ldc           #12
62: bipush        6
64: aload_1
65: aload_2
66: bipush        6
68: iconst_0
69: invokevirtual #6
72: invokestatic  #7
75: ldc           #12
77: iconst_m1
78: aload_1
79: aload_2
80: bipush        6
82: bipush        7
84: invokevirtual #6
87: invokestatic  #7
90: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/HelpFormatterTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/HelpFormatterTest.class
Class name: HelpFormatterTest
Method name: testRenderWrappedTextWordCut
Start line: 58
End line: 69
Method source code: 
    public void testRenderWrappedTextWordCut()
    {
        int width = 7;
        int padding = 0;
        String text = "Thisisatest.";
        String expected = "Thisisa" + EOL + 
                          "test.";
        
        StringBuffer sb = new StringBuffer();
        new HelpFormatter().renderWrappedText(sb, width, padding, text);
        assertEquals("cut and wrap", expected, sb.toString());
    }
Method byte code: 
0: bipush        7
2: istore_1
3: iconst_0
4: istore_2
5: ldc           #13
7: astore_3
8: new           #14
11: dup
12: invokespecial #15
15: ldc           #16
17: invokevirtual #17
20: getstatic     #18
23: invokevirtual #17
26: ldc           #19
28: invokevirtual #17
31: invokevirtual #20
34: astore        4
36: new           #21
39: dup
40: invokespecial #22
43: astore        5
45: new           #2
48: dup
49: invokespecial #3
52: aload         5
54: iload_1
55: iload_2
56: aload_3
57: invokevirtual #23
60: pop
61: ldc           #24
63: aload         4
65: aload         5
67: invokevirtual #25
70: invokestatic  #26
73: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/HelpFormatterTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/HelpFormatterTest.class
Class name: HelpFormatterTest
Method name: testRenderWrappedTextSingleLine
Start line: 71
End line: 82
Method source code: 
    public void testRenderWrappedTextSingleLine()
    {
        int width = 12;
        int padding = 0;
        String text = "This is a test.";
        String expected = "This is a" + EOL + 
                          "test.";
        
        StringBuffer sb = new StringBuffer();
        new HelpFormatter().renderWrappedText(sb, width, padding, text);
        assertEquals("single line text", expected, sb.toString());
    }
Method byte code: 
0: bipush        12
2: istore_1
3: iconst_0
4: istore_2
5: ldc           #4
7: astore_3
8: new           #14
11: dup
12: invokespecial #15
15: ldc           #27
17: invokevirtual #17
20: getstatic     #18
23: invokevirtual #17
26: ldc           #19
28: invokevirtual #17
31: invokevirtual #20
34: astore        4
36: new           #21
39: dup
40: invokespecial #22
43: astore        5
45: new           #2
48: dup
49: invokespecial #3
52: aload         5
54: iload_1
55: iload_2
56: aload_3
57: invokevirtual #23
60: pop
61: ldc           #28
63: aload         4
65: aload         5
67: invokevirtual #25
70: invokestatic  #26
73: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/HelpFormatterTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/HelpFormatterTest.class
Class name: HelpFormatterTest
Method name: testRenderWrappedTextSingleLinePadded
Start line: 85
End line: 96
Method source code: 
    public void testRenderWrappedTextSingleLinePadded()
    {
        int width = 12;
        int padding = 4;
        String text = "This is a test.";
        String expected = "This is a" + EOL + 
                          "    test.";
        
        StringBuffer sb = new StringBuffer();
        new HelpFormatter().renderWrappedText(sb, width, padding, text);
        assertEquals("single line padded text", expected, sb.toString());
    }
Method byte code: 
0: bipush        12
2: istore_1
3: iconst_4
4: istore_2
5: ldc           #4
7: astore_3
8: new           #14
11: dup
12: invokespecial #15
15: ldc           #27
17: invokevirtual #17
20: getstatic     #18
23: invokevirtual #17
26: ldc           #29
28: invokevirtual #17
31: invokevirtual #20
34: astore        4
36: new           #21
39: dup
40: invokespecial #22
43: astore        5
45: new           #2
48: dup
49: invokespecial #3
52: aload         5
54: iload_1
55: iload_2
56: aload_3
57: invokevirtual #23
60: pop
61: ldc           #30
63: aload         4
65: aload         5
67: invokevirtual #25
70: invokestatic  #26
73: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/HelpFormatterTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/HelpFormatterTest.class
Class name: HelpFormatterTest
Method name: testRenderWrappedTextSingleLinePadded2
Start line: 99
End line: 112
Method source code: 
    public void testRenderWrappedTextSingleLinePadded2()
    {
        int width = 53;
        int padding = 24;
        String text = "  -p,--period <PERIOD>  PERIOD is time duration of form " +
                      "DATE[-DATE] where DATE has form YYYY[MM[DD]]";
        String expected = "  -p,--period <PERIOD>  PERIOD is time duration of" + EOL +
                          "                        form DATE[-DATE] where DATE" + EOL +
                          "                        has form YYYY[MM[DD]]";
        
        StringBuffer sb = new StringBuffer();
        new HelpFormatter().renderWrappedText(sb, width, padding, text);
        assertEquals("single line padded text 2", expected, sb.toString());
    }
Method byte code: 
0: bipush        53
2: istore_1
3: bipush        24
5: istore_2
6: ldc           #31
8: astore_3
9: new           #14
12: dup
13: invokespecial #15
16: ldc           #32
18: invokevirtual #17
21: getstatic     #18
24: invokevirtual #17
27: ldc           #33
29: invokevirtual #17
32: getstatic     #18
35: invokevirtual #17
38: ldc           #34
40: invokevirtual #17
43: invokevirtual #20
46: astore        4
48: new           #21
51: dup
52: invokespecial #22
55: astore        5
57: new           #2
60: dup
61: invokespecial #3
64: aload         5
66: iload_1
67: iload_2
68: aload_3
69: invokevirtual #23
72: pop
73: ldc           #35
75: aload         4
77: aload         5
79: invokevirtual #25
82: invokestatic  #26
85: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/HelpFormatterTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/HelpFormatterTest.class
Class name: HelpFormatterTest
Method name: testRenderWrappedTextMultiLine
Start line: 115
End line: 127
Method source code: 
    public void testRenderWrappedTextMultiLine()
    {
        int width = 16;
        int padding = 0;
        String text = "aaaa aaaa aaaa" + EOL +
                      "aaaaaa" + EOL +
                      "aaaaa";
        String expected = text;
        
        StringBuffer sb = new StringBuffer();
        new HelpFormatter().renderWrappedText(sb, width, padding, text);
        assertEquals("multi line text", expected, sb.toString());
    }
Method byte code: 
0: bipush        16
2: istore_1
3: iconst_0
4: istore_2
5: new           #14
8: dup
9: invokespecial #15
12: ldc           #36
14: invokevirtual #17
17: getstatic     #18
20: invokevirtual #17
23: ldc           #37
25: invokevirtual #17
28: getstatic     #18
31: invokevirtual #17
34: ldc           #38
36: invokevirtual #17
39: invokevirtual #20
42: astore_3
43: aload_3
44: astore        4
46: new           #21
49: dup
50: invokespecial #22
53: astore        5
55: new           #2
58: dup
59: invokespecial #3
62: aload         5
64: iload_1
65: iload_2
66: aload_3
67: invokevirtual #23
70: pop
71: ldc           #39
73: aload         4
75: aload         5
77: invokevirtual #25
80: invokestatic  #26
83: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/HelpFormatterTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/HelpFormatterTest.class
Class name: HelpFormatterTest
Method name: testRenderWrappedTextMultiLinePadded
Start line: 130
End line: 144
Method source code: 
    public void testRenderWrappedTextMultiLinePadded()
    {
        int width = 16;
        int padding = 4;
        String text = "aaaa aaaa aaaa" + EOL +
                      "aaaaaa" + EOL +
                      "aaaaa";
        String expected = "aaaa aaaa aaaa" + EOL +
                          "    aaaaaa" + EOL +
                          "    aaaaa";
        
        StringBuffer sb = new StringBuffer();
        new HelpFormatter().renderWrappedText(sb, width, padding, text);
        assertEquals("multi-line padded text", expected, sb.toString());
    }
Method byte code: 
0: bipush        16
2: istore_1
3: iconst_4
4: istore_2
5: new           #14
8: dup
9: invokespecial #15
12: ldc           #36
14: invokevirtual #17
17: getstatic     #18
20: invokevirtual #17
23: ldc           #37
25: invokevirtual #17
28: getstatic     #18
31: invokevirtual #17
34: ldc           #38
36: invokevirtual #17
39: invokevirtual #20
42: astore_3
43: new           #14
46: dup
47: invokespecial #15
50: ldc           #36
52: invokevirtual #17
55: getstatic     #18
58: invokevirtual #17
61: ldc           #40
63: invokevirtual #17
66: getstatic     #18
69: invokevirtual #17
72: ldc           #41
74: invokevirtual #17
77: invokevirtual #20
80: astore        4
82: new           #21
85: dup
86: invokespecial #22
89: astore        5
91: new           #2
94: dup
95: invokespecial #3
98: aload         5
100: iload_1
101: iload_2
102: aload_3
103: invokevirtual #23
106: pop
107: ldc           #42
109: aload         4
111: aload         5
113: invokevirtual #25
116: invokestatic  #26
119: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/HelpFormatterTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/HelpFormatterTest.class
Class name: HelpFormatterTest
Method name: testPrintOptions
Start line: 147
End line: 194
Method source code: 
    public void testPrintOptions() throws Exception
    {
        StringBuffer sb = new StringBuffer();
        HelpFormatter hf = new HelpFormatter();
        final int leftPad = 1;
        final int descPad = 3;
        final String lpad = hf.createPadding(leftPad);
        final String dpad = hf.createPadding(descPad);
        Options options = null;
        String expected = null;

        options = new Options().addOption("a", false, "aaaa aaaa aaaa aaaa aaaa");
        expected = lpad + "-a" + dpad + "aaaa aaaa aaaa aaaa aaaa";
        hf.renderOptions(sb, 60, options, leftPad, descPad);
        assertEquals("simple non-wrapped option", expected, sb.toString());

        int nextLineTabStop = leftPad + descPad + "-a".length();
        expected = lpad + "-a" + dpad + "aaaa aaaa aaaa" + EOL +
                   hf.createPadding(nextLineTabStop) + "aaaa aaaa";
        sb.setLength(0);
        hf.renderOptions(sb, nextLineTabStop + 17, options, leftPad, descPad);
        assertEquals("simple wrapped option", expected, sb.toString());


        options = new Options().addOption("a", "aaa", false, "dddd dddd dddd dddd");
        expected = lpad + "-a,--aaa" + dpad + "dddd dddd dddd dddd";
        sb.setLength(0);
        hf.renderOptions(sb, 60, options, leftPad, descPad);
        assertEquals("long non-wrapped option", expected, sb.toString());

        nextLineTabStop = leftPad + descPad + "-a,--aaa".length();
        expected = lpad + "-a,--aaa" + dpad + "dddd dddd" + EOL +
                   hf.createPadding(nextLineTabStop) + "dddd dddd";
        sb.setLength(0);
        hf.renderOptions(sb, 25, options, leftPad, descPad);
        assertEquals("long wrapped option", expected, sb.toString());

        options = new Options().
                addOption("a", "aaa", false, "dddd dddd dddd dddd").
                addOption("b", false, "feeee eeee eeee eeee");
        expected = lpad + "-a,--aaa" + dpad + "dddd dddd" + EOL +
                   hf.createPadding(nextLineTabStop) + "dddd dddd" + EOL +
                   lpad + "-b      " + dpad + "feeee eeee" + EOL +
                   hf.createPadding(nextLineTabStop) + "eeee eeee";
        sb.setLength(0);
        hf.renderOptions(sb, 25, options, leftPad, descPad);
        assertEquals("multiple wrapped options", expected, sb.toString());
    }
Method byte code: 
0: new           #21
3: dup
4: invokespecial #22
7: astore_1
8: new           #2
11: dup
12: invokespecial #3
15: astore_2
16: iconst_1
17: istore_3
18: iconst_3
19: istore        4
21: aload_2
22: iconst_1
23: invokevirtual #43
26: astore        5
28: aload_2
29: iconst_3
30: invokevirtual #43
33: astore        6
35: aconst_null
36: astore        7
38: aconst_null
39: astore        8
41: new           #44
44: dup
45: invokespecial #45
48: ldc           #46
50: iconst_0
51: ldc           #47
53: invokevirtual #48
56: astore        7
58: new           #14
61: dup
62: invokespecial #15
65: aload         5
67: invokevirtual #17
70: ldc           #49
72: invokevirtual #17
75: aload         6
77: invokevirtual #17
80: ldc           #47
82: invokevirtual #17
85: invokevirtual #20
88: astore        8
90: aload_2
91: aload_1
92: bipush        60
94: aload         7
96: iconst_1
97: iconst_3
98: invokevirtual #50
101: pop
102: ldc           #51
104: aload         8
106: aload_1
107: invokevirtual #25
110: invokestatic  #26
113: iconst_4
114: ldc           #49
116: invokevirtual #52
119: iadd
120: istore        9
122: new           #14
125: dup
126: invokespecial #15
129: aload         5
131: invokevirtual #17
134: ldc           #49
136: invokevirtual #17
139: aload         6
141: invokevirtual #17
144: ldc           #36
146: invokevirtual #17
149: getstatic     #18
152: invokevirtual #17
155: aload_2
156: iload         9
158: invokevirtual #43
161: invokevirtual #17
164: ldc           #53
166: invokevirtual #17
169: invokevirtual #20
172: astore        8
174: aload_1
175: iconst_0
176: invokevirtual #54
179: aload_2
180: aload_1
181: iload         9
183: bipush        17
185: iadd
186: aload         7
188: iconst_1
189: iconst_3
190: invokevirtual #50
193: pop
194: ldc           #55
196: aload         8
198: aload_1
199: invokevirtual #25
202: invokestatic  #26
205: new           #44
208: dup
209: invokespecial #45
212: ldc           #46
214: ldc           #56
216: iconst_0
217: ldc           #57
219: invokevirtual #58
222: astore        7
224: new           #14
227: dup
228: invokespecial #15
231: aload         5
233: invokevirtual #17
236: ldc           #59
238: invokevirtual #17
241: aload         6
243: invokevirtual #17
246: ldc           #57
248: invokevirtual #17
251: invokevirtual #20
254: astore        8
256: aload_1
257: iconst_0
258: invokevirtual #54
261: aload_2
262: aload_1
263: bipush        60
265: aload         7
267: iconst_1
268: iconst_3
269: invokevirtual #50
272: pop
273: ldc           #60
275: aload         8
277: aload_1
278: invokevirtual #25
281: invokestatic  #26
284: iconst_4
285: ldc           #59
287: invokevirtual #52
290: iadd
291: istore        9
293: new           #14
296: dup
297: invokespecial #15
300: aload         5
302: invokevirtual #17
305: ldc           #59
307: invokevirtual #17
310: aload         6
312: invokevirtual #17
315: ldc           #61
317: invokevirtual #17
320: getstatic     #18
323: invokevirtual #17
326: aload_2
327: iload         9
329: invokevirtual #43
332: invokevirtual #17
335: ldc           #61
337: invokevirtual #17
340: invokevirtual #20
343: astore        8
345: aload_1
346: iconst_0
347: invokevirtual #54
350: aload_2
351: aload_1
352: bipush        25
354: aload         7
356: iconst_1
357: iconst_3
358: invokevirtual #50
361: pop
362: ldc           #62
364: aload         8
366: aload_1
367: invokevirtual #25
370: invokestatic  #26
373: new           #44
376: dup
377: invokespecial #45
380: ldc           #46
382: ldc           #56
384: iconst_0
385: ldc           #57
387: invokevirtual #58
390: ldc           #63
392: iconst_0
393: ldc           #64
395: invokevirtual #48
398: astore        7
400: new           #14
403: dup
404: invokespecial #15
407: aload         5
409: invokevirtual #17
412: ldc           #59
414: invokevirtual #17
417: aload         6
419: invokevirtual #17
422: ldc           #61
424: invokevirtual #17
427: getstatic     #18
430: invokevirtual #17
433: aload_2
434: iload         9
436: invokevirtual #43
439: invokevirtual #17
442: ldc           #61
444: invokevirtual #17
447: getstatic     #18
450: invokevirtual #17
453: aload         5
455: invokevirtual #17
458: ldc           #65
460: invokevirtual #17
463: aload         6
465: invokevirtual #17
468: ldc           #66
470: invokevirtual #17
473: getstatic     #18
476: invokevirtual #17
479: aload_2
480: iload         9
482: invokevirtual #43
485: invokevirtual #17
488: ldc           #67
490: invokevirtual #17
493: invokevirtual #20
496: astore        8
498: aload_1
499: iconst_0
500: invokevirtual #54
503: aload_2
504: aload_1
505: bipush        25
507: aload         7
509: iconst_1
510: iconst_3
511: invokevirtual #50
514: pop
515: ldc           #68
517: aload         8
519: aload_1
520: invokevirtual #25
523: invokestatic  #26
526: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/HelpFormatterTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/HelpFormatterTest.class
Class name: HelpFormatterTest
Method name: testPrintHelpWithEmptySyntax
Start line: 196
End line: 216
Method source code: 
    public void testPrintHelpWithEmptySyntax()
    {
        HelpFormatter formatter = new HelpFormatter();
        try
        {
            formatter.printHelp(null, new Options());
            fail("null command line syntax should be rejected");
        }
        catch (IllegalArgumentException e)
        {
        }

        try
        {
            formatter.printHelp("", new Options());
            fail("empty command line syntax should be rejected");
        }
        catch (IllegalArgumentException e)
        {
        }
    }
Method byte code: 
0: new           #2
3: dup
4: invokespecial #3
7: astore_1
8: aload_1
9: aconst_null
10: new           #44
13: dup
14: invokespecial #45
17: invokevirtual #69
20: ldc           #70
22: invokestatic  #71
25: goto          29
28: astore_2
29: aload_1
30: ldc           #73
32: new           #44
35: dup
36: invokespecial #45
39: invokevirtual #69
42: ldc           #74
44: invokestatic  #71
47: goto          51
50: astore_2
51: return
Exception table:
from    to  target type
8    25    28   Class java/lang/IllegalArgumentException
29    47    50   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/HelpFormatterTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/HelpFormatterTest.class
Class name: HelpFormatterTest
Method name: testAutomaticUsage
Start line: 220
End line: 241
Method source code: 
    public void testAutomaticUsage() throws Exception
    {
        HelpFormatter hf = new HelpFormatter();
        Options options = null;
        String expected = "usage: app [-a]";
        ByteArrayOutputStream out = new ByteArrayOutputStream();
        PrintWriter pw = new PrintWriter(out);

        options = new Options().addOption("a", false, "aaaa aaaa aaaa aaaa aaaa");
        hf.printUsage(pw, 60, "app", options);
        pw.flush();
        assertEquals("simple auto usage", expected, out.toString().trim());
        out.reset();

        expected = "usage: app [-a] [-b]";
        options = new Options().addOption("a", false, "aaaa aaaa aaaa aaaa aaaa")
                .addOption("b", false, "bbb");
        hf.printUsage(pw, 60, "app", options);
        pw.flush();
        assertEquals("simple auto usage", expected, out.toString().trim());
        out.reset();
    }
Method byte code: 
0: new           #2
3: dup
4: invokespecial #3
7: astore_1
8: aconst_null
9: astore_2
10: ldc           #75
12: astore_3
13: new           #76
16: dup
17: invokespecial #77
20: astore        4
22: new           #78
25: dup
26: aload         4
28: invokespecial #79
31: astore        5
33: new           #44
36: dup
37: invokespecial #45
40: ldc           #46
42: iconst_0
43: ldc           #47
45: invokevirtual #48
48: astore_2
49: aload_1
50: aload         5
52: bipush        60
54: ldc           #80
56: aload_2
57: invokevirtual #81
60: aload         5
62: invokevirtual #82
65: ldc           #83
67: aload_3
68: aload         4
70: invokevirtual #84
73: invokevirtual #85
76: invokestatic  #26
79: aload         4
81: invokevirtual #86
84: ldc           #87
86: astore_3
87: new           #44
90: dup
91: invokespecial #45
94: ldc           #46
96: iconst_0
97: ldc           #47
99: invokevirtual #48
102: ldc           #63
104: iconst_0
105: ldc           #88
107: invokevirtual #48
110: astore_2
111: aload_1
112: aload         5
114: bipush        60
116: ldc           #80
118: aload_2
119: invokevirtual #81
122: aload         5
124: invokevirtual #82
127: ldc           #83
129: aload_3
130: aload         4
132: invokevirtual #84
135: invokevirtual #85
138: invokestatic  #26
141: aload         4
143: invokevirtual #86
146: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/HelpFormatterTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/HelpFormatterTest.class
Class name: HelpFormatterTest
Method name: testPrintUsage
Start line: 245
End line: 260
Method source code: 
    public void testPrintUsage()
    {
        Option optionA = new Option("a", "first");
        Option optionB = new Option("b", "second");
        Option optionC = new Option("c", "third");
        Options opts = new Options();
        opts.addOption(optionA);
        opts.addOption(optionB);
        opts.addOption(optionC);
        HelpFormatter helpFormatter = new HelpFormatter();
        ByteArrayOutputStream bytesOut = new ByteArrayOutputStream();
        PrintWriter printWriter = new PrintWriter(bytesOut);
        helpFormatter.printUsage(printWriter, 80, "app", opts);
        printWriter.close();
        assertEquals("usage: app [-a] [-b] [-c]" + EOL, bytesOut.toString());
    }
Method byte code: 
0: new           #89
3: dup
4: ldc           #46
6: ldc           #90
8: invokespecial #91
11: astore_1
12: new           #89
15: dup
16: ldc           #63
18: ldc           #92
20: invokespecial #91
23: astore_2
24: new           #89
27: dup
28: ldc           #93
30: ldc           #94
32: invokespecial #91
35: astore_3
36: new           #44
39: dup
40: invokespecial #45
43: astore        4
45: aload         4
47: aload_1
48: invokevirtual #95
51: pop
52: aload         4
54: aload_2
55: invokevirtual #95
58: pop
59: aload         4
61: aload_3
62: invokevirtual #95
65: pop
66: new           #2
69: dup
70: invokespecial #3
73: astore        5
75: new           #76
78: dup
79: invokespecial #77
82: astore        6
84: new           #78
87: dup
88: aload         6
90: invokespecial #79
93: astore        7
95: aload         5
97: aload         7
99: bipush        80
101: ldc           #80
103: aload         4
105: invokevirtual #81
108: aload         7
110: invokevirtual #96
113: new           #14
116: dup
117: invokespecial #15
120: ldc           #97
122: invokevirtual #17
125: getstatic     #18
128: invokevirtual #17
131: invokevirtual #20
134: aload         6
136: invokevirtual #84
139: invokestatic  #98
142: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/HelpFormatterTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/HelpFormatterTest.class
Class name: HelpFormatterTest
Method name: testPrintSortedUsage
Start line: 263
End line: 285
Method source code: 
    public void testPrintSortedUsage()
    {
        Options opts = new Options();
        opts.addOption(new Option("a", "first"));
        opts.addOption(new Option("b", "second"));
        opts.addOption(new Option("c", "third"));

        HelpFormatter helpFormatter = new HelpFormatter();
        helpFormatter.setOptionComparator(new Comparator()
        {
            public int compare(Object o1, Object o2)
            {
                Option opt1 = (Option) o1;
                Option opt2 = (Option) o2;
                return opt2.getKey().compareToIgnoreCase(opt1.getKey());
            }
        });

        StringWriter out = new StringWriter();
        helpFormatter.printUsage(new PrintWriter(out), 80, "app", opts);

        assertEquals("usage: app [-c] [-b] [-a]" + EOL, out.toString());
    }
Method byte code: 
0: new           #44
3: dup
4: invokespecial #45
7: astore_1
8: aload_1
9: new           #89
12: dup
13: ldc           #46
15: ldc           #90
17: invokespecial #91
20: invokevirtual #95
23: pop
24: aload_1
25: new           #89
28: dup
29: ldc           #63
31: ldc           #92
33: invokespecial #91
36: invokevirtual #95
39: pop
40: aload_1
41: new           #89
44: dup
45: ldc           #93
47: ldc           #94
49: invokespecial #91
52: invokevirtual #95
55: pop
56: new           #2
59: dup
60: invokespecial #3
63: astore_2
64: aload_2
65: new           #99
68: dup
69: aload_0
70: invokespecial #100
73: invokevirtual #101
76: new           #102
79: dup
80: invokespecial #103
83: astore_3
84: aload_2
85: new           #78
88: dup
89: aload_3
90: invokespecial #104
93: bipush        80
95: ldc           #80
97: aload_1
98: invokevirtual #81
101: new           #14
104: dup
105: invokespecial #15
108: ldc           #105
110: invokevirtual #17
113: getstatic     #18
116: invokevirtual #17
119: invokevirtual #20
122: aload_3
123: invokevirtual #106
126: invokestatic  #98
129: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/HelpFormatterTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/HelpFormatterTest.class
Class name: HelpFormatterTest
Method name: testPrintSortedUsageWithNullComparator
Start line: 288
End line: 302
Method source code: 
    public void testPrintSortedUsageWithNullComparator()
    {
        Options opts = new Options();
        opts.addOption(new Option("a", "first"));
        opts.addOption(new Option("b", "second"));
        opts.addOption(new Option("c", "third"));

        HelpFormatter helpFormatter = new HelpFormatter();
        helpFormatter.setOptionComparator(null);

        StringWriter out = new StringWriter();
        helpFormatter.printUsage(new PrintWriter(out), 80, "app", opts);

        assertEquals("usage: app [-a] [-b] [-c]" + EOL, out.toString());
    }
Method byte code: 
0: new           #44
3: dup
4: invokespecial #45
7: astore_1
8: aload_1
9: new           #89
12: dup
13: ldc           #46
15: ldc           #90
17: invokespecial #91
20: invokevirtual #95
23: pop
24: aload_1
25: new           #89
28: dup
29: ldc           #63
31: ldc           #92
33: invokespecial #91
36: invokevirtual #95
39: pop
40: aload_1
41: new           #89
44: dup
45: ldc           #93
47: ldc           #94
49: invokespecial #91
52: invokevirtual #95
55: pop
56: new           #2
59: dup
60: invokespecial #3
63: astore_2
64: aload_2
65: aconst_null
66: invokevirtual #101
69: new           #102
72: dup
73: invokespecial #103
76: astore_3
77: aload_2
78: new           #78
81: dup
82: aload_3
83: invokespecial #104
86: bipush        80
88: ldc           #80
90: aload_1
91: invokevirtual #81
94: new           #14
97: dup
98: invokespecial #15
101: ldc           #97
103: invokevirtual #17
106: getstatic     #18
109: invokevirtual #17
112: invokevirtual #20
115: aload_3
116: invokevirtual #106
119: invokestatic  #98
122: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/HelpFormatterTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/HelpFormatterTest.class
Class name: HelpFormatterTest
Method name: testPrintOptionGroupUsage
Start line: 304
End line: 320
Method source code: 
    public void testPrintOptionGroupUsage()
    {
        OptionGroup group = new OptionGroup();
        group.addOption(OptionBuilder.create("a"));
        group.addOption(OptionBuilder.create("b"));
        group.addOption(OptionBuilder.create("c"));

        Options options = new Options();
        options.addOptionGroup(group);

        StringWriter out = new StringWriter();

        HelpFormatter formatter = new HelpFormatter();
        formatter.printUsage(new PrintWriter(out), 80, "app", options);

        assertEquals("usage: app [-a | -b | -c]" + EOL, out.toString());
    }
Method byte code: 
0: new           #107
3: dup
4: invokespecial #108
7: astore_1
8: aload_1
9: ldc           #46
11: invokestatic  #109
14: invokevirtual #110
17: pop
18: aload_1
19: ldc           #63
21: invokestatic  #109
24: invokevirtual #110
27: pop
28: aload_1
29: ldc           #93
31: invokestatic  #109
34: invokevirtual #110
37: pop
38: new           #44
41: dup
42: invokespecial #45
45: astore_2
46: aload_2
47: aload_1
48: invokevirtual #111
51: pop
52: new           #102
55: dup
56: invokespecial #103
59: astore_3
60: new           #2
63: dup
64: invokespecial #3
67: astore        4
69: aload         4
71: new           #78
74: dup
75: aload_3
76: invokespecial #104
79: bipush        80
81: ldc           #80
83: aload_2
84: invokevirtual #81
87: new           #14
90: dup
91: invokespecial #15
94: ldc           #112
96: invokevirtual #17
99: getstatic     #18
102: invokevirtual #17
105: invokevirtual #20
108: aload_3
109: invokevirtual #106
112: invokestatic  #98
115: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/HelpFormatterTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/HelpFormatterTest.class
Class name: HelpFormatterTest
Method name: testPrintRequiredOptionGroupUsage
Start line: 322
End line: 339
Method source code: 
    public void testPrintRequiredOptionGroupUsage()
    {
        OptionGroup group = new OptionGroup();
        group.addOption(OptionBuilder.create("a"));
        group.addOption(OptionBuilder.create("b"));
        group.addOption(OptionBuilder.create("c"));
        group.setRequired(true);

        Options options = new Options();
        options.addOptionGroup(group);

        StringWriter out = new StringWriter();

        HelpFormatter formatter = new HelpFormatter();
        formatter.printUsage(new PrintWriter(out), 80, "app", options);

        assertEquals("usage: app -a | -b | -c" + EOL, out.toString());
    }
Method byte code: 
0: new           #107
3: dup
4: invokespecial #108
7: astore_1
8: aload_1
9: ldc           #46
11: invokestatic  #109
14: invokevirtual #110
17: pop
18: aload_1
19: ldc           #63
21: invokestatic  #109
24: invokevirtual #110
27: pop
28: aload_1
29: ldc           #93
31: invokestatic  #109
34: invokevirtual #110
37: pop
38: aload_1
39: iconst_1
40: invokevirtual #113
43: new           #44
46: dup
47: invokespecial #45
50: astore_2
51: aload_2
52: aload_1
53: invokevirtual #111
56: pop
57: new           #102
60: dup
61: invokespecial #103
64: astore_3
65: new           #2
68: dup
69: invokespecial #3
72: astore        4
74: aload         4
76: new           #78
79: dup
80: aload_3
81: invokespecial #104
84: bipush        80
86: ldc           #80
88: aload_2
89: invokevirtual #81
92: new           #14
95: dup
96: invokespecial #15
99: ldc           #114
101: invokevirtual #17
104: getstatic     #18
107: invokevirtual #17
110: invokevirtual #20
113: aload_3
114: invokevirtual #106
117: invokestatic  #98
120: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/HelpFormatterTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/HelpFormatterTest.class
Class name: HelpFormatterTest
Method name: testPrintOptionWithEmptyArgNameUsage
Start line: 341
End line: 356
Method source code: 
    public void testPrintOptionWithEmptyArgNameUsage()
    {
        Option option = new Option("f", true, null);
        option.setArgName("");
        option.setRequired(true);

        Options options = new Options();
        options.addOption(option);

        StringWriter out = new StringWriter();

        HelpFormatter formatter = new HelpFormatter();
        formatter.printUsage(new PrintWriter(out), 80, "app", options);

        assertEquals("usage: app -f" + EOL, out.toString());
    }
Method byte code: 
0: new           #89
3: dup
4: ldc           #115
6: iconst_1
7: aconst_null
8: invokespecial #116
11: astore_1
12: aload_1
13: ldc           #73
15: invokevirtual #117
18: aload_1
19: iconst_1
20: invokevirtual #118
23: new           #44
26: dup
27: invokespecial #45
30: astore_2
31: aload_2
32: aload_1
33: invokevirtual #95
36: pop
37: new           #102
40: dup
41: invokespecial #103
44: astore_3
45: new           #2
48: dup
49: invokespecial #3
52: astore        4
54: aload         4
56: new           #78
59: dup
60: aload_3
61: invokespecial #104
64: bipush        80
66: ldc           #80
68: aload_2
69: invokevirtual #81
72: new           #14
75: dup
76: invokespecial #15
79: ldc           #119
81: invokevirtual #17
84: getstatic     #18
87: invokevirtual #17
90: invokevirtual #20
93: aload_3
94: invokevirtual #106
97: invokestatic  #98
100: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/HelpFormatterTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/HelpFormatterTest.class
Class name: HelpFormatterTest
Method name: testDefaultArgName
Start line: 358
End line: 372
Method source code: 
    public void testDefaultArgName()
    {
        Option option = OptionBuilder.hasArg().isRequired().create("f");
        
        Options options = new Options();
        options.addOption(option);
        
        StringWriter out = new StringWriter();

        HelpFormatter formatter = new HelpFormatter();
        formatter.setArgName("argument");
        formatter.printUsage(new PrintWriter(out), 80, "app", options);

        assertEquals("usage: app -f <argument>" + EOL, out.toString());
    }
Method byte code: 
0: invokestatic  #120
3: pop
4: invokestatic  #121
7: pop
8: ldc           #115
10: invokestatic  #109
13: astore_1
14: new           #44
17: dup
18: invokespecial #45
21: astore_2
22: aload_2
23: aload_1
24: invokevirtual #95
27: pop
28: new           #102
31: dup
32: invokespecial #103
35: astore_3
36: new           #2
39: dup
40: invokespecial #3
43: astore        4
45: aload         4
47: ldc           #122
49: invokevirtual #123
52: aload         4
54: new           #78
57: dup
58: aload_3
59: invokespecial #104
62: bipush        80
64: ldc           #80
66: aload_2
67: invokevirtual #81
70: new           #14
73: dup
74: invokespecial #15
77: ldc           #124
79: invokevirtual #17
82: getstatic     #18
85: invokevirtual #17
88: invokevirtual #20
91: aload_3
92: invokevirtual #106
95: invokestatic  #98
98: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/HelpFormatterTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/HelpFormatterTest.class
Class name: HelpFormatterTest
Method name: testRtrim
Start line: 374
End line: 381
Method source code: 
    public void testRtrim()
    {
        HelpFormatter formatter = new HelpFormatter();

        assertEquals(null, formatter.rtrim(null));
        assertEquals("", formatter.rtrim(""));
        assertEquals("  foo", formatter.rtrim("  foo  "));
    }
Method byte code: 
0: new           #2
3: dup
4: invokespecial #3
7: astore_1
8: aconst_null
9: aload_1
10: aconst_null
11: invokevirtual #125
14: invokestatic  #98
17: ldc           #73
19: aload_1
20: ldc           #73
22: invokevirtual #125
25: invokestatic  #98
28: ldc           #126
30: aload_1
31: ldc           #127
33: invokevirtual #125
36: invokestatic  #98
39: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/HelpFormatterTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/HelpFormatterTest.class
Class name: HelpFormatterTest
Method name: testAccessors
Start line: 383
End line: 410
Method source code: 
    public void testAccessors()
    {
        HelpFormatter formatter = new HelpFormatter();

        formatter.setArgName("argname");
        assertEquals("arg name", "argname", formatter.getArgName());

        formatter.setDescPadding(3);
        assertEquals("desc padding", 3, formatter.getDescPadding());

        formatter.setLeftPadding(7);
        assertEquals("left padding", 7, formatter.getLeftPadding());

        formatter.setLongOptPrefix("~~");
        assertEquals("long opt prefix", "~~", formatter.getLongOptPrefix());

        formatter.setNewLine("\n");
        assertEquals("new line", "\n", formatter.getNewLine());

        formatter.setOptPrefix("~");
        assertEquals("opt prefix", "~", formatter.getOptPrefix());

        formatter.setSyntaxPrefix("-> ");
        assertEquals("syntax prefix", "-> ", formatter.getSyntaxPrefix());

        formatter.setWidth(80);
        assertEquals("width", 80, formatter.getWidth());
    }
Method byte code: 
0: new           #2
3: dup
4: invokespecial #3
7: astore_1
8: aload_1
9: ldc           #128
11: invokevirtual #123
14: ldc           #129
16: ldc           #128
18: aload_1
19: invokevirtual #130
22: invokestatic  #26
25: aload_1
26: iconst_3
27: invokevirtual #131
30: ldc           #132
32: iconst_3
33: aload_1
34: invokevirtual #133
37: invokestatic  #7
40: aload_1
41: bipush        7
43: invokevirtual #134
46: ldc           #135
48: bipush        7
50: aload_1
51: invokevirtual #136
54: invokestatic  #7
57: aload_1
58: ldc           #137
60: invokevirtual #138
63: ldc           #139
65: ldc           #137
67: aload_1
68: invokevirtual #140
71: invokestatic  #26
74: aload_1
75: ldc           #141
77: invokevirtual #142
80: ldc           #143
82: ldc           #141
84: aload_1
85: invokevirtual #144
88: invokestatic  #26
91: aload_1
92: ldc           #145
94: invokevirtual #146
97: ldc           #147
99: ldc           #145
101: aload_1
102: invokevirtual #148
105: invokestatic  #26
108: aload_1
109: ldc           #149
111: invokevirtual #150
114: ldc           #151
116: ldc           #149
118: aload_1
119: invokevirtual #152
122: invokestatic  #26
125: aload_1
126: bipush        80
128: invokevirtual #153
131: ldc           #154
133: bipush        80
135: aload_1
136: invokevirtual #155
139: invokestatic  #7
142: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/HelpFormatterTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/HelpFormatterTest.class
Class name: HelpFormatterTest
Method name: testHeaderStartingWithLineSeparator
Start line: 412
End line: 427
Method source code: 
    public void testHeaderStartingWithLineSeparator()
    {
        Options options = new Options();
        HelpFormatter formatter = new HelpFormatter();
        String header = EOL + "Header";
        String footer = "Footer";
        StringWriter out = new StringWriter();
        formatter.printHelp(new PrintWriter(out), 80, "foobar", header, options, 2, 2, footer, true);
        assertEquals(
                "usage: foobar" + EOL +
                "" + EOL +
                "Header" + EOL +
                "" + EOL +
                "Footer" + EOL
                , out.toString());
    }
Method byte code: 
0: new           #44
3: dup
4: invokespecial #45
7: astore_1
8: new           #2
11: dup
12: invokespecial #3
15: astore_2
16: new           #14
19: dup
20: invokespecial #15
23: getstatic     #18
26: invokevirtual #17
29: ldc           #156
31: invokevirtual #17
34: invokevirtual #20
37: astore_3
38: ldc           #157
40: astore        4
42: new           #102
45: dup
46: invokespecial #103
49: astore        5
51: aload_2
52: new           #78
55: dup
56: aload         5
58: invokespecial #104
61: bipush        80
63: ldc           #158
65: aload_3
66: aload_1
67: iconst_2
68: iconst_2
69: aload         4
71: iconst_1
72: invokevirtual #159
75: new           #14
78: dup
79: invokespecial #15
82: ldc           #160
84: invokevirtual #17
87: getstatic     #18
90: invokevirtual #17
93: ldc           #73
95: invokevirtual #17
98: getstatic     #18
101: invokevirtual #17
104: ldc           #156
106: invokevirtual #17
109: getstatic     #18
112: invokevirtual #17
115: ldc           #73
117: invokevirtual #17
120: getstatic     #18
123: invokevirtual #17
126: ldc           #157
128: invokevirtual #17
131: getstatic     #18
134: invokevirtual #17
137: invokevirtual #20
140: aload         5
142: invokevirtual #106
145: invokestatic  #98
148: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/HelpFormatterTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/HelpFormatterTest.class
Class name: HelpFormatterTest
Method name: testOptionWithoutShortFormat
Start line: 430
End line: 446
Method source code: 
    public void testOptionWithoutShortFormat()
    {
        Options options = new Options();
        options.addOption(new Option("a", "aaa", false, "aaaaaaa"));
        options.addOption(new Option(null, "bbb", false, "bbbbbbb"));
        options.addOption(new Option("c", null, false, "ccccccc"));

        HelpFormatter formatter = new HelpFormatter();
        StringWriter out = new StringWriter();
        formatter.printHelp(new PrintWriter(out), 80, "foobar", "", options, 2, 2, "", true);
        assertEquals(
                "usage: foobar [-a] [--bbb] [-c]" + EOL +
                "  -a,--aaa  aaaaaaa" + EOL +
                "     --bbb  bbbbbbb" + EOL +
                "  -c        ccccccc" + EOL
                , out.toString());
    }
Method byte code: 
0: new           #44
3: dup
4: invokespecial #45
7: astore_1
8: aload_1
9: new           #89
12: dup
13: ldc           #46
15: ldc           #56
17: iconst_0
18: ldc           #161
20: invokespecial #162
23: invokevirtual #95
26: pop
27: aload_1
28: new           #89
31: dup
32: aconst_null
33: ldc           #88
35: iconst_0
36: ldc           #163
38: invokespecial #162
41: invokevirtual #95
44: pop
45: aload_1
46: new           #89
49: dup
50: ldc           #93
52: aconst_null
53: iconst_0
54: ldc           #164
56: invokespecial #162
59: invokevirtual #95
62: pop
63: new           #2
66: dup
67: invokespecial #3
70: astore_2
71: new           #102
74: dup
75: invokespecial #103
78: astore_3
79: aload_2
80: new           #78
83: dup
84: aload_3
85: invokespecial #104
88: bipush        80
90: ldc           #158
92: ldc           #73
94: aload_1
95: iconst_2
96: iconst_2
97: ldc           #73
99: iconst_1
100: invokevirtual #159
103: new           #14
106: dup
107: invokespecial #15
110: ldc           #165
112: invokevirtual #17
115: getstatic     #18
118: invokevirtual #17
121: ldc           #166
123: invokevirtual #17
126: getstatic     #18
129: invokevirtual #17
132: ldc           #167
134: invokevirtual #17
137: getstatic     #18
140: invokevirtual #17
143: ldc           #168
145: invokevirtual #17
148: getstatic     #18
151: invokevirtual #17
154: invokevirtual #20
157: aload_3
158: invokevirtual #106
161: invokestatic  #98
164: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/HelpFormatterTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/HelpFormatterTest.class
Class name: HelpFormatterTest
Method name: testOptionWithoutShortFormat2
Start line: 450
End line: 517
Method source code: 
    public void testOptionWithoutShortFormat2()
    {
        Option help = new Option("h", "help", false, "print this message");
        Option version = new Option("v", "version", false, "print version information");
        Option newRun = new Option("n", "new", false, "Create NLT cache entries only for new items");
        Option trackerRun = new Option("t", "tracker", false, "Create NLT cache entries only for tracker items");
        
        Option timeLimit = OptionBuilder.withLongOpt("limit")
                                        .hasArg()
                                        .withValueSeparator()
                                        .withDescription("Set time limit for execution, in mintues")
                                        .create("l");
        
        Option age = OptionBuilder.withLongOpt("age")
                                        .hasArg()
                                        .withValueSeparator()
                                        .withDescription("Age (in days) of cache item before being recomputed")
                                        .create("a");
        
        Option server = OptionBuilder.withLongOpt("server")
                                        .hasArg()
                                        .withValueSeparator()
                                        .withDescription("The NLT server address")
                                        .create("s");
        
        Option numResults = OptionBuilder.withLongOpt("results")
                                        .hasArg()
                                        .withValueSeparator()
                                        .withDescription("Number of results per item")
                                        .create("r");
        
        Option configFile = OptionBuilder.withLongOpt("config")
                                        .hasArg()
                                        .withValueSeparator()
                                        .withDescription("Use the specified configuration file")
                                        .create();
        
        Options mOptions = new Options();
        mOptions.addOption(help);
        mOptions.addOption(version);
        mOptions.addOption(newRun);
        mOptions.addOption(trackerRun);
        mOptions.addOption(timeLimit);
        mOptions.addOption(age);
        mOptions.addOption(server);
        mOptions.addOption(numResults);
        mOptions.addOption(configFile);
        
        HelpFormatter formatter = new HelpFormatter();
        final String EOL = System.getProperty("line.separator");
        StringWriter out = new StringWriter();
        formatter.printHelp(new PrintWriter(out),80,"commandline","header",mOptions,2,2,"footer",true);
        assertEquals(
                "usage: commandline [-a <arg>] [--config <arg>] [-h] [-l <arg>] [-n] [-r <arg>]" + EOL +
                "       [-s <arg>] [-t] [-v]" + EOL +
                "header"+EOL+
                "  -a,--age <arg>      Age (in days) of cache item before being recomputed"+EOL+
                "     --config <arg>   Use the specified configuration file"+EOL+
                "  -h,--help           print this message"+EOL+
                "  -l,--limit <arg>    Set time limit for execution, in mintues"+EOL+
                "  -n,--new            Create NLT cache entries only for new items"+EOL+
                "  -r,--results <arg>  Number of results per item"+EOL+
                "  -s,--server <arg>   The NLT server address"+EOL+
                "  -t,--tracker        Create NLT cache entries only for tracker items"+EOL+
                "  -v,--version        print version information"+EOL+
                "footer"+EOL
                ,out.toString());
    }
Method byte code: 
0: new           #89
3: dup
4: ldc           #169
6: ldc           #170
8: iconst_0
9: ldc           #171
11: invokespecial #162
14: astore_1
15: new           #89
18: dup
19: ldc           #172
21: ldc           #173
23: iconst_0
24: ldc           #174
26: invokespecial #162
29: astore_2
30: new           #89
33: dup
34: ldc           #175
36: ldc           #176
38: iconst_0
39: ldc           #177
41: invokespecial #162
44: astore_3
45: new           #89
48: dup
49: ldc           #178
51: ldc           #179
53: iconst_0
54: ldc           #180
56: invokespecial #162
59: astore        4
61: ldc           #181
63: invokestatic  #182
66: pop
67: invokestatic  #120
70: pop
71: invokestatic  #183
74: pop
75: ldc           #184
77: invokestatic  #185
80: pop
81: ldc           #186
83: invokestatic  #109
86: astore        5
88: ldc           #187
90: invokestatic  #182
93: pop
94: invokestatic  #120
97: pop
98: invokestatic  #183
101: pop
102: ldc           #188
104: invokestatic  #185
107: pop
108: ldc           #46
110: invokestatic  #109
113: astore        6
115: ldc           #189
117: invokestatic  #182
120: pop
121: invokestatic  #120
124: pop
125: invokestatic  #183
128: pop
129: ldc           #190
131: invokestatic  #185
134: pop
135: ldc           #191
137: invokestatic  #109
140: astore        7
142: ldc           #192
144: invokestatic  #182
147: pop
148: invokestatic  #120
151: pop
152: invokestatic  #183
155: pop
156: ldc           #193
158: invokestatic  #185
161: pop
162: ldc           #194
164: invokestatic  #109
167: astore        8
169: ldc           #195
171: invokestatic  #182
174: pop
175: invokestatic  #120
178: pop
179: invokestatic  #183
182: pop
183: ldc           #196
185: invokestatic  #185
188: pop
189: invokestatic  #197
192: astore        9
194: new           #44
197: dup
198: invokespecial #45
201: astore        10
203: aload         10
205: aload_1
206: invokevirtual #95
209: pop
210: aload         10
212: aload_2
213: invokevirtual #95
216: pop
217: aload         10
219: aload_3
220: invokevirtual #95
223: pop
224: aload         10
226: aload         4
228: invokevirtual #95
231: pop
232: aload         10
234: aload         5
236: invokevirtual #95
239: pop
240: aload         10
242: aload         6
244: invokevirtual #95
247: pop
248: aload         10
250: aload         7
252: invokevirtual #95
255: pop
256: aload         10
258: aload         8
260: invokevirtual #95
263: pop
264: aload         10
266: aload         9
268: invokevirtual #95
271: pop
272: new           #2
275: dup
276: invokespecial #3
279: astore        11
281: ldc           #198
283: invokestatic  #199
286: astore        12
288: new           #102
291: dup
292: invokespecial #103
295: astore        13
297: aload         11
299: new           #78
302: dup
303: aload         13
305: invokespecial #104
308: bipush        80
310: ldc           #200
312: ldc           #201
314: aload         10
316: iconst_2
317: iconst_2
318: ldc           #202
320: iconst_1
321: invokevirtual #159
324: new           #14
327: dup
328: invokespecial #15
331: ldc           #203
333: invokevirtual #17
336: aload         12
338: invokevirtual #17
341: ldc           #204
343: invokevirtual #17
346: aload         12
348: invokevirtual #17
351: ldc           #201
353: invokevirtual #17
356: aload         12
358: invokevirtual #17
361: ldc           #205
363: invokevirtual #17
366: aload         12
368: invokevirtual #17
371: ldc           #206
373: invokevirtual #17
376: aload         12
378: invokevirtual #17
381: ldc           #207
383: invokevirtual #17
386: aload         12
388: invokevirtual #17
391: ldc           #208
393: invokevirtual #17
396: aload         12
398: invokevirtual #17
401: ldc           #209
403: invokevirtual #17
406: aload         12
408: invokevirtual #17
411: ldc           #210
413: invokevirtual #17
416: aload         12
418: invokevirtual #17
421: ldc           #211
423: invokevirtual #17
426: aload         12
428: invokevirtual #17
431: ldc           #212
433: invokevirtual #17
436: aload         12
438: invokevirtual #17
441: ldc           #213
443: invokevirtual #17
446: aload         12
448: invokevirtual #17
451: ldc           #202
453: invokevirtual #17
456: aload         12
458: invokevirtual #17
461: invokevirtual #20
464: aload         13
466: invokevirtual #106
469: invokestatic  #98
472: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/HelpFormatterTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/HelpFormatterTest.class
Class name: HelpFormatterTest
Method name: testHelpWithLongOptSeparator
Start line: 520
End line: 544
Method source code: 
    public void testHelpWithLongOptSeparator() throws Exception
    {
        Options options = new Options();
        options.addOption( "f", true, "the file" );
        options.addOption(OptionBuilder.withLongOpt("size").withDescription("the size").hasArg().withArgName("SIZE").create('s'));
        options.addOption(OptionBuilder.withLongOpt("age").withDescription("the age").hasArg().create());
        
        HelpFormatter formatter = new HelpFormatter();
        assertEquals(HelpFormatter.DEFAULT_LONG_OPT_SEPARATOR, formatter.getLongOptSeparator());
        formatter.setLongOptSeparator("=");
        assertEquals("=", formatter.getLongOptSeparator());
        
        StringWriter out = new StringWriter();

        formatter.printHelp(new PrintWriter(out), 80, "create", "header", options, 2, 2, "footer");

        assertEquals(
                "usage: create" + EOL +
                "header" + EOL +
                "     --age=<arg>    the age" + EOL +
                "  -f <arg>          the file" + EOL +
                "  -s,--size=<SIZE>  the size" + EOL +
                "footer" + EOL,
                out.toString());
    }
Method byte code: 
0: new           #44
3: dup
4: invokespecial #45
7: astore_1
8: aload_1
9: ldc           #115
11: iconst_1
12: ldc           #214
14: invokevirtual #48
17: pop
18: aload_1
19: ldc           #215
21: invokestatic  #182
24: pop
25: ldc           #216
27: invokestatic  #185
30: pop
31: invokestatic  #120
34: pop
35: ldc           #217
37: invokestatic  #218
40: pop
41: bipush        115
43: invokestatic  #219
46: invokevirtual #95
49: pop
50: aload_1
51: ldc           #187
53: invokestatic  #182
56: pop
57: ldc           #220
59: invokestatic  #185
62: pop
63: invokestatic  #120
66: pop
67: invokestatic  #197
70: invokevirtual #95
73: pop
74: new           #2
77: dup
78: invokespecial #3
81: astore_2
82: ldc           #221
84: aload_2
85: invokevirtual #222
88: invokestatic  #98
91: aload_2
92: ldc           #223
94: invokevirtual #224
97: ldc           #223
99: aload_2
100: invokevirtual #222
103: invokestatic  #98
106: new           #102
109: dup
110: invokespecial #103
113: astore_3
114: aload_2
115: new           #78
118: dup
119: aload_3
120: invokespecial #104
123: bipush        80
125: ldc           #225
127: ldc           #201
129: aload_1
130: iconst_2
131: iconst_2
132: ldc           #202
134: invokevirtual #226
137: new           #14
140: dup
141: invokespecial #15
144: ldc           #227
146: invokevirtual #17
149: getstatic     #18
152: invokevirtual #17
155: ldc           #201
157: invokevirtual #17
160: getstatic     #18
163: invokevirtual #17
166: ldc           #228
168: invokevirtual #17
171: getstatic     #18
174: invokevirtual #17
177: ldc           #229
179: invokevirtual #17
182: getstatic     #18
185: invokevirtual #17
188: ldc           #230
190: invokevirtual #17
193: getstatic     #18
196: invokevirtual #17
199: ldc           #202
201: invokevirtual #17
204: getstatic     #18
207: invokevirtual #17
210: invokevirtual #20
213: aload_3
214: invokevirtual #106
217: invokestatic  #98
220: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/HelpFormatterTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/HelpFormatterTest.class
Class name: HelpFormatterTest
Method name: testUsageWithLongOptSeparator
Start line: 546
End line: 561
Method source code: 
    public void testUsageWithLongOptSeparator() throws Exception
    {
        Options options = new Options();
        options.addOption( "f", true, "the file" );
        options.addOption(OptionBuilder.withLongOpt("size").withDescription("the size").hasArg().withArgName("SIZE").create('s'));
        options.addOption(OptionBuilder.withLongOpt("age").withDescription("the age").hasArg().create());
        
        HelpFormatter formatter = new HelpFormatter();
        formatter.setLongOptSeparator("=");
        
        StringWriter out = new StringWriter();
        
        formatter.printUsage(new PrintWriter(out), 80, "create", options);
        
        assertEquals("usage: create [--age=<arg>] [-f <arg>] [-s <SIZE>]", out.toString().trim());
    }
Method byte code: 
0: new           #44
3: dup
4: invokespecial #45
7: astore_1
8: aload_1
9: ldc           #115
11: iconst_1
12: ldc           #214
14: invokevirtual #48
17: pop
18: aload_1
19: ldc           #215
21: invokestatic  #182
24: pop
25: ldc           #216
27: invokestatic  #185
30: pop
31: invokestatic  #120
34: pop
35: ldc           #217
37: invokestatic  #218
40: pop
41: bipush        115
43: invokestatic  #219
46: invokevirtual #95
49: pop
50: aload_1
51: ldc           #187
53: invokestatic  #182
56: pop
57: ldc           #220
59: invokestatic  #185
62: pop
63: invokestatic  #120
66: pop
67: invokestatic  #197
70: invokevirtual #95
73: pop
74: new           #2
77: dup
78: invokespecial #3
81: astore_2
82: aload_2
83: ldc           #223
85: invokevirtual #224
88: new           #102
91: dup
92: invokespecial #103
95: astore_3
96: aload_2
97: new           #78
100: dup
101: aload_3
102: invokespecial #104
105: bipush        80
107: ldc           #225
109: aload_1
110: invokevirtual #81
113: ldc           #231
115: aload_3
116: invokevirtual #106
119: invokevirtual #85
122: invokestatic  #98
125: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0501
Start line: 12
End line: 0
Method source code: 
    public void test0501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0501");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.util.Comparator comparator1 = helpFormatter0.optionComparator;
        java.lang.String str3 = helpFormatter0.rtrim("");
        int int4 = helpFormatter0.getDescPadding();
        helpFormatter0.defaultArgName = "                                                                                                 ";
        java.lang.String str7 = helpFormatter0.getNewLine();
        java.io.PrintWriter printWriter8 = null;
        org.apache.commons.cli.Options options10 = null;
        try {
            helpFormatter0.printOptions(printWriter8, 10, options10, 0, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(comparator1);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 3 + "'", int4 == 3);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\n" + "'", str7, "\n");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #6
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: getfield      #10
36: astore_2
37: aload_1
38: ldc           #11
40: invokevirtual #12
43: astore_3
44: aload_1
45: invokevirtual #13
48: istore        4
50: aload_1
51: ldc           #14
53: putfield      #15
56: aload_1
57: invokevirtual #16
60: astore        5
62: aconst_null
63: astore        6
65: aconst_null
66: astore        7
68: aload_1
69: aload         6
71: bipush        10
73: aload         7
75: iconst_0
76: iconst_1
77: invokevirtual #17
80: ldc           #18
82: invokestatic  #19
85: goto          90
88: astore        8
90: aload_2
91: invokestatic  #21
94: new           #22
97: dup
98: invokespecial #23
101: ldc           #24
103: invokevirtual #25
106: aload_3
107: invokevirtual #25
110: ldc           #26
112: invokevirtual #25
115: invokevirtual #27
118: aload_3
119: ldc           #11
121: invokestatic  #28
124: new           #22
127: dup
128: invokespecial #23
131: ldc           #24
133: invokevirtual #25
136: iload         4
138: invokevirtual #29
141: ldc           #30
143: invokevirtual #25
146: iconst_3
147: invokevirtual #29
150: ldc           #24
152: invokevirtual #25
155: invokevirtual #27
158: iload         4
160: iconst_3
161: if_icmpne     168
164: iconst_1
165: goto          169
168: iconst_0
169: invokestatic  #31
172: new           #22
175: dup
176: invokespecial #23
179: ldc           #24
181: invokevirtual #25
184: aload         5
186: invokevirtual #25
189: ldc           #32
191: invokevirtual #25
194: invokevirtual #27
197: aload         5
199: ldc           #33
201: invokestatic  #28
204: return
Exception table:
from    to  target type
68    85    88   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0502
Start line: 37
End line: 0
Method source code: 
    public void test0502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0502");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        helpFormatter0.setSyntaxPrefix(" ");
        int int8 = helpFormatter0.defaultLeftPad;
        helpFormatter0.setDescPadding((int) (short) 100);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #34
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #35
36: istore_2
37: aload_1
38: ldc           #11
40: putfield      #36
43: aload_1
44: bipush        10
46: invokevirtual #37
49: aload_1
50: ldc           #38
52: invokevirtual #39
55: aload_1
56: getfield      #40
59: istore_3
60: aload_1
61: bipush        100
63: invokevirtual #37
66: new           #22
69: dup
70: invokespecial #23
73: ldc           #24
75: invokevirtual #25
78: iload_2
79: invokevirtual #29
82: ldc           #30
84: invokevirtual #25
87: iconst_1
88: invokevirtual #29
91: ldc           #24
93: invokevirtual #25
96: invokevirtual #27
99: iload_2
100: iconst_1
101: if_icmpne     108
104: iconst_1
105: goto          109
108: iconst_0
109: invokestatic  #31
112: new           #22
115: dup
116: invokespecial #23
119: ldc           #24
121: invokevirtual #25
124: iload_3
125: invokevirtual #29
128: ldc           #30
130: invokevirtual #25
133: iconst_1
134: invokevirtual #29
137: ldc           #24
139: invokevirtual #25
142: invokevirtual #27
145: iload_3
146: iconst_1
147: if_icmpne     154
150: iconst_1
151: goto          155
154: iconst_0
155: invokestatic  #31
158: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0503
Start line: 52
End line: 0
Method source code: 
    public void test0503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0503");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setLongOptPrefix(" ");
        helpFormatter0.defaultDescPad = (short) 10;
        helpFormatter0.defaultSyntaxPrefix = "";
        helpFormatter0.setLongOptPrefix("");
        java.lang.String str13 = helpFormatter0.defaultNewLine;
        helpFormatter0.defaultArgName = "usage: ";
        int int16 = helpFormatter0.defaultDescPad;
        java.lang.StringBuffer stringBuffer17 = null;
        org.apache.commons.cli.Options options19 = null;
        try {
            java.lang.StringBuffer stringBuffer22 = helpFormatter0.renderOptions(stringBuffer17, (int) 'a', options19, 1, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 10 + "'", int16 == 10);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #41
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #35
36: istore_2
37: aload_1
38: ldc           #11
40: putfield      #36
43: aload_1
44: getfield      #42
47: astore_3
48: aload_1
49: ldc           #38
51: invokevirtual #43
54: aload_1
55: bipush        10
57: putfield      #44
60: aload_1
61: ldc           #11
63: putfield      #45
66: aload_1
67: ldc           #11
69: invokevirtual #43
72: aload_1
73: getfield      #36
76: astore        4
78: aload_1
79: ldc           #46
81: putfield      #15
84: aload_1
85: getfield      #44
88: istore        5
90: aconst_null
91: astore        6
93: aconst_null
94: astore        7
96: aload_1
97: aload         6
99: bipush        97
101: aload         7
103: iconst_1
104: bipush        35
106: invokevirtual #47
109: astore        8
111: ldc           #18
113: invokestatic  #19
116: goto          121
119: astore        8
121: new           #22
124: dup
125: invokespecial #23
128: ldc           #24
130: invokevirtual #25
133: iload_2
134: invokevirtual #29
137: ldc           #30
139: invokevirtual #25
142: iconst_1
143: invokevirtual #29
146: ldc           #24
148: invokevirtual #25
151: invokevirtual #27
154: iload_2
155: iconst_1
156: if_icmpne     163
159: iconst_1
160: goto          164
163: iconst_0
164: invokestatic  #31
167: new           #22
170: dup
171: invokespecial #23
174: ldc           #24
176: invokevirtual #25
179: aload_3
180: invokevirtual #25
183: ldc           #48
185: invokevirtual #25
188: invokevirtual #27
191: aload_3
192: ldc           #49
194: invokestatic  #28
197: new           #22
200: dup
201: invokespecial #23
204: ldc           #24
206: invokevirtual #25
209: aload         4
211: invokevirtual #25
214: ldc           #26
216: invokevirtual #25
219: invokevirtual #27
222: aload         4
224: ldc           #11
226: invokestatic  #28
229: new           #22
232: dup
233: invokespecial #23
236: ldc           #24
238: invokevirtual #25
241: iload         5
243: invokevirtual #29
246: ldc           #30
248: invokevirtual #25
251: bipush        10
253: invokevirtual #29
256: ldc           #24
258: invokevirtual #25
261: invokevirtual #27
264: iload         5
266: bipush        10
268: if_icmpne     275
271: iconst_1
272: goto          276
275: iconst_0
276: invokestatic  #31
279: return
Exception table:
from    to  target type
96   116   119   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0504
Start line: 82
End line: 0
Method source code: 
    public void test0504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0504");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.getLongOptPrefix();
        java.util.Comparator comparator6 = helpFormatter0.optionComparator;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(comparator6);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #50
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: ldc           #11
35: invokevirtual #51
38: aload_1
39: ldc           #11
41: putfield      #52
44: aload_1
45: invokevirtual #53
48: astore_2
49: aload_1
50: getfield      #10
53: astore_3
54: new           #22
57: dup
58: invokespecial #23
61: ldc           #24
63: invokevirtual #25
66: aload_2
67: invokevirtual #25
70: ldc           #26
72: invokevirtual #25
75: invokevirtual #27
78: aload_2
79: ldc           #11
81: invokestatic  #28
84: aload_3
85: invokestatic  #21
88: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0505
Start line: 95
End line: 0
Method source code: 
    public void test0505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0505");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setLeftPadding((int) (byte) 0);
        helpFormatter0.setLongOptPrefix("                                                                                                 ");
        helpFormatter0.setSyntaxPrefix("                                                                                                 ");
        java.lang.StringBuffer stringBuffer11 = null;
        org.apache.commons.cli.Options options13 = null;
        try {
            java.lang.StringBuffer stringBuffer16 = helpFormatter0.renderOptions(stringBuffer11, (int) ' ', options13, 0, 32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #54
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #35
36: istore_2
37: aload_1
38: ldc           #11
40: putfield      #36
43: aload_1
44: getfield      #42
47: astore_3
48: aload_1
49: iconst_0
50: invokevirtual #55
53: aload_1
54: ldc           #14
56: invokevirtual #43
59: aload_1
60: ldc           #14
62: invokevirtual #39
65: aconst_null
66: astore        4
68: aconst_null
69: astore        5
71: aload_1
72: aload         4
74: bipush        32
76: aload         5
78: iconst_0
79: bipush        32
81: invokevirtual #47
84: astore        6
86: ldc           #18
88: invokestatic  #19
91: goto          96
94: astore        6
96: new           #22
99: dup
100: invokespecial #23
103: ldc           #24
105: invokevirtual #25
108: iload_2
109: invokevirtual #29
112: ldc           #30
114: invokevirtual #25
117: iconst_1
118: invokevirtual #29
121: ldc           #24
123: invokevirtual #25
126: invokevirtual #27
129: iload_2
130: iconst_1
131: if_icmpne     138
134: iconst_1
135: goto          139
138: iconst_0
139: invokestatic  #31
142: new           #22
145: dup
146: invokespecial #23
149: ldc           #24
151: invokevirtual #25
154: aload_3
155: invokevirtual #25
158: ldc           #48
160: invokevirtual #25
163: invokevirtual #27
166: aload_3
167: ldc           #49
169: invokestatic  #28
172: return
Exception table:
from    to  target type
71    91    94   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0506
Start line: 119
End line: 0
Method source code: 
    public void test0506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0506");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        int int4 = helpFormatter0.defaultWidth;
        java.util.Comparator comparator5 = helpFormatter0.getOptionComparator();
        helpFormatter0.setArgName("\n");
        java.util.Comparator comparator8 = helpFormatter0.getOptionComparator();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 74 + "'", int4 == 74);
        org.junit.Assert.assertNotNull(comparator5);
        org.junit.Assert.assertNotNull(comparator8);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #56
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #35
36: istore_2
37: aload_1
38: ldc           #11
40: putfield      #36
43: aload_1
44: getfield      #57
47: istore_3
48: aload_1
49: invokevirtual #58
52: astore        4
54: aload_1
55: ldc           #33
57: invokevirtual #59
60: aload_1
61: invokevirtual #58
64: astore        5
66: new           #22
69: dup
70: invokespecial #23
73: ldc           #24
75: invokevirtual #25
78: iload_2
79: invokevirtual #29
82: ldc           #30
84: invokevirtual #25
87: iconst_1
88: invokevirtual #29
91: ldc           #24
93: invokevirtual #25
96: invokevirtual #27
99: iload_2
100: iconst_1
101: if_icmpne     108
104: iconst_1
105: goto          109
108: iconst_0
109: invokestatic  #31
112: new           #22
115: dup
116: invokespecial #23
119: ldc           #24
121: invokevirtual #25
124: iload_3
125: invokevirtual #29
128: ldc           #30
130: invokevirtual #25
133: bipush        74
135: invokevirtual #29
138: ldc           #24
140: invokevirtual #25
143: invokevirtual #27
146: iload_3
147: bipush        74
149: if_icmpne     156
152: iconst_1
153: goto          157
156: iconst_0
157: invokestatic  #31
160: aload         4
162: invokestatic  #21
165: aload         5
167: invokestatic  #21
170: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0507
Start line: 136
End line: 0
Method source code: 
    public void test0507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0507");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        java.lang.String str6 = helpFormatter0.rtrim("");
        int int10 = helpFormatter0.findWrapPos(" ", (int) (byte) 10, (int) (short) 10);
        java.lang.String str11 = helpFormatter0.getLongOptPrefix();
        int int12 = helpFormatter0.defaultWidth;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "--" + "'", str11, "--");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 74 + "'", int12 == 74);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #60
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #35
36: istore_2
37: aload_1
38: ldc           #11
40: putfield      #36
43: aload_1
44: getfield      #42
47: astore_3
48: aload_1
49: ldc           #11
51: invokevirtual #12
54: astore        4
56: aload_1
57: ldc           #38
59: bipush        10
61: bipush        10
63: invokevirtual #61
66: istore        5
68: aload_1
69: invokevirtual #53
72: astore        6
74: aload_1
75: getfield      #57
78: istore        7
80: new           #22
83: dup
84: invokespecial #23
87: ldc           #24
89: invokevirtual #25
92: iload_2
93: invokevirtual #29
96: ldc           #30
98: invokevirtual #25
101: iconst_1
102: invokevirtual #29
105: ldc           #24
107: invokevirtual #25
110: invokevirtual #27
113: iload_2
114: iconst_1
115: if_icmpne     122
118: iconst_1
119: goto          123
122: iconst_0
123: invokestatic  #31
126: new           #22
129: dup
130: invokespecial #23
133: ldc           #24
135: invokevirtual #25
138: aload_3
139: invokevirtual #25
142: ldc           #48
144: invokevirtual #25
147: invokevirtual #27
150: aload_3
151: ldc           #49
153: invokestatic  #28
156: new           #22
159: dup
160: invokespecial #23
163: ldc           #24
165: invokevirtual #25
168: aload         4
170: invokevirtual #25
173: ldc           #26
175: invokevirtual #25
178: invokevirtual #27
181: aload         4
183: ldc           #11
185: invokestatic  #28
188: new           #22
191: dup
192: invokespecial #23
195: ldc           #24
197: invokevirtual #25
200: iload         5
202: invokevirtual #29
205: ldc           #30
207: invokevirtual #25
210: iconst_m1
211: invokevirtual #29
214: ldc           #24
216: invokevirtual #25
219: invokevirtual #27
222: iload         5
224: iconst_m1
225: if_icmpne     232
228: iconst_1
229: goto          233
232: iconst_0
233: invokestatic  #31
236: new           #22
239: dup
240: invokespecial #23
243: ldc           #24
245: invokevirtual #25
248: aload         6
250: invokevirtual #25
253: ldc           #62
255: invokevirtual #25
258: invokevirtual #27
261: aload         6
263: ldc           #63
265: invokestatic  #28
268: new           #22
271: dup
272: invokespecial #23
275: ldc           #24
277: invokevirtual #25
280: iload         7
282: invokevirtual #29
285: ldc           #30
287: invokevirtual #25
290: bipush        74
292: invokevirtual #29
295: ldc           #24
297: invokevirtual #25
300: invokevirtual #27
303: iload         7
305: bipush        74
307: if_icmpne     314
310: iconst_1
311: goto          315
314: iconst_0
315: invokestatic  #31
318: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0508
Start line: 156
End line: 0
Method source code: 
    public void test0508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0508");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.defaultLongOptPrefix = "hi!";
        int int3 = helpFormatter0.getWidth();
        helpFormatter0.setLongOptPrefix("          ");
        int int6 = helpFormatter0.defaultLeftPad;
        java.io.PrintWriter printWriter7 = null;
        org.apache.commons.cli.Options options11 = null;
        try {
            helpFormatter0.printHelp(printWriter7, (int) 'a', "", "", options11, (-2), 0, "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: cmdLineSyntax not provided");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 74 + "'", int3 == 74);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #64
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: ldc           #65
35: putfield      #52
38: aload_1
39: invokevirtual #66
42: istore_2
43: aload_1
44: ldc           #67
46: invokevirtual #43
49: aload_1
50: getfield      #40
53: istore_3
54: aconst_null
55: astore        4
57: aconst_null
58: astore        5
60: aload_1
61: aload         4
63: bipush        97
65: ldc           #11
67: ldc           #11
69: aload         5
71: bipush        -2
73: iconst_0
74: ldc           #65
76: invokevirtual #68
79: ldc           #69
81: invokestatic  #19
84: goto          89
87: astore        6
89: new           #22
92: dup
93: invokespecial #23
96: ldc           #24
98: invokevirtual #25
101: iload_2
102: invokevirtual #29
105: ldc           #30
107: invokevirtual #25
110: bipush        74
112: invokevirtual #29
115: ldc           #24
117: invokevirtual #25
120: invokevirtual #27
123: iload_2
124: bipush        74
126: if_icmpne     133
129: iconst_1
130: goto          134
133: iconst_0
134: invokestatic  #31
137: new           #22
140: dup
141: invokespecial #23
144: ldc           #24
146: invokevirtual #25
149: iload_3
150: invokevirtual #29
153: ldc           #30
155: invokevirtual #25
158: iconst_1
159: invokevirtual #29
162: ldc           #24
164: invokevirtual #25
167: invokevirtual #27
170: iload_3
171: iconst_1
172: if_icmpne     179
175: iconst_1
176: goto          180
179: iconst_0
180: invokestatic  #31
183: return
Exception table:
from    to  target type
60    84    87   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0509
Start line: 178
End line: 0
Method source code: 
    public void test0509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0509");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        java.lang.String str3 = helpFormatter0.getLongOptSeparator();
        helpFormatter0.defaultDescPad = 0;
        java.lang.String str6 = helpFormatter0.getOptPrefix();
        helpFormatter0.setLongOptSeparator("--");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + " " + "'", str3, " ");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #71
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: ldc           #11
35: invokevirtual #51
38: aload_1
39: invokevirtual #72
42: astore_2
43: aload_1
44: iconst_0
45: putfield      #44
48: aload_1
49: invokevirtual #73
52: astore_3
53: aload_1
54: ldc           #63
56: invokevirtual #74
59: new           #22
62: dup
63: invokespecial #23
66: ldc           #24
68: invokevirtual #25
71: aload_2
72: invokevirtual #25
75: ldc           #75
77: invokevirtual #25
80: invokevirtual #27
83: aload_2
84: ldc           #38
86: invokestatic  #28
89: new           #22
92: dup
93: invokespecial #23
96: ldc           #24
98: invokevirtual #25
101: aload_3
102: invokevirtual #25
105: ldc           #26
107: invokevirtual #25
110: invokevirtual #27
113: aload_3
114: ldc           #11
116: invokestatic  #28
119: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0510
Start line: 192
End line: 0
Method source code: 
    public void test0510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0510");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultOptPrefix;
        java.lang.String str6 = helpFormatter0.getLongOptPrefix();
        int int7 = helpFormatter0.defaultLeftPad;
        java.lang.String str8 = helpFormatter0.defaultArgName;
        helpFormatter0.setLongOptSeparator("                                                    ");
        helpFormatter0.setSyntaxPrefix("arg");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "arg" + "'", str8, "arg");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #76
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: ldc           #11
35: invokevirtual #51
38: aload_1
39: ldc           #11
41: putfield      #52
44: aload_1
45: getfield      #42
48: astore_2
49: aload_1
50: invokevirtual #53
53: astore_3
54: aload_1
55: getfield      #40
58: istore        4
60: aload_1
61: getfield      #15
64: astore        5
66: aload_1
67: ldc           #77
69: invokevirtual #74
72: aload_1
73: ldc           #78
75: invokevirtual #39
78: new           #22
81: dup
82: invokespecial #23
85: ldc           #24
87: invokevirtual #25
90: aload_2
91: invokevirtual #25
94: ldc           #26
96: invokevirtual #25
99: invokevirtual #27
102: aload_2
103: ldc           #11
105: invokestatic  #28
108: new           #22
111: dup
112: invokespecial #23
115: ldc           #24
117: invokevirtual #25
120: aload_3
121: invokevirtual #25
124: ldc           #26
126: invokevirtual #25
129: invokevirtual #27
132: aload_3
133: ldc           #11
135: invokestatic  #28
138: new           #22
141: dup
142: invokespecial #23
145: ldc           #24
147: invokevirtual #25
150: iload         4
152: invokevirtual #29
155: ldc           #30
157: invokevirtual #25
160: iconst_1
161: invokevirtual #29
164: ldc           #24
166: invokevirtual #25
169: invokevirtual #27
172: iload         4
174: iconst_1
175: if_icmpne     182
178: iconst_1
179: goto          183
182: iconst_0
183: invokestatic  #31
186: new           #22
189: dup
190: invokespecial #23
193: ldc           #24
195: invokevirtual #25
198: aload         5
200: invokevirtual #25
203: ldc           #79
205: invokevirtual #25
208: invokevirtual #27
211: aload         5
213: ldc           #78
215: invokestatic  #28
218: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0511
Start line: 211
End line: 0
Method source code: 
    public void test0511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0511");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        helpFormatter0.setSyntaxPrefix(" ");
        java.lang.String str8 = helpFormatter0.defaultSyntaxPrefix;
        helpFormatter0.setLongOptSeparator("          ");
        java.io.PrintWriter printWriter11 = null;
        org.apache.commons.cli.Options options14 = null;
        try {
            helpFormatter0.printUsage(printWriter11, (int) (byte) 10, "                                                    ", options14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + " " + "'", str8, " ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #80
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #35
36: istore_2
37: aload_1
38: ldc           #11
40: putfield      #36
43: aload_1
44: bipush        10
46: invokevirtual #37
49: aload_1
50: ldc           #38
52: invokevirtual #39
55: aload_1
56: getfield      #45
59: astore_3
60: aload_1
61: ldc           #67
63: invokevirtual #74
66: aconst_null
67: astore        4
69: aconst_null
70: astore        5
72: aload_1
73: aload         4
75: bipush        10
77: ldc           #77
79: aload         5
81: invokevirtual #81
84: ldc           #18
86: invokestatic  #19
89: goto          94
92: astore        6
94: new           #22
97: dup
98: invokespecial #23
101: ldc           #24
103: invokevirtual #25
106: iload_2
107: invokevirtual #29
110: ldc           #30
112: invokevirtual #25
115: iconst_1
116: invokevirtual #29
119: ldc           #24
121: invokevirtual #25
124: invokevirtual #27
127: iload_2
128: iconst_1
129: if_icmpne     136
132: iconst_1
133: goto          137
136: iconst_0
137: invokestatic  #31
140: new           #22
143: dup
144: invokespecial #23
147: ldc           #24
149: invokevirtual #25
152: aload_3
153: invokevirtual #25
156: ldc           #75
158: invokevirtual #25
161: invokevirtual #27
164: aload_3
165: ldc           #38
167: invokestatic  #28
170: return
Exception table:
from    to  target type
72    89    92   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0512
Start line: 235
End line: 0
Method source code: 
    public void test0512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0512");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.getArgName();
        helpFormatter0.setLongOptPrefix("                                                                                                 ");
        helpFormatter0.defaultWidth = (short) 100;
        java.io.PrintWriter printWriter7 = null;
        org.apache.commons.cli.Options options9 = null;
        try {
            helpFormatter0.printOptions(printWriter7, (int) (byte) 1, options9, (int) (short) -1, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: null");
        } catch (java.lang.NegativeArraySizeException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "arg" + "'", str2, "arg");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #82
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #35
36: istore_2
37: aload_1
38: invokevirtual #83
41: astore_3
42: aload_1
43: ldc           #14
45: invokevirtual #43
48: aload_1
49: bipush        100
51: putfield      #57
54: aconst_null
55: astore        4
57: aconst_null
58: astore        5
60: aload_1
61: aload         4
63: iconst_1
64: aload         5
66: iconst_m1
67: iconst_m1
68: invokevirtual #17
71: ldc           #84
73: invokestatic  #19
76: goto          81
79: astore        6
81: new           #22
84: dup
85: invokespecial #23
88: ldc           #24
90: invokevirtual #25
93: iload_2
94: invokevirtual #29
97: ldc           #30
99: invokevirtual #25
102: iconst_1
103: invokevirtual #29
106: ldc           #24
108: invokevirtual #25
111: invokevirtual #27
114: iload_2
115: iconst_1
116: if_icmpne     123
119: iconst_1
120: goto          124
123: iconst_0
124: invokestatic  #31
127: new           #22
130: dup
131: invokespecial #23
134: ldc           #24
136: invokevirtual #25
139: aload_3
140: invokevirtual #25
143: ldc           #79
145: invokevirtual #25
148: invokevirtual #27
151: aload_3
152: ldc           #78
154: invokestatic  #28
157: return
Exception table:
from    to  target type
60    76    79   Class java/lang/NegativeArraySizeException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0513
Start line: 257
End line: 0
Method source code: 
    public void test0513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0513");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        int int9 = helpFormatter0.findWrapPos(" ", (int) (byte) 10, (int) '4');
        java.util.Comparator comparator10 = helpFormatter0.getOptionComparator();
        java.io.PrintWriter printWriter11 = null;
        org.apache.commons.cli.Options options13 = null;
        try {
            helpFormatter0.printOptions(printWriter11, (int) (short) 1, options13, (int) (short) 100, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(comparator10);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #86
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: ldc           #11
35: invokevirtual #51
38: aload_1
39: ldc           #11
41: putfield      #52
44: aload_1
45: getfield      #52
48: astore_2
49: aload_1
50: ldc           #38
52: bipush        10
54: bipush        52
56: invokevirtual #61
59: istore_3
60: aload_1
61: invokevirtual #58
64: astore        4
66: aconst_null
67: astore        5
69: aconst_null
70: astore        6
72: aload_1
73: aload         5
75: iconst_1
76: aload         6
78: bipush        100
80: iconst_1
81: invokevirtual #17
84: ldc           #18
86: invokestatic  #19
89: goto          94
92: astore        7
94: new           #22
97: dup
98: invokespecial #23
101: ldc           #24
103: invokevirtual #25
106: aload_2
107: invokevirtual #25
110: ldc           #26
112: invokevirtual #25
115: invokevirtual #27
118: aload_2
119: ldc           #11
121: invokestatic  #28
124: new           #22
127: dup
128: invokespecial #23
131: ldc           #24
133: invokevirtual #25
136: iload_3
137: invokevirtual #29
140: ldc           #30
142: invokevirtual #25
145: iconst_m1
146: invokevirtual #29
149: ldc           #24
151: invokevirtual #25
154: invokevirtual #27
157: iload_3
158: iconst_m1
159: if_icmpne     166
162: iconst_1
163: goto          167
166: iconst_0
167: invokestatic  #31
170: aload         4
172: invokestatic  #21
175: return
Exception table:
from    to  target type
72    89    92   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0514
Start line: 281
End line: 0
Method source code: 
    public void test0514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0514");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.defaultDescPad = '4';
        helpFormatter0.setNewLine("");
        helpFormatter0.setSyntaxPrefix("");
        java.lang.String str10 = helpFormatter0.getSyntaxPrefix();
        helpFormatter0.setWidth((-2));
        helpFormatter0.defaultOptPrefix = "usage: ";
        java.lang.String str15 = helpFormatter0.defaultArgName;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "arg" + "'", str15, "arg");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #87
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #35
36: istore_2
37: aload_1
38: ldc           #11
40: putfield      #36
43: aload_1
44: bipush        52
46: putfield      #44
49: aload_1
50: ldc           #11
52: invokevirtual #88
55: aload_1
56: ldc           #11
58: invokevirtual #39
61: aload_1
62: invokevirtual #89
65: astore_3
66: aload_1
67: bipush        -2
69: invokevirtual #90
72: aload_1
73: ldc           #46
75: putfield      #42
78: aload_1
79: getfield      #15
82: astore        4
84: new           #22
87: dup
88: invokespecial #23
91: ldc           #24
93: invokevirtual #25
96: iload_2
97: invokevirtual #29
100: ldc           #30
102: invokevirtual #25
105: iconst_1
106: invokevirtual #29
109: ldc           #24
111: invokevirtual #25
114: invokevirtual #27
117: iload_2
118: iconst_1
119: if_icmpne     126
122: iconst_1
123: goto          127
126: iconst_0
127: invokestatic  #31
130: new           #22
133: dup
134: invokespecial #23
137: ldc           #24
139: invokevirtual #25
142: aload_3
143: invokevirtual #25
146: ldc           #26
148: invokevirtual #25
151: invokevirtual #27
154: aload_3
155: ldc           #11
157: invokestatic  #28
160: new           #22
163: dup
164: invokespecial #23
167: ldc           #24
169: invokevirtual #25
172: aload         4
174: invokevirtual #25
177: ldc           #79
179: invokevirtual #25
182: invokevirtual #27
185: aload         4
187: ldc           #78
189: invokestatic  #28
192: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0515
Start line: 300
End line: 0
Method source code: 
    public void test0515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0515");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str6 = helpFormatter0.getNewLine();
        helpFormatter0.setSyntaxPrefix(" ");
        java.lang.String str9 = helpFormatter0.defaultOptPrefix;
        int int10 = helpFormatter0.getLeftPadding();
        java.lang.String str11 = helpFormatter0.defaultLongOptPrefix;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\n" + "'", str6, "\n");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #91
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: ldc           #11
35: invokevirtual #51
38: aload_1
39: ldc           #11
41: putfield      #52
44: aload_1
45: getfield      #52
48: astore_2
49: aload_1
50: invokevirtual #16
53: astore_3
54: aload_1
55: ldc           #38
57: invokevirtual #39
60: aload_1
61: getfield      #42
64: astore        4
66: aload_1
67: invokevirtual #35
70: istore        5
72: aload_1
73: getfield      #52
76: astore        6
78: new           #22
81: dup
82: invokespecial #23
85: ldc           #24
87: invokevirtual #25
90: aload_2
91: invokevirtual #25
94: ldc           #26
96: invokevirtual #25
99: invokevirtual #27
102: aload_2
103: ldc           #11
105: invokestatic  #28
108: new           #22
111: dup
112: invokespecial #23
115: ldc           #24
117: invokevirtual #25
120: aload_3
121: invokevirtual #25
124: ldc           #32
126: invokevirtual #25
129: invokevirtual #27
132: aload_3
133: ldc           #33
135: invokestatic  #28
138: new           #22
141: dup
142: invokespecial #23
145: ldc           #24
147: invokevirtual #25
150: aload         4
152: invokevirtual #25
155: ldc           #26
157: invokevirtual #25
160: invokevirtual #27
163: aload         4
165: ldc           #11
167: invokestatic  #28
170: new           #22
173: dup
174: invokespecial #23
177: ldc           #24
179: invokevirtual #25
182: iload         5
184: invokevirtual #29
187: ldc           #30
189: invokevirtual #25
192: iconst_1
193: invokevirtual #29
196: ldc           #24
198: invokevirtual #25
201: invokevirtual #27
204: iload         5
206: iconst_1
207: if_icmpne     214
210: iconst_1
211: goto          215
214: iconst_0
215: invokestatic  #31
218: new           #22
221: dup
222: invokespecial #23
225: ldc           #24
227: invokevirtual #25
230: aload         6
232: invokevirtual #25
235: ldc           #26
237: invokevirtual #25
240: invokevirtual #27
243: aload         6
245: ldc           #11
247: invokestatic  #28
250: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0516
Start line: 320
End line: 0
Method source code: 
    public void test0516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0516");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        int int4 = helpFormatter0.defaultDescPad;
        helpFormatter0.setWidth((int) '#');
        helpFormatter0.setArgName("");
        java.lang.String str10 = helpFormatter0.createPadding((int) ' ');
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 3 + "'", int4 == 3);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "                                " + "'", str10, "                                ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #92
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #35
36: istore_2
37: aload_1
38: ldc           #11
40: putfield      #36
43: aload_1
44: getfield      #44
47: istore_3
48: aload_1
49: bipush        35
51: invokevirtual #90
54: aload_1
55: ldc           #11
57: invokevirtual #59
60: aload_1
61: bipush        32
63: invokevirtual #93
66: astore        4
68: new           #22
71: dup
72: invokespecial #23
75: ldc           #24
77: invokevirtual #25
80: iload_2
81: invokevirtual #29
84: ldc           #30
86: invokevirtual #25
89: iconst_1
90: invokevirtual #29
93: ldc           #24
95: invokevirtual #25
98: invokevirtual #27
101: iload_2
102: iconst_1
103: if_icmpne     110
106: iconst_1
107: goto          111
110: iconst_0
111: invokestatic  #31
114: new           #22
117: dup
118: invokespecial #23
121: ldc           #24
123: invokevirtual #25
126: iload_3
127: invokevirtual #29
130: ldc           #30
132: invokevirtual #25
135: iconst_3
136: invokevirtual #29
139: ldc           #24
141: invokevirtual #25
144: invokevirtual #27
147: iload_3
148: iconst_3
149: if_icmpne     156
152: iconst_1
153: goto          157
156: iconst_0
157: invokestatic  #31
160: new           #22
163: dup
164: invokespecial #23
167: ldc           #24
169: invokevirtual #25
172: aload         4
174: invokevirtual #25
177: ldc           #94
179: invokevirtual #25
182: invokevirtual #27
185: aload         4
187: ldc           #95
189: invokestatic  #28
192: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0517
Start line: 336
End line: 0
Method source code: 
    public void test0517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0517");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        int int9 = helpFormatter0.findWrapPos(" ", (int) (byte) 10, (int) '4');
        java.lang.String str11 = helpFormatter0.rtrim("hi!");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #96
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: ldc           #11
35: invokevirtual #51
38: aload_1
39: ldc           #11
41: putfield      #52
44: aload_1
45: getfield      #52
48: astore_2
49: aload_1
50: ldc           #38
52: bipush        10
54: bipush        52
56: invokevirtual #61
59: istore_3
60: aload_1
61: ldc           #65
63: invokevirtual #12
66: astore        4
68: new           #22
71: dup
72: invokespecial #23
75: ldc           #24
77: invokevirtual #25
80: aload_2
81: invokevirtual #25
84: ldc           #26
86: invokevirtual #25
89: invokevirtual #27
92: aload_2
93: ldc           #11
95: invokestatic  #28
98: new           #22
101: dup
102: invokespecial #23
105: ldc           #24
107: invokevirtual #25
110: iload_3
111: invokevirtual #29
114: ldc           #30
116: invokevirtual #25
119: iconst_m1
120: invokevirtual #29
123: ldc           #24
125: invokevirtual #25
128: invokevirtual #27
131: iload_3
132: iconst_m1
133: if_icmpne     140
136: iconst_1
137: goto          141
140: iconst_0
141: invokestatic  #31
144: new           #22
147: dup
148: invokespecial #23
151: ldc           #24
153: invokevirtual #25
156: aload         4
158: invokevirtual #25
161: ldc           #97
163: invokevirtual #25
166: invokevirtual #27
169: aload         4
171: ldc           #65
173: invokestatic  #28
176: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0518
Start line: 351
End line: 0
Method source code: 
    public void test0518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0518");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str6 = helpFormatter0.getNewLine();
        org.apache.commons.cli.HelpFormatter helpFormatter7 = new org.apache.commons.cli.HelpFormatter();
        java.util.Comparator comparator8 = helpFormatter7.optionComparator;
        java.lang.String str10 = helpFormatter7.rtrim("");
        helpFormatter7.setLongOptSeparator(" ");
        org.apache.commons.cli.HelpFormatter helpFormatter13 = new org.apache.commons.cli.HelpFormatter();
        int int14 = helpFormatter13.getLeftPadding();
        helpFormatter13.defaultNewLine = "";
        helpFormatter13.defaultDescPad = '4';
        helpFormatter13.setNewLine("");
        int int24 = helpFormatter13.findWrapPos("\n", (int) ' ', 3);
        java.util.Comparator comparator25 = helpFormatter13.optionComparator;
        helpFormatter7.setOptionComparator(comparator25);
        helpFormatter0.setOptionComparator(comparator25);
        helpFormatter0.defaultSyntaxPrefix = "                                                    ";
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\n" + "'", str6, "\n");
        org.junit.Assert.assertNotNull(comparator8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(comparator25);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #98
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: ldc           #11
35: invokevirtual #51
38: aload_1
39: ldc           #11
41: putfield      #52
44: aload_1
45: getfield      #52
48: astore_2
49: aload_1
50: invokevirtual #16
53: astore_3
54: new           #8
57: dup
58: invokespecial #9
61: astore        4
63: aload         4
65: getfield      #10
68: astore        5
70: aload         4
72: ldc           #11
74: invokevirtual #12
77: astore        6
79: aload         4
81: ldc           #38
83: invokevirtual #74
86: new           #8
89: dup
90: invokespecial #9
93: astore        7
95: aload         7
97: invokevirtual #35
100: istore        8
102: aload         7
104: ldc           #11
106: putfield      #36
109: aload         7
111: bipush        52
113: putfield      #44
116: aload         7
118: ldc           #11
120: invokevirtual #88
123: aload         7
125: ldc           #33
127: bipush        32
129: iconst_3
130: invokevirtual #61
133: istore        9
135: aload         7
137: getfield      #10
140: astore        10
142: aload         4
144: aload         10
146: invokevirtual #99
149: aload_1
150: aload         10
152: invokevirtual #99
155: aload_1
156: ldc           #77
158: putfield      #45
161: new           #22
164: dup
165: invokespecial #23
168: ldc           #24
170: invokevirtual #25
173: aload_2
174: invokevirtual #25
177: ldc           #26
179: invokevirtual #25
182: invokevirtual #27
185: aload_2
186: ldc           #11
188: invokestatic  #28
191: new           #22
194: dup
195: invokespecial #23
198: ldc           #24
200: invokevirtual #25
203: aload_3
204: invokevirtual #25
207: ldc           #32
209: invokevirtual #25
212: invokevirtual #27
215: aload_3
216: ldc           #33
218: invokestatic  #28
221: aload         5
223: invokestatic  #21
226: new           #22
229: dup
230: invokespecial #23
233: ldc           #24
235: invokevirtual #25
238: aload         6
240: invokevirtual #25
243: ldc           #26
245: invokevirtual #25
248: invokevirtual #27
251: aload         6
253: ldc           #11
255: invokestatic  #28
258: new           #22
261: dup
262: invokespecial #23
265: ldc           #24
267: invokevirtual #25
270: iload         8
272: invokevirtual #29
275: ldc           #30
277: invokevirtual #25
280: iconst_1
281: invokevirtual #29
284: ldc           #24
286: invokevirtual #25
289: invokevirtual #27
292: iload         8
294: iconst_1
295: if_icmpne     302
298: iconst_1
299: goto          303
302: iconst_0
303: invokestatic  #31
306: new           #22
309: dup
310: invokespecial #23
313: ldc           #24
315: invokevirtual #25
318: iload         9
320: invokevirtual #29
323: ldc           #30
325: invokevirtual #25
328: iconst_m1
329: invokevirtual #29
332: ldc           #24
334: invokevirtual #25
337: invokevirtual #27
340: iload         9
342: iconst_m1
343: if_icmpne     350
346: iconst_1
347: goto          351
350: iconst_0
351: invokestatic  #31
354: aload         10
356: invokestatic  #21
359: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0519
Start line: 383
End line: 0
Method source code: 
    public void test0519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0519");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str6 = helpFormatter0.getNewLine();
        helpFormatter0.setSyntaxPrefix(" ");
        java.lang.String str9 = helpFormatter0.defaultOptPrefix;
        java.lang.String str10 = helpFormatter0.defaultOptPrefix;
        java.lang.String str11 = helpFormatter0.defaultNewLine;
        java.io.PrintWriter printWriter12 = null;
        org.apache.commons.cli.Options options14 = null;
        try {
            helpFormatter0.printOptions(printWriter12, 0, options14, (-2), 32);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: null");
        } catch (java.lang.NegativeArraySizeException e) {
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\n" + "'", str6, "\n");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\n" + "'", str11, "\n");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #100
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: ldc           #11
35: invokevirtual #51
38: aload_1
39: ldc           #11
41: putfield      #52
44: aload_1
45: getfield      #52
48: astore_2
49: aload_1
50: invokevirtual #16
53: astore_3
54: aload_1
55: ldc           #38
57: invokevirtual #39
60: aload_1
61: getfield      #42
64: astore        4
66: aload_1
67: getfield      #42
70: astore        5
72: aload_1
73: getfield      #36
76: astore        6
78: aconst_null
79: astore        7
81: aconst_null
82: astore        8
84: aload_1
85: aload         7
87: iconst_0
88: aload         8
90: bipush        -2
92: bipush        32
94: invokevirtual #17
97: ldc           #84
99: invokestatic  #19
102: goto          107
105: astore        9
107: new           #22
110: dup
111: invokespecial #23
114: ldc           #24
116: invokevirtual #25
119: aload_2
120: invokevirtual #25
123: ldc           #26
125: invokevirtual #25
128: invokevirtual #27
131: aload_2
132: ldc           #11
134: invokestatic  #28
137: new           #22
140: dup
141: invokespecial #23
144: ldc           #24
146: invokevirtual #25
149: aload_3
150: invokevirtual #25
153: ldc           #32
155: invokevirtual #25
158: invokevirtual #27
161: aload_3
162: ldc           #33
164: invokestatic  #28
167: new           #22
170: dup
171: invokespecial #23
174: ldc           #24
176: invokevirtual #25
179: aload         4
181: invokevirtual #25
184: ldc           #26
186: invokevirtual #25
189: invokevirtual #27
192: aload         4
194: ldc           #11
196: invokestatic  #28
199: new           #22
202: dup
203: invokespecial #23
206: ldc           #24
208: invokevirtual #25
211: aload         5
213: invokevirtual #25
216: ldc           #26
218: invokevirtual #25
221: invokevirtual #27
224: aload         5
226: ldc           #11
228: invokestatic  #28
231: new           #22
234: dup
235: invokespecial #23
238: ldc           #24
240: invokevirtual #25
243: aload         6
245: invokevirtual #25
248: ldc           #32
250: invokevirtual #25
253: invokevirtual #27
256: aload         6
258: ldc           #33
260: invokestatic  #28
263: return
Exception table:
from    to  target type
84   102   105   Class java/lang/NegativeArraySizeException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0520
Start line: 412
End line: 0
Method source code: 
    public void test0520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0520");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str3 = helpFormatter0.getOptPrefix();
        int int4 = helpFormatter0.defaultDescPad;
        java.lang.String str5 = helpFormatter0.defaultOptPrefix;
        int int6 = helpFormatter0.getLeftPadding();
        int int7 = helpFormatter0.defaultLeftPad;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "--" + "'", str2, "--");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "-" + "'", str3, "-");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 3 + "'", int4 == 3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "-" + "'", str5, "-");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #101
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #35
36: istore_2
37: aload_1
38: getfield      #52
41: astore_3
42: aload_1
43: invokevirtual #73
46: astore        4
48: aload_1
49: getfield      #44
52: istore        5
54: aload_1
55: getfield      #42
58: astore        6
60: aload_1
61: invokevirtual #35
64: istore        7
66: aload_1
67: getfield      #40
70: istore        8
72: new           #22
75: dup
76: invokespecial #23
79: ldc           #24
81: invokevirtual #25
84: iload_2
85: invokevirtual #29
88: ldc           #30
90: invokevirtual #25
93: iconst_1
94: invokevirtual #29
97: ldc           #24
99: invokevirtual #25
102: invokevirtual #27
105: iload_2
106: iconst_1
107: if_icmpne     114
110: iconst_1
111: goto          115
114: iconst_0
115: invokestatic  #31
118: new           #22
121: dup
122: invokespecial #23
125: ldc           #24
127: invokevirtual #25
130: aload_3
131: invokevirtual #25
134: ldc           #62
136: invokevirtual #25
139: invokevirtual #27
142: aload_3
143: ldc           #63
145: invokestatic  #28
148: new           #22
151: dup
152: invokespecial #23
155: ldc           #24
157: invokevirtual #25
160: aload         4
162: invokevirtual #25
165: ldc           #48
167: invokevirtual #25
170: invokevirtual #27
173: aload         4
175: ldc           #49
177: invokestatic  #28
180: new           #22
183: dup
184: invokespecial #23
187: ldc           #24
189: invokevirtual #25
192: iload         5
194: invokevirtual #29
197: ldc           #30
199: invokevirtual #25
202: iconst_3
203: invokevirtual #29
206: ldc           #24
208: invokevirtual #25
211: invokevirtual #27
214: iload         5
216: iconst_3
217: if_icmpne     224
220: iconst_1
221: goto          225
224: iconst_0
225: invokestatic  #31
228: new           #22
231: dup
232: invokespecial #23
235: ldc           #24
237: invokevirtual #25
240: aload         6
242: invokevirtual #25
245: ldc           #48
247: invokevirtual #25
250: invokevirtual #27
253: aload         6
255: ldc           #49
257: invokestatic  #28
260: new           #22
263: dup
264: invokespecial #23
267: ldc           #24
269: invokevirtual #25
272: iload         7
274: invokevirtual #29
277: ldc           #30
279: invokevirtual #25
282: iconst_1
283: invokevirtual #29
286: ldc           #24
288: invokevirtual #25
291: invokevirtual #27
294: iload         7
296: iconst_1
297: if_icmpne     304
300: iconst_1
301: goto          305
304: iconst_0
305: invokestatic  #31
308: new           #22
311: dup
312: invokespecial #23
315: ldc           #24
317: invokevirtual #25
320: iload         8
322: invokevirtual #29
325: ldc           #30
327: invokevirtual #25
330: iconst_1
331: invokevirtual #29
334: ldc           #24
336: invokevirtual #25
339: invokevirtual #27
342: iload         8
344: iconst_1
345: if_icmpne     352
348: iconst_1
349: goto          353
352: iconst_0
353: invokestatic  #31
356: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0521
Start line: 433
End line: 0
Method source code: 
    public void test0521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0521");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setLongOptPrefix(" ");
        helpFormatter0.defaultDescPad = (short) 10;
        helpFormatter0.setLongOptPrefix("--");
        java.lang.String str11 = helpFormatter0.getLongOptSeparator();
        java.lang.String str12 = helpFormatter0.getSyntaxPrefix();
        org.apache.commons.cli.Options options14 = null;
        try {
            helpFormatter0.printHelp(" ", options14, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + " " + "'", str11, " ");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "usage: " + "'", str12, "usage: ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #102
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #35
36: istore_2
37: aload_1
38: ldc           #11
40: putfield      #36
43: aload_1
44: getfield      #42
47: astore_3
48: aload_1
49: ldc           #38
51: invokevirtual #43
54: aload_1
55: bipush        10
57: putfield      #44
60: aload_1
61: ldc           #63
63: invokevirtual #43
66: aload_1
67: invokevirtual #72
70: astore        4
72: aload_1
73: invokevirtual #89
76: astore        5
78: aconst_null
79: astore        6
81: aload_1
82: ldc           #38
84: aload         6
86: iconst_0
87: invokevirtual #103
90: ldc           #18
92: invokestatic  #19
95: goto          100
98: astore        7
100: new           #22
103: dup
104: invokespecial #23
107: ldc           #24
109: invokevirtual #25
112: iload_2
113: invokevirtual #29
116: ldc           #30
118: invokevirtual #25
121: iconst_1
122: invokevirtual #29
125: ldc           #24
127: invokevirtual #25
130: invokevirtual #27
133: iload_2
134: iconst_1
135: if_icmpne     142
138: iconst_1
139: goto          143
142: iconst_0
143: invokestatic  #31
146: new           #22
149: dup
150: invokespecial #23
153: ldc           #24
155: invokevirtual #25
158: aload_3
159: invokevirtual #25
162: ldc           #48
164: invokevirtual #25
167: invokevirtual #27
170: aload_3
171: ldc           #49
173: invokestatic  #28
176: new           #22
179: dup
180: invokespecial #23
183: ldc           #24
185: invokevirtual #25
188: aload         4
190: invokevirtual #25
193: ldc           #75
195: invokevirtual #25
198: invokevirtual #27
201: aload         4
203: ldc           #38
205: invokestatic  #28
208: new           #22
211: dup
212: invokespecial #23
215: ldc           #24
217: invokevirtual #25
220: aload         5
222: invokevirtual #25
225: ldc           #104
227: invokevirtual #25
230: invokevirtual #27
233: aload         5
235: ldc           #46
237: invokestatic  #28
240: return
Exception table:
from    to  target type
81    95    98   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0522
Start line: 460
End line: 0
Method source code: 
    public void test0522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0522");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        java.lang.String str6 = helpFormatter0.rtrim("");
        java.lang.String str8 = helpFormatter0.rtrim("-");
        java.lang.String str9 = helpFormatter0.getLongOptSeparator();
        helpFormatter0.defaultLeftPad = (byte) -1;
        java.io.PrintWriter printWriter12 = null;
        org.apache.commons.cli.Options options14 = null;
        try {
            helpFormatter0.printOptions(printWriter12, 100, options14, (int) (short) 1, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "-" + "'", str8, "-");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + " " + "'", str9, " ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #105
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #35
36: istore_2
37: aload_1
38: ldc           #11
40: putfield      #36
43: aload_1
44: getfield      #42
47: astore_3
48: aload_1
49: ldc           #11
51: invokevirtual #12
54: astore        4
56: aload_1
57: ldc           #49
59: invokevirtual #12
62: astore        5
64: aload_1
65: invokevirtual #72
68: astore        6
70: aload_1
71: iconst_m1
72: putfield      #40
75: aconst_null
76: astore        7
78: aconst_null
79: astore        8
81: aload_1
82: aload         7
84: bipush        100
86: aload         8
88: iconst_1
89: bipush        10
91: invokevirtual #17
94: ldc           #18
96: invokestatic  #19
99: goto          104
102: astore        9
104: new           #22
107: dup
108: invokespecial #23
111: ldc           #24
113: invokevirtual #25
116: iload_2
117: invokevirtual #29
120: ldc           #30
122: invokevirtual #25
125: iconst_1
126: invokevirtual #29
129: ldc           #24
131: invokevirtual #25
134: invokevirtual #27
137: iload_2
138: iconst_1
139: if_icmpne     146
142: iconst_1
143: goto          147
146: iconst_0
147: invokestatic  #31
150: new           #22
153: dup
154: invokespecial #23
157: ldc           #24
159: invokevirtual #25
162: aload_3
163: invokevirtual #25
166: ldc           #48
168: invokevirtual #25
171: invokevirtual #27
174: aload_3
175: ldc           #49
177: invokestatic  #28
180: new           #22
183: dup
184: invokespecial #23
187: ldc           #24
189: invokevirtual #25
192: aload         4
194: invokevirtual #25
197: ldc           #26
199: invokevirtual #25
202: invokevirtual #27
205: aload         4
207: ldc           #11
209: invokestatic  #28
212: new           #22
215: dup
216: invokespecial #23
219: ldc           #24
221: invokevirtual #25
224: aload         5
226: invokevirtual #25
229: ldc           #48
231: invokevirtual #25
234: invokevirtual #27
237: aload         5
239: ldc           #49
241: invokestatic  #28
244: new           #22
247: dup
248: invokespecial #23
251: ldc           #24
253: invokevirtual #25
256: aload         6
258: invokevirtual #25
261: ldc           #75
263: invokevirtual #25
266: invokevirtual #27
269: aload         6
271: ldc           #38
273: invokestatic  #28
276: return
Exception table:
from    to  target type
81    99   102   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0523
Start line: 488
End line: 0
Method source code: 
    public void test0523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0523");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        java.lang.String str6 = helpFormatter0.rtrim("");
        java.lang.String str8 = helpFormatter0.rtrim("-");
        helpFormatter0.defaultWidth = (short) -1;
        int int11 = helpFormatter0.defaultWidth;
        helpFormatter0.setWidth(3);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "-" + "'", str8, "-");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #106
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #35
36: istore_2
37: aload_1
38: ldc           #11
40: putfield      #36
43: aload_1
44: getfield      #42
47: astore_3
48: aload_1
49: ldc           #11
51: invokevirtual #12
54: astore        4
56: aload_1
57: ldc           #49
59: invokevirtual #12
62: astore        5
64: aload_1
65: iconst_m1
66: putfield      #57
69: aload_1
70: getfield      #57
73: istore        6
75: aload_1
76: iconst_3
77: invokevirtual #90
80: new           #22
83: dup
84: invokespecial #23
87: ldc           #24
89: invokevirtual #25
92: iload_2
93: invokevirtual #29
96: ldc           #30
98: invokevirtual #25
101: iconst_1
102: invokevirtual #29
105: ldc           #24
107: invokevirtual #25
110: invokevirtual #27
113: iload_2
114: iconst_1
115: if_icmpne     122
118: iconst_1
119: goto          123
122: iconst_0
123: invokestatic  #31
126: new           #22
129: dup
130: invokespecial #23
133: ldc           #24
135: invokevirtual #25
138: aload_3
139: invokevirtual #25
142: ldc           #48
144: invokevirtual #25
147: invokevirtual #27
150: aload_3
151: ldc           #49
153: invokestatic  #28
156: new           #22
159: dup
160: invokespecial #23
163: ldc           #24
165: invokevirtual #25
168: aload         4
170: invokevirtual #25
173: ldc           #26
175: invokevirtual #25
178: invokevirtual #27
181: aload         4
183: ldc           #11
185: invokestatic  #28
188: new           #22
191: dup
192: invokespecial #23
195: ldc           #24
197: invokevirtual #25
200: aload         5
202: invokevirtual #25
205: ldc           #48
207: invokevirtual #25
210: invokevirtual #27
213: aload         5
215: ldc           #49
217: invokestatic  #28
220: new           #22
223: dup
224: invokespecial #23
227: ldc           #24
229: invokevirtual #25
232: iload         6
234: invokevirtual #29
237: ldc           #30
239: invokevirtual #25
242: iconst_m1
243: invokevirtual #29
246: ldc           #24
248: invokevirtual #25
251: invokevirtual #27
254: iload         6
256: iconst_m1
257: if_icmpne     264
260: iconst_1
261: goto          265
264: iconst_0
265: invokestatic  #31
268: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0524
Start line: 508
End line: 0
Method source code: 
    public void test0524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0524");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.getArgName();
        helpFormatter0.setArgName("arg");
        helpFormatter0.setDescPadding((int) '#');
        java.lang.String str9 = helpFormatter0.getSyntaxPrefix();
        java.lang.String str10 = helpFormatter0.defaultSyntaxPrefix;
        org.apache.commons.cli.Options options13 = null;
        try {
            helpFormatter0.printHelp("hi!", "", options13, "usage:", true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "arg" + "'", str4, "arg");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "usage: " + "'", str9, "usage: ");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "usage: " + "'", str10, "usage: ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #107
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #35
36: istore_2
37: aload_1
38: ldc           #11
40: putfield      #36
43: aload_1
44: invokevirtual #83
47: astore_3
48: aload_1
49: ldc           #78
51: invokevirtual #59
54: aload_1
55: bipush        35
57: invokevirtual #37
60: aload_1
61: invokevirtual #89
64: astore        4
66: aload_1
67: getfield      #45
70: astore        5
72: aconst_null
73: astore        6
75: aload_1
76: ldc           #65
78: ldc           #11
80: aload         6
82: ldc           #108
84: iconst_1
85: invokevirtual #109
88: ldc           #18
90: invokestatic  #19
93: goto          98
96: astore        7
98: new           #22
101: dup
102: invokespecial #23
105: ldc           #24
107: invokevirtual #25
110: iload_2
111: invokevirtual #29
114: ldc           #30
116: invokevirtual #25
119: iconst_1
120: invokevirtual #29
123: ldc           #24
125: invokevirtual #25
128: invokevirtual #27
131: iload_2
132: iconst_1
133: if_icmpne     140
136: iconst_1
137: goto          141
140: iconst_0
141: invokestatic  #31
144: new           #22
147: dup
148: invokespecial #23
151: ldc           #24
153: invokevirtual #25
156: aload_3
157: invokevirtual #25
160: ldc           #79
162: invokevirtual #25
165: invokevirtual #27
168: aload_3
169: ldc           #78
171: invokestatic  #28
174: new           #22
177: dup
178: invokespecial #23
181: ldc           #24
183: invokevirtual #25
186: aload         4
188: invokevirtual #25
191: ldc           #104
193: invokevirtual #25
196: invokevirtual #27
199: aload         4
201: ldc           #46
203: invokestatic  #28
206: new           #22
209: dup
210: invokespecial #23
213: ldc           #24
215: invokevirtual #25
218: aload         5
220: invokevirtual #25
223: ldc           #104
225: invokevirtual #25
228: invokevirtual #27
231: aload         5
233: ldc           #46
235: invokestatic  #28
238: return
Exception table:
from    to  target type
75    93    96   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0525
Start line: 534
End line: 0
Method source code: 
    public void test0525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0525");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        java.lang.String str6 = helpFormatter0.getLongOptSeparator();
        helpFormatter0.setLongOptSeparator("          ");
        java.lang.String str9 = helpFormatter0.getOptPrefix();
        helpFormatter0.defaultDescPad = (byte) 100;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + " " + "'", str6, " ");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-" + "'", str9, "-");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #110
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #35
36: istore_2
37: aload_1
38: ldc           #11
40: putfield      #36
43: aload_1
44: bipush        10
46: invokevirtual #37
49: aload_1
50: invokevirtual #72
53: astore_3
54: aload_1
55: ldc           #67
57: invokevirtual #74
60: aload_1
61: invokevirtual #73
64: astore        4
66: aload_1
67: bipush        100
69: putfield      #44
72: new           #22
75: dup
76: invokespecial #23
79: ldc           #24
81: invokevirtual #25
84: iload_2
85: invokevirtual #29
88: ldc           #30
90: invokevirtual #25
93: iconst_1
94: invokevirtual #29
97: ldc           #24
99: invokevirtual #25
102: invokevirtual #27
105: iload_2
106: iconst_1
107: if_icmpne     114
110: iconst_1
111: goto          115
114: iconst_0
115: invokestatic  #31
118: new           #22
121: dup
122: invokespecial #23
125: ldc           #24
127: invokevirtual #25
130: aload_3
131: invokevirtual #25
134: ldc           #75
136: invokevirtual #25
139: invokevirtual #27
142: aload_3
143: ldc           #38
145: invokestatic  #28
148: new           #22
151: dup
152: invokespecial #23
155: ldc           #24
157: invokevirtual #25
160: aload         4
162: invokevirtual #25
165: ldc           #48
167: invokevirtual #25
170: invokevirtual #27
173: aload         4
175: ldc           #49
177: invokestatic  #28
180: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0526
Start line: 551
End line: 0
Method source code: 
    public void test0526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0526");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str6 = helpFormatter0.getNewLine();
        helpFormatter0.setSyntaxPrefix(" ");
        java.lang.String str9 = helpFormatter0.defaultSyntaxPrefix;
        org.apache.commons.cli.HelpFormatter helpFormatter10 = new org.apache.commons.cli.HelpFormatter();
        java.lang.String str11 = helpFormatter10.defaultSyntaxPrefix;
        java.util.Comparator comparator12 = helpFormatter10.optionComparator;
        helpFormatter0.optionComparator = comparator12;
        java.lang.String str14 = helpFormatter0.defaultNewLine;
        int int15 = helpFormatter0.defaultLeftPad;
        java.lang.String str16 = helpFormatter0.getLongOptSeparator();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\n" + "'", str6, "\n");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + " " + "'", str9, " ");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "usage: " + "'", str11, "usage: ");
        org.junit.Assert.assertNotNull(comparator12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\n" + "'", str14, "\n");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + " " + "'", str16, " ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #111
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: ldc           #11
35: invokevirtual #51
38: aload_1
39: ldc           #11
41: putfield      #52
44: aload_1
45: getfield      #52
48: astore_2
49: aload_1
50: invokevirtual #16
53: astore_3
54: aload_1
55: ldc           #38
57: invokevirtual #39
60: aload_1
61: getfield      #45
64: astore        4
66: new           #8
69: dup
70: invokespecial #9
73: astore        5
75: aload         5
77: getfield      #45
80: astore        6
82: aload         5
84: getfield      #10
87: astore        7
89: aload_1
90: aload         7
92: putfield      #10
95: aload_1
96: getfield      #36
99: astore        8
101: aload_1
102: getfield      #40
105: istore        9
107: aload_1
108: invokevirtual #72
111: astore        10
113: new           #22
116: dup
117: invokespecial #23
120: ldc           #24
122: invokevirtual #25
125: aload_2
126: invokevirtual #25
129: ldc           #26
131: invokevirtual #25
134: invokevirtual #27
137: aload_2
138: ldc           #11
140: invokestatic  #28
143: new           #22
146: dup
147: invokespecial #23
150: ldc           #24
152: invokevirtual #25
155: aload_3
156: invokevirtual #25
159: ldc           #32
161: invokevirtual #25
164: invokevirtual #27
167: aload_3
168: ldc           #33
170: invokestatic  #28
173: new           #22
176: dup
177: invokespecial #23
180: ldc           #24
182: invokevirtual #25
185: aload         4
187: invokevirtual #25
190: ldc           #75
192: invokevirtual #25
195: invokevirtual #27
198: aload         4
200: ldc           #38
202: invokestatic  #28
205: new           #22
208: dup
209: invokespecial #23
212: ldc           #24
214: invokevirtual #25
217: aload         6
219: invokevirtual #25
222: ldc           #104
224: invokevirtual #25
227: invokevirtual #27
230: aload         6
232: ldc           #46
234: invokestatic  #28
237: aload         7
239: invokestatic  #21
242: new           #22
245: dup
246: invokespecial #23
249: ldc           #24
251: invokevirtual #25
254: aload         8
256: invokevirtual #25
259: ldc           #32
261: invokevirtual #25
264: invokevirtual #27
267: aload         8
269: ldc           #33
271: invokestatic  #28
274: new           #22
277: dup
278: invokespecial #23
281: ldc           #24
283: invokevirtual #25
286: iload         9
288: invokevirtual #29
291: ldc           #30
293: invokevirtual #25
296: iconst_1
297: invokevirtual #29
300: ldc           #24
302: invokevirtual #25
305: invokevirtual #27
308: iload         9
310: iconst_1
311: if_icmpne     318
314: iconst_1
315: goto          319
318: iconst_0
319: invokestatic  #31
322: new           #22
325: dup
326: invokespecial #23
329: ldc           #24
331: invokevirtual #25
334: aload         10
336: invokevirtual #25
339: ldc           #75
341: invokevirtual #25
344: invokevirtual #27
347: aload         10
349: ldc           #38
351: invokestatic  #28
354: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0527
Start line: 579
End line: 0
Method source code: 
    public void test0527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0527");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.defaultArgName;
        helpFormatter0.defaultSyntaxPrefix = "   ";
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "arg" + "'", str2, "arg");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #112
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #35
36: istore_2
37: aload_1
38: getfield      #15
41: astore_3
42: aload_1
43: ldc           #113
45: putfield      #45
48: new           #22
51: dup
52: invokespecial #23
55: ldc           #24
57: invokevirtual #25
60: iload_2
61: invokevirtual #29
64: ldc           #30
66: invokevirtual #25
69: iconst_1
70: invokevirtual #29
73: ldc           #24
75: invokevirtual #25
78: invokevirtual #27
81: iload_2
82: iconst_1
83: if_icmpne     90
86: iconst_1
87: goto          91
90: iconst_0
91: invokestatic  #31
94: new           #22
97: dup
98: invokespecial #23
101: ldc           #24
103: invokevirtual #25
106: aload_3
107: invokevirtual #25
110: ldc           #79
112: invokevirtual #25
115: invokevirtual #27
118: aload_3
119: ldc           #78
121: invokestatic  #28
124: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0528
Start line: 591
End line: 0
Method source code: 
    public void test0528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0528");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultOptPrefix;
        java.lang.String str6 = helpFormatter0.getLongOptPrefix();
        java.lang.String str7 = helpFormatter0.defaultOptPrefix;
        java.util.Comparator comparator8 = helpFormatter0.getOptionComparator();
        helpFormatter0.setArgName("                                                                                                 ");
        java.lang.String str11 = helpFormatter0.defaultLongOptPrefix;
        int int12 = helpFormatter0.getLeftPadding();
        int int16 = helpFormatter0.findWrapPos(" ", 0, (int) (short) 100);
        java.lang.String str18 = helpFormatter0.rtrim(" ");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(comparator8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #114
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: ldc           #11
35: invokevirtual #51
38: aload_1
39: ldc           #11
41: putfield      #52
44: aload_1
45: getfield      #42
48: astore_2
49: aload_1
50: invokevirtual #53
53: astore_3
54: aload_1
55: getfield      #42
58: astore        4
60: aload_1
61: invokevirtual #58
64: astore        5
66: aload_1
67: ldc           #14
69: invokevirtual #59
72: aload_1
73: getfield      #52
76: astore        6
78: aload_1
79: invokevirtual #35
82: istore        7
84: aload_1
85: ldc           #38
87: iconst_0
88: bipush        100
90: invokevirtual #61
93: istore        8
95: aload_1
96: ldc           #38
98: invokevirtual #12
101: astore        9
103: new           #22
106: dup
107: invokespecial #23
110: ldc           #24
112: invokevirtual #25
115: aload_2
116: invokevirtual #25
119: ldc           #26
121: invokevirtual #25
124: invokevirtual #27
127: aload_2
128: ldc           #11
130: invokestatic  #28
133: new           #22
136: dup
137: invokespecial #23
140: ldc           #24
142: invokevirtual #25
145: aload_3
146: invokevirtual #25
149: ldc           #26
151: invokevirtual #25
154: invokevirtual #27
157: aload_3
158: ldc           #11
160: invokestatic  #28
163: new           #22
166: dup
167: invokespecial #23
170: ldc           #24
172: invokevirtual #25
175: aload         4
177: invokevirtual #25
180: ldc           #26
182: invokevirtual #25
185: invokevirtual #27
188: aload         4
190: ldc           #11
192: invokestatic  #28
195: aload         5
197: invokestatic  #21
200: new           #22
203: dup
204: invokespecial #23
207: ldc           #24
209: invokevirtual #25
212: aload         6
214: invokevirtual #25
217: ldc           #26
219: invokevirtual #25
222: invokevirtual #27
225: aload         6
227: ldc           #11
229: invokestatic  #28
232: new           #22
235: dup
236: invokespecial #23
239: ldc           #24
241: invokevirtual #25
244: iload         7
246: invokevirtual #29
249: ldc           #30
251: invokevirtual #25
254: iconst_1
255: invokevirtual #29
258: ldc           #24
260: invokevirtual #25
263: invokevirtual #27
266: iload         7
268: iconst_1
269: if_icmpne     276
272: iconst_1
273: goto          277
276: iconst_0
277: invokestatic  #31
280: new           #22
283: dup
284: invokespecial #23
287: ldc           #24
289: invokevirtual #25
292: iload         8
294: invokevirtual #29
297: ldc           #30
299: invokevirtual #25
302: iconst_m1
303: invokevirtual #29
306: ldc           #24
308: invokevirtual #25
311: invokevirtual #27
314: iload         8
316: iconst_m1
317: if_icmpne     324
320: iconst_1
321: goto          325
324: iconst_0
325: invokestatic  #31
328: new           #22
331: dup
332: invokespecial #23
335: ldc           #24
337: invokevirtual #25
340: aload         9
342: invokevirtual #25
345: ldc           #26
347: invokevirtual #25
350: invokevirtual #27
353: aload         9
355: ldc           #11
357: invokestatic  #28
360: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0529
Start line: 617
End line: 0
Method source code: 
    public void test0529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0529");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        java.lang.String str6 = helpFormatter0.rtrim("");
        java.lang.String str8 = helpFormatter0.rtrim("-");
        java.lang.String str9 = helpFormatter0.getLongOptSeparator();
        helpFormatter0.defaultLeftPad = (byte) -1;
        helpFormatter0.defaultOptPrefix = "--";
        java.lang.String str14 = helpFormatter0.getLongOptPrefix();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "-" + "'", str8, "-");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + " " + "'", str9, " ");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "--" + "'", str14, "--");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #115
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #35
36: istore_2
37: aload_1
38: ldc           #11
40: putfield      #36
43: aload_1
44: getfield      #42
47: astore_3
48: aload_1
49: ldc           #11
51: invokevirtual #12
54: astore        4
56: aload_1
57: ldc           #49
59: invokevirtual #12
62: astore        5
64: aload_1
65: invokevirtual #72
68: astore        6
70: aload_1
71: iconst_m1
72: putfield      #40
75: aload_1
76: ldc           #63
78: putfield      #42
81: aload_1
82: invokevirtual #53
85: astore        7
87: new           #22
90: dup
91: invokespecial #23
94: ldc           #24
96: invokevirtual #25
99: iload_2
100: invokevirtual #29
103: ldc           #30
105: invokevirtual #25
108: iconst_1
109: invokevirtual #29
112: ldc           #24
114: invokevirtual #25
117: invokevirtual #27
120: iload_2
121: iconst_1
122: if_icmpne     129
125: iconst_1
126: goto          130
129: iconst_0
130: invokestatic  #31
133: new           #22
136: dup
137: invokespecial #23
140: ldc           #24
142: invokevirtual #25
145: aload_3
146: invokevirtual #25
149: ldc           #48
151: invokevirtual #25
154: invokevirtual #27
157: aload_3
158: ldc           #49
160: invokestatic  #28
163: new           #22
166: dup
167: invokespecial #23
170: ldc           #24
172: invokevirtual #25
175: aload         4
177: invokevirtual #25
180: ldc           #26
182: invokevirtual #25
185: invokevirtual #27
188: aload         4
190: ldc           #11
192: invokestatic  #28
195: new           #22
198: dup
199: invokespecial #23
202: ldc           #24
204: invokevirtual #25
207: aload         5
209: invokevirtual #25
212: ldc           #48
214: invokevirtual #25
217: invokevirtual #27
220: aload         5
222: ldc           #49
224: invokestatic  #28
227: new           #22
230: dup
231: invokespecial #23
234: ldc           #24
236: invokevirtual #25
239: aload         6
241: invokevirtual #25
244: ldc           #75
246: invokevirtual #25
249: invokevirtual #27
252: aload         6
254: ldc           #38
256: invokestatic  #28
259: new           #22
262: dup
263: invokespecial #23
266: ldc           #24
268: invokevirtual #25
271: aload         7
273: invokevirtual #25
276: ldc           #62
278: invokevirtual #25
281: invokevirtual #27
284: aload         7
286: ldc           #63
288: invokestatic  #28
291: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0530
Start line: 639
End line: 0
Method source code: 
    public void test0530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0530");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.defaultLongOptPrefix = "hi!";
        java.lang.String str3 = helpFormatter0.defaultLongOptPrefix;
        helpFormatter0.defaultWidth = (byte) 1;
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!" + "'", str3, "hi!");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #116
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: ldc           #65
35: putfield      #52
38: aload_1
39: getfield      #52
42: astore_2
43: aload_1
44: iconst_1
45: putfield      #57
48: new           #22
51: dup
52: invokespecial #23
55: ldc           #24
57: invokevirtual #25
60: aload_2
61: invokevirtual #25
64: ldc           #97
66: invokevirtual #25
69: invokevirtual #27
72: aload_2
73: ldc           #65
75: invokestatic  #28
78: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0531
Start line: 650
End line: 0
Method source code: 
    public void test0531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0531");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.defaultLongOptPrefix = "hi!";
        int int3 = helpFormatter0.getWidth();
        helpFormatter0.setLongOptPrefix("          ");
        helpFormatter0.defaultLongOptPrefix = "                                                                                                    ";
        helpFormatter0.setArgName("          ");
        helpFormatter0.setWidth(97);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 74 + "'", int3 == 74);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #117
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: ldc           #65
35: putfield      #52
38: aload_1
39: invokevirtual #66
42: istore_2
43: aload_1
44: ldc           #67
46: invokevirtual #43
49: aload_1
50: ldc           #118
52: putfield      #52
55: aload_1
56: ldc           #67
58: invokevirtual #59
61: aload_1
62: bipush        97
64: invokevirtual #90
67: new           #22
70: dup
71: invokespecial #23
74: ldc           #24
76: invokevirtual #25
79: iload_2
80: invokevirtual #29
83: ldc           #30
85: invokevirtual #25
88: bipush        74
90: invokevirtual #29
93: ldc           #24
95: invokevirtual #25
98: invokevirtual #27
101: iload_2
102: bipush        74
104: if_icmpne     111
107: iconst_1
108: goto          112
111: iconst_0
112: invokestatic  #31
115: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0532
Start line: 664
End line: 0
Method source code: 
    public void test0532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0532");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        helpFormatter0.defaultSyntaxPrefix = "";
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #119
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #35
36: istore_2
37: aload_1
38: ldc           #11
40: putfield      #36
43: aload_1
44: bipush        10
46: invokevirtual #37
49: aload_1
50: ldc           #11
52: putfield      #45
55: new           #22
58: dup
59: invokespecial #23
62: ldc           #24
64: invokevirtual #25
67: iload_2
68: invokevirtual #29
71: ldc           #30
73: invokevirtual #25
76: iconst_1
77: invokevirtual #29
80: ldc           #24
82: invokevirtual #25
85: invokevirtual #27
88: iload_2
89: iconst_1
90: if_icmpne     97
93: iconst_1
94: goto          98
97: iconst_0
98: invokestatic  #31
101: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0533
Start line: 676
End line: 0
Method source code: 
    public void test0533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0533");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        int int9 = helpFormatter0.findWrapPos(" ", (int) (byte) 10, (int) '4');
        helpFormatter0.defaultOptPrefix = "arg";
        int int12 = helpFormatter0.defaultLeftPad;
        java.lang.String str14 = helpFormatter0.rtrim("\n");
        helpFormatter0.setLongOptPrefix("                                                    ");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #120
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: ldc           #11
35: invokevirtual #51
38: aload_1
39: ldc           #11
41: putfield      #52
44: aload_1
45: getfield      #52
48: astore_2
49: aload_1
50: ldc           #38
52: bipush        10
54: bipush        52
56: invokevirtual #61
59: istore_3
60: aload_1
61: ldc           #78
63: putfield      #42
66: aload_1
67: getfield      #40
70: istore        4
72: aload_1
73: ldc           #33
75: invokevirtual #12
78: astore        5
80: aload_1
81: ldc           #77
83: invokevirtual #43
86: new           #22
89: dup
90: invokespecial #23
93: ldc           #24
95: invokevirtual #25
98: aload_2
99: invokevirtual #25
102: ldc           #26
104: invokevirtual #25
107: invokevirtual #27
110: aload_2
111: ldc           #11
113: invokestatic  #28
116: new           #22
119: dup
120: invokespecial #23
123: ldc           #24
125: invokevirtual #25
128: iload_3
129: invokevirtual #29
132: ldc           #30
134: invokevirtual #25
137: iconst_m1
138: invokevirtual #29
141: ldc           #24
143: invokevirtual #25
146: invokevirtual #27
149: iload_3
150: iconst_m1
151: if_icmpne     158
154: iconst_1
155: goto          159
158: iconst_0
159: invokestatic  #31
162: new           #22
165: dup
166: invokespecial #23
169: ldc           #24
171: invokevirtual #25
174: iload         4
176: invokevirtual #29
179: ldc           #30
181: invokevirtual #25
184: iconst_1
185: invokevirtual #29
188: ldc           #24
190: invokevirtual #25
193: invokevirtual #27
196: iload         4
198: iconst_1
199: if_icmpne     206
202: iconst_1
203: goto          207
206: iconst_0
207: invokestatic  #31
210: new           #22
213: dup
214: invokespecial #23
217: ldc           #24
219: invokevirtual #25
222: aload         5
224: invokevirtual #25
227: ldc           #26
229: invokevirtual #25
232: invokevirtual #27
235: aload         5
237: ldc           #11
239: invokestatic  #28
242: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0534
Start line: 695
End line: 0
Method source code: 
    public void test0534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0534");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        java.lang.String str6 = helpFormatter0.rtrim("");
        int int7 = helpFormatter0.getDescPadding();
        int int8 = helpFormatter0.getDescPadding();
        java.lang.String str9 = helpFormatter0.getArgName();
        helpFormatter0.setDescPadding(0);
        helpFormatter0.defaultDescPad = (short) 100;
        java.util.Comparator comparator14 = helpFormatter0.optionComparator;
        java.lang.String str15 = helpFormatter0.getNewLine();
        org.apache.commons.cli.HelpFormatter helpFormatter16 = new org.apache.commons.cli.HelpFormatter();
        int int17 = helpFormatter16.getLeftPadding();
        java.lang.String str18 = helpFormatter16.getArgName();
        helpFormatter16.defaultNewLine = "\n";
        helpFormatter16.defaultLeftPad = (byte) -1;
        helpFormatter16.setLongOptSeparator("");
        org.apache.commons.cli.HelpFormatter helpFormatter25 = new org.apache.commons.cli.HelpFormatter();
        int int26 = helpFormatter25.getLeftPadding();
        helpFormatter25.defaultNewLine = "";
        helpFormatter25.setDescPadding(10);
        helpFormatter25.setSyntaxPrefix(" ");
        java.util.Comparator comparator33 = helpFormatter25.getOptionComparator();
        helpFormatter16.setOptionComparator(comparator33);
        helpFormatter0.optionComparator = comparator33;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 3 + "'", int7 == 3);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 3 + "'", int8 == 3);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "arg" + "'", str9, "arg");
        org.junit.Assert.assertNotNull(comparator14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "arg" + "'", str18, "arg");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(comparator33);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #121
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #35
36: istore_2
37: aload_1
38: ldc           #11
40: putfield      #36
43: aload_1
44: getfield      #42
47: astore_3
48: aload_1
49: ldc           #11
51: invokevirtual #12
54: astore        4
56: aload_1
57: invokevirtual #13
60: istore        5
62: aload_1
63: invokevirtual #13
66: istore        6
68: aload_1
69: invokevirtual #83
72: astore        7
74: aload_1
75: iconst_0
76: invokevirtual #37
79: aload_1
80: bipush        100
82: putfield      #44
85: aload_1
86: getfield      #10
89: astore        8
91: aload_1
92: invokevirtual #16
95: astore        9
97: new           #8
100: dup
101: invokespecial #9
104: astore        10
106: aload         10
108: invokevirtual #35
111: istore        11
113: aload         10
115: invokevirtual #83
118: astore        12
120: aload         10
122: ldc           #33
124: putfield      #36
127: aload         10
129: iconst_m1
130: putfield      #40
133: aload         10
135: ldc           #11
137: invokevirtual #74
140: new           #8
143: dup
144: invokespecial #9
147: astore        13
149: aload         13
151: invokevirtual #35
154: istore        14
156: aload         13
158: ldc           #11
160: putfield      #36
163: aload         13
165: bipush        10
167: invokevirtual #37
170: aload         13
172: ldc           #38
174: invokevirtual #39
177: aload         13
179: invokevirtual #58
182: astore        15
184: aload         10
186: aload         15
188: invokevirtual #99
191: aload_1
192: aload         15
194: putfield      #10
197: new           #22
200: dup
201: invokespecial #23
204: ldc           #24
206: invokevirtual #25
209: iload_2
210: invokevirtual #29
213: ldc           #30
215: invokevirtual #25
218: iconst_1
219: invokevirtual #29
222: ldc           #24
224: invokevirtual #25
227: invokevirtual #27
230: iload_2
231: iconst_1
232: if_icmpne     239
235: iconst_1
236: goto          240
239: iconst_0
240: invokestatic  #31
243: new           #22
246: dup
247: invokespecial #23
250: ldc           #24
252: invokevirtual #25
255: aload_3
256: invokevirtual #25
259: ldc           #48
261: invokevirtual #25
264: invokevirtual #27
267: aload_3
268: ldc           #49
270: invokestatic  #28
273: new           #22
276: dup
277: invokespecial #23
280: ldc           #24
282: invokevirtual #25
285: aload         4
287: invokevirtual #25
290: ldc           #26
292: invokevirtual #25
295: invokevirtual #27
298: aload         4
300: ldc           #11
302: invokestatic  #28
305: new           #22
308: dup
309: invokespecial #23
312: ldc           #24
314: invokevirtual #25
317: iload         5
319: invokevirtual #29
322: ldc           #30
324: invokevirtual #25
327: iconst_3
328: invokevirtual #29
331: ldc           #24
333: invokevirtual #25
336: invokevirtual #27
339: iload         5
341: iconst_3
342: if_icmpne     349
345: iconst_1
346: goto          350
349: iconst_0
350: invokestatic  #31
353: new           #22
356: dup
357: invokespecial #23
360: ldc           #24
362: invokevirtual #25
365: iload         6
367: invokevirtual #29
370: ldc           #30
372: invokevirtual #25
375: iconst_3
376: invokevirtual #29
379: ldc           #24
381: invokevirtual #25
384: invokevirtual #27
387: iload         6
389: iconst_3
390: if_icmpne     397
393: iconst_1
394: goto          398
397: iconst_0
398: invokestatic  #31
401: new           #22
404: dup
405: invokespecial #23
408: ldc           #24
410: invokevirtual #25
413: aload         7
415: invokevirtual #25
418: ldc           #79
420: invokevirtual #25
423: invokevirtual #27
426: aload         7
428: ldc           #78
430: invokestatic  #28
433: aload         8
435: invokestatic  #21
438: new           #22
441: dup
442: invokespecial #23
445: ldc           #24
447: invokevirtual #25
450: aload         9
452: invokevirtual #25
455: ldc           #26
457: invokevirtual #25
460: invokevirtual #27
463: aload         9
465: ldc           #11
467: invokestatic  #28
470: new           #22
473: dup
474: invokespecial #23
477: ldc           #24
479: invokevirtual #25
482: iload         11
484: invokevirtual #29
487: ldc           #30
489: invokevirtual #25
492: iconst_1
493: invokevirtual #29
496: ldc           #24
498: invokevirtual #25
501: invokevirtual #27
504: iload         11
506: iconst_1
507: if_icmpne     514
510: iconst_1
511: goto          515
514: iconst_0
515: invokestatic  #31
518: new           #22
521: dup
522: invokespecial #23
525: ldc           #24
527: invokevirtual #25
530: aload         12
532: invokevirtual #25
535: ldc           #79
537: invokevirtual #25
540: invokevirtual #27
543: aload         12
545: ldc           #78
547: invokestatic  #28
550: new           #22
553: dup
554: invokespecial #23
557: ldc           #24
559: invokevirtual #25
562: iload         14
564: invokevirtual #29
567: ldc           #30
569: invokevirtual #25
572: iconst_1
573: invokevirtual #29
576: ldc           #24
578: invokevirtual #25
581: invokevirtual #27
584: iload         14
586: iconst_1
587: if_icmpne     594
590: iconst_1
591: goto          595
594: iconst_0
595: invokestatic  #31
598: aload         15
600: invokestatic  #21
603: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0535
Start line: 739
End line: 0
Method source code: 
    public void test0535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0535");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        int int5 = helpFormatter0.defaultDescPad;
        java.lang.String str6 = helpFormatter0.defaultNewLine;
        java.lang.StringBuffer stringBuffer7 = null;
        try {
            java.lang.StringBuffer stringBuffer11 = helpFormatter0.renderWrappedText(stringBuffer7, (int) (byte) 0, 1, "   ");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 3 + "'", int5 == 3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #122
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #35
36: istore_2
37: aload_1
38: ldc           #11
40: putfield      #36
43: aload_1
44: getfield      #42
47: astore_3
48: aload_1
49: getfield      #44
52: istore        4
54: aload_1
55: getfield      #36
58: astore        5
60: aconst_null
61: astore        6
63: aload_1
64: aload         6
66: iconst_0
67: iconst_1
68: ldc           #113
70: invokevirtual #123
73: astore        7
75: ldc           #18
77: invokestatic  #19
80: goto          85
83: astore        7
85: new           #22
88: dup
89: invokespecial #23
92: ldc           #24
94: invokevirtual #25
97: iload_2
98: invokevirtual #29
101: ldc           #30
103: invokevirtual #25
106: iconst_1
107: invokevirtual #29
110: ldc           #24
112: invokevirtual #25
115: invokevirtual #27
118: iload_2
119: iconst_1
120: if_icmpne     127
123: iconst_1
124: goto          128
127: iconst_0
128: invokestatic  #31
131: new           #22
134: dup
135: invokespecial #23
138: ldc           #24
140: invokevirtual #25
143: aload_3
144: invokevirtual #25
147: ldc           #48
149: invokevirtual #25
152: invokevirtual #27
155: aload_3
156: ldc           #49
158: invokestatic  #28
161: new           #22
164: dup
165: invokespecial #23
168: ldc           #24
170: invokevirtual #25
173: iload         4
175: invokevirtual #29
178: ldc           #30
180: invokevirtual #25
183: iconst_3
184: invokevirtual #29
187: ldc           #24
189: invokevirtual #25
192: invokevirtual #27
195: iload         4
197: iconst_3
198: if_icmpne     205
201: iconst_1
202: goto          206
205: iconst_0
206: invokestatic  #31
209: new           #22
212: dup
213: invokespecial #23
216: ldc           #24
218: invokevirtual #25
221: aload         5
223: invokevirtual #25
226: ldc           #26
228: invokevirtual #25
231: invokevirtual #27
234: aload         5
236: ldc           #11
238: invokestatic  #28
241: return
Exception table:
from    to  target type
63    80    83   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0536
Start line: 763
End line: 0
Method source code: 
    public void test0536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0536");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.defaultDescPad = '4';
        helpFormatter0.setNewLine("");
        helpFormatter0.defaultWidth = 0;
        java.io.PrintWriter printWriter10 = null;
        org.apache.commons.cli.Options options14 = null;
        try {
            helpFormatter0.printHelp(printWriter10, (int) (byte) -1, "", "                                                                                                    ", options14, (int) '4', (int) '4', "-");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: cmdLineSyntax not provided");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #124
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #35
36: istore_2
37: aload_1
38: ldc           #11
40: putfield      #36
43: aload_1
44: bipush        52
46: putfield      #44
49: aload_1
50: ldc           #11
52: invokevirtual #88
55: aload_1
56: iconst_0
57: putfield      #57
60: aconst_null
61: astore_3
62: aconst_null
63: astore        4
65: aload_1
66: aload_3
67: iconst_m1
68: ldc           #11
70: ldc           #118
72: aload         4
74: bipush        52
76: bipush        52
78: ldc           #49
80: invokevirtual #68
83: ldc           #69
85: invokestatic  #19
88: goto          93
91: astore        5
93: new           #22
96: dup
97: invokespecial #23
100: ldc           #24
102: invokevirtual #25
105: iload_2
106: invokevirtual #29
109: ldc           #30
111: invokevirtual #25
114: iconst_1
115: invokevirtual #29
118: ldc           #24
120: invokevirtual #25
123: invokevirtual #27
126: iload_2
127: iconst_1
128: if_icmpne     135
131: iconst_1
132: goto          136
135: iconst_0
136: invokestatic  #31
139: return
Exception table:
from    to  target type
65    88    91   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0537
Start line: 785
End line: 0
Method source code: 
    public void test0537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0537");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str6 = helpFormatter0.getNewLine();
        java.lang.String str7 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setDescPadding(74);
        helpFormatter0.setLeftPadding(52);
        java.lang.String str13 = helpFormatter0.rtrim("-");
        helpFormatter0.defaultOptPrefix = "usage: ";
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\n" + "'", str6, "\n");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "-" + "'", str13, "-");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #125
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: ldc           #11
35: invokevirtual #51
38: aload_1
39: ldc           #11
41: putfield      #52
44: aload_1
45: getfield      #52
48: astore_2
49: aload_1
50: invokevirtual #16
53: astore_3
54: aload_1
55: getfield      #42
58: astore        4
60: aload_1
61: bipush        74
63: invokevirtual #37
66: aload_1
67: bipush        52
69: invokevirtual #55
72: aload_1
73: ldc           #49
75: invokevirtual #12
78: astore        5
80: aload_1
81: ldc           #46
83: putfield      #42
86: new           #22
89: dup
90: invokespecial #23
93: ldc           #24
95: invokevirtual #25
98: aload_2
99: invokevirtual #25
102: ldc           #26
104: invokevirtual #25
107: invokevirtual #27
110: aload_2
111: ldc           #11
113: invokestatic  #28
116: new           #22
119: dup
120: invokespecial #23
123: ldc           #24
125: invokevirtual #25
128: aload_3
129: invokevirtual #25
132: ldc           #32
134: invokevirtual #25
137: invokevirtual #27
140: aload_3
141: ldc           #33
143: invokestatic  #28
146: new           #22
149: dup
150: invokespecial #23
153: ldc           #24
155: invokevirtual #25
158: aload         4
160: invokevirtual #25
163: ldc           #26
165: invokevirtual #25
168: invokevirtual #27
171: aload         4
173: ldc           #11
175: invokestatic  #28
178: new           #22
181: dup
182: invokespecial #23
185: ldc           #24
187: invokevirtual #25
190: aload         5
192: invokevirtual #25
195: ldc           #48
197: invokevirtual #25
200: invokevirtual #27
203: aload         5
205: ldc           #49
207: invokestatic  #28
210: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0538
Start line: 805
End line: 0
Method source code: 
    public void test0538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0538");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        java.lang.String str6 = helpFormatter0.rtrim("");
        java.lang.String str8 = helpFormatter0.rtrim("-");
        helpFormatter0.defaultOptPrefix = "--";
        helpFormatter0.defaultDescPad = (short) 1;
        helpFormatter0.defaultNewLine = "arg";
        helpFormatter0.defaultNewLine = "--";
        helpFormatter0.setSyntaxPrefix("usage:");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "-" + "'", str8, "-");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #126
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #35
36: istore_2
37: aload_1
38: ldc           #11
40: putfield      #36
43: aload_1
44: getfield      #42
47: astore_3
48: aload_1
49: ldc           #11
51: invokevirtual #12
54: astore        4
56: aload_1
57: ldc           #49
59: invokevirtual #12
62: astore        5
64: aload_1
65: ldc           #63
67: putfield      #42
70: aload_1
71: iconst_1
72: putfield      #44
75: aload_1
76: ldc           #78
78: putfield      #36
81: aload_1
82: ldc           #63
84: putfield      #36
87: aload_1
88: ldc           #108
90: invokevirtual #39
93: new           #22
96: dup
97: invokespecial #23
100: ldc           #24
102: invokevirtual #25
105: iload_2
106: invokevirtual #29
109: ldc           #30
111: invokevirtual #25
114: iconst_1
115: invokevirtual #29
118: ldc           #24
120: invokevirtual #25
123: invokevirtual #27
126: iload_2
127: iconst_1
128: if_icmpne     135
131: iconst_1
132: goto          136
135: iconst_0
136: invokestatic  #31
139: new           #22
142: dup
143: invokespecial #23
146: ldc           #24
148: invokevirtual #25
151: aload_3
152: invokevirtual #25
155: ldc           #48
157: invokevirtual #25
160: invokevirtual #27
163: aload_3
164: ldc           #49
166: invokestatic  #28
169: new           #22
172: dup
173: invokespecial #23
176: ldc           #24
178: invokevirtual #25
181: aload         4
183: invokevirtual #25
186: ldc           #26
188: invokevirtual #25
191: invokevirtual #27
194: aload         4
196: ldc           #11
198: invokestatic  #28
201: new           #22
204: dup
205: invokespecial #23
208: ldc           #24
210: invokevirtual #25
213: aload         5
215: invokevirtual #25
218: ldc           #48
220: invokevirtual #25
223: invokevirtual #27
226: aload         5
228: ldc           #49
230: invokestatic  #28
233: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0539
Start line: 826
End line: 0
Method source code: 
    public void test0539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0539");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.defaultArgName;
        java.lang.String str3 = helpFormatter0.defaultNewLine;
        helpFormatter0.defaultLeftPad = 10;
        java.lang.String str6 = helpFormatter0.defaultSyntaxPrefix;
        java.lang.String str7 = helpFormatter0.getOptPrefix();
        java.lang.String str8 = helpFormatter0.getSyntaxPrefix();
        org.apache.commons.cli.Options options11 = null;
        try {
            helpFormatter0.printHelp("--", "hi!", options11, "                                                                                                    ");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "arg" + "'", str2, "arg");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\n" + "'", str3, "\n");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "usage: " + "'", str6, "usage: ");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "-" + "'", str7, "-");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "usage: " + "'", str8, "usage: ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #127
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #35
36: istore_2
37: aload_1
38: getfield      #15
41: astore_3
42: aload_1
43: getfield      #36
46: astore        4
48: aload_1
49: bipush        10
51: putfield      #40
54: aload_1
55: getfield      #45
58: astore        5
60: aload_1
61: invokevirtual #73
64: astore        6
66: aload_1
67: invokevirtual #89
70: astore        7
72: aconst_null
73: astore        8
75: aload_1
76: ldc           #63
78: ldc           #65
80: aload         8
82: ldc           #118
84: invokevirtual #128
87: ldc           #18
89: invokestatic  #19
92: goto          97
95: astore        9
97: new           #22
100: dup
101: invokespecial #23
104: ldc           #24
106: invokevirtual #25
109: iload_2
110: invokevirtual #29
113: ldc           #30
115: invokevirtual #25
118: iconst_1
119: invokevirtual #29
122: ldc           #24
124: invokevirtual #25
127: invokevirtual #27
130: iload_2
131: iconst_1
132: if_icmpne     139
135: iconst_1
136: goto          140
139: iconst_0
140: invokestatic  #31
143: new           #22
146: dup
147: invokespecial #23
150: ldc           #24
152: invokevirtual #25
155: aload_3
156: invokevirtual #25
159: ldc           #79
161: invokevirtual #25
164: invokevirtual #27
167: aload_3
168: ldc           #78
170: invokestatic  #28
173: new           #22
176: dup
177: invokespecial #23
180: ldc           #24
182: invokevirtual #25
185: aload         4
187: invokevirtual #25
190: ldc           #32
192: invokevirtual #25
195: invokevirtual #27
198: aload         4
200: ldc           #33
202: invokestatic  #28
205: new           #22
208: dup
209: invokespecial #23
212: ldc           #24
214: invokevirtual #25
217: aload         5
219: invokevirtual #25
222: ldc           #104
224: invokevirtual #25
227: invokevirtual #27
230: aload         5
232: ldc           #46
234: invokestatic  #28
237: new           #22
240: dup
241: invokespecial #23
244: ldc           #24
246: invokevirtual #25
249: aload         6
251: invokevirtual #25
254: ldc           #48
256: invokevirtual #25
259: invokevirtual #27
262: aload         6
264: ldc           #49
266: invokestatic  #28
269: new           #22
272: dup
273: invokespecial #23
276: ldc           #24
278: invokevirtual #25
281: aload         7
283: invokevirtual #25
286: ldc           #104
288: invokevirtual #25
291: invokevirtual #27
294: aload         7
296: ldc           #46
298: invokestatic  #28
301: return
Exception table:
from    to  target type
75    92    95   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0540
Start line: 854
End line: 0
Method source code: 
    public void test0540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0540");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setLongOptPrefix(" ");
        helpFormatter0.defaultDescPad = (short) 10;
        helpFormatter0.setLongOptSeparator("");
        java.lang.String str11 = helpFormatter0.getLongOptPrefix();
        int int12 = helpFormatter0.defaultLeftPad;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + " " + "'", str11, " ");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #129
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #35
36: istore_2
37: aload_1
38: ldc           #11
40: putfield      #36
43: aload_1
44: getfield      #42
47: astore_3
48: aload_1
49: ldc           #38
51: invokevirtual #43
54: aload_1
55: bipush        10
57: putfield      #44
60: aload_1
61: ldc           #11
63: invokevirtual #74
66: aload_1
67: invokevirtual #53
70: astore        4
72: aload_1
73: getfield      #40
76: istore        5
78: new           #22
81: dup
82: invokespecial #23
85: ldc           #24
87: invokevirtual #25
90: iload_2
91: invokevirtual #29
94: ldc           #30
96: invokevirtual #25
99: iconst_1
100: invokevirtual #29
103: ldc           #24
105: invokevirtual #25
108: invokevirtual #27
111: iload_2
112: iconst_1
113: if_icmpne     120
116: iconst_1
117: goto          121
120: iconst_0
121: invokestatic  #31
124: new           #22
127: dup
128: invokespecial #23
131: ldc           #24
133: invokevirtual #25
136: aload_3
137: invokevirtual #25
140: ldc           #48
142: invokevirtual #25
145: invokevirtual #27
148: aload_3
149: ldc           #49
151: invokestatic  #28
154: new           #22
157: dup
158: invokespecial #23
161: ldc           #24
163: invokevirtual #25
166: aload         4
168: invokevirtual #25
171: ldc           #75
173: invokevirtual #25
176: invokevirtual #27
179: aload         4
181: ldc           #38
183: invokestatic  #28
186: new           #22
189: dup
190: invokespecial #23
193: ldc           #24
195: invokevirtual #25
198: iload         5
200: invokevirtual #29
203: ldc           #30
205: invokevirtual #25
208: iconst_1
209: invokevirtual #29
212: ldc           #24
214: invokevirtual #25
217: invokevirtual #27
220: iload         5
222: iconst_1
223: if_icmpne     230
226: iconst_1
227: goto          231
230: iconst_0
231: invokestatic  #31
234: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0541
Start line: 873
End line: 0
Method source code: 
    public void test0541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0541");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.defaultDescPad = '4';
        helpFormatter0.setNewLine("");
        helpFormatter0.setLongOptPrefix(" ");
        java.lang.String str10 = helpFormatter0.getLongOptPrefix();
        helpFormatter0.setLongOptSeparator("hi!");
        java.lang.String str14 = helpFormatter0.rtrim("--");
        helpFormatter0.setArgName("usage:");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + " " + "'", str10, " ");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "--" + "'", str14, "--");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #130
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #35
36: istore_2
37: aload_1
38: ldc           #11
40: putfield      #36
43: aload_1
44: bipush        52
46: putfield      #44
49: aload_1
50: ldc           #11
52: invokevirtual #88
55: aload_1
56: ldc           #38
58: invokevirtual #43
61: aload_1
62: invokevirtual #53
65: astore_3
66: aload_1
67: ldc           #65
69: invokevirtual #74
72: aload_1
73: ldc           #63
75: invokevirtual #12
78: astore        4
80: aload_1
81: ldc           #108
83: invokevirtual #59
86: new           #22
89: dup
90: invokespecial #23
93: ldc           #24
95: invokevirtual #25
98: iload_2
99: invokevirtual #29
102: ldc           #30
104: invokevirtual #25
107: iconst_1
108: invokevirtual #29
111: ldc           #24
113: invokevirtual #25
116: invokevirtual #27
119: iload_2
120: iconst_1
121: if_icmpne     128
124: iconst_1
125: goto          129
128: iconst_0
129: invokestatic  #31
132: new           #22
135: dup
136: invokespecial #23
139: ldc           #24
141: invokevirtual #25
144: aload_3
145: invokevirtual #25
148: ldc           #75
150: invokevirtual #25
153: invokevirtual #27
156: aload_3
157: ldc           #38
159: invokestatic  #28
162: new           #22
165: dup
166: invokespecial #23
169: ldc           #24
171: invokevirtual #25
174: aload         4
176: invokevirtual #25
179: ldc           #62
181: invokevirtual #25
184: invokevirtual #27
187: aload         4
189: ldc           #63
191: invokestatic  #28
194: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0542
Start line: 892
End line: 0
Method source code: 
    public void test0542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0542");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.defaultDescPad = '4';
        helpFormatter0.setNewLine("");
        helpFormatter0.setSyntaxPrefix("");
        java.lang.String str10 = helpFormatter0.getSyntaxPrefix();
        helpFormatter0.setWidth((-2));
        helpFormatter0.defaultOptPrefix = "usage: ";
        helpFormatter0.defaultLeftPad = (byte) 100;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #131
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #35
36: istore_2
37: aload_1
38: ldc           #11
40: putfield      #36
43: aload_1
44: bipush        52
46: putfield      #44
49: aload_1
50: ldc           #11
52: invokevirtual #88
55: aload_1
56: ldc           #11
58: invokevirtual #39
61: aload_1
62: invokevirtual #89
65: astore_3
66: aload_1
67: bipush        -2
69: invokevirtual #90
72: aload_1
73: ldc           #46
75: putfield      #42
78: aload_1
79: bipush        100
81: putfield      #40
84: new           #22
87: dup
88: invokespecial #23
91: ldc           #24
93: invokevirtual #25
96: iload_2
97: invokevirtual #29
100: ldc           #30
102: invokevirtual #25
105: iconst_1
106: invokevirtual #29
109: ldc           #24
111: invokevirtual #25
114: invokevirtual #27
117: iload_2
118: iconst_1
119: if_icmpne     126
122: iconst_1
123: goto          127
126: iconst_0
127: invokestatic  #31
130: new           #22
133: dup
134: invokespecial #23
137: ldc           #24
139: invokevirtual #25
142: aload_3
143: invokevirtual #25
146: ldc           #26
148: invokevirtual #25
151: invokevirtual #27
154: aload_3
155: ldc           #11
157: invokestatic  #28
160: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0543
Start line: 910
End line: 0
Method source code: 
    public void test0543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0543");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.defaultLongOptPrefix = "hi!";
        helpFormatter0.defaultLongOptPrefix = "arg";
        helpFormatter0.setLongOptPrefix("                                                    ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #132
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: ldc           #65
35: putfield      #52
38: aload_1
39: ldc           #78
41: putfield      #52
44: aload_1
45: ldc           #77
47: invokevirtual #43
50: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0544
Start line: 920
End line: 0
Method source code: 
    public void test0544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0544");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setLeftPadding((int) (byte) 0);
        helpFormatter0.setLongOptPrefix("                                                                                                 ");
        int int9 = helpFormatter0.getDescPadding();
        java.lang.String str10 = helpFormatter0.getArgName();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 3 + "'", int9 == 3);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "arg" + "'", str10, "arg");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #133
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #35
36: istore_2
37: aload_1
38: ldc           #11
40: putfield      #36
43: aload_1
44: getfield      #42
47: astore_3
48: aload_1
49: iconst_0
50: invokevirtual #55
53: aload_1
54: ldc           #14
56: invokevirtual #43
59: aload_1
60: invokevirtual #13
63: istore        4
65: aload_1
66: invokevirtual #83
69: astore        5
71: new           #22
74: dup
75: invokespecial #23
78: ldc           #24
80: invokevirtual #25
83: iload_2
84: invokevirtual #29
87: ldc           #30
89: invokevirtual #25
92: iconst_1
93: invokevirtual #29
96: ldc           #24
98: invokevirtual #25
101: invokevirtual #27
104: iload_2
105: iconst_1
106: if_icmpne     113
109: iconst_1
110: goto          114
113: iconst_0
114: invokestatic  #31
117: new           #22
120: dup
121: invokespecial #23
124: ldc           #24
126: invokevirtual #25
129: aload_3
130: invokevirtual #25
133: ldc           #48
135: invokevirtual #25
138: invokevirtual #27
141: aload_3
142: ldc           #49
144: invokestatic  #28
147: new           #22
150: dup
151: invokespecial #23
154: ldc           #24
156: invokevirtual #25
159: iload         4
161: invokevirtual #29
164: ldc           #30
166: invokevirtual #25
169: iconst_3
170: invokevirtual #29
173: ldc           #24
175: invokevirtual #25
178: invokevirtual #27
181: iload         4
183: iconst_3
184: if_icmpne     191
187: iconst_1
188: goto          192
191: iconst_0
192: invokestatic  #31
195: new           #22
198: dup
199: invokespecial #23
202: ldc           #24
204: invokevirtual #25
207: aload         5
209: invokevirtual #25
212: ldc           #79
214: invokevirtual #25
217: invokevirtual #27
220: aload         5
222: ldc           #78
224: invokestatic  #28
227: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0545
Start line: 938
End line: 0
Method source code: 
    public void test0545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0545");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.defaultLongOptPrefix = "hi!";
        int int3 = helpFormatter0.getWidth();
        helpFormatter0.setLongOptPrefix("          ");
        java.lang.String str6 = helpFormatter0.getLongOptPrefix();
        helpFormatter0.defaultLongOptPrefix = "usage:";
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 74 + "'", int3 == 74);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "          " + "'", str6, "          ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #134
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: ldc           #65
35: putfield      #52
38: aload_1
39: invokevirtual #66
42: istore_2
43: aload_1
44: ldc           #67
46: invokevirtual #43
49: aload_1
50: invokevirtual #53
53: astore_3
54: aload_1
55: ldc           #108
57: putfield      #52
60: new           #22
63: dup
64: invokespecial #23
67: ldc           #24
69: invokevirtual #25
72: iload_2
73: invokevirtual #29
76: ldc           #30
78: invokevirtual #25
81: bipush        74
83: invokevirtual #29
86: ldc           #24
88: invokevirtual #25
91: invokevirtual #27
94: iload_2
95: bipush        74
97: if_icmpne     104
100: iconst_1
101: goto          105
104: iconst_0
105: invokestatic  #31
108: new           #22
111: dup
112: invokespecial #23
115: ldc           #24
117: invokevirtual #25
120: aload_3
121: invokevirtual #25
124: ldc           #135
126: invokevirtual #25
129: invokevirtual #27
132: aload_3
133: ldc           #67
135: invokestatic  #28
138: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0546
Start line: 952
End line: 0
Method source code: 
    public void test0546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0546");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        java.lang.String str3 = helpFormatter0.getLongOptSeparator();
        helpFormatter0.setWidth(0);
        helpFormatter0.setSyntaxPrefix("");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + " " + "'", str3, " ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #136
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: ldc           #11
35: invokevirtual #51
38: aload_1
39: invokevirtual #72
42: astore_2
43: aload_1
44: iconst_0
45: invokevirtual #90
48: aload_1
49: ldc           #11
51: invokevirtual #39
54: new           #22
57: dup
58: invokespecial #23
61: ldc           #24
63: invokevirtual #25
66: aload_2
67: invokevirtual #25
70: ldc           #75
72: invokevirtual #25
75: invokevirtual #27
78: aload_2
79: ldc           #38
81: invokestatic  #28
84: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0547
Start line: 964
End line: 0
Method source code: 
    public void test0547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0547");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str3 = helpFormatter0.getOptPrefix();
        java.lang.String str4 = helpFormatter0.getOptPrefix();
        helpFormatter0.setDescPadding((-2));
        java.io.PrintWriter printWriter7 = null;
        org.apache.commons.cli.Options options11 = null;
        try {
            helpFormatter0.printHelp(printWriter7, (int) ' ', "   ", "-", options11, (-2), 0, "", false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "--" + "'", str2, "--");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "-" + "'", str3, "-");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #137
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #35
36: istore_2
37: aload_1
38: getfield      #52
41: astore_3
42: aload_1
43: invokevirtual #73
46: astore        4
48: aload_1
49: invokevirtual #73
52: astore        5
54: aload_1
55: bipush        -2
57: invokevirtual #37
60: aconst_null
61: astore        6
63: aconst_null
64: astore        7
66: aload_1
67: aload         6
69: bipush        32
71: ldc           #113
73: ldc           #49
75: aload         7
77: bipush        -2
79: iconst_0
80: ldc           #11
82: iconst_0
83: invokevirtual #138
86: ldc           #18
88: invokestatic  #19
91: goto          96
94: astore        8
96: new           #22
99: dup
100: invokespecial #23
103: ldc           #24
105: invokevirtual #25
108: iload_2
109: invokevirtual #29
112: ldc           #30
114: invokevirtual #25
117: iconst_1
118: invokevirtual #29
121: ldc           #24
123: invokevirtual #25
126: invokevirtual #27
129: iload_2
130: iconst_1
131: if_icmpne     138
134: iconst_1
135: goto          139
138: iconst_0
139: invokestatic  #31
142: new           #22
145: dup
146: invokespecial #23
149: ldc           #24
151: invokevirtual #25
154: aload_3
155: invokevirtual #25
158: ldc           #62
160: invokevirtual #25
163: invokevirtual #27
166: aload_3
167: ldc           #63
169: invokestatic  #28
172: new           #22
175: dup
176: invokespecial #23
179: ldc           #24
181: invokevirtual #25
184: aload         4
186: invokevirtual #25
189: ldc           #48
191: invokevirtual #25
194: invokevirtual #27
197: aload         4
199: ldc           #49
201: invokestatic  #28
204: new           #22
207: dup
208: invokespecial #23
211: ldc           #24
213: invokevirtual #25
216: aload         5
218: invokevirtual #25
221: ldc           #48
223: invokevirtual #25
226: invokevirtual #27
229: aload         5
231: ldc           #49
233: invokestatic  #28
236: return
Exception table:
from    to  target type
66    91    94   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0548
Start line: 989
End line: 0
Method source code: 
    public void test0548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0548");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str6 = helpFormatter0.getNewLine();
        java.util.Comparator comparator7 = helpFormatter0.getOptionComparator();
        helpFormatter0.setDescPadding(3);
        int int10 = helpFormatter0.defaultLeftPad;
        org.apache.commons.cli.HelpFormatter helpFormatter11 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter11.setOptPrefix("");
        helpFormatter11.defaultLongOptPrefix = "";
        java.lang.String str16 = helpFormatter11.defaultOptPrefix;
        java.lang.String str17 = helpFormatter11.getLongOptPrefix();
        java.lang.String str18 = helpFormatter11.defaultOptPrefix;
        java.util.Comparator comparator19 = helpFormatter11.getOptionComparator();
        helpFormatter0.setOptionComparator(comparator19);
        java.io.PrintWriter printWriter21 = null;
        org.apache.commons.cli.Options options25 = null;
        try {
            helpFormatter0.printHelp(printWriter21, (int) '4', "                                ", "usage:", options25, (int) '4', (int) (byte) 1, "                                                    ");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\n" + "'", str6, "\n");
        org.junit.Assert.assertNotNull(comparator7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(comparator19);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #139
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: ldc           #11
35: invokevirtual #51
38: aload_1
39: ldc           #11
41: putfield      #52
44: aload_1
45: getfield      #52
48: astore_2
49: aload_1
50: invokevirtual #16
53: astore_3
54: aload_1
55: invokevirtual #58
58: astore        4
60: aload_1
61: iconst_3
62: invokevirtual #37
65: aload_1
66: getfield      #40
69: istore        5
71: new           #8
74: dup
75: invokespecial #9
78: astore        6
80: aload         6
82: ldc           #11
84: invokevirtual #51
87: aload         6
89: ldc           #11
91: putfield      #52
94: aload         6
96: getfield      #42
99: astore        7
101: aload         6
103: invokevirtual #53
106: astore        8
108: aload         6
110: getfield      #42
113: astore        9
115: aload         6
117: invokevirtual #58
120: astore        10
122: aload_1
123: aload         10
125: invokevirtual #99
128: aconst_null
129: astore        11
131: aconst_null
132: astore        12
134: aload_1
135: aload         11
137: bipush        52
139: ldc           #95
141: ldc           #108
143: aload         12
145: bipush        52
147: iconst_1
148: ldc           #77
150: invokevirtual #68
153: ldc           #18
155: invokestatic  #19
158: goto          163
161: astore        13
163: new           #22
166: dup
167: invokespecial #23
170: ldc           #24
172: invokevirtual #25
175: aload_2
176: invokevirtual #25
179: ldc           #26
181: invokevirtual #25
184: invokevirtual #27
187: aload_2
188: ldc           #11
190: invokestatic  #28
193: new           #22
196: dup
197: invokespecial #23
200: ldc           #24
202: invokevirtual #25
205: aload_3
206: invokevirtual #25
209: ldc           #32
211: invokevirtual #25
214: invokevirtual #27
217: aload_3
218: ldc           #33
220: invokestatic  #28
223: aload         4
225: invokestatic  #21
228: new           #22
231: dup
232: invokespecial #23
235: ldc           #24
237: invokevirtual #25
240: iload         5
242: invokevirtual #29
245: ldc           #30
247: invokevirtual #25
250: iconst_1
251: invokevirtual #29
254: ldc           #24
256: invokevirtual #25
259: invokevirtual #27
262: iload         5
264: iconst_1
265: if_icmpne     272
268: iconst_1
269: goto          273
272: iconst_0
273: invokestatic  #31
276: new           #22
279: dup
280: invokespecial #23
283: ldc           #24
285: invokevirtual #25
288: aload         7
290: invokevirtual #25
293: ldc           #26
295: invokevirtual #25
298: invokevirtual #27
301: aload         7
303: ldc           #11
305: invokestatic  #28
308: new           #22
311: dup
312: invokespecial #23
315: ldc           #24
317: invokevirtual #25
320: aload         8
322: invokevirtual #25
325: ldc           #26
327: invokevirtual #25
330: invokevirtual #27
333: aload         8
335: ldc           #11
337: invokestatic  #28
340: new           #22
343: dup
344: invokespecial #23
347: ldc           #24
349: invokevirtual #25
352: aload         9
354: invokevirtual #25
357: ldc           #26
359: invokevirtual #25
362: invokevirtual #27
365: aload         9
367: ldc           #11
369: invokestatic  #28
372: aload         10
374: invokestatic  #21
377: return
Exception table:
from    to  target type
134   158   161   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0549
Start line: 1028
End line: 0
Method source code: 
    public void test0549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0549");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setLongOptPrefix(" ");
        helpFormatter0.defaultDescPad = (short) 10;
        helpFormatter0.setLongOptSeparator("");
        java.lang.String str11 = helpFormatter0.getLongOptPrefix();
        java.lang.String str12 = helpFormatter0.defaultSyntaxPrefix;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + " " + "'", str11, " ");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "usage: " + "'", str12, "usage: ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #140
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #35
36: istore_2
37: aload_1
38: ldc           #11
40: putfield      #36
43: aload_1
44: getfield      #42
47: astore_3
48: aload_1
49: ldc           #38
51: invokevirtual #43
54: aload_1
55: bipush        10
57: putfield      #44
60: aload_1
61: ldc           #11
63: invokevirtual #74
66: aload_1
67: invokevirtual #53
70: astore        4
72: aload_1
73: getfield      #45
76: astore        5
78: new           #22
81: dup
82: invokespecial #23
85: ldc           #24
87: invokevirtual #25
90: iload_2
91: invokevirtual #29
94: ldc           #30
96: invokevirtual #25
99: iconst_1
100: invokevirtual #29
103: ldc           #24
105: invokevirtual #25
108: invokevirtual #27
111: iload_2
112: iconst_1
113: if_icmpne     120
116: iconst_1
117: goto          121
120: iconst_0
121: invokestatic  #31
124: new           #22
127: dup
128: invokespecial #23
131: ldc           #24
133: invokevirtual #25
136: aload_3
137: invokevirtual #25
140: ldc           #48
142: invokevirtual #25
145: invokevirtual #27
148: aload_3
149: ldc           #49
151: invokestatic  #28
154: new           #22
157: dup
158: invokespecial #23
161: ldc           #24
163: invokevirtual #25
166: aload         4
168: invokevirtual #25
171: ldc           #75
173: invokevirtual #25
176: invokevirtual #27
179: aload         4
181: ldc           #38
183: invokestatic  #28
186: new           #22
189: dup
190: invokespecial #23
193: ldc           #24
195: invokevirtual #25
198: aload         5
200: invokevirtual #25
203: ldc           #104
205: invokevirtual #25
208: invokevirtual #27
211: aload         5
213: ldc           #46
215: invokestatic  #28
218: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0550
Start line: 1047
End line: 0
Method source code: 
    public void test0550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0550");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setLongOptPrefix(" ");
        helpFormatter0.defaultDescPad = (short) 10;
        java.lang.String str9 = helpFormatter0.defaultArgName;
        helpFormatter0.setSyntaxPrefix("");
        helpFormatter0.defaultOptPrefix = "                                                                                                 ";
        helpFormatter0.setLongOptPrefix("          ");
        helpFormatter0.defaultArgName = "\n";
        helpFormatter0.setArgName("");
        org.apache.commons.cli.HelpFormatter helpFormatter20 = new org.apache.commons.cli.HelpFormatter();
        int int21 = helpFormatter20.getLeftPadding();
        helpFormatter20.defaultNewLine = "";
        java.lang.String str24 = helpFormatter20.defaultOptPrefix;
        helpFormatter20.setLongOptPrefix(" ");
        helpFormatter20.defaultDescPad = (short) 10;
        java.lang.String str29 = helpFormatter20.defaultArgName;
        java.util.Comparator comparator30 = helpFormatter20.optionComparator;
        helpFormatter0.setOptionComparator(comparator30);
        java.lang.String str32 = helpFormatter0.getOptPrefix();
        helpFormatter0.setNewLine("                                ");
        java.lang.String str35 = helpFormatter0.getLongOptPrefix();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "arg" + "'", str9, "arg");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "-" + "'", str24, "-");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "arg" + "'", str29, "arg");
        org.junit.Assert.assertNotNull(comparator30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "                                                                                                 " + "'", str32, "                                                                                                 ");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "          " + "'", str35, "          ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #141
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #35
36: istore_2
37: aload_1
38: ldc           #11
40: putfield      #36
43: aload_1
44: getfield      #42
47: astore_3
48: aload_1
49: ldc           #38
51: invokevirtual #43
54: aload_1
55: bipush        10
57: putfield      #44
60: aload_1
61: getfield      #15
64: astore        4
66: aload_1
67: ldc           #11
69: invokevirtual #39
72: aload_1
73: ldc           #14
75: putfield      #42
78: aload_1
79: ldc           #67
81: invokevirtual #43
84: aload_1
85: ldc           #33
87: putfield      #15
90: aload_1
91: ldc           #11
93: invokevirtual #59
96: new           #8
99: dup
100: invokespecial #9
103: astore        5
105: aload         5
107: invokevirtual #35
110: istore        6
112: aload         5
114: ldc           #11
116: putfield      #36
119: aload         5
121: getfield      #42
124: astore        7
126: aload         5
128: ldc           #38
130: invokevirtual #43
133: aload         5
135: bipush        10
137: putfield      #44
140: aload         5
142: getfield      #15
145: astore        8
147: aload         5
149: getfield      #10
152: astore        9
154: aload_1
155: aload         9
157: invokevirtual #99
160: aload_1
161: invokevirtual #73
164: astore        10
166: aload_1
167: ldc           #95
169: invokevirtual #88
172: aload_1
173: invokevirtual #53
176: astore        11
178: new           #22
181: dup
182: invokespecial #23
185: ldc           #24
187: invokevirtual #25
190: iload_2
191: invokevirtual #29
194: ldc           #30
196: invokevirtual #25
199: iconst_1
200: invokevirtual #29
203: ldc           #24
205: invokevirtual #25
208: invokevirtual #27
211: iload_2
212: iconst_1
213: if_icmpne     220
216: iconst_1
217: goto          221
220: iconst_0
221: invokestatic  #31
224: new           #22
227: dup
228: invokespecial #23
231: ldc           #24
233: invokevirtual #25
236: aload_3
237: invokevirtual #25
240: ldc           #48
242: invokevirtual #25
245: invokevirtual #27
248: aload_3
249: ldc           #49
251: invokestatic  #28
254: new           #22
257: dup
258: invokespecial #23
261: ldc           #24
263: invokevirtual #25
266: aload         4
268: invokevirtual #25
271: ldc           #79
273: invokevirtual #25
276: invokevirtual #27
279: aload         4
281: ldc           #78
283: invokestatic  #28
286: new           #22
289: dup
290: invokespecial #23
293: ldc           #24
295: invokevirtual #25
298: iload         6
300: invokevirtual #29
303: ldc           #30
305: invokevirtual #25
308: iconst_1
309: invokevirtual #29
312: ldc           #24
314: invokevirtual #25
317: invokevirtual #27
320: iload         6
322: iconst_1
323: if_icmpne     330
326: iconst_1
327: goto          331
330: iconst_0
331: invokestatic  #31
334: new           #22
337: dup
338: invokespecial #23
341: ldc           #24
343: invokevirtual #25
346: aload         7
348: invokevirtual #25
351: ldc           #48
353: invokevirtual #25
356: invokevirtual #27
359: aload         7
361: ldc           #49
363: invokestatic  #28
366: new           #22
369: dup
370: invokespecial #23
373: ldc           #24
375: invokevirtual #25
378: aload         8
380: invokevirtual #25
383: ldc           #79
385: invokevirtual #25
388: invokevirtual #27
391: aload         8
393: ldc           #78
395: invokestatic  #28
398: aload         9
400: invokestatic  #21
403: new           #22
406: dup
407: invokespecial #23
410: ldc           #24
412: invokevirtual #25
415: aload         10
417: invokevirtual #25
420: ldc           #142
422: invokevirtual #25
425: invokevirtual #27
428: aload         10
430: ldc           #14
432: invokestatic  #28
435: new           #22
438: dup
439: invokespecial #23
442: ldc           #24
444: invokevirtual #25
447: aload         11
449: invokevirtual #25
452: ldc           #135
454: invokevirtual #25
457: invokevirtual #27
460: aload         11
462: ldc           #67
464: invokestatic  #28
467: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0551
Start line: 1086
End line: 0
Method source code: 
    public void test0551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0551");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        java.lang.String str3 = helpFormatter0.getLongOptSeparator();
        helpFormatter0.setWidth(0);
        helpFormatter0.defaultNewLine = "          ";
        java.lang.String str9 = helpFormatter0.createPadding(0);
        helpFormatter0.setDescPadding(74);
        helpFormatter0.setDescPadding(1);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + " " + "'", str3, " ");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #143
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: ldc           #11
35: invokevirtual #51
38: aload_1
39: invokevirtual #72
42: astore_2
43: aload_1
44: iconst_0
45: invokevirtual #90
48: aload_1
49: ldc           #67
51: putfield      #36
54: aload_1
55: iconst_0
56: invokevirtual #93
59: astore_3
60: aload_1
61: bipush        74
63: invokevirtual #37
66: aload_1
67: iconst_1
68: invokevirtual #37
71: new           #22
74: dup
75: invokespecial #23
78: ldc           #24
80: invokevirtual #25
83: aload_2
84: invokevirtual #25
87: ldc           #75
89: invokevirtual #25
92: invokevirtual #27
95: aload_2
96: ldc           #38
98: invokestatic  #28
101: new           #22
104: dup
105: invokespecial #23
108: ldc           #24
110: invokevirtual #25
113: aload_3
114: invokevirtual #25
117: ldc           #26
119: invokevirtual #25
122: invokevirtual #27
125: aload_3
126: ldc           #11
128: invokestatic  #28
131: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0552
Start line: 1102
End line: 0
Method source code: 
    public void test0552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0552");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        java.lang.String str6 = helpFormatter0.getLongOptSeparator();
        java.lang.String str7 = helpFormatter0.getLongOptSeparator();
        java.lang.String str9 = helpFormatter0.createPadding((int) (byte) 1);
        java.lang.String str10 = helpFormatter0.defaultOptPrefix;
        java.util.Comparator comparator11 = helpFormatter0.optionComparator;
        java.lang.String str12 = helpFormatter0.defaultLongOptPrefix;
        int int13 = helpFormatter0.getWidth();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + " " + "'", str6, " ");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + " " + "'", str7, " ");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + " " + "'", str9, " ");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "-" + "'", str10, "-");
        org.junit.Assert.assertNotNull(comparator11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "--" + "'", str12, "--");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 74 + "'", int13 == 74);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #144
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #35
36: istore_2
37: aload_1
38: ldc           #11
40: putfield      #36
43: aload_1
44: bipush        10
46: invokevirtual #37
49: aload_1
50: invokevirtual #72
53: astore_3
54: aload_1
55: invokevirtual #72
58: astore        4
60: aload_1
61: iconst_1
62: invokevirtual #93
65: astore        5
67: aload_1
68: getfield      #42
71: astore        6
73: aload_1
74: getfield      #10
77: astore        7
79: aload_1
80: getfield      #52
83: astore        8
85: aload_1
86: invokevirtual #66
89: istore        9
91: new           #22
94: dup
95: invokespecial #23
98: ldc           #24
100: invokevirtual #25
103: iload_2
104: invokevirtual #29
107: ldc           #30
109: invokevirtual #25
112: iconst_1
113: invokevirtual #29
116: ldc           #24
118: invokevirtual #25
121: invokevirtual #27
124: iload_2
125: iconst_1
126: if_icmpne     133
129: iconst_1
130: goto          134
133: iconst_0
134: invokestatic  #31
137: new           #22
140: dup
141: invokespecial #23
144: ldc           #24
146: invokevirtual #25
149: aload_3
150: invokevirtual #25
153: ldc           #75
155: invokevirtual #25
158: invokevirtual #27
161: aload_3
162: ldc           #38
164: invokestatic  #28
167: new           #22
170: dup
171: invokespecial #23
174: ldc           #24
176: invokevirtual #25
179: aload         4
181: invokevirtual #25
184: ldc           #75
186: invokevirtual #25
189: invokevirtual #27
192: aload         4
194: ldc           #38
196: invokestatic  #28
199: new           #22
202: dup
203: invokespecial #23
206: ldc           #24
208: invokevirtual #25
211: aload         5
213: invokevirtual #25
216: ldc           #75
218: invokevirtual #25
221: invokevirtual #27
224: aload         5
226: ldc           #38
228: invokestatic  #28
231: new           #22
234: dup
235: invokespecial #23
238: ldc           #24
240: invokevirtual #25
243: aload         6
245: invokevirtual #25
248: ldc           #48
250: invokevirtual #25
253: invokevirtual #27
256: aload         6
258: ldc           #49
260: invokestatic  #28
263: aload         7
265: invokestatic  #21
268: new           #22
271: dup
272: invokespecial #23
275: ldc           #24
277: invokevirtual #25
280: aload         8
282: invokevirtual #25
285: ldc           #62
287: invokevirtual #25
290: invokevirtual #27
293: aload         8
295: ldc           #63
297: invokestatic  #28
300: new           #22
303: dup
304: invokespecial #23
307: ldc           #24
309: invokevirtual #25
312: iload         9
314: invokevirtual #29
317: ldc           #30
319: invokevirtual #25
322: bipush        74
324: invokevirtual #29
327: ldc           #24
329: invokevirtual #25
332: invokevirtual #27
335: iload         9
337: bipush        74
339: if_icmpne     346
342: iconst_1
343: goto          347
346: iconst_0
347: invokestatic  #31
350: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0553
Start line: 1127
End line: 0
Method source code: 
    public void test0553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0553");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        org.apache.commons.cli.Options options8 = null;
        try {
            helpFormatter0.printHelp("                                ", "-", options8, "   ");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #145
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #35
36: istore_2
37: aload_1
38: ldc           #11
40: putfield      #36
43: aload_1
44: bipush        10
46: invokevirtual #37
49: aconst_null
50: astore_3
51: aload_1
52: ldc           #95
54: ldc           #49
56: aload_3
57: ldc           #113
59: invokevirtual #128
62: ldc           #18
64: invokestatic  #19
67: goto          72
70: astore        4
72: new           #22
75: dup
76: invokespecial #23
79: ldc           #24
81: invokevirtual #25
84: iload_2
85: invokevirtual #29
88: ldc           #30
90: invokevirtual #25
93: iconst_1
94: invokevirtual #29
97: ldc           #24
99: invokevirtual #25
102: invokevirtual #27
105: iload_2
106: iconst_1
107: if_icmpne     114
110: iconst_1
111: goto          115
114: iconst_0
115: invokestatic  #31
118: return
Exception table:
from    to  target type
51    67    70   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0554
Start line: 1146
End line: 0
Method source code: 
    public void test0554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0554");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        java.lang.String str6 = helpFormatter0.defaultNewLine;
        java.util.Comparator comparator7 = null;
        helpFormatter0.optionComparator = comparator7;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #146
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #35
36: istore_2
37: aload_1
38: ldc           #11
40: putfield      #36
43: aload_1
44: bipush        10
46: invokevirtual #37
49: aload_1
50: getfield      #36
53: astore_3
54: aconst_null
55: astore        4
57: aload_1
58: aload         4
60: putfield      #10
63: new           #22
66: dup
67: invokespecial #23
70: ldc           #24
72: invokevirtual #25
75: iload_2
76: invokevirtual #29
79: ldc           #30
81: invokevirtual #25
84: iconst_1
85: invokevirtual #29
88: ldc           #24
90: invokevirtual #25
93: invokevirtual #27
96: iload_2
97: iconst_1
98: if_icmpne     105
101: iconst_1
102: goto          106
105: iconst_0
106: invokestatic  #31
109: new           #22
112: dup
113: invokespecial #23
116: ldc           #24
118: invokevirtual #25
121: aload_3
122: invokevirtual #25
125: ldc           #26
127: invokevirtual #25
130: invokevirtual #27
133: aload_3
134: ldc           #11
136: invokestatic  #28
139: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0555
Start line: 1161
End line: 0
Method source code: 
    public void test0555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0555");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str6 = helpFormatter0.getNewLine();
        java.lang.String str7 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setDescPadding(74);
        java.lang.String str10 = helpFormatter0.getLongOptSeparator();
        java.lang.String str11 = helpFormatter0.defaultOptPrefix;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\n" + "'", str6, "\n");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + " " + "'", str10, " ");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #147
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: ldc           #11
35: invokevirtual #51
38: aload_1
39: ldc           #11
41: putfield      #52
44: aload_1
45: getfield      #52
48: astore_2
49: aload_1
50: invokevirtual #16
53: astore_3
54: aload_1
55: getfield      #42
58: astore        4
60: aload_1
61: bipush        74
63: invokevirtual #37
66: aload_1
67: invokevirtual #72
70: astore        5
72: aload_1
73: getfield      #42
76: astore        6
78: new           #22
81: dup
82: invokespecial #23
85: ldc           #24
87: invokevirtual #25
90: aload_2
91: invokevirtual #25
94: ldc           #26
96: invokevirtual #25
99: invokevirtual #27
102: aload_2
103: ldc           #11
105: invokestatic  #28
108: new           #22
111: dup
112: invokespecial #23
115: ldc           #24
117: invokevirtual #25
120: aload_3
121: invokevirtual #25
124: ldc           #32
126: invokevirtual #25
129: invokevirtual #27
132: aload_3
133: ldc           #33
135: invokestatic  #28
138: new           #22
141: dup
142: invokespecial #23
145: ldc           #24
147: invokevirtual #25
150: aload         4
152: invokevirtual #25
155: ldc           #26
157: invokevirtual #25
160: invokevirtual #27
163: aload         4
165: ldc           #11
167: invokestatic  #28
170: new           #22
173: dup
174: invokespecial #23
177: ldc           #24
179: invokevirtual #25
182: aload         5
184: invokevirtual #25
187: ldc           #75
189: invokevirtual #25
192: invokevirtual #27
195: aload         5
197: ldc           #38
199: invokestatic  #28
202: new           #22
205: dup
206: invokespecial #23
209: ldc           #24
211: invokevirtual #25
214: aload         6
216: invokevirtual #25
219: ldc           #26
221: invokevirtual #25
224: invokevirtual #27
227: aload         6
229: ldc           #11
231: invokestatic  #28
234: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0556
Start line: 1181
End line: 0
Method source code: 
    public void test0556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0556");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        int int4 = helpFormatter0.defaultWidth;
        java.util.Comparator comparator5 = helpFormatter0.getOptionComparator();
        java.lang.String str6 = helpFormatter0.getLongOptSeparator();
        helpFormatter0.setArgName("hi!");
        int int9 = helpFormatter0.getLeftPadding();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 74 + "'", int4 == 74);
        org.junit.Assert.assertNotNull(comparator5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + " " + "'", str6, " ");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #148
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #35
36: istore_2
37: aload_1
38: ldc           #11
40: putfield      #36
43: aload_1
44: getfield      #57
47: istore_3
48: aload_1
49: invokevirtual #58
52: astore        4
54: aload_1
55: invokevirtual #72
58: astore        5
60: aload_1
61: ldc           #65
63: invokevirtual #59
66: aload_1
67: invokevirtual #35
70: istore        6
72: new           #22
75: dup
76: invokespecial #23
79: ldc           #24
81: invokevirtual #25
84: iload_2
85: invokevirtual #29
88: ldc           #30
90: invokevirtual #25
93: iconst_1
94: invokevirtual #29
97: ldc           #24
99: invokevirtual #25
102: invokevirtual #27
105: iload_2
106: iconst_1
107: if_icmpne     114
110: iconst_1
111: goto          115
114: iconst_0
115: invokestatic  #31
118: new           #22
121: dup
122: invokespecial #23
125: ldc           #24
127: invokevirtual #25
130: iload_3
131: invokevirtual #29
134: ldc           #30
136: invokevirtual #25
139: bipush        74
141: invokevirtual #29
144: ldc           #24
146: invokevirtual #25
149: invokevirtual #27
152: iload_3
153: bipush        74
155: if_icmpne     162
158: iconst_1
159: goto          163
162: iconst_0
163: invokestatic  #31
166: aload         4
168: invokestatic  #21
171: new           #22
174: dup
175: invokespecial #23
178: ldc           #24
180: invokevirtual #25
183: aload         5
185: invokevirtual #25
188: ldc           #75
190: invokevirtual #25
193: invokevirtual #27
196: aload         5
198: ldc           #38
200: invokestatic  #28
203: new           #22
206: dup
207: invokespecial #23
210: ldc           #24
212: invokevirtual #25
215: iload         6
217: invokevirtual #29
220: ldc           #30
222: invokevirtual #25
225: iconst_1
226: invokevirtual #29
229: ldc           #24
231: invokevirtual #25
234: invokevirtual #27
237: iload         6
239: iconst_1
240: if_icmpne     247
243: iconst_1
244: goto          248
247: iconst_0
248: invokestatic  #31
251: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0557
Start line: 1200
End line: 0
Method source code: 
    public void test0557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0557");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.defaultDescPad = '4';
        helpFormatter0.setNewLine("");
        helpFormatter0.setSyntaxPrefix("");
        java.lang.String str10 = helpFormatter0.getSyntaxPrefix();
        helpFormatter0.setWidth((-2));
        java.lang.String str13 = helpFormatter0.defaultNewLine;
        java.lang.String str14 = helpFormatter0.getArgName();
        org.apache.commons.cli.Options options18 = null;
        try {
            helpFormatter0.printHelp((-1), "usage:", "--", options18, " ");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "arg" + "'", str14, "arg");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #149
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #35
36: istore_2
37: aload_1
38: ldc           #11
40: putfield      #36
43: aload_1
44: bipush        52
46: putfield      #44
49: aload_1
50: ldc           #11
52: invokevirtual #88
55: aload_1
56: ldc           #11
58: invokevirtual #39
61: aload_1
62: invokevirtual #89
65: astore_3
66: aload_1
67: bipush        -2
69: invokevirtual #90
72: aload_1
73: getfield      #36
76: astore        4
78: aload_1
79: invokevirtual #83
82: astore        5
84: aconst_null
85: astore        6
87: aload_1
88: iconst_m1
89: ldc           #108
91: ldc           #63
93: aload         6
95: ldc           #38
97: invokevirtual #150
100: ldc           #18
102: invokestatic  #19
105: goto          110
108: astore        7
110: new           #22
113: dup
114: invokespecial #23
117: ldc           #24
119: invokevirtual #25
122: iload_2
123: invokevirtual #29
126: ldc           #30
128: invokevirtual #25
131: iconst_1
132: invokevirtual #29
135: ldc           #24
137: invokevirtual #25
140: invokevirtual #27
143: iload_2
144: iconst_1
145: if_icmpne     152
148: iconst_1
149: goto          153
152: iconst_0
153: invokestatic  #31
156: new           #22
159: dup
160: invokespecial #23
163: ldc           #24
165: invokevirtual #25
168: aload_3
169: invokevirtual #25
172: ldc           #26
174: invokevirtual #25
177: invokevirtual #27
180: aload_3
181: ldc           #11
183: invokestatic  #28
186: new           #22
189: dup
190: invokespecial #23
193: ldc           #24
195: invokevirtual #25
198: aload         4
200: invokevirtual #25
203: ldc           #26
205: invokevirtual #25
208: invokevirtual #27
211: aload         4
213: ldc           #11
215: invokestatic  #28
218: new           #22
221: dup
222: invokespecial #23
225: ldc           #24
227: invokevirtual #25
230: aload         5
232: invokevirtual #25
235: ldc           #79
237: invokevirtual #25
240: invokevirtual #27
243: aload         5
245: ldc           #78
247: invokestatic  #28
250: return
Exception table:
from    to  target type
87   105   108   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0558
Start line: 1228
End line: 0
Method source code: 
    public void test0558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0558");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        int int6 = helpFormatter0.getLeftPadding();
        helpFormatter0.setLongOptSeparator("\n");
        java.util.Comparator comparator9 = helpFormatter0.getOptionComparator();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(comparator9);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #151
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: ldc           #11
35: invokevirtual #51
38: aload_1
39: ldc           #11
41: putfield      #52
44: aload_1
45: getfield      #52
48: astore_2
49: aload_1
50: invokevirtual #35
53: istore_3
54: aload_1
55: ldc           #33
57: invokevirtual #74
60: aload_1
61: invokevirtual #58
64: astore        4
66: new           #22
69: dup
70: invokespecial #23
73: ldc           #24
75: invokevirtual #25
78: aload_2
79: invokevirtual #25
82: ldc           #26
84: invokevirtual #25
87: invokevirtual #27
90: aload_2
91: ldc           #11
93: invokestatic  #28
96: new           #22
99: dup
100: invokespecial #23
103: ldc           #24
105: invokevirtual #25
108: iload_3
109: invokevirtual #29
112: ldc           #30
114: invokevirtual #25
117: iconst_1
118: invokevirtual #29
121: ldc           #24
123: invokevirtual #25
126: invokevirtual #27
129: iload_3
130: iconst_1
131: if_icmpne     138
134: iconst_1
135: goto          139
138: iconst_0
139: invokestatic  #31
142: aload         4
144: invokestatic  #21
147: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0559
Start line: 1244
End line: 0
Method source code: 
    public void test0559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0559");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.getArgName();
        java.lang.String str5 = helpFormatter0.getLongOptSeparator();
        helpFormatter0.setArgName("                                                    ");
        helpFormatter0.setLongOptSeparator("arg");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "arg" + "'", str4, "arg");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + " " + "'", str5, " ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #152
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #35
36: istore_2
37: aload_1
38: ldc           #11
40: putfield      #36
43: aload_1
44: invokevirtual #83
47: astore_3
48: aload_1
49: invokevirtual #72
52: astore        4
54: aload_1
55: ldc           #77
57: invokevirtual #59
60: aload_1
61: ldc           #78
63: invokevirtual #74
66: new           #22
69: dup
70: invokespecial #23
73: ldc           #24
75: invokevirtual #25
78: iload_2
79: invokevirtual #29
82: ldc           #30
84: invokevirtual #25
87: iconst_1
88: invokevirtual #29
91: ldc           #24
93: invokevirtual #25
96: invokevirtual #27
99: iload_2
100: iconst_1
101: if_icmpne     108
104: iconst_1
105: goto          109
108: iconst_0
109: invokestatic  #31
112: new           #22
115: dup
116: invokespecial #23
119: ldc           #24
121: invokevirtual #25
124: aload_3
125: invokevirtual #25
128: ldc           #79
130: invokevirtual #25
133: invokevirtual #27
136: aload_3
137: ldc           #78
139: invokestatic  #28
142: new           #22
145: dup
146: invokespecial #23
149: ldc           #24
151: invokevirtual #25
154: aload         4
156: invokevirtual #25
159: ldc           #75
161: invokevirtual #25
164: invokevirtual #27
167: aload         4
169: ldc           #38
171: invokestatic  #28
174: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0560
Start line: 1260
End line: 0
Method source code: 
    public void test0560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0560");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        int int9 = helpFormatter0.findWrapPos(" ", (int) (byte) 10, (int) '4');
        helpFormatter0.defaultOptPrefix = "arg";
        java.lang.Class<?> wildcardClass12 = helpFormatter0.getClass();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wildcardClass12);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #153
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: ldc           #11
35: invokevirtual #51
38: aload_1
39: ldc           #11
41: putfield      #52
44: aload_1
45: getfield      #52
48: astore_2
49: aload_1
50: ldc           #38
52: bipush        10
54: bipush        52
56: invokevirtual #61
59: istore_3
60: aload_1
61: ldc           #78
63: putfield      #42
66: aload_1
67: invokevirtual #154
70: astore        4
72: new           #22
75: dup
76: invokespecial #23
79: ldc           #24
81: invokevirtual #25
84: aload_2
85: invokevirtual #25
88: ldc           #26
90: invokevirtual #25
93: invokevirtual #27
96: aload_2
97: ldc           #11
99: invokestatic  #28
102: new           #22
105: dup
106: invokespecial #23
109: ldc           #24
111: invokevirtual #25
114: iload_3
115: invokevirtual #29
118: ldc           #30
120: invokevirtual #25
123: iconst_m1
124: invokevirtual #29
127: ldc           #24
129: invokevirtual #25
132: invokevirtual #27
135: iload_3
136: iconst_m1
137: if_icmpne     144
140: iconst_1
141: goto          145
144: iconst_0
145: invokestatic  #31
148: aload         4
150: invokestatic  #21
153: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0561
Start line: 1276
End line: 0
Method source code: 
    public void test0561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0561");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.lang.String str1 = helpFormatter0.defaultSyntaxPrefix;
        helpFormatter0.setOptPrefix(" ");
        int int4 = helpFormatter0.defaultDescPad;
        int int8 = helpFormatter0.findWrapPos("arg", (int) (byte) -1, 1);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "usage: " + "'", str1, "usage: ");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 3 + "'", int4 == 3);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #155
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: getfield      #45
36: astore_2
37: aload_1
38: ldc           #38
40: invokevirtual #51
43: aload_1
44: getfield      #44
47: istore_3
48: aload_1
49: ldc           #78
51: iconst_m1
52: iconst_1
53: invokevirtual #61
56: istore        4
58: new           #22
61: dup
62: invokespecial #23
65: ldc           #24
67: invokevirtual #25
70: aload_2
71: invokevirtual #25
74: ldc           #104
76: invokevirtual #25
79: invokevirtual #27
82: aload_2
83: ldc           #46
85: invokestatic  #28
88: new           #22
91: dup
92: invokespecial #23
95: ldc           #24
97: invokevirtual #25
100: iload_3
101: invokevirtual #29
104: ldc           #30
106: invokevirtual #25
109: iconst_3
110: invokevirtual #29
113: ldc           #24
115: invokevirtual #25
118: invokevirtual #27
121: iload_3
122: iconst_3
123: if_icmpne     130
126: iconst_1
127: goto          131
130: iconst_0
131: invokestatic  #31
134: new           #22
137: dup
138: invokespecial #23
141: ldc           #24
143: invokevirtual #25
146: iload         4
148: invokevirtual #29
151: ldc           #30
153: invokevirtual #25
156: iconst_0
157: invokevirtual #29
160: ldc           #24
162: invokevirtual #25
165: invokevirtual #27
168: iload         4
170: ifne          177
173: iconst_1
174: goto          178
177: iconst_0
178: invokestatic  #31
181: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0562
Start line: 1290
End line: 0
Method source code: 
    public void test0562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0562");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        helpFormatter0.setSyntaxPrefix(" ");
        int int8 = helpFormatter0.defaultLeftPad;
        helpFormatter0.setLeftPadding(1);
        org.apache.commons.cli.Options options14 = null;
        try {
            helpFormatter0.printHelp((-2), "          ", "   ", options14, "                                                                                                    ");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #156
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #35
36: istore_2
37: aload_1
38: ldc           #11
40: putfield      #36
43: aload_1
44: bipush        10
46: invokevirtual #37
49: aload_1
50: ldc           #38
52: invokevirtual #39
55: aload_1
56: getfield      #40
59: istore_3
60: aload_1
61: iconst_1
62: invokevirtual #55
65: aconst_null
66: astore        4
68: aload_1
69: bipush        -2
71: ldc           #67
73: ldc           #113
75: aload         4
77: ldc           #118
79: invokevirtual #150
82: ldc           #157
84: invokestatic  #19
87: goto          92
90: astore        5
92: new           #22
95: dup
96: invokespecial #23
99: ldc           #24
101: invokevirtual #25
104: iload_2
105: invokevirtual #29
108: ldc           #30
110: invokevirtual #25
113: iconst_1
114: invokevirtual #29
117: ldc           #24
119: invokevirtual #25
122: invokevirtual #27
125: iload_2
126: iconst_1
127: if_icmpne     134
130: iconst_1
131: goto          135
134: iconst_0
135: invokestatic  #31
138: new           #22
141: dup
142: invokespecial #23
145: ldc           #24
147: invokevirtual #25
150: iload_3
151: invokevirtual #29
154: ldc           #30
156: invokevirtual #25
159: iconst_1
160: invokevirtual #29
163: ldc           #24
165: invokevirtual #25
168: invokevirtual #27
171: iload_3
172: iconst_1
173: if_icmpne     180
176: iconst_1
177: goto          181
180: iconst_0
181: invokestatic  #31
184: return
Exception table:
from    to  target type
68    87    90   Class java/lang/StringIndexOutOfBoundsException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0563
Start line: 1313
End line: 0
Method source code: 
    public void test0563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0563");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.setSyntaxPrefix("\n");
        int int5 = helpFormatter0.defaultWidth;
        java.lang.String str6 = helpFormatter0.getSyntaxPrefix();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 74 + "'", int5 == 74);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\n" + "'", str6, "\n");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #159
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: ldc           #11
35: invokevirtual #51
38: aload_1
39: ldc           #33
41: invokevirtual #39
44: aload_1
45: getfield      #57
48: istore_2
49: aload_1
50: invokevirtual #89
53: astore_3
54: new           #22
57: dup
58: invokespecial #23
61: ldc           #24
63: invokevirtual #25
66: iload_2
67: invokevirtual #29
70: ldc           #30
72: invokevirtual #25
75: bipush        74
77: invokevirtual #29
80: ldc           #24
82: invokevirtual #25
85: invokevirtual #27
88: iload_2
89: bipush        74
91: if_icmpne     98
94: iconst_1
95: goto          99
98: iconst_0
99: invokestatic  #31
102: new           #22
105: dup
106: invokespecial #23
109: ldc           #24
111: invokevirtual #25
114: aload_3
115: invokevirtual #25
118: ldc           #32
120: invokevirtual #25
123: invokevirtual #27
126: aload_3
127: ldc           #33
129: invokestatic  #28
132: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0564
Start line: 1326
End line: 0
Method source code: 
    public void test0564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0564");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.lang.String str1 = helpFormatter0.defaultSyntaxPrefix;
        java.util.Comparator comparator2 = helpFormatter0.optionComparator;
        java.lang.String str3 = helpFormatter0.defaultArgName;
        java.lang.String str5 = helpFormatter0.createPadding(52);
        int int6 = helpFormatter0.getLeftPadding();
        java.lang.String str7 = helpFormatter0.defaultSyntaxPrefix;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "usage: " + "'", str1, "usage: ");
        org.junit.Assert.assertNotNull(comparator2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "arg" + "'", str3, "arg");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "                                                    " + "'", str5, "                                                    ");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "usage: " + "'", str7, "usage: ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #160
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: getfield      #45
36: astore_2
37: aload_1
38: getfield      #10
41: astore_3
42: aload_1
43: getfield      #15
46: astore        4
48: aload_1
49: bipush        52
51: invokevirtual #93
54: astore        5
56: aload_1
57: invokevirtual #35
60: istore        6
62: aload_1
63: getfield      #45
66: astore        7
68: new           #22
71: dup
72: invokespecial #23
75: ldc           #24
77: invokevirtual #25
80: aload_2
81: invokevirtual #25
84: ldc           #104
86: invokevirtual #25
89: invokevirtual #27
92: aload_2
93: ldc           #46
95: invokestatic  #28
98: aload_3
99: invokestatic  #21
102: new           #22
105: dup
106: invokespecial #23
109: ldc           #24
111: invokevirtual #25
114: aload         4
116: invokevirtual #25
119: ldc           #79
121: invokevirtual #25
124: invokevirtual #27
127: aload         4
129: ldc           #78
131: invokestatic  #28
134: new           #22
137: dup
138: invokespecial #23
141: ldc           #24
143: invokevirtual #25
146: aload         5
148: invokevirtual #25
151: ldc           #161
153: invokevirtual #25
156: invokevirtual #27
159: aload         5
161: ldc           #77
163: invokestatic  #28
166: new           #22
169: dup
170: invokespecial #23
173: ldc           #24
175: invokevirtual #25
178: iload         6
180: invokevirtual #29
183: ldc           #30
185: invokevirtual #25
188: iconst_1
189: invokevirtual #29
192: ldc           #24
194: invokevirtual #25
197: invokevirtual #27
200: iload         6
202: iconst_1
203: if_icmpne     210
206: iconst_1
207: goto          211
210: iconst_0
211: invokestatic  #31
214: new           #22
217: dup
218: invokespecial #23
221: ldc           #24
223: invokevirtual #25
226: aload         7
228: invokevirtual #25
231: ldc           #104
233: invokevirtual #25
236: invokevirtual #27
239: aload         7
241: ldc           #46
243: invokestatic  #28
246: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0565
Start line: 1345
End line: 0
Method source code: 
    public void test0565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0565");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setLongOptPrefix(" ");
        helpFormatter0.defaultDescPad = (short) 10;
        helpFormatter0.setLongOptPrefix("--");
        java.lang.String str11 = helpFormatter0.getLongOptSeparator();
        java.lang.String str12 = helpFormatter0.defaultArgName;
        java.lang.StringBuffer stringBuffer13 = null;
        org.apache.commons.cli.Options options15 = null;
        try {
            java.lang.StringBuffer stringBuffer18 = helpFormatter0.renderOptions(stringBuffer13, (int) (short) 0, options15, (int) (short) 10, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + " " + "'", str11, " ");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "arg" + "'", str12, "arg");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #162
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #35
36: istore_2
37: aload_1
38: ldc           #11
40: putfield      #36
43: aload_1
44: getfield      #42
47: astore_3
48: aload_1
49: ldc           #38
51: invokevirtual #43
54: aload_1
55: bipush        10
57: putfield      #44
60: aload_1
61: ldc           #63
63: invokevirtual #43
66: aload_1
67: invokevirtual #72
70: astore        4
72: aload_1
73: getfield      #15
76: astore        5
78: aconst_null
79: astore        6
81: aconst_null
82: astore        7
84: aload_1
85: aload         6
87: iconst_0
88: aload         7
90: bipush        10
92: bipush        10
94: invokevirtual #47
97: astore        8
99: ldc           #18
101: invokestatic  #19
104: goto          109
107: astore        8
109: new           #22
112: dup
113: invokespecial #23
116: ldc           #24
118: invokevirtual #25
121: iload_2
122: invokevirtual #29
125: ldc           #30
127: invokevirtual #25
130: iconst_1
131: invokevirtual #29
134: ldc           #24
136: invokevirtual #25
139: invokevirtual #27
142: iload_2
143: iconst_1
144: if_icmpne     151
147: iconst_1
148: goto          152
151: iconst_0
152: invokestatic  #31
155: new           #22
158: dup
159: invokespecial #23
162: ldc           #24
164: invokevirtual #25
167: aload_3
168: invokevirtual #25
171: ldc           #48
173: invokevirtual #25
176: invokevirtual #27
179: aload_3
180: ldc           #49
182: invokestatic  #28
185: new           #22
188: dup
189: invokespecial #23
192: ldc           #24
194: invokevirtual #25
197: aload         4
199: invokevirtual #25
202: ldc           #75
204: invokevirtual #25
207: invokevirtual #27
210: aload         4
212: ldc           #38
214: invokestatic  #28
217: new           #22
220: dup
221: invokespecial #23
224: ldc           #24
226: invokevirtual #25
229: aload         5
231: invokevirtual #25
234: ldc           #79
236: invokevirtual #25
239: invokevirtual #27
242: aload         5
244: ldc           #78
246: invokestatic  #28
249: return
Exception table:
from    to  target type
84   104   107   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0566
Start line: 1373
End line: 0
Method source code: 
    public void test0566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0566");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.defaultLongOptPrefix = "hi!";
        java.lang.String str3 = helpFormatter0.defaultNewLine;
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\n" + "'", str3, "\n");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #163
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: ldc           #65
35: putfield      #52
38: aload_1
39: getfield      #36
42: astore_2
43: new           #22
46: dup
47: invokespecial #23
50: ldc           #24
52: invokevirtual #25
55: aload_2
56: invokevirtual #25
59: ldc           #32
61: invokevirtual #25
64: invokevirtual #27
67: aload_2
68: ldc           #33
70: invokestatic  #28
73: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0567
Start line: 1383
End line: 0
Method source code: 
    public void test0567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0567");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        java.util.Comparator comparator6 = helpFormatter0.optionComparator;
        helpFormatter0.setLongOptPrefix("hi!");
        java.lang.String str9 = helpFormatter0.getLongOptSeparator();
        org.apache.commons.cli.HelpFormatter helpFormatter10 = new org.apache.commons.cli.HelpFormatter();
        int int11 = helpFormatter10.getLeftPadding();
        java.lang.String str12 = helpFormatter10.getArgName();
        helpFormatter10.setSyntaxPrefix("usage: ");
        org.apache.commons.cli.HelpFormatter helpFormatter15 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter15.setOptPrefix("");
        helpFormatter15.defaultLongOptPrefix = "";
        java.lang.String str20 = helpFormatter15.defaultLongOptPrefix;
        java.lang.String str21 = helpFormatter15.getNewLine();
        java.lang.String str22 = helpFormatter15.defaultOptPrefix;
        helpFormatter15.setDescPadding(74);
        java.util.Comparator comparator25 = helpFormatter15.getOptionComparator();
        helpFormatter10.optionComparator = comparator25;
        helpFormatter0.optionComparator = comparator25;
        int int28 = helpFormatter0.defaultLeftPad;
        java.util.Comparator comparator29 = helpFormatter0.getOptionComparator();
        int int30 = helpFormatter0.defaultLeftPad;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(comparator6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + " " + "'", str9, " ");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "arg" + "'", str12, "arg");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "\n" + "'", str21, "\n");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(comparator25);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(comparator29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #164
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #35
36: istore_2
37: aload_1
38: ldc           #11
40: putfield      #36
43: aload_1
44: bipush        10
46: invokevirtual #37
49: aload_1
50: getfield      #10
53: astore_3
54: aload_1
55: ldc           #65
57: invokevirtual #43
60: aload_1
61: invokevirtual #72
64: astore        4
66: new           #8
69: dup
70: invokespecial #9
73: astore        5
75: aload         5
77: invokevirtual #35
80: istore        6
82: aload         5
84: invokevirtual #83
87: astore        7
89: aload         5
91: ldc           #46
93: invokevirtual #39
96: new           #8
99: dup
100: invokespecial #9
103: astore        8
105: aload         8
107: ldc           #11
109: invokevirtual #51
112: aload         8
114: ldc           #11
116: putfield      #52
119: aload         8
121: getfield      #52
124: astore        9
126: aload         8
128: invokevirtual #16
131: astore        10
133: aload         8
135: getfield      #42
138: astore        11
140: aload         8
142: bipush        74
144: invokevirtual #37
147: aload         8
149: invokevirtual #58
152: astore        12
154: aload         5
156: aload         12
158: putfield      #10
161: aload_1
162: aload         12
164: putfield      #10
167: aload_1
168: getfield      #40
171: istore        13
173: aload_1
174: invokevirtual #58
177: astore        14
179: aload_1
180: getfield      #40
183: istore        15
185: new           #22
188: dup
189: invokespecial #23
192: ldc           #24
194: invokevirtual #25
197: iload_2
198: invokevirtual #29
201: ldc           #30
203: invokevirtual #25
206: iconst_1
207: invokevirtual #29
210: ldc           #24
212: invokevirtual #25
215: invokevirtual #27
218: iload_2
219: iconst_1
220: if_icmpne     227
223: iconst_1
224: goto          228
227: iconst_0
228: invokestatic  #31
231: aload_3
232: invokestatic  #21
235: new           #22
238: dup
239: invokespecial #23
242: ldc           #24
244: invokevirtual #25
247: aload         4
249: invokevirtual #25
252: ldc           #75
254: invokevirtual #25
257: invokevirtual #27
260: aload         4
262: ldc           #38
264: invokestatic  #28
267: new           #22
270: dup
271: invokespecial #23
274: ldc           #24
276: invokevirtual #25
279: iload         6
281: invokevirtual #29
284: ldc           #30
286: invokevirtual #25
289: iconst_1
290: invokevirtual #29
293: ldc           #24
295: invokevirtual #25
298: invokevirtual #27
301: iload         6
303: iconst_1
304: if_icmpne     311
307: iconst_1
308: goto          312
311: iconst_0
312: invokestatic  #31
315: new           #22
318: dup
319: invokespecial #23
322: ldc           #24
324: invokevirtual #25
327: aload         7
329: invokevirtual #25
332: ldc           #79
334: invokevirtual #25
337: invokevirtual #27
340: aload         7
342: ldc           #78
344: invokestatic  #28
347: new           #22
350: dup
351: invokespecial #23
354: ldc           #24
356: invokevirtual #25
359: aload         9
361: invokevirtual #25
364: ldc           #26
366: invokevirtual #25
369: invokevirtual #27
372: aload         9
374: ldc           #11
376: invokestatic  #28
379: new           #22
382: dup
383: invokespecial #23
386: ldc           #24
388: invokevirtual #25
391: aload         10
393: invokevirtual #25
396: ldc           #32
398: invokevirtual #25
401: invokevirtual #27
404: aload         10
406: ldc           #33
408: invokestatic  #28
411: new           #22
414: dup
415: invokespecial #23
418: ldc           #24
420: invokevirtual #25
423: aload         11
425: invokevirtual #25
428: ldc           #26
430: invokevirtual #25
433: invokevirtual #27
436: aload         11
438: ldc           #11
440: invokestatic  #28
443: aload         12
445: invokestatic  #21
448: new           #22
451: dup
452: invokespecial #23
455: ldc           #24
457: invokevirtual #25
460: iload         13
462: invokevirtual #29
465: ldc           #30
467: invokevirtual #25
470: iconst_1
471: invokevirtual #29
474: ldc           #24
476: invokevirtual #25
479: invokevirtual #27
482: iload         13
484: iconst_1
485: if_icmpne     492
488: iconst_1
489: goto          493
492: iconst_0
493: invokestatic  #31
496: aload         14
498: invokestatic  #21
501: new           #22
504: dup
505: invokespecial #23
508: ldc           #24
510: invokevirtual #25
513: iload         15
515: invokevirtual #29
518: ldc           #30
520: invokevirtual #25
523: iconst_1
524: invokevirtual #29
527: ldc           #24
529: invokevirtual #25
532: invokevirtual #27
535: iload         15
537: iconst_1
538: if_icmpne     545
541: iconst_1
542: goto          546
545: iconst_0
546: invokestatic  #31
549: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0568
Start line: 1425
End line: 0
Method source code: 
    public void test0568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0568");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        int int2 = helpFormatter0.getWidth();
        helpFormatter0.defaultOptPrefix = "   ";
        java.io.PrintWriter printWriter5 = null;
        org.apache.commons.cli.Options options7 = null;
        try {
            helpFormatter0.printOptions(printWriter5, 1, options7, (-2), (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: null");
        } catch (java.lang.NegativeArraySizeException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 74 + "'", int2 == 74);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #165
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #35
36: istore_2
37: aload_1
38: invokevirtual #66
41: istore_3
42: aload_1
43: ldc           #113
45: putfield      #42
48: aconst_null
49: astore        4
51: aconst_null
52: astore        5
54: aload_1
55: aload         4
57: iconst_1
58: aload         5
60: bipush        -2
62: bipush        52
64: invokevirtual #17
67: ldc           #84
69: invokestatic  #19
72: goto          77
75: astore        6
77: new           #22
80: dup
81: invokespecial #23
84: ldc           #24
86: invokevirtual #25
89: iload_2
90: invokevirtual #29
93: ldc           #30
95: invokevirtual #25
98: iconst_1
99: invokevirtual #29
102: ldc           #24
104: invokevirtual #25
107: invokevirtual #27
110: iload_2
111: iconst_1
112: if_icmpne     119
115: iconst_1
116: goto          120
119: iconst_0
120: invokestatic  #31
123: new           #22
126: dup
127: invokespecial #23
130: ldc           #24
132: invokevirtual #25
135: iload_3
136: invokevirtual #29
139: ldc           #30
141: invokevirtual #25
144: bipush        74
146: invokevirtual #29
149: ldc           #24
151: invokevirtual #25
154: invokevirtual #27
157: iload_3
158: bipush        74
160: if_icmpne     167
163: iconst_1
164: goto          168
167: iconst_0
168: invokestatic  #31
171: return
Exception table:
from    to  target type
54    72    75   Class java/lang/NegativeArraySizeException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0569
Start line: 1446
End line: 0
Method source code: 
    public void test0569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0569");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        int int6 = helpFormatter0.defaultWidth;
        java.lang.String str7 = helpFormatter0.getLongOptPrefix();
        helpFormatter0.setOptPrefix("\n");
        helpFormatter0.setOptPrefix("                                                    ");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "--" + "'", str5, "--");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 74 + "'", int6 == 74);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "--" + "'", str7, "--");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #166
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #35
36: istore_2
37: aload_1
38: ldc           #11
40: putfield      #36
43: aload_1
44: getfield      #42
47: astore_3
48: aload_1
49: getfield      #52
52: astore        4
54: aload_1
55: getfield      #57
58: istore        5
60: aload_1
61: invokevirtual #53
64: astore        6
66: aload_1
67: ldc           #33
69: invokevirtual #51
72: aload_1
73: ldc           #77
75: invokevirtual #51
78: new           #22
81: dup
82: invokespecial #23
85: ldc           #24
87: invokevirtual #25
90: iload_2
91: invokevirtual #29
94: ldc           #30
96: invokevirtual #25
99: iconst_1
100: invokevirtual #29
103: ldc           #24
105: invokevirtual #25
108: invokevirtual #27
111: iload_2
112: iconst_1
113: if_icmpne     120
116: iconst_1
117: goto          121
120: iconst_0
121: invokestatic  #31
124: new           #22
127: dup
128: invokespecial #23
131: ldc           #24
133: invokevirtual #25
136: aload_3
137: invokevirtual #25
140: ldc           #48
142: invokevirtual #25
145: invokevirtual #27
148: aload_3
149: ldc           #49
151: invokestatic  #28
154: new           #22
157: dup
158: invokespecial #23
161: ldc           #24
163: invokevirtual #25
166: aload         4
168: invokevirtual #25
171: ldc           #62
173: invokevirtual #25
176: invokevirtual #27
179: aload         4
181: ldc           #63
183: invokestatic  #28
186: new           #22
189: dup
190: invokespecial #23
193: ldc           #24
195: invokevirtual #25
198: iload         5
200: invokevirtual #29
203: ldc           #30
205: invokevirtual #25
208: bipush        74
210: invokevirtual #29
213: ldc           #24
215: invokevirtual #25
218: invokevirtual #27
221: iload         5
223: bipush        74
225: if_icmpne     232
228: iconst_1
229: goto          233
232: iconst_0
233: invokestatic  #31
236: new           #22
239: dup
240: invokespecial #23
243: ldc           #24
245: invokevirtual #25
248: aload         6
250: invokevirtual #25
253: ldc           #62
255: invokevirtual #25
258: invokevirtual #27
261: aload         6
263: ldc           #63
265: invokestatic  #28
268: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0570
Start line: 1466
End line: 0
Method source code: 
    public void test0570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0570");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setArgName("arg");
        int int8 = helpFormatter0.defaultWidth;
        java.lang.String str10 = helpFormatter0.createPadding((int) (byte) 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 74 + "'", int8 == 74);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #167
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: ldc           #11
35: invokevirtual #51
38: aload_1
39: ldc           #11
41: putfield      #52
44: aload_1
45: getfield      #42
48: astore_2
49: aload_1
50: ldc           #78
52: invokevirtual #59
55: aload_1
56: getfield      #57
59: istore_3
60: aload_1
61: iconst_0
62: invokevirtual #93
65: astore        4
67: new           #22
70: dup
71: invokespecial #23
74: ldc           #24
76: invokevirtual #25
79: aload_2
80: invokevirtual #25
83: ldc           #26
85: invokevirtual #25
88: invokevirtual #27
91: aload_2
92: ldc           #11
94: invokestatic  #28
97: new           #22
100: dup
101: invokespecial #23
104: ldc           #24
106: invokevirtual #25
109: iload_3
110: invokevirtual #29
113: ldc           #30
115: invokevirtual #25
118: bipush        74
120: invokevirtual #29
123: ldc           #24
125: invokevirtual #25
128: invokevirtual #27
131: iload_3
132: bipush        74
134: if_icmpne     141
137: iconst_1
138: goto          142
141: iconst_0
142: invokestatic  #31
145: new           #22
148: dup
149: invokespecial #23
152: ldc           #24
154: invokevirtual #25
157: aload         4
159: invokevirtual #25
162: ldc           #26
164: invokevirtual #25
167: invokevirtual #27
170: aload         4
172: ldc           #11
174: invokestatic  #28
177: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0571
Start line: 1482
End line: 0
Method source code: 
    public void test0571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0571");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        java.lang.String str6 = helpFormatter0.defaultNewLine;
        helpFormatter0.setDescPadding(10);
        int int9 = helpFormatter0.defaultLeftPad;
        int int10 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultSyntaxPrefix = "                                                    ";
        java.lang.String str14 = helpFormatter0.createPadding((int) (short) 0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #168
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #35
36: istore_2
37: aload_1
38: ldc           #11
40: putfield      #36
43: aload_1
44: bipush        10
46: invokevirtual #37
49: aload_1
50: getfield      #36
53: astore_3
54: aload_1
55: bipush        10
57: invokevirtual #37
60: aload_1
61: getfield      #40
64: istore        4
66: aload_1
67: invokevirtual #35
70: istore        5
72: aload_1
73: ldc           #77
75: putfield      #45
78: aload_1
79: iconst_0
80: invokevirtual #93
83: astore        6
85: new           #22
88: dup
89: invokespecial #23
92: ldc           #24
94: invokevirtual #25
97: iload_2
98: invokevirtual #29
101: ldc           #30
103: invokevirtual #25
106: iconst_1
107: invokevirtual #29
110: ldc           #24
112: invokevirtual #25
115: invokevirtual #27
118: iload_2
119: iconst_1
120: if_icmpne     127
123: iconst_1
124: goto          128
127: iconst_0
128: invokestatic  #31
131: new           #22
134: dup
135: invokespecial #23
138: ldc           #24
140: invokevirtual #25
143: aload_3
144: invokevirtual #25
147: ldc           #26
149: invokevirtual #25
152: invokevirtual #27
155: aload_3
156: ldc           #11
158: invokestatic  #28
161: new           #22
164: dup
165: invokespecial #23
168: ldc           #24
170: invokevirtual #25
173: iload         4
175: invokevirtual #29
178: ldc           #30
180: invokevirtual #25
183: iconst_1
184: invokevirtual #29
187: ldc           #24
189: invokevirtual #25
192: invokevirtual #27
195: iload         4
197: iconst_1
198: if_icmpne     205
201: iconst_1
202: goto          206
205: iconst_0
206: invokestatic  #31
209: new           #22
212: dup
213: invokespecial #23
216: ldc           #24
218: invokevirtual #25
221: iload         5
223: invokevirtual #29
226: ldc           #30
228: invokevirtual #25
231: iconst_1
232: invokevirtual #29
235: ldc           #24
237: invokevirtual #25
240: invokevirtual #27
243: iload         5
245: iconst_1
246: if_icmpne     253
249: iconst_1
250: goto          254
253: iconst_0
254: invokestatic  #31
257: new           #22
260: dup
261: invokespecial #23
264: ldc           #24
266: invokevirtual #25
269: aload         6
271: invokevirtual #25
274: ldc           #26
276: invokevirtual #25
279: invokevirtual #27
282: aload         6
284: ldc           #11
286: invokestatic  #28
289: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0572
Start line: 1503
End line: 0
Method source code: 
    public void test0572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0572");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        java.util.Comparator comparator6 = helpFormatter0.optionComparator;
        helpFormatter0.setLongOptPrefix("hi!");
        java.lang.String str9 = helpFormatter0.getLongOptSeparator();
        org.apache.commons.cli.HelpFormatter helpFormatter10 = new org.apache.commons.cli.HelpFormatter();
        int int11 = helpFormatter10.getLeftPadding();
        java.lang.String str12 = helpFormatter10.getArgName();
        helpFormatter10.setSyntaxPrefix("usage: ");
        org.apache.commons.cli.HelpFormatter helpFormatter15 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter15.setOptPrefix("");
        helpFormatter15.defaultLongOptPrefix = "";
        java.lang.String str20 = helpFormatter15.defaultLongOptPrefix;
        java.lang.String str21 = helpFormatter15.getNewLine();
        java.lang.String str22 = helpFormatter15.defaultOptPrefix;
        helpFormatter15.setDescPadding(74);
        java.util.Comparator comparator25 = helpFormatter15.getOptionComparator();
        helpFormatter10.optionComparator = comparator25;
        helpFormatter0.optionComparator = comparator25;
        int int28 = helpFormatter0.defaultLeftPad;
        java.lang.String str29 = helpFormatter0.defaultSyntaxPrefix;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(comparator6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + " " + "'", str9, " ");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "arg" + "'", str12, "arg");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "\n" + "'", str21, "\n");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(comparator25);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "usage: " + "'", str29, "usage: ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #169
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #35
36: istore_2
37: aload_1
38: ldc           #11
40: putfield      #36
43: aload_1
44: bipush        10
46: invokevirtual #37
49: aload_1
50: getfield      #10
53: astore_3
54: aload_1
55: ldc           #65
57: invokevirtual #43
60: aload_1
61: invokevirtual #72
64: astore        4
66: new           #8
69: dup
70: invokespecial #9
73: astore        5
75: aload         5
77: invokevirtual #35
80: istore        6
82: aload         5
84: invokevirtual #83
87: astore        7
89: aload         5
91: ldc           #46
93: invokevirtual #39
96: new           #8
99: dup
100: invokespecial #9
103: astore        8
105: aload         8
107: ldc           #11
109: invokevirtual #51
112: aload         8
114: ldc           #11
116: putfield      #52
119: aload         8
121: getfield      #52
124: astore        9
126: aload         8
128: invokevirtual #16
131: astore        10
133: aload         8
135: getfield      #42
138: astore        11
140: aload         8
142: bipush        74
144: invokevirtual #37
147: aload         8
149: invokevirtual #58
152: astore        12
154: aload         5
156: aload         12
158: putfield      #10
161: aload_1
162: aload         12
164: putfield      #10
167: aload_1
168: getfield      #40
171: istore        13
173: aload_1
174: getfield      #45
177: astore        14
179: new           #22
182: dup
183: invokespecial #23
186: ldc           #24
188: invokevirtual #25
191: iload_2
192: invokevirtual #29
195: ldc           #30
197: invokevirtual #25
200: iconst_1
201: invokevirtual #29
204: ldc           #24
206: invokevirtual #25
209: invokevirtual #27
212: iload_2
213: iconst_1
214: if_icmpne     221
217: iconst_1
218: goto          222
221: iconst_0
222: invokestatic  #31
225: aload_3
226: invokestatic  #21
229: new           #22
232: dup
233: invokespecial #23
236: ldc           #24
238: invokevirtual #25
241: aload         4
243: invokevirtual #25
246: ldc           #75
248: invokevirtual #25
251: invokevirtual #27
254: aload         4
256: ldc           #38
258: invokestatic  #28
261: new           #22
264: dup
265: invokespecial #23
268: ldc           #24
270: invokevirtual #25
273: iload         6
275: invokevirtual #29
278: ldc           #30
280: invokevirtual #25
283: iconst_1
284: invokevirtual #29
287: ldc           #24
289: invokevirtual #25
292: invokevirtual #27
295: iload         6
297: iconst_1
298: if_icmpne     305
301: iconst_1
302: goto          306
305: iconst_0
306: invokestatic  #31
309: new           #22
312: dup
313: invokespecial #23
316: ldc           #24
318: invokevirtual #25
321: aload         7
323: invokevirtual #25
326: ldc           #79
328: invokevirtual #25
331: invokevirtual #27
334: aload         7
336: ldc           #78
338: invokestatic  #28
341: new           #22
344: dup
345: invokespecial #23
348: ldc           #24
350: invokevirtual #25
353: aload         9
355: invokevirtual #25
358: ldc           #26
360: invokevirtual #25
363: invokevirtual #27
366: aload         9
368: ldc           #11
370: invokestatic  #28
373: new           #22
376: dup
377: invokespecial #23
380: ldc           #24
382: invokevirtual #25
385: aload         10
387: invokevirtual #25
390: ldc           #32
392: invokevirtual #25
395: invokevirtual #27
398: aload         10
400: ldc           #33
402: invokestatic  #28
405: new           #22
408: dup
409: invokespecial #23
412: ldc           #24
414: invokevirtual #25
417: aload         11
419: invokevirtual #25
422: ldc           #26
424: invokevirtual #25
427: invokevirtual #27
430: aload         11
432: ldc           #11
434: invokestatic  #28
437: aload         12
439: invokestatic  #21
442: new           #22
445: dup
446: invokespecial #23
449: ldc           #24
451: invokevirtual #25
454: iload         13
456: invokevirtual #29
459: ldc           #30
461: invokevirtual #25
464: iconst_1
465: invokevirtual #29
468: ldc           #24
470: invokevirtual #25
473: invokevirtual #27
476: iload         13
478: iconst_1
479: if_icmpne     486
482: iconst_1
483: goto          487
486: iconst_0
487: invokestatic  #31
490: new           #22
493: dup
494: invokespecial #23
497: ldc           #24
499: invokevirtual #25
502: aload         14
504: invokevirtual #25
507: ldc           #104
509: invokevirtual #25
512: invokevirtual #27
515: aload         14
517: ldc           #46
519: invokestatic  #28
522: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0573
Start line: 1543
End line: 0
Method source code: 
    public void test0573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0573");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.util.Comparator comparator1 = helpFormatter0.optionComparator;
        int int2 = helpFormatter0.getLeftPadding();
        java.lang.String str4 = helpFormatter0.rtrim("-");
        int int5 = helpFormatter0.defaultLeftPad;
        java.lang.String str6 = helpFormatter0.getLongOptPrefix();
        helpFormatter0.defaultLeftPad = 32;
        java.lang.String str9 = helpFormatter0.defaultSyntaxPrefix;
        org.junit.Assert.assertNotNull(comparator1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "--" + "'", str6, "--");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "usage: " + "'", str9, "usage: ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #170
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: getfield      #10
36: astore_2
37: aload_1
38: invokevirtual #35
41: istore_3
42: aload_1
43: ldc           #49
45: invokevirtual #12
48: astore        4
50: aload_1
51: getfield      #40
54: istore        5
56: aload_1
57: invokevirtual #53
60: astore        6
62: aload_1
63: bipush        32
65: putfield      #40
68: aload_1
69: getfield      #45
72: astore        7
74: aload_2
75: invokestatic  #21
78: new           #22
81: dup
82: invokespecial #23
85: ldc           #24
87: invokevirtual #25
90: iload_3
91: invokevirtual #29
94: ldc           #30
96: invokevirtual #25
99: iconst_1
100: invokevirtual #29
103: ldc           #24
105: invokevirtual #25
108: invokevirtual #27
111: iload_3
112: iconst_1
113: if_icmpne     120
116: iconst_1
117: goto          121
120: iconst_0
121: invokestatic  #31
124: new           #22
127: dup
128: invokespecial #23
131: ldc           #24
133: invokevirtual #25
136: aload         4
138: invokevirtual #25
141: ldc           #48
143: invokevirtual #25
146: invokevirtual #27
149: aload         4
151: ldc           #49
153: invokestatic  #28
156: new           #22
159: dup
160: invokespecial #23
163: ldc           #24
165: invokevirtual #25
168: iload         5
170: invokevirtual #29
173: ldc           #30
175: invokevirtual #25
178: iconst_1
179: invokevirtual #29
182: ldc           #24
184: invokevirtual #25
187: invokevirtual #27
190: iload         5
192: iconst_1
193: if_icmpne     200
196: iconst_1
197: goto          201
200: iconst_0
201: invokestatic  #31
204: new           #22
207: dup
208: invokespecial #23
211: ldc           #24
213: invokevirtual #25
216: aload         6
218: invokevirtual #25
221: ldc           #62
223: invokevirtual #25
226: invokevirtual #27
229: aload         6
231: ldc           #63
233: invokestatic  #28
236: new           #22
239: dup
240: invokespecial #23
243: ldc           #24
245: invokevirtual #25
248: aload         7
250: invokevirtual #25
253: ldc           #104
255: invokevirtual #25
258: invokevirtual #27
261: aload         7
263: ldc           #46
265: invokestatic  #28
268: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0574
Start line: 1563
End line: 0
Method source code: 
    public void test0574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0574");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        java.lang.String str6 = helpFormatter0.getLongOptSeparator();
        java.lang.String str7 = helpFormatter0.getLongOptSeparator();
        java.lang.String str9 = helpFormatter0.createPadding((int) (byte) 1);
        helpFormatter0.setDescPadding(100);
        helpFormatter0.setLeftPadding(10);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + " " + "'", str6, " ");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + " " + "'", str7, " ");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + " " + "'", str9, " ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #171
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #35
36: istore_2
37: aload_1
38: ldc           #11
40: putfield      #36
43: aload_1
44: bipush        10
46: invokevirtual #37
49: aload_1
50: invokevirtual #72
53: astore_3
54: aload_1
55: invokevirtual #72
58: astore        4
60: aload_1
61: iconst_1
62: invokevirtual #93
65: astore        5
67: aload_1
68: bipush        100
70: invokevirtual #37
73: aload_1
74: bipush        10
76: invokevirtual #55
79: new           #22
82: dup
83: invokespecial #23
86: ldc           #24
88: invokevirtual #25
91: iload_2
92: invokevirtual #29
95: ldc           #30
97: invokevirtual #25
100: iconst_1
101: invokevirtual #29
104: ldc           #24
106: invokevirtual #25
109: invokevirtual #27
112: iload_2
113: iconst_1
114: if_icmpne     121
117: iconst_1
118: goto          122
121: iconst_0
122: invokestatic  #31
125: new           #22
128: dup
129: invokespecial #23
132: ldc           #24
134: invokevirtual #25
137: aload_3
138: invokevirtual #25
141: ldc           #75
143: invokevirtual #25
146: invokevirtual #27
149: aload_3
150: ldc           #38
152: invokestatic  #28
155: new           #22
158: dup
159: invokespecial #23
162: ldc           #24
164: invokevirtual #25
167: aload         4
169: invokevirtual #25
172: ldc           #75
174: invokevirtual #25
177: invokevirtual #27
180: aload         4
182: ldc           #38
184: invokestatic  #28
187: new           #22
190: dup
191: invokespecial #23
194: ldc           #24
196: invokevirtual #25
199: aload         5
201: invokevirtual #25
204: ldc           #75
206: invokevirtual #25
209: invokevirtual #27
212: aload         5
214: ldc           #38
216: invokestatic  #28
219: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0575
Start line: 1582
End line: 0
Method source code: 
    public void test0575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0575");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.defaultLongOptPrefix = "hi!";
        int int3 = helpFormatter0.getWidth();
        helpFormatter0.setLongOptPrefix("          ");
        int int6 = helpFormatter0.defaultLeftPad;
        helpFormatter0.setLeftPadding(1);
        int int9 = helpFormatter0.defaultDescPad;
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 74 + "'", int3 == 74);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 3 + "'", int9 == 3);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #172
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: ldc           #65
35: putfield      #52
38: aload_1
39: invokevirtual #66
42: istore_2
43: aload_1
44: ldc           #67
46: invokevirtual #43
49: aload_1
50: getfield      #40
53: istore_3
54: aload_1
55: iconst_1
56: invokevirtual #55
59: aload_1
60: getfield      #44
63: istore        4
65: new           #22
68: dup
69: invokespecial #23
72: ldc           #24
74: invokevirtual #25
77: iload_2
78: invokevirtual #29
81: ldc           #30
83: invokevirtual #25
86: bipush        74
88: invokevirtual #29
91: ldc           #24
93: invokevirtual #25
96: invokevirtual #27
99: iload_2
100: bipush        74
102: if_icmpne     109
105: iconst_1
106: goto          110
109: iconst_0
110: invokestatic  #31
113: new           #22
116: dup
117: invokespecial #23
120: ldc           #24
122: invokevirtual #25
125: iload_3
126: invokevirtual #29
129: ldc           #30
131: invokevirtual #25
134: iconst_1
135: invokevirtual #29
138: ldc           #24
140: invokevirtual #25
143: invokevirtual #27
146: iload_3
147: iconst_1
148: if_icmpne     155
151: iconst_1
152: goto          156
155: iconst_0
156: invokestatic  #31
159: new           #22
162: dup
163: invokespecial #23
166: ldc           #24
168: invokevirtual #25
171: iload         4
173: invokevirtual #29
176: ldc           #30
178: invokevirtual #25
181: iconst_3
182: invokevirtual #29
185: ldc           #24
187: invokevirtual #25
190: invokevirtual #27
193: iload         4
195: iconst_3
196: if_icmpne     203
199: iconst_1
200: goto          204
203: iconst_0
204: invokestatic  #31
207: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0576
Start line: 1598
End line: 0
Method source code: 
    public void test0576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0576");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        helpFormatter0.setSyntaxPrefix(" ");
        int int8 = helpFormatter0.defaultLeftPad;
        java.lang.String str9 = helpFormatter0.getNewLine();
        helpFormatter0.setLeftPadding((int) (short) 10);
        int int12 = helpFormatter0.getLeftPadding();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 10 + "'", int12 == 10);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #173
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #35
36: istore_2
37: aload_1
38: ldc           #11
40: putfield      #36
43: aload_1
44: bipush        10
46: invokevirtual #37
49: aload_1
50: ldc           #38
52: invokevirtual #39
55: aload_1
56: getfield      #40
59: istore_3
60: aload_1
61: invokevirtual #16
64: astore        4
66: aload_1
67: bipush        10
69: invokevirtual #55
72: aload_1
73: invokevirtual #35
76: istore        5
78: new           #22
81: dup
82: invokespecial #23
85: ldc           #24
87: invokevirtual #25
90: iload_2
91: invokevirtual #29
94: ldc           #30
96: invokevirtual #25
99: iconst_1
100: invokevirtual #29
103: ldc           #24
105: invokevirtual #25
108: invokevirtual #27
111: iload_2
112: iconst_1
113: if_icmpne     120
116: iconst_1
117: goto          121
120: iconst_0
121: invokestatic  #31
124: new           #22
127: dup
128: invokespecial #23
131: ldc           #24
133: invokevirtual #25
136: iload_3
137: invokevirtual #29
140: ldc           #30
142: invokevirtual #25
145: iconst_1
146: invokevirtual #29
149: ldc           #24
151: invokevirtual #25
154: invokevirtual #27
157: iload_3
158: iconst_1
159: if_icmpne     166
162: iconst_1
163: goto          167
166: iconst_0
167: invokestatic  #31
170: new           #22
173: dup
174: invokespecial #23
177: ldc           #24
179: invokevirtual #25
182: aload         4
184: invokevirtual #25
187: ldc           #26
189: invokevirtual #25
192: invokevirtual #27
195: aload         4
197: ldc           #11
199: invokestatic  #28
202: new           #22
205: dup
206: invokespecial #23
209: ldc           #24
211: invokevirtual #25
214: iload         5
216: invokevirtual #29
219: ldc           #30
221: invokevirtual #25
224: bipush        10
226: invokevirtual #29
229: ldc           #24
231: invokevirtual #25
234: invokevirtual #27
237: iload         5
239: bipush        10
241: if_icmpne     248
244: iconst_1
245: goto          249
248: iconst_0
249: invokestatic  #31
252: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0577
Start line: 1617
End line: 0
Method source code: 
    public void test0577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0577");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        java.lang.String str3 = helpFormatter0.getLongOptPrefix();
        java.lang.String str4 = helpFormatter0.getOptPrefix();
        java.util.Comparator comparator5 = helpFormatter0.optionComparator;
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "--" + "'", str3, "--");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(comparator5);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #174
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: ldc           #11
35: invokevirtual #51
38: aload_1
39: invokevirtual #53
42: astore_2
43: aload_1
44: invokevirtual #73
47: astore_3
48: aload_1
49: getfield      #10
52: astore        4
54: new           #22
57: dup
58: invokespecial #23
61: ldc           #24
63: invokevirtual #25
66: aload_2
67: invokevirtual #25
70: ldc           #62
72: invokevirtual #25
75: invokevirtual #27
78: aload_2
79: ldc           #63
81: invokestatic  #28
84: new           #22
87: dup
88: invokespecial #23
91: ldc           #24
93: invokevirtual #25
96: aload_3
97: invokevirtual #25
100: ldc           #26
102: invokevirtual #25
105: invokevirtual #27
108: aload_3
109: ldc           #11
111: invokestatic  #28
114: aload         4
116: invokestatic  #21
119: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0578
Start line: 1631
End line: 0
Method source code: 
    public void test0578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0578");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setLeftPadding((int) (byte) 0);
        helpFormatter0.setLongOptPrefix("                                                                                                 ");
        java.io.PrintWriter printWriter9 = null;
        org.apache.commons.cli.Options options13 = null;
        try {
            helpFormatter0.printHelp(printWriter9, 0, "", "                                                    ", options13, (int) (short) -1, (int) (short) 10, "usage: ", false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: cmdLineSyntax not provided");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #175
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #35
36: istore_2
37: aload_1
38: ldc           #11
40: putfield      #36
43: aload_1
44: getfield      #42
47: astore_3
48: aload_1
49: iconst_0
50: invokevirtual #55
53: aload_1
54: ldc           #14
56: invokevirtual #43
59: aconst_null
60: astore        4
62: aconst_null
63: astore        5
65: aload_1
66: aload         4
68: iconst_0
69: ldc           #11
71: ldc           #77
73: aload         5
75: iconst_m1
76: bipush        10
78: ldc           #46
80: iconst_0
81: invokevirtual #138
84: ldc           #69
86: invokestatic  #19
89: goto          94
92: astore        6
94: new           #22
97: dup
98: invokespecial #23
101: ldc           #24
103: invokevirtual #25
106: iload_2
107: invokevirtual #29
110: ldc           #30
112: invokevirtual #25
115: iconst_1
116: invokevirtual #29
119: ldc           #24
121: invokevirtual #25
124: invokevirtual #27
127: iload_2
128: iconst_1
129: if_icmpne     136
132: iconst_1
133: goto          137
136: iconst_0
137: invokestatic  #31
140: new           #22
143: dup
144: invokespecial #23
147: ldc           #24
149: invokevirtual #25
152: aload_3
153: invokevirtual #25
156: ldc           #48
158: invokevirtual #25
161: invokevirtual #27
164: aload_3
165: ldc           #49
167: invokestatic  #28
170: return
Exception table:
from    to  target type
65    89    92   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0579
Start line: 1654
End line: 0
Method source code: 
    public void test0579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0579");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.defaultDescPad = '4';
        helpFormatter0.setNewLine("");
        helpFormatter0.setSyntaxPrefix("");
        java.lang.String str10 = helpFormatter0.getSyntaxPrefix();
        helpFormatter0.setWidth((-2));
        java.lang.String str13 = helpFormatter0.getLongOptPrefix();
        org.apache.commons.cli.HelpFormatter helpFormatter14 = new org.apache.commons.cli.HelpFormatter();
        int int15 = helpFormatter14.getLeftPadding();
        helpFormatter14.defaultNewLine = "";
        helpFormatter14.defaultDescPad = '4';
        helpFormatter14.setNewLine("");
        helpFormatter14.setSyntaxPrefix("");
        java.util.Comparator comparator24 = helpFormatter14.optionComparator;
        helpFormatter0.setOptionComparator(comparator24);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "--" + "'", str13, "--");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(comparator24);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #176
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #35
36: istore_2
37: aload_1
38: ldc           #11
40: putfield      #36
43: aload_1
44: bipush        52
46: putfield      #44
49: aload_1
50: ldc           #11
52: invokevirtual #88
55: aload_1
56: ldc           #11
58: invokevirtual #39
61: aload_1
62: invokevirtual #89
65: astore_3
66: aload_1
67: bipush        -2
69: invokevirtual #90
72: aload_1
73: invokevirtual #53
76: astore        4
78: new           #8
81: dup
82: invokespecial #9
85: astore        5
87: aload         5
89: invokevirtual #35
92: istore        6
94: aload         5
96: ldc           #11
98: putfield      #36
101: aload         5
103: bipush        52
105: putfield      #44
108: aload         5
110: ldc           #11
112: invokevirtual #88
115: aload         5
117: ldc           #11
119: invokevirtual #39
122: aload         5
124: getfield      #10
127: astore        7
129: aload_1
130: aload         7
132: invokevirtual #99
135: new           #22
138: dup
139: invokespecial #23
142: ldc           #24
144: invokevirtual #25
147: iload_2
148: invokevirtual #29
151: ldc           #30
153: invokevirtual #25
156: iconst_1
157: invokevirtual #29
160: ldc           #24
162: invokevirtual #25
165: invokevirtual #27
168: iload_2
169: iconst_1
170: if_icmpne     177
173: iconst_1
174: goto          178
177: iconst_0
178: invokestatic  #31
181: new           #22
184: dup
185: invokespecial #23
188: ldc           #24
190: invokevirtual #25
193: aload_3
194: invokevirtual #25
197: ldc           #26
199: invokevirtual #25
202: invokevirtual #27
205: aload_3
206: ldc           #11
208: invokestatic  #28
211: new           #22
214: dup
215: invokespecial #23
218: ldc           #24
220: invokevirtual #25
223: aload         4
225: invokevirtual #25
228: ldc           #62
230: invokevirtual #25
233: invokevirtual #27
236: aload         4
238: ldc           #63
240: invokestatic  #28
243: new           #22
246: dup
247: invokespecial #23
250: ldc           #24
252: invokevirtual #25
255: iload         6
257: invokevirtual #29
260: ldc           #30
262: invokevirtual #25
265: iconst_1
266: invokevirtual #29
269: ldc           #24
271: invokevirtual #25
274: invokevirtual #27
277: iload         6
279: iconst_1
280: if_icmpne     287
283: iconst_1
284: goto          288
287: iconst_0
288: invokestatic  #31
291: aload         7
293: invokestatic  #21
296: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0580
Start line: 1682
End line: 0
Method source code: 
    public void test0580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0580");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        java.lang.String str3 = helpFormatter0.getLongOptSeparator();
        helpFormatter0.setWidth(0);
        helpFormatter0.defaultNewLine = "          ";
        helpFormatter0.setLongOptSeparator("                                                                                                 ");
        helpFormatter0.setNewLine("");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + " " + "'", str3, " ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #177
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: ldc           #11
35: invokevirtual #51
38: aload_1
39: invokevirtual #72
42: astore_2
43: aload_1
44: iconst_0
45: invokevirtual #90
48: aload_1
49: ldc           #67
51: putfield      #36
54: aload_1
55: ldc           #14
57: invokevirtual #74
60: aload_1
61: ldc           #11
63: invokevirtual #88
66: new           #22
69: dup
70: invokespecial #23
73: ldc           #24
75: invokevirtual #25
78: aload_2
79: invokevirtual #25
82: ldc           #75
84: invokevirtual #25
87: invokevirtual #27
90: aload_2
91: ldc           #38
93: invokestatic  #28
96: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0581
Start line: 1696
End line: 0
Method source code: 
    public void test0581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0581");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setLeftPadding((int) (byte) 0);
        org.apache.commons.cli.HelpFormatter helpFormatter7 = new org.apache.commons.cli.HelpFormatter();
        int int8 = helpFormatter7.getLeftPadding();
        helpFormatter7.defaultNewLine = "";
        org.apache.commons.cli.HelpFormatter helpFormatter11 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter11.setOptPrefix("");
        helpFormatter11.defaultLongOptPrefix = "";
        java.lang.String str16 = helpFormatter11.defaultLongOptPrefix;
        helpFormatter11.defaultDescPad = 0;
        org.apache.commons.cli.HelpFormatter helpFormatter19 = new org.apache.commons.cli.HelpFormatter();
        java.util.Comparator comparator20 = helpFormatter19.optionComparator;
        int int21 = helpFormatter19.getLeftPadding();
        int int22 = helpFormatter19.defaultLeftPad;
        java.lang.String str24 = helpFormatter19.createPadding((int) 'a');
        org.apache.commons.cli.HelpFormatter helpFormatter25 = new org.apache.commons.cli.HelpFormatter();
        int int26 = helpFormatter25.getLeftPadding();
        helpFormatter25.defaultNewLine = "";
        helpFormatter25.defaultDescPad = '4';
        helpFormatter25.setNewLine("");
        int int36 = helpFormatter25.findWrapPos("\n", (int) ' ', 3);
        java.util.Comparator comparator37 = helpFormatter25.optionComparator;
        helpFormatter19.setOptionComparator(comparator37);
        helpFormatter11.setOptionComparator(comparator37);
        helpFormatter7.optionComparator = comparator37;
        int int41 = helpFormatter7.defaultWidth;
        org.apache.commons.cli.HelpFormatter helpFormatter42 = new org.apache.commons.cli.HelpFormatter();
        int int43 = helpFormatter42.getLeftPadding();
        helpFormatter42.defaultNewLine = "";
        helpFormatter42.setDescPadding(10);
        java.lang.String str48 = helpFormatter42.getOptPrefix();
        java.lang.String str49 = helpFormatter42.getNewLine();
        helpFormatter42.defaultOptPrefix = "";
        helpFormatter42.setNewLine("");
        helpFormatter42.defaultSyntaxPrefix = "usage: ";
        java.lang.String str56 = helpFormatter42.getArgName();
        java.util.Comparator comparator57 = helpFormatter42.optionComparator;
        helpFormatter7.setOptionComparator(comparator57);
        helpFormatter0.optionComparator = comparator57;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(comparator20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "                                                                                                 " + "'", str24, "                                                                                                 ");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(comparator37);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 74 + "'", int41 == 74);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "-" + "'", str48, "-");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "arg" + "'", str56, "arg");
        org.junit.Assert.assertNotNull(comparator57);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #178
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #35
36: istore_2
37: aload_1
38: ldc           #11
40: putfield      #36
43: aload_1
44: getfield      #42
47: astore_3
48: aload_1
49: iconst_0
50: invokevirtual #55
53: new           #8
56: dup
57: invokespecial #9
60: astore        4
62: aload         4
64: invokevirtual #35
67: istore        5
69: aload         4
71: ldc           #11
73: putfield      #36
76: new           #8
79: dup
80: invokespecial #9
83: astore        6
85: aload         6
87: ldc           #11
89: invokevirtual #51
92: aload         6
94: ldc           #11
96: putfield      #52
99: aload         6
101: getfield      #52
104: astore        7
106: aload         6
108: iconst_0
109: putfield      #44
112: new           #8
115: dup
116: invokespecial #9
119: astore        8
121: aload         8
123: getfield      #10
126: astore        9
128: aload         8
130: invokevirtual #35
133: istore        10
135: aload         8
137: getfield      #40
140: istore        11
142: aload         8
144: bipush        97
146: invokevirtual #93
149: astore        12
151: new           #8
154: dup
155: invokespecial #9
158: astore        13
160: aload         13
162: invokevirtual #35
165: istore        14
167: aload         13
169: ldc           #11
171: putfield      #36
174: aload         13
176: bipush        52
178: putfield      #44
181: aload         13
183: ldc           #11
185: invokevirtual #88
188: aload         13
190: ldc           #33
192: bipush        32
194: iconst_3
195: invokevirtual #61
198: istore        15
200: aload         13
202: getfield      #10
205: astore        16
207: aload         8
209: aload         16
211: invokevirtual #99
214: aload         6
216: aload         16
218: invokevirtual #99
221: aload         4
223: aload         16
225: putfield      #10
228: aload         4
230: getfield      #57
233: istore        17
235: new           #8
238: dup
239: invokespecial #9
242: astore        18
244: aload         18
246: invokevirtual #35
249: istore        19
251: aload         18
253: ldc           #11
255: putfield      #36
258: aload         18
260: bipush        10
262: invokevirtual #37
265: aload         18
267: invokevirtual #73
270: astore        20
272: aload         18
274: invokevirtual #16
277: astore        21
279: aload         18
281: ldc           #11
283: putfield      #42
286: aload         18
288: ldc           #11
290: invokevirtual #88
293: aload         18
295: ldc           #46
297: putfield      #45
300: aload         18
302: invokevirtual #83
305: astore        22
307: aload         18
309: getfield      #10
312: astore        23
314: aload         4
316: aload         23
318: invokevirtual #99
321: aload_1
322: aload         23
324: putfield      #10
327: new           #22
330: dup
331: invokespecial #23
334: ldc           #24
336: invokevirtual #25
339: iload_2
340: invokevirtual #29
343: ldc           #30
345: invokevirtual #25
348: iconst_1
349: invokevirtual #29
352: ldc           #24
354: invokevirtual #25
357: invokevirtual #27
360: iload_2
361: iconst_1
362: if_icmpne     369
365: iconst_1
366: goto          370
369: iconst_0
370: invokestatic  #31
373: new           #22
376: dup
377: invokespecial #23
380: ldc           #24
382: invokevirtual #25
385: aload_3
386: invokevirtual #25
389: ldc           #48
391: invokevirtual #25
394: invokevirtual #27
397: aload_3
398: ldc           #49
400: invokestatic  #28
403: new           #22
406: dup
407: invokespecial #23
410: ldc           #24
412: invokevirtual #25
415: iload         5
417: invokevirtual #29
420: ldc           #30
422: invokevirtual #25
425: iconst_1
426: invokevirtual #29
429: ldc           #24
431: invokevirtual #25
434: invokevirtual #27
437: iload         5
439: iconst_1
440: if_icmpne     447
443: iconst_1
444: goto          448
447: iconst_0
448: invokestatic  #31
451: new           #22
454: dup
455: invokespecial #23
458: ldc           #24
460: invokevirtual #25
463: aload         7
465: invokevirtual #25
468: ldc           #26
470: invokevirtual #25
473: invokevirtual #27
476: aload         7
478: ldc           #11
480: invokestatic  #28
483: aload         9
485: invokestatic  #21
488: new           #22
491: dup
492: invokespecial #23
495: ldc           #24
497: invokevirtual #25
500: iload         10
502: invokevirtual #29
505: ldc           #30
507: invokevirtual #25
510: iconst_1
511: invokevirtual #29
514: ldc           #24
516: invokevirtual #25
519: invokevirtual #27
522: iload         10
524: iconst_1
525: if_icmpne     532
528: iconst_1
529: goto          533
532: iconst_0
533: invokestatic  #31
536: new           #22
539: dup
540: invokespecial #23
543: ldc           #24
545: invokevirtual #25
548: iload         11
550: invokevirtual #29
553: ldc           #30
555: invokevirtual #25
558: iconst_1
559: invokevirtual #29
562: ldc           #24
564: invokevirtual #25
567: invokevirtual #27
570: iload         11
572: iconst_1
573: if_icmpne     580
576: iconst_1
577: goto          581
580: iconst_0
581: invokestatic  #31
584: new           #22
587: dup
588: invokespecial #23
591: ldc           #24
593: invokevirtual #25
596: aload         12
598: invokevirtual #25
601: ldc           #142
603: invokevirtual #25
606: invokevirtual #27
609: aload         12
611: ldc           #14
613: invokestatic  #28
616: new           #22
619: dup
620: invokespecial #23
623: ldc           #24
625: invokevirtual #25
628: iload         14
630: invokevirtual #29
633: ldc           #30
635: invokevirtual #25
638: iconst_1
639: invokevirtual #29
642: ldc           #24
644: invokevirtual #25
647: invokevirtual #27
650: iload         14
652: iconst_1
653: if_icmpne     660
656: iconst_1
657: goto          661
660: iconst_0
661: invokestatic  #31
664: new           #22
667: dup
668: invokespecial #23
671: ldc           #24
673: invokevirtual #25
676: iload         15
678: invokevirtual #29
681: ldc           #30
683: invokevirtual #25
686: iconst_m1
687: invokevirtual #29
690: ldc           #24
692: invokevirtual #25
695: invokevirtual #27
698: iload         15
700: iconst_m1
701: if_icmpne     708
704: iconst_1
705: goto          709
708: iconst_0
709: invokestatic  #31
712: aload         16
714: invokestatic  #21
717: new           #22
720: dup
721: invokespecial #23
724: ldc           #24
726: invokevirtual #25
729: iload         17
731: invokevirtual #29
734: ldc           #30
736: invokevirtual #25
739: bipush        74
741: invokevirtual #29
744: ldc           #24
746: invokevirtual #25
749: invokevirtual #27
752: iload         17
754: bipush        74
756: if_icmpne     763
759: iconst_1
760: goto          764
763: iconst_0
764: invokestatic  #31
767: new           #22
770: dup
771: invokespecial #23
774: ldc           #24
776: invokevirtual #25
779: iload         19
781: invokevirtual #29
784: ldc           #30
786: invokevirtual #25
789: iconst_1
790: invokevirtual #29
793: ldc           #24
795: invokevirtual #25
798: invokevirtual #27
801: iload         19
803: iconst_1
804: if_icmpne     811
807: iconst_1
808: goto          812
811: iconst_0
812: invokestatic  #31
815: new           #22
818: dup
819: invokespecial #23
822: ldc           #24
824: invokevirtual #25
827: aload         20
829: invokevirtual #25
832: ldc           #48
834: invokevirtual #25
837: invokevirtual #27
840: aload         20
842: ldc           #49
844: invokestatic  #28
847: new           #22
850: dup
851: invokespecial #23
854: ldc           #24
856: invokevirtual #25
859: aload         21
861: invokevirtual #25
864: ldc           #26
866: invokevirtual #25
869: invokevirtual #27
872: aload         21
874: ldc           #11
876: invokestatic  #28
879: new           #22
882: dup
883: invokespecial #23
886: ldc           #24
888: invokevirtual #25
891: aload         22
893: invokevirtual #25
896: ldc           #79
898: invokevirtual #25
901: invokevirtual #27
904: aload         22
906: ldc           #78
908: invokestatic  #28
911: aload         23
913: invokestatic  #21
916: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0582
Start line: 1761
End line: 0
Method source code: 
    public void test0582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0582");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setLongOptPrefix(" ");
        helpFormatter0.defaultDescPad = (short) 10;
        java.lang.String str9 = helpFormatter0.defaultArgName;
        helpFormatter0.setOptPrefix("usage: ");
        java.io.PrintWriter printWriter12 = null;
        try {
            helpFormatter0.printWrapped(printWriter12, 32, "arg");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "arg" + "'", str9, "arg");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #179
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #35
36: istore_2
37: aload_1
38: ldc           #11
40: putfield      #36
43: aload_1
44: getfield      #42
47: astore_3
48: aload_1
49: ldc           #38
51: invokevirtual #43
54: aload_1
55: bipush        10
57: putfield      #44
60: aload_1
61: getfield      #15
64: astore        4
66: aload_1
67: ldc           #46
69: invokevirtual #51
72: aconst_null
73: astore        5
75: aload_1
76: aload         5
78: bipush        32
80: ldc           #78
82: invokevirtual #180
85: ldc           #18
87: invokestatic  #19
90: goto          95
93: astore        6
95: new           #22
98: dup
99: invokespecial #23
102: ldc           #24
104: invokevirtual #25
107: iload_2
108: invokevirtual #29
111: ldc           #30
113: invokevirtual #25
116: iconst_1
117: invokevirtual #29
120: ldc           #24
122: invokevirtual #25
125: invokevirtual #27
128: iload_2
129: iconst_1
130: if_icmpne     137
133: iconst_1
134: goto          138
137: iconst_0
138: invokestatic  #31
141: new           #22
144: dup
145: invokespecial #23
148: ldc           #24
150: invokevirtual #25
153: aload_3
154: invokevirtual #25
157: ldc           #48
159: invokevirtual #25
162: invokevirtual #27
165: aload_3
166: ldc           #49
168: invokestatic  #28
171: new           #22
174: dup
175: invokespecial #23
178: ldc           #24
180: invokevirtual #25
183: aload         4
185: invokevirtual #25
188: ldc           #79
190: invokevirtual #25
193: invokevirtual #27
196: aload         4
198: ldc           #78
200: invokestatic  #28
203: return
Exception table:
from    to  target type
75    90    93   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0583
Start line: 1786
End line: 0
Method source code: 
    public void test0583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0583");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        helpFormatter0.setSyntaxPrefix(" ");
        java.util.Comparator comparator8 = helpFormatter0.getOptionComparator();
        java.lang.String str9 = helpFormatter0.defaultArgName;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(comparator8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "arg" + "'", str9, "arg");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #181
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #35
36: istore_2
37: aload_1
38: ldc           #11
40: putfield      #36
43: aload_1
44: bipush        10
46: invokevirtual #37
49: aload_1
50: ldc           #38
52: invokevirtual #39
55: aload_1
56: invokevirtual #58
59: astore_3
60: aload_1
61: getfield      #15
64: astore        4
66: new           #22
69: dup
70: invokespecial #23
73: ldc           #24
75: invokevirtual #25
78: iload_2
79: invokevirtual #29
82: ldc           #30
84: invokevirtual #25
87: iconst_1
88: invokevirtual #29
91: ldc           #24
93: invokevirtual #25
96: invokevirtual #27
99: iload_2
100: iconst_1
101: if_icmpne     108
104: iconst_1
105: goto          109
108: iconst_0
109: invokestatic  #31
112: aload_3
113: invokestatic  #21
116: new           #22
119: dup
120: invokespecial #23
123: ldc           #24
125: invokevirtual #25
128: aload         4
130: invokevirtual #25
133: ldc           #79
135: invokevirtual #25
138: invokevirtual #27
141: aload         4
143: ldc           #78
145: invokestatic  #28
148: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0584
Start line: 1802
End line: 0
Method source code: 
    public void test0584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0584");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        java.lang.String str6 = helpFormatter0.getLongOptSeparator();
        java.lang.String str7 = helpFormatter0.getNewLine();
        org.apache.commons.cli.HelpFormatter helpFormatter8 = new org.apache.commons.cli.HelpFormatter();
        int int9 = helpFormatter8.getLeftPadding();
        helpFormatter8.defaultNewLine = "";
        helpFormatter8.setDescPadding(10);
        java.lang.String str14 = helpFormatter8.getLongOptSeparator();
        java.lang.String str15 = helpFormatter8.getLongOptSeparator();
        java.lang.String str17 = helpFormatter8.createPadding((int) (byte) 1);
        java.lang.String str18 = helpFormatter8.defaultOptPrefix;
        java.util.Comparator comparator19 = helpFormatter8.optionComparator;
        helpFormatter0.optionComparator = comparator19;
        helpFormatter0.setOptPrefix("");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + " " + "'", str6, " ");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + " " + "'", str14, " ");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + " " + "'", str15, " ");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + " " + "'", str17, " ");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "-" + "'", str18, "-");
        org.junit.Assert.assertNotNull(comparator19);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #182
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #35
36: istore_2
37: aload_1
38: ldc           #11
40: putfield      #36
43: aload_1
44: bipush        10
46: invokevirtual #37
49: aload_1
50: invokevirtual #72
53: astore_3
54: aload_1
55: invokevirtual #16
58: astore        4
60: new           #8
63: dup
64: invokespecial #9
67: astore        5
69: aload         5
71: invokevirtual #35
74: istore        6
76: aload         5
78: ldc           #11
80: putfield      #36
83: aload         5
85: bipush        10
87: invokevirtual #37
90: aload         5
92: invokevirtual #72
95: astore        7
97: aload         5
99: invokevirtual #72
102: astore        8
104: aload         5
106: iconst_1
107: invokevirtual #93
110: astore        9
112: aload         5
114: getfield      #42
117: astore        10
119: aload         5
121: getfield      #10
124: astore        11
126: aload_1
127: aload         11
129: putfield      #10
132: aload_1
133: ldc           #11
135: invokevirtual #51
138: new           #22
141: dup
142: invokespecial #23
145: ldc           #24
147: invokevirtual #25
150: iload_2
151: invokevirtual #29
154: ldc           #30
156: invokevirtual #25
159: iconst_1
160: invokevirtual #29
163: ldc           #24
165: invokevirtual #25
168: invokevirtual #27
171: iload_2
172: iconst_1
173: if_icmpne     180
176: iconst_1
177: goto          181
180: iconst_0
181: invokestatic  #31
184: new           #22
187: dup
188: invokespecial #23
191: ldc           #24
193: invokevirtual #25
196: aload_3
197: invokevirtual #25
200: ldc           #75
202: invokevirtual #25
205: invokevirtual #27
208: aload_3
209: ldc           #38
211: invokestatic  #28
214: new           #22
217: dup
218: invokespecial #23
221: ldc           #24
223: invokevirtual #25
226: aload         4
228: invokevirtual #25
231: ldc           #26
233: invokevirtual #25
236: invokevirtual #27
239: aload         4
241: ldc           #11
243: invokestatic  #28
246: new           #22
249: dup
250: invokespecial #23
253: ldc           #24
255: invokevirtual #25
258: iload         6
260: invokevirtual #29
263: ldc           #30
265: invokevirtual #25
268: iconst_1
269: invokevirtual #29
272: ldc           #24
274: invokevirtual #25
277: invokevirtual #27
280: iload         6
282: iconst_1
283: if_icmpne     290
286: iconst_1
287: goto          291
290: iconst_0
291: invokestatic  #31
294: new           #22
297: dup
298: invokespecial #23
301: ldc           #24
303: invokevirtual #25
306: aload         7
308: invokevirtual #25
311: ldc           #75
313: invokevirtual #25
316: invokevirtual #27
319: aload         7
321: ldc           #38
323: invokestatic  #28
326: new           #22
329: dup
330: invokespecial #23
333: ldc           #24
335: invokevirtual #25
338: aload         8
340: invokevirtual #25
343: ldc           #75
345: invokevirtual #25
348: invokevirtual #27
351: aload         8
353: ldc           #38
355: invokestatic  #28
358: new           #22
361: dup
362: invokespecial #23
365: ldc           #24
367: invokevirtual #25
370: aload         9
372: invokevirtual #25
375: ldc           #75
377: invokevirtual #25
380: invokevirtual #27
383: aload         9
385: ldc           #38
387: invokestatic  #28
390: new           #22
393: dup
394: invokespecial #23
397: ldc           #24
399: invokevirtual #25
402: aload         10
404: invokevirtual #25
407: ldc           #48
409: invokevirtual #25
412: invokevirtual #27
415: aload         10
417: ldc           #49
419: invokestatic  #28
422: aload         11
424: invokestatic  #21
427: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0585
Start line: 1834
End line: 0
Method source code: 
    public void test0585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0585");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        int int5 = helpFormatter0.defaultDescPad;
        helpFormatter0.defaultWidth = '4';
        int int8 = helpFormatter0.defaultWidth;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 3 + "'", int5 == 3);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #183
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #35
36: istore_2
37: aload_1
38: ldc           #11
40: putfield      #36
43: aload_1
44: getfield      #42
47: astore_3
48: aload_1
49: getfield      #44
52: istore        4
54: aload_1
55: bipush        52
57: putfield      #57
60: aload_1
61: getfield      #57
64: istore        5
66: new           #22
69: dup
70: invokespecial #23
73: ldc           #24
75: invokevirtual #25
78: iload_2
79: invokevirtual #29
82: ldc           #30
84: invokevirtual #25
87: iconst_1
88: invokevirtual #29
91: ldc           #24
93: invokevirtual #25
96: invokevirtual #27
99: iload_2
100: iconst_1
101: if_icmpne     108
104: iconst_1
105: goto          109
108: iconst_0
109: invokestatic  #31
112: new           #22
115: dup
116: invokespecial #23
119: ldc           #24
121: invokevirtual #25
124: aload_3
125: invokevirtual #25
128: ldc           #48
130: invokevirtual #25
133: invokevirtual #27
136: aload_3
137: ldc           #49
139: invokestatic  #28
142: new           #22
145: dup
146: invokespecial #23
149: ldc           #24
151: invokevirtual #25
154: iload         4
156: invokevirtual #29
159: ldc           #30
161: invokevirtual #25
164: iconst_3
165: invokevirtual #29
168: ldc           #24
170: invokevirtual #25
173: invokevirtual #27
176: iload         4
178: iconst_3
179: if_icmpne     186
182: iconst_1
183: goto          187
186: iconst_0
187: invokestatic  #31
190: new           #22
193: dup
194: invokespecial #23
197: ldc           #24
199: invokevirtual #25
202: iload         5
204: invokevirtual #29
207: ldc           #30
209: invokevirtual #25
212: bipush        52
214: invokevirtual #29
217: ldc           #24
219: invokevirtual #25
222: invokevirtual #27
225: iload         5
227: bipush        52
229: if_icmpne     236
232: iconst_1
233: goto          237
236: iconst_0
237: invokestatic  #31
240: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0586
Start line: 1851
End line: 0
Method source code: 
    public void test0586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0586");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.defaultDescPad = '4';
        helpFormatter0.setNewLine("");
        helpFormatter0.defaultDescPad = 'a';
        java.lang.String str10 = helpFormatter0.defaultNewLine;
        java.util.Comparator comparator11 = helpFormatter0.optionComparator;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(comparator11);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #184
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #35
36: istore_2
37: aload_1
38: ldc           #11
40: putfield      #36
43: aload_1
44: bipush        52
46: putfield      #44
49: aload_1
50: ldc           #11
52: invokevirtual #88
55: aload_1
56: bipush        97
58: putfield      #44
61: aload_1
62: getfield      #36
65: astore_3
66: aload_1
67: getfield      #10
70: astore        4
72: new           #22
75: dup
76: invokespecial #23
79: ldc           #24
81: invokevirtual #25
84: iload_2
85: invokevirtual #29
88: ldc           #30
90: invokevirtual #25
93: iconst_1
94: invokevirtual #29
97: ldc           #24
99: invokevirtual #25
102: invokevirtual #27
105: iload_2
106: iconst_1
107: if_icmpne     114
110: iconst_1
111: goto          115
114: iconst_0
115: invokestatic  #31
118: new           #22
121: dup
122: invokespecial #23
125: ldc           #24
127: invokevirtual #25
130: aload_3
131: invokevirtual #25
134: ldc           #26
136: invokevirtual #25
139: invokevirtual #27
142: aload_3
143: ldc           #11
145: invokestatic  #28
148: aload         4
150: invokestatic  #21
153: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0587
Start line: 1868
End line: 0
Method source code: 
    public void test0587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0587");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.defaultLongOptPrefix = "hi!";
        java.lang.StringBuffer stringBuffer3 = null;
        try {
            java.lang.StringBuffer stringBuffer7 = helpFormatter0.renderWrappedText(stringBuffer3, 0, 0, "                                                                                                 ");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #185
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: ldc           #65
35: putfield      #52
38: aconst_null
39: astore_2
40: aload_1
41: aload_2
42: iconst_0
43: iconst_0
44: ldc           #14
46: invokevirtual #123
49: astore_3
50: ldc           #18
52: invokestatic  #19
55: goto          59
58: astore_3
59: return
Exception table:
from    to  target type
40    55    58   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0588
Start line: 1884
End line: 0
Method source code: 
    public void test0588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0588");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.util.Comparator comparator1 = helpFormatter0.optionComparator;
        java.lang.String str3 = helpFormatter0.rtrim("");
        helpFormatter0.setLongOptSeparator(" ");
        helpFormatter0.setArgName("--");
        helpFormatter0.defaultNewLine = "                                                                                                    ";
        helpFormatter0.setLongOptSeparator("                                                    ");
        java.io.PrintWriter printWriter12 = null;
        try {
            helpFormatter0.printWrapped(printWriter12, (int) (short) -1, 0, "arg");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(comparator1);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #186
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: getfield      #10
36: astore_2
37: aload_1
38: ldc           #11
40: invokevirtual #12
43: astore_3
44: aload_1
45: ldc           #38
47: invokevirtual #74
50: aload_1
51: ldc           #63
53: invokevirtual #59
56: aload_1
57: ldc           #118
59: putfield      #36
62: aload_1
63: ldc           #77
65: invokevirtual #74
68: aconst_null
69: astore        4
71: aload_1
72: aload         4
74: iconst_m1
75: iconst_0
76: ldc           #78
78: invokevirtual #187
81: ldc           #18
83: invokestatic  #19
86: goto          91
89: astore        5
91: aload_2
92: invokestatic  #21
95: new           #22
98: dup
99: invokespecial #23
102: ldc           #24
104: invokevirtual #25
107: aload_3
108: invokevirtual #25
111: ldc           #26
113: invokevirtual #25
116: invokevirtual #27
119: aload_3
120: ldc           #11
122: invokestatic  #28
125: return
Exception table:
from    to  target type
71    86    89   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0589
Start line: 1907
End line: 0
Method source code: 
    public void test0589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0589");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        java.lang.String str3 = helpFormatter0.getLongOptSeparator();
        helpFormatter0.defaultDescPad = 0;
        java.lang.String str6 = helpFormatter0.getOptPrefix();
        int int7 = helpFormatter0.getDescPadding();
        java.lang.String str8 = helpFormatter0.defaultArgName;
        java.util.Comparator comparator9 = helpFormatter0.optionComparator;
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + " " + "'", str3, " ");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "arg" + "'", str8, "arg");
        org.junit.Assert.assertNotNull(comparator9);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #188
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: ldc           #11
35: invokevirtual #51
38: aload_1
39: invokevirtual #72
42: astore_2
43: aload_1
44: iconst_0
45: putfield      #44
48: aload_1
49: invokevirtual #73
52: astore_3
53: aload_1
54: invokevirtual #13
57: istore        4
59: aload_1
60: getfield      #15
63: astore        5
65: aload_1
66: getfield      #10
69: astore        6
71: new           #22
74: dup
75: invokespecial #23
78: ldc           #24
80: invokevirtual #25
83: aload_2
84: invokevirtual #25
87: ldc           #75
89: invokevirtual #25
92: invokevirtual #27
95: aload_2
96: ldc           #38
98: invokestatic  #28
101: new           #22
104: dup
105: invokespecial #23
108: ldc           #24
110: invokevirtual #25
113: aload_3
114: invokevirtual #25
117: ldc           #26
119: invokevirtual #25
122: invokevirtual #27
125: aload_3
126: ldc           #11
128: invokestatic  #28
131: new           #22
134: dup
135: invokespecial #23
138: ldc           #24
140: invokevirtual #25
143: iload         4
145: invokevirtual #29
148: ldc           #30
150: invokevirtual #25
153: iconst_0
154: invokevirtual #29
157: ldc           #24
159: invokevirtual #25
162: invokevirtual #27
165: iload         4
167: ifne          174
170: iconst_1
171: goto          175
174: iconst_0
175: invokestatic  #31
178: new           #22
181: dup
182: invokespecial #23
185: ldc           #24
187: invokevirtual #25
190: aload         5
192: invokevirtual #25
195: ldc           #79
197: invokevirtual #25
200: invokevirtual #27
203: aload         5
205: ldc           #78
207: invokestatic  #28
210: aload         6
212: invokestatic  #21
215: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0590
Start line: 1926
End line: 0
Method source code: 
    public void test0590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0590");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.util.Comparator comparator1 = helpFormatter0.optionComparator;
        int int2 = helpFormatter0.defaultLeftPad;
        helpFormatter0.setDescPadding((int) (byte) 100);
        int int5 = helpFormatter0.defaultLeftPad;
        helpFormatter0.defaultWidth = (byte) 10;
        int int8 = helpFormatter0.defaultWidth;
        org.junit.Assert.assertNotNull(comparator1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 10 + "'", int8 == 10);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #189
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: getfield      #10
36: astore_2
37: aload_1
38: getfield      #40
41: istore_3
42: aload_1
43: bipush        100
45: invokevirtual #37
48: aload_1
49: getfield      #40
52: istore        4
54: aload_1
55: bipush        10
57: putfield      #57
60: aload_1
61: getfield      #57
64: istore        5
66: aload_2
67: invokestatic  #21
70: new           #22
73: dup
74: invokespecial #23
77: ldc           #24
79: invokevirtual #25
82: iload_3
83: invokevirtual #29
86: ldc           #30
88: invokevirtual #25
91: iconst_1
92: invokevirtual #29
95: ldc           #24
97: invokevirtual #25
100: invokevirtual #27
103: iload_3
104: iconst_1
105: if_icmpne     112
108: iconst_1
109: goto          113
112: iconst_0
113: invokestatic  #31
116: new           #22
119: dup
120: invokespecial #23
123: ldc           #24
125: invokevirtual #25
128: iload         4
130: invokevirtual #29
133: ldc           #30
135: invokevirtual #25
138: iconst_1
139: invokevirtual #29
142: ldc           #24
144: invokevirtual #25
147: invokevirtual #27
150: iload         4
152: iconst_1
153: if_icmpne     160
156: iconst_1
157: goto          161
160: iconst_0
161: invokestatic  #31
164: new           #22
167: dup
168: invokespecial #23
171: ldc           #24
173: invokevirtual #25
176: iload         5
178: invokevirtual #29
181: ldc           #30
183: invokevirtual #25
186: bipush        10
188: invokevirtual #29
191: ldc           #24
193: invokevirtual #25
196: invokevirtual #27
199: iload         5
201: bipush        10
203: if_icmpne     210
206: iconst_1
207: goto          211
210: iconst_0
211: invokestatic  #31
214: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0591
Start line: 1943
End line: 0
Method source code: 
    public void test0591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0591");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.defaultDescPad = '4';
        helpFormatter0.setNewLine("");
        helpFormatter0.defaultWidth = '4';
        org.apache.commons.cli.HelpFormatter helpFormatter10 = new org.apache.commons.cli.HelpFormatter();
        int int11 = helpFormatter10.getLeftPadding();
        java.lang.String str12 = helpFormatter10.defaultLongOptPrefix;
        java.lang.String str13 = helpFormatter10.getOptPrefix();
        java.util.Comparator comparator14 = helpFormatter10.optionComparator;
        java.util.Comparator comparator15 = helpFormatter10.optionComparator;
        helpFormatter0.optionComparator = comparator15;
        helpFormatter0.defaultDescPad = (short) 0;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "--" + "'", str12, "--");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "-" + "'", str13, "-");
        org.junit.Assert.assertNotNull(comparator14);
        org.junit.Assert.assertNotNull(comparator15);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #190
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #35
36: istore_2
37: aload_1
38: ldc           #11
40: putfield      #36
43: aload_1
44: bipush        52
46: putfield      #44
49: aload_1
50: ldc           #11
52: invokevirtual #88
55: aload_1
56: bipush        52
58: putfield      #57
61: new           #8
64: dup
65: invokespecial #9
68: astore_3
69: aload_3
70: invokevirtual #35
73: istore        4
75: aload_3
76: getfield      #52
79: astore        5
81: aload_3
82: invokevirtual #73
85: astore        6
87: aload_3
88: getfield      #10
91: astore        7
93: aload_3
94: getfield      #10
97: astore        8
99: aload_1
100: aload         8
102: putfield      #10
105: aload_1
106: iconst_0
107: putfield      #44
110: new           #22
113: dup
114: invokespecial #23
117: ldc           #24
119: invokevirtual #25
122: iload_2
123: invokevirtual #29
126: ldc           #30
128: invokevirtual #25
131: iconst_1
132: invokevirtual #29
135: ldc           #24
137: invokevirtual #25
140: invokevirtual #27
143: iload_2
144: iconst_1
145: if_icmpne     152
148: iconst_1
149: goto          153
152: iconst_0
153: invokestatic  #31
156: new           #22
159: dup
160: invokespecial #23
163: ldc           #24
165: invokevirtual #25
168: iload         4
170: invokevirtual #29
173: ldc           #30
175: invokevirtual #25
178: iconst_1
179: invokevirtual #29
182: ldc           #24
184: invokevirtual #25
187: invokevirtual #27
190: iload         4
192: iconst_1
193: if_icmpne     200
196: iconst_1
197: goto          201
200: iconst_0
201: invokestatic  #31
204: new           #22
207: dup
208: invokespecial #23
211: ldc           #24
213: invokevirtual #25
216: aload         5
218: invokevirtual #25
221: ldc           #62
223: invokevirtual #25
226: invokevirtual #27
229: aload         5
231: ldc           #63
233: invokestatic  #28
236: new           #22
239: dup
240: invokespecial #23
243: ldc           #24
245: invokevirtual #25
248: aload         6
250: invokevirtual #25
253: ldc           #48
255: invokevirtual #25
258: invokevirtual #27
261: aload         6
263: ldc           #49
265: invokestatic  #28
268: aload         7
270: invokestatic  #21
273: aload         8
275: invokestatic  #21
278: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0592
Start line: 1969
End line: 0
Method source code: 
    public void test0592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0592");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        java.lang.String str6 = helpFormatter0.rtrim("");
        int int7 = helpFormatter0.getDescPadding();
        int int8 = helpFormatter0.getDescPadding();
        helpFormatter0.setWidth((int) '4');
        int int11 = helpFormatter0.defaultWidth;
        helpFormatter0.defaultLongOptPrefix = "usage: ";
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 3 + "'", int7 == 3);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 3 + "'", int8 == 3);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #191
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #35
36: istore_2
37: aload_1
38: ldc           #11
40: putfield      #36
43: aload_1
44: getfield      #42
47: astore_3
48: aload_1
49: ldc           #11
51: invokevirtual #12
54: astore        4
56: aload_1
57: invokevirtual #13
60: istore        5
62: aload_1
63: invokevirtual #13
66: istore        6
68: aload_1
69: bipush        52
71: invokevirtual #90
74: aload_1
75: getfield      #57
78: istore        7
80: aload_1
81: ldc           #46
83: putfield      #52
86: new           #22
89: dup
90: invokespecial #23
93: ldc           #24
95: invokevirtual #25
98: iload_2
99: invokevirtual #29
102: ldc           #30
104: invokevirtual #25
107: iconst_1
108: invokevirtual #29
111: ldc           #24
113: invokevirtual #25
116: invokevirtual #27
119: iload_2
120: iconst_1
121: if_icmpne     128
124: iconst_1
125: goto          129
128: iconst_0
129: invokestatic  #31
132: new           #22
135: dup
136: invokespecial #23
139: ldc           #24
141: invokevirtual #25
144: aload_3
145: invokevirtual #25
148: ldc           #48
150: invokevirtual #25
153: invokevirtual #27
156: aload_3
157: ldc           #49
159: invokestatic  #28
162: new           #22
165: dup
166: invokespecial #23
169: ldc           #24
171: invokevirtual #25
174: aload         4
176: invokevirtual #25
179: ldc           #26
181: invokevirtual #25
184: invokevirtual #27
187: aload         4
189: ldc           #11
191: invokestatic  #28
194: new           #22
197: dup
198: invokespecial #23
201: ldc           #24
203: invokevirtual #25
206: iload         5
208: invokevirtual #29
211: ldc           #30
213: invokevirtual #25
216: iconst_3
217: invokevirtual #29
220: ldc           #24
222: invokevirtual #25
225: invokevirtual #27
228: iload         5
230: iconst_3
231: if_icmpne     238
234: iconst_1
235: goto          239
238: iconst_0
239: invokestatic  #31
242: new           #22
245: dup
246: invokespecial #23
249: ldc           #24
251: invokevirtual #25
254: iload         6
256: invokevirtual #29
259: ldc           #30
261: invokevirtual #25
264: iconst_3
265: invokevirtual #29
268: ldc           #24
270: invokevirtual #25
273: invokevirtual #27
276: iload         6
278: iconst_3
279: if_icmpne     286
282: iconst_1
283: goto          287
286: iconst_0
287: invokestatic  #31
290: new           #22
293: dup
294: invokespecial #23
297: ldc           #24
299: invokevirtual #25
302: iload         7
304: invokevirtual #29
307: ldc           #30
309: invokevirtual #25
312: bipush        52
314: invokevirtual #29
317: ldc           #24
319: invokevirtual #25
322: invokevirtual #27
325: iload         7
327: bipush        52
329: if_icmpne     336
332: iconst_1
333: goto          337
336: iconst_0
337: invokestatic  #31
340: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0593
Start line: 1991
End line: 0
Method source code: 
    public void test0593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0593");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str6 = helpFormatter0.getNewLine();
        java.util.Comparator comparator7 = helpFormatter0.getOptionComparator();
        helpFormatter0.setDescPadding(3);
        int int10 = helpFormatter0.defaultLeftPad;
        int int11 = helpFormatter0.getWidth();
        java.lang.String str13 = helpFormatter0.createPadding(0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\n" + "'", str6, "\n");
        org.junit.Assert.assertNotNull(comparator7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 74 + "'", int11 == 74);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #192
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: ldc           #11
35: invokevirtual #51
38: aload_1
39: ldc           #11
41: putfield      #52
44: aload_1
45: getfield      #52
48: astore_2
49: aload_1
50: invokevirtual #16
53: astore_3
54: aload_1
55: invokevirtual #58
58: astore        4
60: aload_1
61: iconst_3
62: invokevirtual #37
65: aload_1
66: getfield      #40
69: istore        5
71: aload_1
72: invokevirtual #66
75: istore        6
77: aload_1
78: iconst_0
79: invokevirtual #93
82: astore        7
84: new           #22
87: dup
88: invokespecial #23
91: ldc           #24
93: invokevirtual #25
96: aload_2
97: invokevirtual #25
100: ldc           #26
102: invokevirtual #25
105: invokevirtual #27
108: aload_2
109: ldc           #11
111: invokestatic  #28
114: new           #22
117: dup
118: invokespecial #23
121: ldc           #24
123: invokevirtual #25
126: aload_3
127: invokevirtual #25
130: ldc           #32
132: invokevirtual #25
135: invokevirtual #27
138: aload_3
139: ldc           #33
141: invokestatic  #28
144: aload         4
146: invokestatic  #21
149: new           #22
152: dup
153: invokespecial #23
156: ldc           #24
158: invokevirtual #25
161: iload         5
163: invokevirtual #29
166: ldc           #30
168: invokevirtual #25
171: iconst_1
172: invokevirtual #29
175: ldc           #24
177: invokevirtual #25
180: invokevirtual #27
183: iload         5
185: iconst_1
186: if_icmpne     193
189: iconst_1
190: goto          194
193: iconst_0
194: invokestatic  #31
197: new           #22
200: dup
201: invokespecial #23
204: ldc           #24
206: invokevirtual #25
209: iload         6
211: invokevirtual #29
214: ldc           #30
216: invokevirtual #25
219: bipush        74
221: invokevirtual #29
224: ldc           #24
226: invokevirtual #25
229: invokevirtual #27
232: iload         6
234: bipush        74
236: if_icmpne     243
239: iconst_1
240: goto          244
243: iconst_0
244: invokestatic  #31
247: new           #22
250: dup
251: invokespecial #23
254: ldc           #24
256: invokevirtual #25
259: aload         7
261: invokevirtual #25
264: ldc           #26
266: invokevirtual #25
269: invokevirtual #27
272: aload         7
274: ldc           #11
276: invokestatic  #28
279: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0594
Start line: 2013
End line: 0
Method source code: 
    public void test0594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0594");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.defaultArgName;
        java.lang.String str3 = helpFormatter0.defaultNewLine;
        helpFormatter0.defaultLeftPad = 10;
        java.lang.String str6 = helpFormatter0.defaultSyntaxPrefix;
        java.lang.String str7 = helpFormatter0.getOptPrefix();
        java.lang.String str8 = helpFormatter0.getSyntaxPrefix();
        java.lang.String str9 = helpFormatter0.getOptPrefix();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "arg" + "'", str2, "arg");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\n" + "'", str3, "\n");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "usage: " + "'", str6, "usage: ");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "-" + "'", str7, "-");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "usage: " + "'", str8, "usage: ");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-" + "'", str9, "-");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #193
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #35
36: istore_2
37: aload_1
38: getfield      #15
41: astore_3
42: aload_1
43: getfield      #36
46: astore        4
48: aload_1
49: bipush        10
51: putfield      #40
54: aload_1
55: getfield      #45
58: astore        5
60: aload_1
61: invokevirtual #73
64: astore        6
66: aload_1
67: invokevirtual #89
70: astore        7
72: aload_1
73: invokevirtual #73
76: astore        8
78: new           #22
81: dup
82: invokespecial #23
85: ldc           #24
87: invokevirtual #25
90: iload_2
91: invokevirtual #29
94: ldc           #30
96: invokevirtual #25
99: iconst_1
100: invokevirtual #29
103: ldc           #24
105: invokevirtual #25
108: invokevirtual #27
111: iload_2
112: iconst_1
113: if_icmpne     120
116: iconst_1
117: goto          121
120: iconst_0
121: invokestatic  #31
124: new           #22
127: dup
128: invokespecial #23
131: ldc           #24
133: invokevirtual #25
136: aload_3
137: invokevirtual #25
140: ldc           #79
142: invokevirtual #25
145: invokevirtual #27
148: aload_3
149: ldc           #78
151: invokestatic  #28
154: new           #22
157: dup
158: invokespecial #23
161: ldc           #24
163: invokevirtual #25
166: aload         4
168: invokevirtual #25
171: ldc           #32
173: invokevirtual #25
176: invokevirtual #27
179: aload         4
181: ldc           #33
183: invokestatic  #28
186: new           #22
189: dup
190: invokespecial #23
193: ldc           #24
195: invokevirtual #25
198: aload         5
200: invokevirtual #25
203: ldc           #104
205: invokevirtual #25
208: invokevirtual #27
211: aload         5
213: ldc           #46
215: invokestatic  #28
218: new           #22
221: dup
222: invokespecial #23
225: ldc           #24
227: invokevirtual #25
230: aload         6
232: invokevirtual #25
235: ldc           #48
237: invokevirtual #25
240: invokevirtual #27
243: aload         6
245: ldc           #49
247: invokestatic  #28
250: new           #22
253: dup
254: invokespecial #23
257: ldc           #24
259: invokevirtual #25
262: aload         7
264: invokevirtual #25
267: ldc           #104
269: invokevirtual #25
272: invokevirtual #27
275: aload         7
277: ldc           #46
279: invokestatic  #28
282: new           #22
285: dup
286: invokespecial #23
289: ldc           #24
291: invokevirtual #25
294: aload         8
296: invokevirtual #25
299: ldc           #48
301: invokevirtual #25
304: invokevirtual #27
307: aload         8
309: ldc           #49
311: invokestatic  #28
314: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0595
Start line: 2035
End line: 0
Method source code: 
    public void test0595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0595");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setLongOptPrefix(" ");
        helpFormatter0.defaultDescPad = (short) 10;
        helpFormatter0.defaultSyntaxPrefix = "";
        helpFormatter0.setLongOptPrefix("");
        java.lang.String str13 = helpFormatter0.defaultNewLine;
        java.lang.String str14 = helpFormatter0.getLongOptPrefix();
        org.apache.commons.cli.Options options17 = null;
        try {
            helpFormatter0.printHelp("arg", "                                                                                                    ", options17, "                                                                                                    ");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #194
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #35
36: istore_2
37: aload_1
38: ldc           #11
40: putfield      #36
43: aload_1
44: getfield      #42
47: astore_3
48: aload_1
49: ldc           #38
51: invokevirtual #43
54: aload_1
55: bipush        10
57: putfield      #44
60: aload_1
61: ldc           #11
63: putfield      #45
66: aload_1
67: ldc           #11
69: invokevirtual #43
72: aload_1
73: getfield      #36
76: astore        4
78: aload_1
79: invokevirtual #53
82: astore        5
84: aconst_null
85: astore        6
87: aload_1
88: ldc           #78
90: ldc           #118
92: aload         6
94: ldc           #118
96: invokevirtual #128
99: ldc           #18
101: invokestatic  #19
104: goto          109
107: astore        7
109: new           #22
112: dup
113: invokespecial #23
116: ldc           #24
118: invokevirtual #25
121: iload_2
122: invokevirtual #29
125: ldc           #30
127: invokevirtual #25
130: iconst_1
131: invokevirtual #29
134: ldc           #24
136: invokevirtual #25
139: invokevirtual #27
142: iload_2
143: iconst_1
144: if_icmpne     151
147: iconst_1
148: goto          152
151: iconst_0
152: invokestatic  #31
155: new           #22
158: dup
159: invokespecial #23
162: ldc           #24
164: invokevirtual #25
167: aload_3
168: invokevirtual #25
171: ldc           #48
173: invokevirtual #25
176: invokevirtual #27
179: aload_3
180: ldc           #49
182: invokestatic  #28
185: new           #22
188: dup
189: invokespecial #23
192: ldc           #24
194: invokevirtual #25
197: aload         4
199: invokevirtual #25
202: ldc           #26
204: invokevirtual #25
207: invokevirtual #27
210: aload         4
212: ldc           #11
214: invokestatic  #28
217: new           #22
220: dup
221: invokespecial #23
224: ldc           #24
226: invokevirtual #25
229: aload         5
231: invokevirtual #25
234: ldc           #26
236: invokevirtual #25
239: invokevirtual #27
242: aload         5
244: ldc           #11
246: invokestatic  #28
249: return
Exception table:
from    to  target type
87   104   107   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0596
Start line: 2063
End line: 0
Method source code: 
    public void test0596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0596");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.defaultLongOptPrefix = "hi!";
        helpFormatter0.setDescPadding((int) (short) 0);
        java.lang.String str5 = helpFormatter0.getOptPrefix();
        org.apache.commons.cli.HelpFormatter helpFormatter6 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter6.setOptPrefix("");
        helpFormatter6.defaultLongOptPrefix = "";
        java.lang.String str11 = helpFormatter6.defaultLongOptPrefix;
        java.lang.String str12 = helpFormatter6.getNewLine();
        java.lang.String str13 = helpFormatter6.defaultOptPrefix;
        helpFormatter6.setDescPadding(74);
        java.util.Comparator comparator16 = helpFormatter6.getOptionComparator();
        helpFormatter0.optionComparator = comparator16;
        helpFormatter0.setWidth((int) (short) 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "-" + "'", str5, "-");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\n" + "'", str12, "\n");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(comparator16);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #195
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: ldc           #65
35: putfield      #52
38: aload_1
39: iconst_0
40: invokevirtual #37
43: aload_1
44: invokevirtual #73
47: astore_2
48: new           #8
51: dup
52: invokespecial #9
55: astore_3
56: aload_3
57: ldc           #11
59: invokevirtual #51
62: aload_3
63: ldc           #11
65: putfield      #52
68: aload_3
69: getfield      #52
72: astore        4
74: aload_3
75: invokevirtual #16
78: astore        5
80: aload_3
81: getfield      #42
84: astore        6
86: aload_3
87: bipush        74
89: invokevirtual #37
92: aload_3
93: invokevirtual #58
96: astore        7
98: aload_1
99: aload         7
101: putfield      #10
104: aload_1
105: iconst_0
106: invokevirtual #90
109: new           #22
112: dup
113: invokespecial #23
116: ldc           #24
118: invokevirtual #25
121: aload_2
122: invokevirtual #25
125: ldc           #48
127: invokevirtual #25
130: invokevirtual #27
133: aload_2
134: ldc           #49
136: invokestatic  #28
139: new           #22
142: dup
143: invokespecial #23
146: ldc           #24
148: invokevirtual #25
151: aload         4
153: invokevirtual #25
156: ldc           #26
158: invokevirtual #25
161: invokevirtual #27
164: aload         4
166: ldc           #11
168: invokestatic  #28
171: new           #22
174: dup
175: invokespecial #23
178: ldc           #24
180: invokevirtual #25
183: aload         5
185: invokevirtual #25
188: ldc           #32
190: invokevirtual #25
193: invokevirtual #27
196: aload         5
198: ldc           #33
200: invokestatic  #28
203: new           #22
206: dup
207: invokespecial #23
210: ldc           #24
212: invokevirtual #25
215: aload         6
217: invokevirtual #25
220: ldc           #26
222: invokevirtual #25
225: invokevirtual #27
228: aload         6
230: ldc           #11
232: invokestatic  #28
235: aload         7
237: invokestatic  #21
240: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0597
Start line: 2088
End line: 0
Method source code: 
    public void test0597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0597");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        java.lang.String str6 = helpFormatter0.defaultNewLine;
        helpFormatter0.setDescPadding(10);
        int int9 = helpFormatter0.defaultLeftPad;
        int int10 = helpFormatter0.getLeftPadding();
        helpFormatter0.setLongOptSeparator("                                                                                                    ");
        java.lang.String str13 = helpFormatter0.defaultSyntaxPrefix;
        java.lang.String str14 = helpFormatter0.defaultLongOptPrefix;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "usage: " + "'", str13, "usage: ");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "--" + "'", str14, "--");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #196
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #35
36: istore_2
37: aload_1
38: ldc           #11
40: putfield      #36
43: aload_1
44: bipush        10
46: invokevirtual #37
49: aload_1
50: getfield      #36
53: astore_3
54: aload_1
55: bipush        10
57: invokevirtual #37
60: aload_1
61: getfield      #40
64: istore        4
66: aload_1
67: invokevirtual #35
70: istore        5
72: aload_1
73: ldc           #118
75: invokevirtual #74
78: aload_1
79: getfield      #45
82: astore        6
84: aload_1
85: getfield      #52
88: astore        7
90: new           #22
93: dup
94: invokespecial #23
97: ldc           #24
99: invokevirtual #25
102: iload_2
103: invokevirtual #29
106: ldc           #30
108: invokevirtual #25
111: iconst_1
112: invokevirtual #29
115: ldc           #24
117: invokevirtual #25
120: invokevirtual #27
123: iload_2
124: iconst_1
125: if_icmpne     132
128: iconst_1
129: goto          133
132: iconst_0
133: invokestatic  #31
136: new           #22
139: dup
140: invokespecial #23
143: ldc           #24
145: invokevirtual #25
148: aload_3
149: invokevirtual #25
152: ldc           #26
154: invokevirtual #25
157: invokevirtual #27
160: aload_3
161: ldc           #11
163: invokestatic  #28
166: new           #22
169: dup
170: invokespecial #23
173: ldc           #24
175: invokevirtual #25
178: iload         4
180: invokevirtual #29
183: ldc           #30
185: invokevirtual #25
188: iconst_1
189: invokevirtual #29
192: ldc           #24
194: invokevirtual #25
197: invokevirtual #27
200: iload         4
202: iconst_1
203: if_icmpne     210
206: iconst_1
207: goto          211
210: iconst_0
211: invokestatic  #31
214: new           #22
217: dup
218: invokespecial #23
221: ldc           #24
223: invokevirtual #25
226: iload         5
228: invokevirtual #29
231: ldc           #30
233: invokevirtual #25
236: iconst_1
237: invokevirtual #29
240: ldc           #24
242: invokevirtual #25
245: invokevirtual #27
248: iload         5
250: iconst_1
251: if_icmpne     258
254: iconst_1
255: goto          259
258: iconst_0
259: invokestatic  #31
262: new           #22
265: dup
266: invokespecial #23
269: ldc           #24
271: invokevirtual #25
274: aload         6
276: invokevirtual #25
279: ldc           #104
281: invokevirtual #25
284: invokevirtual #27
287: aload         6
289: ldc           #46
291: invokestatic  #28
294: new           #22
297: dup
298: invokespecial #23
301: ldc           #24
303: invokevirtual #25
306: aload         7
308: invokevirtual #25
311: ldc           #62
313: invokevirtual #25
316: invokevirtual #27
319: aload         7
321: ldc           #63
323: invokestatic  #28
326: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0598
Start line: 2111
End line: 0
Method source code: 
    public void test0598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0598");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setLongOptPrefix(" ");
        java.lang.String str7 = helpFormatter0.getLongOptPrefix();
        java.lang.String str8 = helpFormatter0.defaultNewLine;
        helpFormatter0.defaultArgName = "                                                                                                    ";
        java.lang.String str11 = helpFormatter0.getLongOptPrefix();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + " " + "'", str7, " ");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + " " + "'", str11, " ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #197
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #35
36: istore_2
37: aload_1
38: ldc           #11
40: putfield      #36
43: aload_1
44: getfield      #42
47: astore_3
48: aload_1
49: ldc           #38
51: invokevirtual #43
54: aload_1
55: invokevirtual #53
58: astore        4
60: aload_1
61: getfield      #36
64: astore        5
66: aload_1
67: ldc           #118
69: putfield      #15
72: aload_1
73: invokevirtual #53
76: astore        6
78: new           #22
81: dup
82: invokespecial #23
85: ldc           #24
87: invokevirtual #25
90: iload_2
91: invokevirtual #29
94: ldc           #30
96: invokevirtual #25
99: iconst_1
100: invokevirtual #29
103: ldc           #24
105: invokevirtual #25
108: invokevirtual #27
111: iload_2
112: iconst_1
113: if_icmpne     120
116: iconst_1
117: goto          121
120: iconst_0
121: invokestatic  #31
124: new           #22
127: dup
128: invokespecial #23
131: ldc           #24
133: invokevirtual #25
136: aload_3
137: invokevirtual #25
140: ldc           #48
142: invokevirtual #25
145: invokevirtual #27
148: aload_3
149: ldc           #49
151: invokestatic  #28
154: new           #22
157: dup
158: invokespecial #23
161: ldc           #24
163: invokevirtual #25
166: aload         4
168: invokevirtual #25
171: ldc           #75
173: invokevirtual #25
176: invokevirtual #27
179: aload         4
181: ldc           #38
183: invokestatic  #28
186: new           #22
189: dup
190: invokespecial #23
193: ldc           #24
195: invokevirtual #25
198: aload         5
200: invokevirtual #25
203: ldc           #26
205: invokevirtual #25
208: invokevirtual #27
211: aload         5
213: ldc           #11
215: invokestatic  #28
218: new           #22
221: dup
222: invokespecial #23
225: ldc           #24
227: invokevirtual #25
230: aload         6
232: invokevirtual #25
235: ldc           #75
237: invokevirtual #25
240: invokevirtual #27
243: aload         6
245: ldc           #38
247: invokestatic  #28
250: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0599
Start line: 2131
End line: 0
Method source code: 
    public void test0599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0599");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        java.lang.String str3 = helpFormatter0.getLongOptSeparator();
        helpFormatter0.setWidth(0);
        helpFormatter0.defaultNewLine = "          ";
        java.lang.String str9 = helpFormatter0.createPadding(0);
        java.lang.String str10 = helpFormatter0.getArgName();
        org.apache.commons.cli.Options options14 = null;
        try {
            helpFormatter0.printHelp(3, "arg", " ", options14, "                                ");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + " " + "'", str3, " ");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "arg" + "'", str10, "arg");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #198
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: ldc           #11
35: invokevirtual #51
38: aload_1
39: invokevirtual #72
42: astore_2
43: aload_1
44: iconst_0
45: invokevirtual #90
48: aload_1
49: ldc           #67
51: putfield      #36
54: aload_1
55: iconst_0
56: invokevirtual #93
59: astore_3
60: aload_1
61: invokevirtual #83
64: astore        4
66: aconst_null
67: astore        5
69: aload_1
70: iconst_3
71: ldc           #78
73: ldc           #38
75: aload         5
77: ldc           #95
79: invokevirtual #150
82: ldc           #18
84: invokestatic  #19
87: goto          92
90: astore        6
92: new           #22
95: dup
96: invokespecial #23
99: ldc           #24
101: invokevirtual #25
104: aload_2
105: invokevirtual #25
108: ldc           #75
110: invokevirtual #25
113: invokevirtual #27
116: aload_2
117: ldc           #38
119: invokestatic  #28
122: new           #22
125: dup
126: invokespecial #23
129: ldc           #24
131: invokevirtual #25
134: aload_3
135: invokevirtual #25
138: ldc           #26
140: invokevirtual #25
143: invokevirtual #27
146: aload_3
147: ldc           #11
149: invokestatic  #28
152: new           #22
155: dup
156: invokespecial #23
159: ldc           #24
161: invokevirtual #25
164: aload         4
166: invokevirtual #25
169: ldc           #79
171: invokevirtual #25
174: invokevirtual #27
177: aload         4
179: ldc           #78
181: invokestatic  #28
184: return
Exception table:
from    to  target type
69    87    90   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0600
Start line: 2155
End line: 0
Method source code: 
    public void test0600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0600");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        int int2 = helpFormatter0.getWidth();
        helpFormatter0.defaultWidth = (byte) 100;
        helpFormatter0.setOptPrefix("hi!");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 74 + "'", int2 == 74);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #199
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #35
36: istore_2
37: aload_1
38: invokevirtual #66
41: istore_3
42: aload_1
43: bipush        100
45: putfield      #57
48: aload_1
49: ldc           #65
51: invokevirtual #51
54: new           #22
57: dup
58: invokespecial #23
61: ldc           #24
63: invokevirtual #25
66: iload_2
67: invokevirtual #29
70: ldc           #30
72: invokevirtual #25
75: iconst_1
76: invokevirtual #29
79: ldc           #24
81: invokevirtual #25
84: invokevirtual #27
87: iload_2
88: iconst_1
89: if_icmpne     96
92: iconst_1
93: goto          97
96: iconst_0
97: invokestatic  #31
100: new           #22
103: dup
104: invokespecial #23
107: ldc           #24
109: invokevirtual #25
112: iload_3
113: invokevirtual #29
116: ldc           #30
118: invokevirtual #25
121: bipush        74
123: invokevirtual #29
126: ldc           #24
128: invokevirtual #25
131: invokevirtual #27
134: iload_3
135: bipush        74
137: if_icmpne     144
140: iconst_1
141: goto          145
144: iconst_0
145: invokestatic  #31
148: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0601
Start line: 2168
End line: 0
Method source code: 
    public void test0601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0601");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        java.lang.String str6 = helpFormatter0.getOptPrefix();
        java.lang.String str7 = helpFormatter0.getNewLine();
        helpFormatter0.defaultOptPrefix = "";
        helpFormatter0.defaultLeftPad = (short) 10;
        int int12 = helpFormatter0.getWidth();
        java.lang.String str13 = helpFormatter0.defaultSyntaxPrefix;
        java.lang.Class<?> wildcardClass14 = helpFormatter0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "-" + "'", str6, "-");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 74 + "'", int12 == 74);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "usage: " + "'", str13, "usage: ");
        org.junit.Assert.assertNotNull(wildcardClass14);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #200
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #35
36: istore_2
37: aload_1
38: ldc           #11
40: putfield      #36
43: aload_1
44: bipush        10
46: invokevirtual #37
49: aload_1
50: invokevirtual #73
53: astore_3
54: aload_1
55: invokevirtual #16
58: astore        4
60: aload_1
61: ldc           #11
63: putfield      #42
66: aload_1
67: bipush        10
69: putfield      #40
72: aload_1
73: invokevirtual #66
76: istore        5
78: aload_1
79: getfield      #45
82: astore        6
84: aload_1
85: invokevirtual #154
88: astore        7
90: new           #22
93: dup
94: invokespecial #23
97: ldc           #24
99: invokevirtual #25
102: iload_2
103: invokevirtual #29
106: ldc           #30
108: invokevirtual #25
111: iconst_1
112: invokevirtual #29
115: ldc           #24
117: invokevirtual #25
120: invokevirtual #27
123: iload_2
124: iconst_1
125: if_icmpne     132
128: iconst_1
129: goto          133
132: iconst_0
133: invokestatic  #31
136: new           #22
139: dup
140: invokespecial #23
143: ldc           #24
145: invokevirtual #25
148: aload_3
149: invokevirtual #25
152: ldc           #48
154: invokevirtual #25
157: invokevirtual #27
160: aload_3
161: ldc           #49
163: invokestatic  #28
166: new           #22
169: dup
170: invokespecial #23
173: ldc           #24
175: invokevirtual #25
178: aload         4
180: invokevirtual #25
183: ldc           #26
185: invokevirtual #25
188: invokevirtual #27
191: aload         4
193: ldc           #11
195: invokestatic  #28
198: new           #22
201: dup
202: invokespecial #23
205: ldc           #24
207: invokevirtual #25
210: iload         5
212: invokevirtual #29
215: ldc           #30
217: invokevirtual #25
220: bipush        74
222: invokevirtual #29
225: ldc           #24
227: invokevirtual #25
230: invokevirtual #27
233: iload         5
235: bipush        74
237: if_icmpne     244
240: iconst_1
241: goto          245
244: iconst_0
245: invokestatic  #31
248: new           #22
251: dup
252: invokespecial #23
255: ldc           #24
257: invokevirtual #25
260: aload         6
262: invokevirtual #25
265: ldc           #104
267: invokevirtual #25
270: invokevirtual #27
273: aload         6
275: ldc           #46
277: invokestatic  #28
280: aload         7
282: invokestatic  #21
285: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0602
Start line: 2191
End line: 0
Method source code: 
    public void test0602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0602");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setLongOptPrefix(" ");
        helpFormatter0.defaultDescPad = (short) 10;
        helpFormatter0.setLongOptSeparator("");
        java.lang.String str11 = helpFormatter0.getNewLine();
        java.lang.String str12 = helpFormatter0.getNewLine();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #201
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #35
36: istore_2
37: aload_1
38: ldc           #11
40: putfield      #36
43: aload_1
44: getfield      #42
47: astore_3
48: aload_1
49: ldc           #38
51: invokevirtual #43
54: aload_1
55: bipush        10
57: putfield      #44
60: aload_1
61: ldc           #11
63: invokevirtual #74
66: aload_1
67: invokevirtual #16
70: astore        4
72: aload_1
73: invokevirtual #16
76: astore        5
78: new           #22
81: dup
82: invokespecial #23
85: ldc           #24
87: invokevirtual #25
90: iload_2
91: invokevirtual #29
94: ldc           #30
96: invokevirtual #25
99: iconst_1
100: invokevirtual #29
103: ldc           #24
105: invokevirtual #25
108: invokevirtual #27
111: iload_2
112: iconst_1
113: if_icmpne     120
116: iconst_1
117: goto          121
120: iconst_0
121: invokestatic  #31
124: new           #22
127: dup
128: invokespecial #23
131: ldc           #24
133: invokevirtual #25
136: aload_3
137: invokevirtual #25
140: ldc           #48
142: invokevirtual #25
145: invokevirtual #27
148: aload_3
149: ldc           #49
151: invokestatic  #28
154: new           #22
157: dup
158: invokespecial #23
161: ldc           #24
163: invokevirtual #25
166: aload         4
168: invokevirtual #25
171: ldc           #26
173: invokevirtual #25
176: invokevirtual #27
179: aload         4
181: ldc           #11
183: invokestatic  #28
186: new           #22
189: dup
190: invokespecial #23
193: ldc           #24
195: invokevirtual #25
198: aload         5
200: invokevirtual #25
203: ldc           #26
205: invokevirtual #25
208: invokevirtual #27
211: aload         5
213: ldc           #11
215: invokestatic  #28
218: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0603
Start line: 2210
End line: 0
Method source code: 
    public void test0603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0603");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.util.Comparator comparator1 = helpFormatter0.optionComparator;
        java.lang.String str2 = helpFormatter0.getLongOptPrefix();
        java.lang.StringBuffer stringBuffer3 = null;
        try {
            java.lang.StringBuffer stringBuffer7 = helpFormatter0.renderWrappedText(stringBuffer3, (int) (short) 0, 97, " ");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(comparator1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "--" + "'", str2, "--");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #202
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: getfield      #10
36: astore_2
37: aload_1
38: invokevirtual #53
41: astore_3
42: aconst_null
43: astore        4
45: aload_1
46: aload         4
48: iconst_0
49: bipush        97
51: ldc           #38
53: invokevirtual #123
56: astore        5
58: ldc           #18
60: invokestatic  #19
63: goto          68
66: astore        5
68: aload_2
69: invokestatic  #21
72: new           #22
75: dup
76: invokespecial #23
79: ldc           #24
81: invokevirtual #25
84: aload_3
85: invokevirtual #25
88: ldc           #62
90: invokevirtual #25
93: invokevirtual #27
96: aload_3
97: ldc           #63
99: invokestatic  #28
102: return
Exception table:
from    to  target type
45    63    66   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0604
Start line: 2229
End line: 0
Method source code: 
    public void test0604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0604");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.getArgName();
        helpFormatter0.defaultNewLine = "\n";
        helpFormatter0.defaultLeftPad = (byte) -1;
        java.lang.String str7 = helpFormatter0.defaultLongOptPrefix;
        int int11 = helpFormatter0.findWrapPos("                                                                                                 ", 1, (int) 'a');
        java.lang.String str12 = helpFormatter0.defaultArgName;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "arg" + "'", str2, "arg");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "--" + "'", str7, "--");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "arg" + "'", str12, "arg");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #203
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #35
36: istore_2
37: aload_1
38: invokevirtual #83
41: astore_3
42: aload_1
43: ldc           #33
45: putfield      #36
48: aload_1
49: iconst_m1
50: putfield      #40
53: aload_1
54: getfield      #52
57: astore        4
59: aload_1
60: ldc           #14
62: iconst_1
63: bipush        97
65: invokevirtual #61
68: istore        5
70: aload_1
71: getfield      #15
74: astore        6
76: new           #22
79: dup
80: invokespecial #23
83: ldc           #24
85: invokevirtual #25
88: iload_2
89: invokevirtual #29
92: ldc           #30
94: invokevirtual #25
97: iconst_1
98: invokevirtual #29
101: ldc           #24
103: invokevirtual #25
106: invokevirtual #27
109: iload_2
110: iconst_1
111: if_icmpne     118
114: iconst_1
115: goto          119
118: iconst_0
119: invokestatic  #31
122: new           #22
125: dup
126: invokespecial #23
129: ldc           #24
131: invokevirtual #25
134: aload_3
135: invokevirtual #25
138: ldc           #79
140: invokevirtual #25
143: invokevirtual #27
146: aload_3
147: ldc           #78
149: invokestatic  #28
152: new           #22
155: dup
156: invokespecial #23
159: ldc           #24
161: invokevirtual #25
164: aload         4
166: invokevirtual #25
169: ldc           #62
171: invokevirtual #25
174: invokevirtual #27
177: aload         4
179: ldc           #63
181: invokestatic  #28
184: new           #22
187: dup
188: invokespecial #23
191: ldc           #24
193: invokevirtual #25
196: iload         5
198: invokevirtual #29
201: ldc           #30
203: invokevirtual #25
206: iconst_m1
207: invokevirtual #29
210: ldc           #24
212: invokevirtual #25
215: invokevirtual #27
218: iload         5
220: iconst_m1
221: if_icmpne     228
224: iconst_1
225: goto          229
228: iconst_0
229: invokestatic  #31
232: new           #22
235: dup
236: invokespecial #23
239: ldc           #24
241: invokevirtual #25
244: aload         6
246: invokevirtual #25
249: ldc           #79
251: invokevirtual #25
254: invokevirtual #27
257: aload         6
259: ldc           #78
261: invokestatic  #28
264: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0605
Start line: 2248
End line: 0
Method source code: 
    public void test0605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0605");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.defaultDescPad = '4';
        helpFormatter0.setNewLine("");
        helpFormatter0.setLongOptPrefix(" ");
        java.lang.String str10 = helpFormatter0.defaultSyntaxPrefix;
        helpFormatter0.defaultWidth = 1;
        int int13 = helpFormatter0.getDescPadding();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "usage: " + "'", str10, "usage: ");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #204
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #35
36: istore_2
37: aload_1
38: ldc           #11
40: putfield      #36
43: aload_1
44: bipush        52
46: putfield      #44
49: aload_1
50: ldc           #11
52: invokevirtual #88
55: aload_1
56: ldc           #38
58: invokevirtual #43
61: aload_1
62: getfield      #45
65: astore_3
66: aload_1
67: iconst_1
68: putfield      #57
71: aload_1
72: invokevirtual #13
75: istore        4
77: new           #22
80: dup
81: invokespecial #23
84: ldc           #24
86: invokevirtual #25
89: iload_2
90: invokevirtual #29
93: ldc           #30
95: invokevirtual #25
98: iconst_1
99: invokevirtual #29
102: ldc           #24
104: invokevirtual #25
107: invokevirtual #27
110: iload_2
111: iconst_1
112: if_icmpne     119
115: iconst_1
116: goto          120
119: iconst_0
120: invokestatic  #31
123: new           #22
126: dup
127: invokespecial #23
130: ldc           #24
132: invokevirtual #25
135: aload_3
136: invokevirtual #25
139: ldc           #104
141: invokevirtual #25
144: invokevirtual #27
147: aload_3
148: ldc           #46
150: invokestatic  #28
153: new           #22
156: dup
157: invokespecial #23
160: ldc           #24
162: invokevirtual #25
165: iload         4
167: invokevirtual #29
170: ldc           #30
172: invokevirtual #25
175: bipush        52
177: invokevirtual #29
180: ldc           #24
182: invokevirtual #25
185: invokevirtual #27
188: iload         4
190: bipush        52
192: if_icmpne     199
195: iconst_1
196: goto          200
199: iconst_0
200: invokestatic  #31
203: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0606
Start line: 2266
End line: 0
Method source code: 
    public void test0606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0606");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.getArgName();
        helpFormatter0.defaultNewLine = "\n";
        helpFormatter0.defaultLeftPad = (byte) -1;
        helpFormatter0.setLongOptSeparator("");
        org.apache.commons.cli.HelpFormatter helpFormatter9 = new org.apache.commons.cli.HelpFormatter();
        int int10 = helpFormatter9.getLeftPadding();
        helpFormatter9.defaultNewLine = "";
        helpFormatter9.setDescPadding(10);
        helpFormatter9.setSyntaxPrefix(" ");
        java.util.Comparator comparator17 = helpFormatter9.getOptionComparator();
        helpFormatter0.setOptionComparator(comparator17);
        int int22 = helpFormatter0.findWrapPos("\n", (int) (byte) 100, 97);
        org.apache.commons.cli.Options options24 = null;
        try {
            helpFormatter0.printHelp("                                                                                                    ", options24, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: null");
        } catch (java.lang.NegativeArraySizeException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "arg" + "'", str2, "arg");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(comparator17);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #205
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #35
36: istore_2
37: aload_1
38: invokevirtual #83
41: astore_3
42: aload_1
43: ldc           #33
45: putfield      #36
48: aload_1
49: iconst_m1
50: putfield      #40
53: aload_1
54: ldc           #11
56: invokevirtual #74
59: new           #8
62: dup
63: invokespecial #9
66: astore        4
68: aload         4
70: invokevirtual #35
73: istore        5
75: aload         4
77: ldc           #11
79: putfield      #36
82: aload         4
84: bipush        10
86: invokevirtual #37
89: aload         4
91: ldc           #38
93: invokevirtual #39
96: aload         4
98: invokevirtual #58
101: astore        6
103: aload_1
104: aload         6
106: invokevirtual #99
109: aload_1
110: ldc           #33
112: bipush        100
114: bipush        97
116: invokevirtual #61
119: istore        7
121: aconst_null
122: astore        8
124: aload_1
125: ldc           #118
127: aload         8
129: iconst_0
130: invokevirtual #103
133: ldc           #84
135: invokestatic  #19
138: goto          143
141: astore        9
143: new           #22
146: dup
147: invokespecial #23
150: ldc           #24
152: invokevirtual #25
155: iload_2
156: invokevirtual #29
159: ldc           #30
161: invokevirtual #25
164: iconst_1
165: invokevirtual #29
168: ldc           #24
170: invokevirtual #25
173: invokevirtual #27
176: iload_2
177: iconst_1
178: if_icmpne     185
181: iconst_1
182: goto          186
185: iconst_0
186: invokestatic  #31
189: new           #22
192: dup
193: invokespecial #23
196: ldc           #24
198: invokevirtual #25
201: aload_3
202: invokevirtual #25
205: ldc           #79
207: invokevirtual #25
210: invokevirtual #27
213: aload_3
214: ldc           #78
216: invokestatic  #28
219: new           #22
222: dup
223: invokespecial #23
226: ldc           #24
228: invokevirtual #25
231: iload         5
233: invokevirtual #29
236: ldc           #30
238: invokevirtual #25
241: iconst_1
242: invokevirtual #29
245: ldc           #24
247: invokevirtual #25
250: invokevirtual #27
253: iload         5
255: iconst_1
256: if_icmpne     263
259: iconst_1
260: goto          264
263: iconst_0
264: invokestatic  #31
267: aload         6
269: invokestatic  #21
272: new           #22
275: dup
276: invokespecial #23
279: ldc           #24
281: invokevirtual #25
284: iload         7
286: invokevirtual #29
289: ldc           #30
291: invokevirtual #25
294: iconst_m1
295: invokevirtual #29
298: ldc           #24
300: invokevirtual #25
303: invokevirtual #27
306: iload         7
308: iconst_m1
309: if_icmpne     316
312: iconst_1
313: goto          317
316: iconst_0
317: invokestatic  #31
320: return
Exception table:
from    to  target type
124   138   141   Class java/lang/NegativeArraySizeException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0607
Start line: 2299
End line: 0
Method source code: 
    public void test0607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0607");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        helpFormatter0.setSyntaxPrefix(" ");
        int int8 = helpFormatter0.defaultLeftPad;
        java.lang.String str9 = helpFormatter0.getNewLine();
        helpFormatter0.setLeftPadding((int) (short) 10);
        java.io.PrintWriter printWriter12 = null;
        org.apache.commons.cli.Options options16 = null;
        try {
            helpFormatter0.printHelp(printWriter12, 10, "                                                                                                 ", "", options16, (int) (byte) 100, (int) ' ', "          ");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #206
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #35
36: istore_2
37: aload_1
38: ldc           #11
40: putfield      #36
43: aload_1
44: bipush        10
46: invokevirtual #37
49: aload_1
50: ldc           #38
52: invokevirtual #39
55: aload_1
56: getfield      #40
59: istore_3
60: aload_1
61: invokevirtual #16
64: astore        4
66: aload_1
67: bipush        10
69: invokevirtual #55
72: aconst_null
73: astore        5
75: aconst_null
76: astore        6
78: aload_1
79: aload         5
81: bipush        10
83: ldc           #14
85: ldc           #11
87: aload         6
89: bipush        100
91: bipush        32
93: ldc           #67
95: invokevirtual #68
98: ldc           #18
100: invokestatic  #19
103: goto          108
106: astore        7
108: new           #22
111: dup
112: invokespecial #23
115: ldc           #24
117: invokevirtual #25
120: iload_2
121: invokevirtual #29
124: ldc           #30
126: invokevirtual #25
129: iconst_1
130: invokevirtual #29
133: ldc           #24
135: invokevirtual #25
138: invokevirtual #27
141: iload_2
142: iconst_1
143: if_icmpne     150
146: iconst_1
147: goto          151
150: iconst_0
151: invokestatic  #31
154: new           #22
157: dup
158: invokespecial #23
161: ldc           #24
163: invokevirtual #25
166: iload_3
167: invokevirtual #29
170: ldc           #30
172: invokevirtual #25
175: iconst_1
176: invokevirtual #29
179: ldc           #24
181: invokevirtual #25
184: invokevirtual #27
187: iload_3
188: iconst_1
189: if_icmpne     196
192: iconst_1
193: goto          197
196: iconst_0
197: invokestatic  #31
200: new           #22
203: dup
204: invokespecial #23
207: ldc           #24
209: invokevirtual #25
212: aload         4
214: invokevirtual #25
217: ldc           #26
219: invokevirtual #25
222: invokevirtual #27
225: aload         4
227: ldc           #11
229: invokestatic  #28
232: return
Exception table:
from    to  target type
78   103   106   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0608
Start line: 2325
End line: 0
Method source code: 
    public void test0608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0608");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str6 = helpFormatter0.getNewLine();
        java.util.Comparator comparator7 = helpFormatter0.getOptionComparator();
        org.apache.commons.cli.HelpFormatter helpFormatter8 = new org.apache.commons.cli.HelpFormatter();
        int int9 = helpFormatter8.getLeftPadding();
        helpFormatter8.defaultNewLine = "";
        java.lang.String str12 = helpFormatter8.defaultOptPrefix;
        helpFormatter8.setLongOptPrefix(" ");
        helpFormatter8.defaultDescPad = (short) 10;
        java.lang.String str17 = helpFormatter8.defaultArgName;
        java.util.Comparator comparator18 = helpFormatter8.optionComparator;
        helpFormatter0.setOptionComparator(comparator18);
        helpFormatter0.defaultSyntaxPrefix = "                                                                                                 ";
        org.apache.commons.cli.HelpFormatter helpFormatter22 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter22.setOptPrefix("");
        helpFormatter22.defaultLongOptPrefix = "";
        java.lang.String str27 = helpFormatter22.defaultLongOptPrefix;
        helpFormatter22.defaultDescPad = 0;
        org.apache.commons.cli.HelpFormatter helpFormatter30 = new org.apache.commons.cli.HelpFormatter();
        java.util.Comparator comparator31 = helpFormatter30.optionComparator;
        int int32 = helpFormatter30.getLeftPadding();
        int int33 = helpFormatter30.defaultLeftPad;
        java.lang.String str35 = helpFormatter30.createPadding((int) 'a');
        org.apache.commons.cli.HelpFormatter helpFormatter36 = new org.apache.commons.cli.HelpFormatter();
        int int37 = helpFormatter36.getLeftPadding();
        helpFormatter36.defaultNewLine = "";
        helpFormatter36.defaultDescPad = '4';
        helpFormatter36.setNewLine("");
        int int47 = helpFormatter36.findWrapPos("\n", (int) ' ', 3);
        java.util.Comparator comparator48 = helpFormatter36.optionComparator;
        helpFormatter30.setOptionComparator(comparator48);
        helpFormatter22.setOptionComparator(comparator48);
        helpFormatter0.setOptionComparator(comparator48);
        java.lang.String str52 = helpFormatter0.getSyntaxPrefix();
        helpFormatter0.defaultDescPad = (short) -1;
        java.util.Comparator comparator55 = helpFormatter0.optionComparator;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\n" + "'", str6, "\n");
        org.junit.Assert.assertNotNull(comparator7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "-" + "'", str12, "-");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "arg" + "'", str17, "arg");
        org.junit.Assert.assertNotNull(comparator18);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(comparator31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "                                                                                                 " + "'", str35, "                                                                                                 ");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(comparator48);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "                                                                                                 " + "'", str52, "                                                                                                 ");
        org.junit.Assert.assertNotNull(comparator55);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #207
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: ldc           #11
35: invokevirtual #51
38: aload_1
39: ldc           #11
41: putfield      #52
44: aload_1
45: getfield      #52
48: astore_2
49: aload_1
50: invokevirtual #16
53: astore_3
54: aload_1
55: invokevirtual #58
58: astore        4
60: new           #8
63: dup
64: invokespecial #9
67: astore        5
69: aload         5
71: invokevirtual #35
74: istore        6
76: aload         5
78: ldc           #11
80: putfield      #36
83: aload         5
85: getfield      #42
88: astore        7
90: aload         5
92: ldc           #38
94: invokevirtual #43
97: aload         5
99: bipush        10
101: putfield      #44
104: aload         5
106: getfield      #15
109: astore        8
111: aload         5
113: getfield      #10
116: astore        9
118: aload_1
119: aload         9
121: invokevirtual #99
124: aload_1
125: ldc           #14
127: putfield      #45
130: new           #8
133: dup
134: invokespecial #9
137: astore        10
139: aload         10
141: ldc           #11
143: invokevirtual #51
146: aload         10
148: ldc           #11
150: putfield      #52
153: aload         10
155: getfield      #52
158: astore        11
160: aload         10
162: iconst_0
163: putfield      #44
166: new           #8
169: dup
170: invokespecial #9
173: astore        12
175: aload         12
177: getfield      #10
180: astore        13
182: aload         12
184: invokevirtual #35
187: istore        14
189: aload         12
191: getfield      #40
194: istore        15
196: aload         12
198: bipush        97
200: invokevirtual #93
203: astore        16
205: new           #8
208: dup
209: invokespecial #9
212: astore        17
214: aload         17
216: invokevirtual #35
219: istore        18
221: aload         17
223: ldc           #11
225: putfield      #36
228: aload         17
230: bipush        52
232: putfield      #44
235: aload         17
237: ldc           #11
239: invokevirtual #88
242: aload         17
244: ldc           #33
246: bipush        32
248: iconst_3
249: invokevirtual #61
252: istore        19
254: aload         17
256: getfield      #10
259: astore        20
261: aload         12
263: aload         20
265: invokevirtual #99
268: aload         10
270: aload         20
272: invokevirtual #99
275: aload_1
276: aload         20
278: invokevirtual #99
281: aload_1
282: invokevirtual #89
285: astore        21
287: aload_1
288: iconst_m1
289: putfield      #44
292: aload_1
293: getfield      #10
296: astore        22
298: new           #22
301: dup
302: invokespecial #23
305: ldc           #24
307: invokevirtual #25
310: aload_2
311: invokevirtual #25
314: ldc           #26
316: invokevirtual #25
319: invokevirtual #27
322: aload_2
323: ldc           #11
325: invokestatic  #28
328: new           #22
331: dup
332: invokespecial #23
335: ldc           #24
337: invokevirtual #25
340: aload_3
341: invokevirtual #25
344: ldc           #32
346: invokevirtual #25
349: invokevirtual #27
352: aload_3
353: ldc           #33
355: invokestatic  #28
358: aload         4
360: invokestatic  #21
363: new           #22
366: dup
367: invokespecial #23
370: ldc           #24
372: invokevirtual #25
375: iload         6
377: invokevirtual #29
380: ldc           #30
382: invokevirtual #25
385: iconst_1
386: invokevirtual #29
389: ldc           #24
391: invokevirtual #25
394: invokevirtual #27
397: iload         6
399: iconst_1
400: if_icmpne     407
403: iconst_1
404: goto          408
407: iconst_0
408: invokestatic  #31
411: new           #22
414: dup
415: invokespecial #23
418: ldc           #24
420: invokevirtual #25
423: aload         7
425: invokevirtual #25
428: ldc           #48
430: invokevirtual #25
433: invokevirtual #27
436: aload         7
438: ldc           #49
440: invokestatic  #28
443: new           #22
446: dup
447: invokespecial #23
450: ldc           #24
452: invokevirtual #25
455: aload         8
457: invokevirtual #25
460: ldc           #79
462: invokevirtual #25
465: invokevirtual #27
468: aload         8
470: ldc           #78
472: invokestatic  #28
475: aload         9
477: invokestatic  #21
480: new           #22
483: dup
484: invokespecial #23
487: ldc           #24
489: invokevirtual #25
492: aload         11
494: invokevirtual #25
497: ldc           #26
499: invokevirtual #25
502: invokevirtual #27
505: aload         11
507: ldc           #11
509: invokestatic  #28
512: aload         13
514: invokestatic  #21
517: new           #22
520: dup
521: invokespecial #23
524: ldc           #24
526: invokevirtual #25
529: iload         14
531: invokevirtual #29
534: ldc           #30
536: invokevirtual #25
539: iconst_1
540: invokevirtual #29
543: ldc           #24
545: invokevirtual #25
548: invokevirtual #27
551: iload         14
553: iconst_1
554: if_icmpne     561
557: iconst_1
558: goto          562
561: iconst_0
562: invokestatic  #31
565: new           #22
568: dup
569: invokespecial #23
572: ldc           #24
574: invokevirtual #25
577: iload         15
579: invokevirtual #29
582: ldc           #30
584: invokevirtual #25
587: iconst_1
588: invokevirtual #29
591: ldc           #24
593: invokevirtual #25
596: invokevirtual #27
599: iload         15
601: iconst_1
602: if_icmpne     609
605: iconst_1
606: goto          610
609: iconst_0
610: invokestatic  #31
613: new           #22
616: dup
617: invokespecial #23
620: ldc           #24
622: invokevirtual #25
625: aload         16
627: invokevirtual #25
630: ldc           #142
632: invokevirtual #25
635: invokevirtual #27
638: aload         16
640: ldc           #14
642: invokestatic  #28
645: new           #22
648: dup
649: invokespecial #23
652: ldc           #24
654: invokevirtual #25
657: iload         18
659: invokevirtual #29
662: ldc           #30
664: invokevirtual #25
667: iconst_1
668: invokevirtual #29
671: ldc           #24
673: invokevirtual #25
676: invokevirtual #27
679: iload         18
681: iconst_1
682: if_icmpne     689
685: iconst_1
686: goto          690
689: iconst_0
690: invokestatic  #31
693: new           #22
696: dup
697: invokespecial #23
700: ldc           #24
702: invokevirtual #25
705: iload         19
707: invokevirtual #29
710: ldc           #30
712: invokevirtual #25
715: iconst_m1
716: invokevirtual #29
719: ldc           #24
721: invokevirtual #25
724: invokevirtual #27
727: iload         19
729: iconst_m1
730: if_icmpne     737
733: iconst_1
734: goto          738
737: iconst_0
738: invokestatic  #31
741: aload         20
743: invokestatic  #21
746: new           #22
749: dup
750: invokespecial #23
753: ldc           #24
755: invokevirtual #25
758: aload         21
760: invokevirtual #25
763: ldc           #142
765: invokevirtual #25
768: invokevirtual #27
771: aload         21
773: ldc           #14
775: invokestatic  #28
778: aload         22
780: invokestatic  #21
783: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0609
Start line: 2387
End line: 0
Method source code: 
    public void test0609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0609");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        org.apache.commons.cli.Options options4 = null;
        try {
            helpFormatter0.printHelp(3, "hi!", "-", options4, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #208
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aconst_null
33: astore_2
34: aload_1
35: iconst_3
36: ldc           #65
38: ldc           #49
40: aload_2
41: ldc           #11
43: invokevirtual #150
46: ldc           #18
48: invokestatic  #19
51: goto          55
54: astore_3
55: return
Exception table:
from    to  target type
34    51    54   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0610
Start line: 2402
End line: 0
Method source code: 
    public void test0610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0610");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.defaultLongOptPrefix = "hi!";
        java.lang.String str3 = helpFormatter0.defaultLongOptPrefix;
        helpFormatter0.setNewLine("-");
        java.lang.String str6 = helpFormatter0.getLongOptPrefix();
        int int7 = helpFormatter0.getDescPadding();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!" + "'", str3, "hi!");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 3 + "'", int7 == 3);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #209
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: ldc           #65
35: putfield      #52
38: aload_1
39: getfield      #52
42: astore_2
43: aload_1
44: ldc           #49
46: invokevirtual #88
49: aload_1
50: invokevirtual #53
53: astore_3
54: aload_1
55: invokevirtual #13
58: istore        4
60: new           #22
63: dup
64: invokespecial #23
67: ldc           #24
69: invokevirtual #25
72: aload_2
73: invokevirtual #25
76: ldc           #97
78: invokevirtual #25
81: invokevirtual #27
84: aload_2
85: ldc           #65
87: invokestatic  #28
90: new           #22
93: dup
94: invokespecial #23
97: ldc           #24
99: invokevirtual #25
102: aload_3
103: invokevirtual #25
106: ldc           #97
108: invokevirtual #25
111: invokevirtual #27
114: aload_3
115: ldc           #65
117: invokestatic  #28
120: new           #22
123: dup
124: invokespecial #23
127: ldc           #24
129: invokevirtual #25
132: iload         4
134: invokevirtual #29
137: ldc           #30
139: invokevirtual #25
142: iconst_3
143: invokevirtual #29
146: ldc           #24
148: invokevirtual #25
151: invokevirtual #27
154: iload         4
156: iconst_3
157: if_icmpne     164
160: iconst_1
161: goto          165
164: iconst_0
165: invokestatic  #31
168: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0611
Start line: 2417
End line: 0
Method source code: 
    public void test0611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0611");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setLongOptPrefix(" ");
        helpFormatter0.defaultDescPad = (short) 10;
        java.lang.String str9 = helpFormatter0.defaultArgName;
        helpFormatter0.setSyntaxPrefix("");
        helpFormatter0.defaultOptPrefix = "                                                                                                 ";
        helpFormatter0.setLongOptPrefix("          ");
        helpFormatter0.defaultArgName = "\n";
        helpFormatter0.setArgName("");
        org.apache.commons.cli.HelpFormatter helpFormatter20 = new org.apache.commons.cli.HelpFormatter();
        int int21 = helpFormatter20.getLeftPadding();
        helpFormatter20.defaultNewLine = "";
        java.lang.String str24 = helpFormatter20.defaultOptPrefix;
        java.lang.String str26 = helpFormatter20.rtrim("");
        java.lang.String str28 = helpFormatter20.rtrim("-");
        helpFormatter20.defaultOptPrefix = "--";
        helpFormatter20.defaultDescPad = (short) 1;
        helpFormatter20.defaultNewLine = "arg";
        org.apache.commons.cli.HelpFormatter helpFormatter35 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter35.setOptPrefix("");
        helpFormatter35.defaultLongOptPrefix = "";
        java.lang.String str40 = helpFormatter35.defaultLongOptPrefix;
        java.lang.String str41 = helpFormatter35.getNewLine();
        helpFormatter35.setSyntaxPrefix(" ");
        java.util.Comparator comparator44 = helpFormatter35.getOptionComparator();
        helpFormatter20.optionComparator = comparator44;
        helpFormatter0.setOptionComparator(comparator44);
        java.lang.String str47 = helpFormatter0.getNewLine();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "arg" + "'", str9, "arg");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "-" + "'", str24, "-");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "-" + "'", str28, "-");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "\n" + "'", str41, "\n");
        org.junit.Assert.assertNotNull(comparator44);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #210
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #35
36: istore_2
37: aload_1
38: ldc           #11
40: putfield      #36
43: aload_1
44: getfield      #42
47: astore_3
48: aload_1
49: ldc           #38
51: invokevirtual #43
54: aload_1
55: bipush        10
57: putfield      #44
60: aload_1
61: getfield      #15
64: astore        4
66: aload_1
67: ldc           #11
69: invokevirtual #39
72: aload_1
73: ldc           #14
75: putfield      #42
78: aload_1
79: ldc           #67
81: invokevirtual #43
84: aload_1
85: ldc           #33
87: putfield      #15
90: aload_1
91: ldc           #11
93: invokevirtual #59
96: new           #8
99: dup
100: invokespecial #9
103: astore        5
105: aload         5
107: invokevirtual #35
110: istore        6
112: aload         5
114: ldc           #11
116: putfield      #36
119: aload         5
121: getfield      #42
124: astore        7
126: aload         5
128: ldc           #11
130: invokevirtual #12
133: astore        8
135: aload         5
137: ldc           #49
139: invokevirtual #12
142: astore        9
144: aload         5
146: ldc           #63
148: putfield      #42
151: aload         5
153: iconst_1
154: putfield      #44
157: aload         5
159: ldc           #78
161: putfield      #36
164: new           #8
167: dup
168: invokespecial #9
171: astore        10
173: aload         10
175: ldc           #11
177: invokevirtual #51
180: aload         10
182: ldc           #11
184: putfield      #52
187: aload         10
189: getfield      #52
192: astore        11
194: aload         10
196: invokevirtual #16
199: astore        12
201: aload         10
203: ldc           #38
205: invokevirtual #39
208: aload         10
210: invokevirtual #58
213: astore        13
215: aload         5
217: aload         13
219: putfield      #10
222: aload_1
223: aload         13
225: invokevirtual #99
228: aload_1
229: invokevirtual #16
232: astore        14
234: new           #22
237: dup
238: invokespecial #23
241: ldc           #24
243: invokevirtual #25
246: iload_2
247: invokevirtual #29
250: ldc           #30
252: invokevirtual #25
255: iconst_1
256: invokevirtual #29
259: ldc           #24
261: invokevirtual #25
264: invokevirtual #27
267: iload_2
268: iconst_1
269: if_icmpne     276
272: iconst_1
273: goto          277
276: iconst_0
277: invokestatic  #31
280: new           #22
283: dup
284: invokespecial #23
287: ldc           #24
289: invokevirtual #25
292: aload_3
293: invokevirtual #25
296: ldc           #48
298: invokevirtual #25
301: invokevirtual #27
304: aload_3
305: ldc           #49
307: invokestatic  #28
310: new           #22
313: dup
314: invokespecial #23
317: ldc           #24
319: invokevirtual #25
322: aload         4
324: invokevirtual #25
327: ldc           #79
329: invokevirtual #25
332: invokevirtual #27
335: aload         4
337: ldc           #78
339: invokestatic  #28
342: new           #22
345: dup
346: invokespecial #23
349: ldc           #24
351: invokevirtual #25
354: iload         6
356: invokevirtual #29
359: ldc           #30
361: invokevirtual #25
364: iconst_1
365: invokevirtual #29
368: ldc           #24
370: invokevirtual #25
373: invokevirtual #27
376: iload         6
378: iconst_1
379: if_icmpne     386
382: iconst_1
383: goto          387
386: iconst_0
387: invokestatic  #31
390: new           #22
393: dup
394: invokespecial #23
397: ldc           #24
399: invokevirtual #25
402: aload         7
404: invokevirtual #25
407: ldc           #48
409: invokevirtual #25
412: invokevirtual #27
415: aload         7
417: ldc           #49
419: invokestatic  #28
422: new           #22
425: dup
426: invokespecial #23
429: ldc           #24
431: invokevirtual #25
434: aload         8
436: invokevirtual #25
439: ldc           #26
441: invokevirtual #25
444: invokevirtual #27
447: aload         8
449: ldc           #11
451: invokestatic  #28
454: new           #22
457: dup
458: invokespecial #23
461: ldc           #24
463: invokevirtual #25
466: aload         9
468: invokevirtual #25
471: ldc           #48
473: invokevirtual #25
476: invokevirtual #27
479: aload         9
481: ldc           #49
483: invokestatic  #28
486: new           #22
489: dup
490: invokespecial #23
493: ldc           #24
495: invokevirtual #25
498: aload         11
500: invokevirtual #25
503: ldc           #26
505: invokevirtual #25
508: invokevirtual #27
511: aload         11
513: ldc           #11
515: invokestatic  #28
518: new           #22
521: dup
522: invokespecial #23
525: ldc           #24
527: invokevirtual #25
530: aload         12
532: invokevirtual #25
535: ldc           #32
537: invokevirtual #25
540: invokevirtual #27
543: aload         12
545: ldc           #33
547: invokestatic  #28
550: aload         13
552: invokestatic  #21
555: new           #22
558: dup
559: invokespecial #23
562: ldc           #24
564: invokevirtual #25
567: aload         14
569: invokevirtual #25
572: ldc           #26
574: invokevirtual #25
577: invokevirtual #27
580: aload         14
582: ldc           #11
584: invokestatic  #28
587: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0612
Start line: 2465
End line: 0
Method source code: 
    public void test0612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0612");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.defaultLongOptPrefix = "hi!";
        int int3 = helpFormatter0.getWidth();
        helpFormatter0.setLongOptPrefix("          ");
        helpFormatter0.defaultLongOptPrefix = "                                                                                                    ";
        helpFormatter0.setArgName("          ");
        helpFormatter0.setOptPrefix("-");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 74 + "'", int3 == 74);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #211
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: ldc           #65
35: putfield      #52
38: aload_1
39: invokevirtual #66
42: istore_2
43: aload_1
44: ldc           #67
46: invokevirtual #43
49: aload_1
50: ldc           #118
52: putfield      #52
55: aload_1
56: ldc           #67
58: invokevirtual #59
61: aload_1
62: ldc           #49
64: invokevirtual #51
67: new           #22
70: dup
71: invokespecial #23
74: ldc           #24
76: invokevirtual #25
79: iload_2
80: invokevirtual #29
83: ldc           #30
85: invokevirtual #25
88: bipush        74
90: invokevirtual #29
93: ldc           #24
95: invokevirtual #25
98: invokevirtual #27
101: iload_2
102: bipush        74
104: if_icmpne     111
107: iconst_1
108: goto          112
111: iconst_0
112: invokestatic  #31
115: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0613
Start line: 2479
End line: 0
Method source code: 
    public void test0613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0613");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.defaultDescPad = '4';
        helpFormatter0.setNewLine("");
        helpFormatter0.setLongOptPrefix(" ");
        java.lang.String str10 = helpFormatter0.getLongOptPrefix();
        java.io.PrintWriter printWriter11 = null;
        org.apache.commons.cli.Options options15 = null;
        try {
            helpFormatter0.printHelp(printWriter11, 3, "", "", options15, 32, (int) 'a', "usage:", false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: cmdLineSyntax not provided");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + " " + "'", str10, " ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #212
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #35
36: istore_2
37: aload_1
38: ldc           #11
40: putfield      #36
43: aload_1
44: bipush        52
46: putfield      #44
49: aload_1
50: ldc           #11
52: invokevirtual #88
55: aload_1
56: ldc           #38
58: invokevirtual #43
61: aload_1
62: invokevirtual #53
65: astore_3
66: aconst_null
67: astore        4
69: aconst_null
70: astore        5
72: aload_1
73: aload         4
75: iconst_3
76: ldc           #11
78: ldc           #11
80: aload         5
82: bipush        32
84: bipush        97
86: ldc           #108
88: iconst_0
89: invokevirtual #138
92: ldc           #69
94: invokestatic  #19
97: goto          102
100: astore        6
102: new           #22
105: dup
106: invokespecial #23
109: ldc           #24
111: invokevirtual #25
114: iload_2
115: invokevirtual #29
118: ldc           #30
120: invokevirtual #25
123: iconst_1
124: invokevirtual #29
127: ldc           #24
129: invokevirtual #25
132: invokevirtual #27
135: iload_2
136: iconst_1
137: if_icmpne     144
140: iconst_1
141: goto          145
144: iconst_0
145: invokestatic  #31
148: new           #22
151: dup
152: invokespecial #23
155: ldc           #24
157: invokevirtual #25
160: aload_3
161: invokevirtual #25
164: ldc           #75
166: invokevirtual #25
169: invokevirtual #27
172: aload_3
173: ldc           #38
175: invokestatic  #28
178: return
Exception table:
from    to  target type
72    97   100   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0614
Start line: 2503
End line: 0
Method source code: 
    public void test0614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0614");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.defaultLongOptPrefix = "hi!";
        int int3 = helpFormatter0.getWidth();
        helpFormatter0.setLongOptPrefix("          ");
        int int6 = helpFormatter0.defaultLeftPad;
        helpFormatter0.defaultLeftPad = (short) 0;
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 74 + "'", int3 == 74);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #213
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: ldc           #65
35: putfield      #52
38: aload_1
39: invokevirtual #66
42: istore_2
43: aload_1
44: ldc           #67
46: invokevirtual #43
49: aload_1
50: getfield      #40
53: istore_3
54: aload_1
55: iconst_0
56: putfield      #40
59: new           #22
62: dup
63: invokespecial #23
66: ldc           #24
68: invokevirtual #25
71: iload_2
72: invokevirtual #29
75: ldc           #30
77: invokevirtual #25
80: bipush        74
82: invokevirtual #29
85: ldc           #24
87: invokevirtual #25
90: invokevirtual #27
93: iload_2
94: bipush        74
96: if_icmpne     103
99: iconst_1
100: goto          104
103: iconst_0
104: invokestatic  #31
107: new           #22
110: dup
111: invokespecial #23
114: ldc           #24
116: invokevirtual #25
119: iload_3
120: invokevirtual #29
123: ldc           #30
125: invokevirtual #25
128: iconst_1
129: invokevirtual #29
132: ldc           #24
134: invokevirtual #25
137: invokevirtual #27
140: iload_3
141: iconst_1
142: if_icmpne     149
145: iconst_1
146: goto          150
149: iconst_0
150: invokestatic  #31
153: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0615
Start line: 2517
End line: 0
Method source code: 
    public void test0615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0615");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        helpFormatter0.defaultDescPad = 0;
        java.lang.String str8 = helpFormatter0.defaultOptPrefix;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #214
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: ldc           #11
35: invokevirtual #51
38: aload_1
39: ldc           #11
41: putfield      #52
44: aload_1
45: getfield      #52
48: astore_2
49: aload_1
50: iconst_0
51: putfield      #44
54: aload_1
55: getfield      #42
58: astore_3
59: new           #22
62: dup
63: invokespecial #23
66: ldc           #24
68: invokevirtual #25
71: aload_2
72: invokevirtual #25
75: ldc           #26
77: invokevirtual #25
80: invokevirtual #27
83: aload_2
84: ldc           #11
86: invokestatic  #28
89: new           #22
92: dup
93: invokespecial #23
96: ldc           #24
98: invokevirtual #25
101: aload_3
102: invokevirtual #25
105: ldc           #26
107: invokevirtual #25
110: invokevirtual #27
113: aload_3
114: ldc           #11
116: invokestatic  #28
119: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0616
Start line: 2531
End line: 0
Method source code: 
    public void test0616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0616");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        int int6 = helpFormatter0.defaultWidth;
        java.lang.String str7 = helpFormatter0.getLongOptPrefix();
        java.lang.String str8 = helpFormatter0.getLongOptPrefix();
        helpFormatter0.setLongOptSeparator("hi!");
        int int11 = helpFormatter0.getWidth();
        java.lang.String str12 = helpFormatter0.getArgName();
        helpFormatter0.setSyntaxPrefix("arg");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "--" + "'", str5, "--");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 74 + "'", int6 == 74);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "--" + "'", str7, "--");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "--" + "'", str8, "--");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 74 + "'", int11 == 74);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "arg" + "'", str12, "arg");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #215
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #35
36: istore_2
37: aload_1
38: ldc           #11
40: putfield      #36
43: aload_1
44: getfield      #42
47: astore_3
48: aload_1
49: getfield      #52
52: astore        4
54: aload_1
55: getfield      #57
58: istore        5
60: aload_1
61: invokevirtual #53
64: astore        6
66: aload_1
67: invokevirtual #53
70: astore        7
72: aload_1
73: ldc           #65
75: invokevirtual #74
78: aload_1
79: invokevirtual #66
82: istore        8
84: aload_1
85: invokevirtual #83
88: astore        9
90: aload_1
91: ldc           #78
93: invokevirtual #39
96: new           #22
99: dup
100: invokespecial #23
103: ldc           #24
105: invokevirtual #25
108: iload_2
109: invokevirtual #29
112: ldc           #30
114: invokevirtual #25
117: iconst_1
118: invokevirtual #29
121: ldc           #24
123: invokevirtual #25
126: invokevirtual #27
129: iload_2
130: iconst_1
131: if_icmpne     138
134: iconst_1
135: goto          139
138: iconst_0
139: invokestatic  #31
142: new           #22
145: dup
146: invokespecial #23
149: ldc           #24
151: invokevirtual #25
154: aload_3
155: invokevirtual #25
158: ldc           #48
160: invokevirtual #25
163: invokevirtual #27
166: aload_3
167: ldc           #49
169: invokestatic  #28
172: new           #22
175: dup
176: invokespecial #23
179: ldc           #24
181: invokevirtual #25
184: aload         4
186: invokevirtual #25
189: ldc           #62
191: invokevirtual #25
194: invokevirtual #27
197: aload         4
199: ldc           #63
201: invokestatic  #28
204: new           #22
207: dup
208: invokespecial #23
211: ldc           #24
213: invokevirtual #25
216: iload         5
218: invokevirtual #29
221: ldc           #30
223: invokevirtual #25
226: bipush        74
228: invokevirtual #29
231: ldc           #24
233: invokevirtual #25
236: invokevirtual #27
239: iload         5
241: bipush        74
243: if_icmpne     250
246: iconst_1
247: goto          251
250: iconst_0
251: invokestatic  #31
254: new           #22
257: dup
258: invokespecial #23
261: ldc           #24
263: invokevirtual #25
266: aload         6
268: invokevirtual #25
271: ldc           #62
273: invokevirtual #25
276: invokevirtual #27
279: aload         6
281: ldc           #63
283: invokestatic  #28
286: new           #22
289: dup
290: invokespecial #23
293: ldc           #24
295: invokevirtual #25
298: aload         7
300: invokevirtual #25
303: ldc           #62
305: invokevirtual #25
308: invokevirtual #27
311: aload         7
313: ldc           #63
315: invokestatic  #28
318: new           #22
321: dup
322: invokespecial #23
325: ldc           #24
327: invokevirtual #25
330: iload         8
332: invokevirtual #29
335: ldc           #30
337: invokevirtual #25
340: bipush        74
342: invokevirtual #29
345: ldc           #24
347: invokevirtual #25
350: invokevirtual #27
353: iload         8
355: bipush        74
357: if_icmpne     364
360: iconst_1
361: goto          365
364: iconst_0
365: invokestatic  #31
368: new           #22
371: dup
372: invokespecial #23
375: ldc           #24
377: invokevirtual #25
380: aload         9
382: invokevirtual #25
385: ldc           #79
387: invokevirtual #25
390: invokevirtual #27
393: aload         9
395: ldc           #78
397: invokestatic  #28
400: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0617
Start line: 2557
End line: 0
Method source code: 
    public void test0617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0617");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        java.lang.String str6 = helpFormatter0.rtrim("");
        java.lang.String str8 = helpFormatter0.rtrim("-");
        helpFormatter0.defaultOptPrefix = "--";
        helpFormatter0.defaultDescPad = 0;
        helpFormatter0.setLongOptPrefix("");
        int int15 = helpFormatter0.getWidth();
        helpFormatter0.defaultLongOptPrefix = "                                                    ";
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "-" + "'", str8, "-");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 74 + "'", int15 == 74);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #216
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #35
36: istore_2
37: aload_1
38: ldc           #11
40: putfield      #36
43: aload_1
44: getfield      #42
47: astore_3
48: aload_1
49: ldc           #11
51: invokevirtual #12
54: astore        4
56: aload_1
57: ldc           #49
59: invokevirtual #12
62: astore        5
64: aload_1
65: ldc           #63
67: putfield      #42
70: aload_1
71: iconst_0
72: putfield      #44
75: aload_1
76: ldc           #11
78: invokevirtual #43
81: aload_1
82: invokevirtual #66
85: istore        6
87: aload_1
88: ldc           #77
90: putfield      #52
93: new           #22
96: dup
97: invokespecial #23
100: ldc           #24
102: invokevirtual #25
105: iload_2
106: invokevirtual #29
109: ldc           #30
111: invokevirtual #25
114: iconst_1
115: invokevirtual #29
118: ldc           #24
120: invokevirtual #25
123: invokevirtual #27
126: iload_2
127: iconst_1
128: if_icmpne     135
131: iconst_1
132: goto          136
135: iconst_0
136: invokestatic  #31
139: new           #22
142: dup
143: invokespecial #23
146: ldc           #24
148: invokevirtual #25
151: aload_3
152: invokevirtual #25
155: ldc           #48
157: invokevirtual #25
160: invokevirtual #27
163: aload_3
164: ldc           #49
166: invokestatic  #28
169: new           #22
172: dup
173: invokespecial #23
176: ldc           #24
178: invokevirtual #25
181: aload         4
183: invokevirtual #25
186: ldc           #26
188: invokevirtual #25
191: invokevirtual #27
194: aload         4
196: ldc           #11
198: invokestatic  #28
201: new           #22
204: dup
205: invokespecial #23
208: ldc           #24
210: invokevirtual #25
213: aload         5
215: invokevirtual #25
218: ldc           #48
220: invokevirtual #25
223: invokevirtual #27
226: aload         5
228: ldc           #49
230: invokestatic  #28
233: new           #22
236: dup
237: invokespecial #23
240: ldc           #24
242: invokevirtual #25
245: iload         6
247: invokevirtual #29
250: ldc           #30
252: invokevirtual #25
255: bipush        74
257: invokevirtual #29
260: ldc           #24
262: invokevirtual #25
265: invokevirtual #27
268: iload         6
270: bipush        74
272: if_icmpne     279
275: iconst_1
276: goto          280
279: iconst_0
280: invokestatic  #31
283: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0618
Start line: 2579
End line: 0
Method source code: 
    public void test0618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0618");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.defaultDescPad = '4';
        helpFormatter0.setNewLine("");
        helpFormatter0.setLongOptPrefix(" ");
        java.lang.String str10 = helpFormatter0.getSyntaxPrefix();
        java.io.PrintWriter printWriter11 = null;
        org.apache.commons.cli.Options options13 = null;
        try {
            helpFormatter0.printOptions(printWriter11, (int) (short) 0, options13, (int) (byte) -1, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: null");
        } catch (java.lang.NegativeArraySizeException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "usage: " + "'", str10, "usage: ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #217
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #35
36: istore_2
37: aload_1
38: ldc           #11
40: putfield      #36
43: aload_1
44: bipush        52
46: putfield      #44
49: aload_1
50: ldc           #11
52: invokevirtual #88
55: aload_1
56: ldc           #38
58: invokevirtual #43
61: aload_1
62: invokevirtual #89
65: astore_3
66: aconst_null
67: astore        4
69: aconst_null
70: astore        5
72: aload_1
73: aload         4
75: iconst_0
76: aload         5
78: iconst_m1
79: bipush        100
81: invokevirtual #17
84: ldc           #84
86: invokestatic  #19
89: goto          94
92: astore        6
94: new           #22
97: dup
98: invokespecial #23
101: ldc           #24
103: invokevirtual #25
106: iload_2
107: invokevirtual #29
110: ldc           #30
112: invokevirtual #25
115: iconst_1
116: invokevirtual #29
119: ldc           #24
121: invokevirtual #25
124: invokevirtual #27
127: iload_2
128: iconst_1
129: if_icmpne     136
132: iconst_1
133: goto          137
136: iconst_0
137: invokestatic  #31
140: new           #22
143: dup
144: invokespecial #23
147: ldc           #24
149: invokevirtual #25
152: aload_3
153: invokevirtual #25
156: ldc           #104
158: invokevirtual #25
161: invokevirtual #27
164: aload_3
165: ldc           #46
167: invokestatic  #28
170: return
Exception table:
from    to  target type
72    89    92   Class java/lang/NegativeArraySizeException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0619
Start line: 2603
End line: 0
Method source code: 
    public void test0619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0619");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        int int4 = helpFormatter0.defaultWidth;
        java.util.Comparator comparator5 = helpFormatter0.getOptionComparator();
        helpFormatter0.setArgName("\n");
        helpFormatter0.setLongOptSeparator("   ");
        java.lang.String str10 = helpFormatter0.defaultNewLine;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 74 + "'", int4 == 74);
        org.junit.Assert.assertNotNull(comparator5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #218
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #35
36: istore_2
37: aload_1
38: ldc           #11
40: putfield      #36
43: aload_1
44: getfield      #57
47: istore_3
48: aload_1
49: invokevirtual #58
52: astore        4
54: aload_1
55: ldc           #33
57: invokevirtual #59
60: aload_1
61: ldc           #113
63: invokevirtual #74
66: aload_1
67: getfield      #36
70: astore        5
72: new           #22
75: dup
76: invokespecial #23
79: ldc           #24
81: invokevirtual #25
84: iload_2
85: invokevirtual #29
88: ldc           #30
90: invokevirtual #25
93: iconst_1
94: invokevirtual #29
97: ldc           #24
99: invokevirtual #25
102: invokevirtual #27
105: iload_2
106: iconst_1
107: if_icmpne     114
110: iconst_1
111: goto          115
114: iconst_0
115: invokestatic  #31
118: new           #22
121: dup
122: invokespecial #23
125: ldc           #24
127: invokevirtual #25
130: iload_3
131: invokevirtual #29
134: ldc           #30
136: invokevirtual #25
139: bipush        74
141: invokevirtual #29
144: ldc           #24
146: invokevirtual #25
149: invokevirtual #27
152: iload_3
153: bipush        74
155: if_icmpne     162
158: iconst_1
159: goto          163
162: iconst_0
163: invokestatic  #31
166: aload         4
168: invokestatic  #21
171: new           #22
174: dup
175: invokespecial #23
178: ldc           #24
180: invokevirtual #25
183: aload         5
185: invokevirtual #25
188: ldc           #26
190: invokevirtual #25
193: invokevirtual #27
196: aload         5
198: ldc           #11
200: invokestatic  #28
203: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0620
Start line: 2621
End line: 0
Method source code: 
    public void test0620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0620");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        helpFormatter0.setWidth(0);
        int int8 = helpFormatter0.defaultDescPad;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 3 + "'", int8 == 3);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #219
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: ldc           #11
35: invokevirtual #51
38: aload_1
39: ldc           #11
41: putfield      #52
44: aload_1
45: getfield      #52
48: astore_2
49: aload_1
50: iconst_0
51: invokevirtual #90
54: aload_1
55: getfield      #44
58: istore_3
59: new           #22
62: dup
63: invokespecial #23
66: ldc           #24
68: invokevirtual #25
71: aload_2
72: invokevirtual #25
75: ldc           #26
77: invokevirtual #25
80: invokevirtual #27
83: aload_2
84: ldc           #11
86: invokestatic  #28
89: new           #22
92: dup
93: invokespecial #23
96: ldc           #24
98: invokevirtual #25
101: iload_3
102: invokevirtual #29
105: ldc           #30
107: invokevirtual #25
110: iconst_3
111: invokevirtual #29
114: ldc           #24
116: invokevirtual #25
119: invokevirtual #27
122: iload_3
123: iconst_3
124: if_icmpne     131
127: iconst_1
128: goto          132
131: iconst_0
132: invokestatic  #31
135: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0621
Start line: 2635
End line: 0
Method source code: 
    public void test0621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0621");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.util.Comparator comparator1 = helpFormatter0.optionComparator;
        int int2 = helpFormatter0.getLeftPadding();
        int int6 = helpFormatter0.findWrapPos("-", 100, (-1));
        helpFormatter0.setSyntaxPrefix("          ");
        helpFormatter0.setWidth((int) (byte) 10);
        org.junit.Assert.assertNotNull(comparator1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #220
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: getfield      #10
36: astore_2
37: aload_1
38: invokevirtual #35
41: istore_3
42: aload_1
43: ldc           #49
45: bipush        100
47: iconst_m1
48: invokevirtual #61
51: istore        4
53: aload_1
54: ldc           #67
56: invokevirtual #39
59: aload_1
60: bipush        10
62: invokevirtual #90
65: aload_2
66: invokestatic  #21
69: new           #22
72: dup
73: invokespecial #23
76: ldc           #24
78: invokevirtual #25
81: iload_3
82: invokevirtual #29
85: ldc           #30
87: invokevirtual #25
90: iconst_1
91: invokevirtual #29
94: ldc           #24
96: invokevirtual #25
99: invokevirtual #27
102: iload_3
103: iconst_1
104: if_icmpne     111
107: iconst_1
108: goto          112
111: iconst_0
112: invokestatic  #31
115: new           #22
118: dup
119: invokespecial #23
122: ldc           #24
124: invokevirtual #25
127: iload         4
129: invokevirtual #29
132: ldc           #30
134: invokevirtual #25
137: iconst_m1
138: invokevirtual #29
141: ldc           #24
143: invokevirtual #25
146: invokevirtual #27
149: iload         4
151: iconst_m1
152: if_icmpne     159
155: iconst_1
156: goto          160
159: iconst_0
160: invokestatic  #31
163: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0622
Start line: 2650
End line: 0
Method source code: 
    public void test0622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0622");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.defaultDescPad = '4';
        helpFormatter0.setNewLine("");
        helpFormatter0.setLongOptPrefix(" ");
        java.lang.String str10 = helpFormatter0.getLongOptPrefix();
        java.lang.String str12 = helpFormatter0.createPadding(100);
        java.lang.String str13 = helpFormatter0.getLongOptPrefix();
        java.util.Comparator comparator14 = helpFormatter0.optionComparator;
        helpFormatter0.setLongOptPrefix("-");
        helpFormatter0.defaultDescPad = 52;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + " " + "'", str10, " ");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "                                                                                                    " + "'", str12, "                                                                                                    ");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + " " + "'", str13, " ");
        org.junit.Assert.assertNotNull(comparator14);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #221
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #35
36: istore_2
37: aload_1
38: ldc           #11
40: putfield      #36
43: aload_1
44: bipush        52
46: putfield      #44
49: aload_1
50: ldc           #11
52: invokevirtual #88
55: aload_1
56: ldc           #38
58: invokevirtual #43
61: aload_1
62: invokevirtual #53
65: astore_3
66: aload_1
67: bipush        100
69: invokevirtual #93
72: astore        4
74: aload_1
75: invokevirtual #53
78: astore        5
80: aload_1
81: getfield      #10
84: astore        6
86: aload_1
87: ldc           #49
89: invokevirtual #43
92: aload_1
93: bipush        52
95: putfield      #44
98: new           #22
101: dup
102: invokespecial #23
105: ldc           #24
107: invokevirtual #25
110: iload_2
111: invokevirtual #29
114: ldc           #30
116: invokevirtual #25
119: iconst_1
120: invokevirtual #29
123: ldc           #24
125: invokevirtual #25
128: invokevirtual #27
131: iload_2
132: iconst_1
133: if_icmpne     140
136: iconst_1
137: goto          141
140: iconst_0
141: invokestatic  #31
144: new           #22
147: dup
148: invokespecial #23
151: ldc           #24
153: invokevirtual #25
156: aload_3
157: invokevirtual #25
160: ldc           #75
162: invokevirtual #25
165: invokevirtual #27
168: aload_3
169: ldc           #38
171: invokestatic  #28
174: new           #22
177: dup
178: invokespecial #23
181: ldc           #24
183: invokevirtual #25
186: aload         4
188: invokevirtual #25
191: ldc           #222
193: invokevirtual #25
196: invokevirtual #27
199: aload         4
201: ldc           #118
203: invokestatic  #28
206: new           #22
209: dup
210: invokespecial #23
213: ldc           #24
215: invokevirtual #25
218: aload         5
220: invokevirtual #25
223: ldc           #75
225: invokevirtual #25
228: invokevirtual #27
231: aload         5
233: ldc           #38
235: invokestatic  #28
238: aload         6
240: invokestatic  #21
243: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0623
Start line: 2673
End line: 0
Method source code: 
    public void test0623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0623");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        java.lang.String str6 = helpFormatter0.rtrim("");
        int int10 = helpFormatter0.findWrapPos(" ", (int) (byte) 10, (int) (short) 10);
        java.lang.String str11 = helpFormatter0.defaultOptPrefix;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "-" + "'", str11, "-");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #223
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #35
36: istore_2
37: aload_1
38: ldc           #11
40: putfield      #36
43: aload_1
44: getfield      #42
47: astore_3
48: aload_1
49: ldc           #11
51: invokevirtual #12
54: astore        4
56: aload_1
57: ldc           #38
59: bipush        10
61: bipush        10
63: invokevirtual #61
66: istore        5
68: aload_1
69: getfield      #42
72: astore        6
74: new           #22
77: dup
78: invokespecial #23
81: ldc           #24
83: invokevirtual #25
86: iload_2
87: invokevirtual #29
90: ldc           #30
92: invokevirtual #25
95: iconst_1
96: invokevirtual #29
99: ldc           #24
101: invokevirtual #25
104: invokevirtual #27
107: iload_2
108: iconst_1
109: if_icmpne     116
112: iconst_1
113: goto          117
116: iconst_0
117: invokestatic  #31
120: new           #22
123: dup
124: invokespecial #23
127: ldc           #24
129: invokevirtual #25
132: aload_3
133: invokevirtual #25
136: ldc           #48
138: invokevirtual #25
141: invokevirtual #27
144: aload_3
145: ldc           #49
147: invokestatic  #28
150: new           #22
153: dup
154: invokespecial #23
157: ldc           #24
159: invokevirtual #25
162: aload         4
164: invokevirtual #25
167: ldc           #26
169: invokevirtual #25
172: invokevirtual #27
175: aload         4
177: ldc           #11
179: invokestatic  #28
182: new           #22
185: dup
186: invokespecial #23
189: ldc           #24
191: invokevirtual #25
194: iload         5
196: invokevirtual #29
199: ldc           #30
201: invokevirtual #25
204: iconst_m1
205: invokevirtual #29
208: ldc           #24
210: invokevirtual #25
213: invokevirtual #27
216: iload         5
218: iconst_m1
219: if_icmpne     226
222: iconst_1
223: goto          227
226: iconst_0
227: invokestatic  #31
230: new           #22
233: dup
234: invokespecial #23
237: ldc           #24
239: invokevirtual #25
242: aload         6
244: invokevirtual #25
247: ldc           #48
249: invokevirtual #25
252: invokevirtual #27
255: aload         6
257: ldc           #49
259: invokestatic  #28
262: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0624
Start line: 2691
End line: 0
Method source code: 
    public void test0624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0624");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setLongOptPrefix(" ");
        helpFormatter0.defaultOptPrefix = "usage: ";
        java.lang.String str9 = helpFormatter0.defaultArgName;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "arg" + "'", str9, "arg");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #224
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #35
36: istore_2
37: aload_1
38: ldc           #11
40: putfield      #36
43: aload_1
44: getfield      #42
47: astore_3
48: aload_1
49: ldc           #38
51: invokevirtual #43
54: aload_1
55: ldc           #46
57: putfield      #42
60: aload_1
61: getfield      #15
64: astore        4
66: new           #22
69: dup
70: invokespecial #23
73: ldc           #24
75: invokevirtual #25
78: iload_2
79: invokevirtual #29
82: ldc           #30
84: invokevirtual #25
87: iconst_1
88: invokevirtual #29
91: ldc           #24
93: invokevirtual #25
96: invokevirtual #27
99: iload_2
100: iconst_1
101: if_icmpne     108
104: iconst_1
105: goto          109
108: iconst_0
109: invokestatic  #31
112: new           #22
115: dup
116: invokespecial #23
119: ldc           #24
121: invokevirtual #25
124: aload_3
125: invokevirtual #25
128: ldc           #48
130: invokevirtual #25
133: invokevirtual #27
136: aload_3
137: ldc           #49
139: invokestatic  #28
142: new           #22
145: dup
146: invokespecial #23
149: ldc           #24
151: invokevirtual #25
154: aload         4
156: invokevirtual #25
159: ldc           #79
161: invokevirtual #25
164: invokevirtual #27
167: aload         4
169: ldc           #78
171: invokestatic  #28
174: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0625
Start line: 2707
End line: 0
Method source code: 
    public void test0625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0625");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultOptPrefix;
        java.lang.String str6 = helpFormatter0.getLongOptPrefix();
        helpFormatter0.defaultArgName = "                                                                                                 ";
        int int9 = helpFormatter0.defaultLeftPad;
        helpFormatter0.setLongOptSeparator(" ");
        org.apache.commons.cli.HelpFormatter helpFormatter12 = new org.apache.commons.cli.HelpFormatter();
        int int13 = helpFormatter12.getLeftPadding();
        helpFormatter12.defaultNewLine = "";
        helpFormatter12.setDescPadding(10);
        java.lang.String str18 = helpFormatter12.getLongOptSeparator();
        java.lang.String str19 = helpFormatter12.getNewLine();
        org.apache.commons.cli.HelpFormatter helpFormatter20 = new org.apache.commons.cli.HelpFormatter();
        int int21 = helpFormatter20.getLeftPadding();
        helpFormatter20.defaultNewLine = "";
        helpFormatter20.setDescPadding(10);
        java.lang.String str26 = helpFormatter20.getLongOptSeparator();
        java.lang.String str27 = helpFormatter20.getLongOptSeparator();
        java.lang.String str29 = helpFormatter20.createPadding((int) (byte) 1);
        java.lang.String str30 = helpFormatter20.defaultOptPrefix;
        java.util.Comparator comparator31 = helpFormatter20.optionComparator;
        helpFormatter12.optionComparator = comparator31;
        helpFormatter0.optionComparator = comparator31;
        helpFormatter0.defaultLongOptPrefix = " ";
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + " " + "'", str18, " ");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + " " + "'", str26, " ");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + " " + "'", str27, " ");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + " " + "'", str29, " ");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "-" + "'", str30, "-");
        org.junit.Assert.assertNotNull(comparator31);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #225
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: ldc           #11
35: invokevirtual #51
38: aload_1
39: ldc           #11
41: putfield      #52
44: aload_1
45: getfield      #42
48: astore_2
49: aload_1
50: invokevirtual #53
53: astore_3
54: aload_1
55: ldc           #14
57: putfield      #15
60: aload_1
61: getfield      #40
64: istore        4
66: aload_1
67: ldc           #38
69: invokevirtual #74
72: new           #8
75: dup
76: invokespecial #9
79: astore        5
81: aload         5
83: invokevirtual #35
86: istore        6
88: aload         5
90: ldc           #11
92: putfield      #36
95: aload         5
97: bipush        10
99: invokevirtual #37
102: aload         5
104: invokevirtual #72
107: astore        7
109: aload         5
111: invokevirtual #16
114: astore        8
116: new           #8
119: dup
120: invokespecial #9
123: astore        9
125: aload         9
127: invokevirtual #35
130: istore        10
132: aload         9
134: ldc           #11
136: putfield      #36
139: aload         9
141: bipush        10
143: invokevirtual #37
146: aload         9
148: invokevirtual #72
151: astore        11
153: aload         9
155: invokevirtual #72
158: astore        12
160: aload         9
162: iconst_1
163: invokevirtual #93
166: astore        13
168: aload         9
170: getfield      #42
173: astore        14
175: aload         9
177: getfield      #10
180: astore        15
182: aload         5
184: aload         15
186: putfield      #10
189: aload_1
190: aload         15
192: putfield      #10
195: aload_1
196: ldc           #38
198: putfield      #52
201: new           #22
204: dup
205: invokespecial #23
208: ldc           #24
210: invokevirtual #25
213: aload_2
214: invokevirtual #25
217: ldc           #26
219: invokevirtual #25
222: invokevirtual #27
225: aload_2
226: ldc           #11
228: invokestatic  #28
231: new           #22
234: dup
235: invokespecial #23
238: ldc           #24
240: invokevirtual #25
243: aload_3
244: invokevirtual #25
247: ldc           #26
249: invokevirtual #25
252: invokevirtual #27
255: aload_3
256: ldc           #11
258: invokestatic  #28
261: new           #22
264: dup
265: invokespecial #23
268: ldc           #24
270: invokevirtual #25
273: iload         4
275: invokevirtual #29
278: ldc           #30
280: invokevirtual #25
283: iconst_1
284: invokevirtual #29
287: ldc           #24
289: invokevirtual #25
292: invokevirtual #27
295: iload         4
297: iconst_1
298: if_icmpne     305
301: iconst_1
302: goto          306
305: iconst_0
306: invokestatic  #31
309: new           #22
312: dup
313: invokespecial #23
316: ldc           #24
318: invokevirtual #25
321: iload         6
323: invokevirtual #29
326: ldc           #30
328: invokevirtual #25
331: iconst_1
332: invokevirtual #29
335: ldc           #24
337: invokevirtual #25
340: invokevirtual #27
343: iload         6
345: iconst_1
346: if_icmpne     353
349: iconst_1
350: goto          354
353: iconst_0
354: invokestatic  #31
357: new           #22
360: dup
361: invokespecial #23
364: ldc           #24
366: invokevirtual #25
369: aload         7
371: invokevirtual #25
374: ldc           #75
376: invokevirtual #25
379: invokevirtual #27
382: aload         7
384: ldc           #38
386: invokestatic  #28
389: new           #22
392: dup
393: invokespecial #23
396: ldc           #24
398: invokevirtual #25
401: aload         8
403: invokevirtual #25
406: ldc           #26
408: invokevirtual #25
411: invokevirtual #27
414: aload         8
416: ldc           #11
418: invokestatic  #28
421: new           #22
424: dup
425: invokespecial #23
428: ldc           #24
430: invokevirtual #25
433: iload         10
435: invokevirtual #29
438: ldc           #30
440: invokevirtual #25
443: iconst_1
444: invokevirtual #29
447: ldc           #24
449: invokevirtual #25
452: invokevirtual #27
455: iload         10
457: iconst_1
458: if_icmpne     465
461: iconst_1
462: goto          466
465: iconst_0
466: invokestatic  #31
469: new           #22
472: dup
473: invokespecial #23
476: ldc           #24
478: invokevirtual #25
481: aload         11
483: invokevirtual #25
486: ldc           #75
488: invokevirtual #25
491: invokevirtual #27
494: aload         11
496: ldc           #38
498: invokestatic  #28
501: new           #22
504: dup
505: invokespecial #23
508: ldc           #24
510: invokevirtual #25
513: aload         12
515: invokevirtual #25
518: ldc           #75
520: invokevirtual #25
523: invokevirtual #27
526: aload         12
528: ldc           #38
530: invokestatic  #28
533: new           #22
536: dup
537: invokespecial #23
540: ldc           #24
542: invokevirtual #25
545: aload         13
547: invokevirtual #25
550: ldc           #75
552: invokevirtual #25
555: invokevirtual #27
558: aload         13
560: ldc           #38
562: invokestatic  #28
565: new           #22
568: dup
569: invokespecial #23
572: ldc           #24
574: invokevirtual #25
577: aload         14
579: invokevirtual #25
582: ldc           #48
584: invokevirtual #25
587: invokevirtual #27
590: aload         14
592: ldc           #49
594: invokestatic  #28
597: aload         15
599: invokestatic  #21
602: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0626
Start line: 2751
End line: 0
Method source code: 
    public void test0626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0626");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultOptPrefix;
        java.lang.String str6 = helpFormatter0.getLongOptPrefix();
        java.lang.String str7 = helpFormatter0.defaultNewLine;
        java.lang.String str8 = helpFormatter0.getOptPrefix();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\n" + "'", str7, "\n");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #226
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: ldc           #11
35: invokevirtual #51
38: aload_1
39: ldc           #11
41: putfield      #52
44: aload_1
45: getfield      #42
48: astore_2
49: aload_1
50: invokevirtual #53
53: astore_3
54: aload_1
55: getfield      #36
58: astore        4
60: aload_1
61: invokevirtual #73
64: astore        5
66: new           #22
69: dup
70: invokespecial #23
73: ldc           #24
75: invokevirtual #25
78: aload_2
79: invokevirtual #25
82: ldc           #26
84: invokevirtual #25
87: invokevirtual #27
90: aload_2
91: ldc           #11
93: invokestatic  #28
96: new           #22
99: dup
100: invokespecial #23
103: ldc           #24
105: invokevirtual #25
108: aload_3
109: invokevirtual #25
112: ldc           #26
114: invokevirtual #25
117: invokevirtual #27
120: aload_3
121: ldc           #11
123: invokestatic  #28
126: new           #22
129: dup
130: invokespecial #23
133: ldc           #24
135: invokevirtual #25
138: aload         4
140: invokevirtual #25
143: ldc           #32
145: invokevirtual #25
148: invokevirtual #27
151: aload         4
153: ldc           #33
155: invokestatic  #28
158: new           #22
161: dup
162: invokespecial #23
165: ldc           #24
167: invokevirtual #25
170: aload         5
172: invokevirtual #25
175: ldc           #26
177: invokevirtual #25
180: invokevirtual #27
183: aload         5
185: ldc           #11
187: invokestatic  #28
190: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0627
Start line: 2768
End line: 0
Method source code: 
    public void test0627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0627");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.getArgName();
        helpFormatter0.defaultNewLine = "\n";
        helpFormatter0.defaultLeftPad = (byte) -1;
        helpFormatter0.setLongOptSeparator("");
        org.apache.commons.cli.HelpFormatter helpFormatter9 = new org.apache.commons.cli.HelpFormatter();
        int int10 = helpFormatter9.getLeftPadding();
        helpFormatter9.defaultNewLine = "";
        helpFormatter9.setDescPadding(10);
        helpFormatter9.setSyntaxPrefix(" ");
        java.util.Comparator comparator17 = helpFormatter9.getOptionComparator();
        helpFormatter0.setOptionComparator(comparator17);
        java.lang.String str19 = helpFormatter0.defaultOptPrefix;
        java.lang.String str20 = helpFormatter0.defaultArgName;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "arg" + "'", str2, "arg");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(comparator17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "-" + "'", str19, "-");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "arg" + "'", str20, "arg");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #227
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #35
36: istore_2
37: aload_1
38: invokevirtual #83
41: astore_3
42: aload_1
43: ldc           #33
45: putfield      #36
48: aload_1
49: iconst_m1
50: putfield      #40
53: aload_1
54: ldc           #11
56: invokevirtual #74
59: new           #8
62: dup
63: invokespecial #9
66: astore        4
68: aload         4
70: invokevirtual #35
73: istore        5
75: aload         4
77: ldc           #11
79: putfield      #36
82: aload         4
84: bipush        10
86: invokevirtual #37
89: aload         4
91: ldc           #38
93: invokevirtual #39
96: aload         4
98: invokevirtual #58
101: astore        6
103: aload_1
104: aload         6
106: invokevirtual #99
109: aload_1
110: getfield      #42
113: astore        7
115: aload_1
116: getfield      #15
119: astore        8
121: new           #22
124: dup
125: invokespecial #23
128: ldc           #24
130: invokevirtual #25
133: iload_2
134: invokevirtual #29
137: ldc           #30
139: invokevirtual #25
142: iconst_1
143: invokevirtual #29
146: ldc           #24
148: invokevirtual #25
151: invokevirtual #27
154: iload_2
155: iconst_1
156: if_icmpne     163
159: iconst_1
160: goto          164
163: iconst_0
164: invokestatic  #31
167: new           #22
170: dup
171: invokespecial #23
174: ldc           #24
176: invokevirtual #25
179: aload_3
180: invokevirtual #25
183: ldc           #79
185: invokevirtual #25
188: invokevirtual #27
191: aload_3
192: ldc           #78
194: invokestatic  #28
197: new           #22
200: dup
201: invokespecial #23
204: ldc           #24
206: invokevirtual #25
209: iload         5
211: invokevirtual #29
214: ldc           #30
216: invokevirtual #25
219: iconst_1
220: invokevirtual #29
223: ldc           #24
225: invokevirtual #25
228: invokevirtual #27
231: iload         5
233: iconst_1
234: if_icmpne     241
237: iconst_1
238: goto          242
241: iconst_0
242: invokestatic  #31
245: aload         6
247: invokestatic  #21
250: new           #22
253: dup
254: invokespecial #23
257: ldc           #24
259: invokevirtual #25
262: aload         7
264: invokevirtual #25
267: ldc           #48
269: invokevirtual #25
272: invokevirtual #27
275: aload         7
277: ldc           #49
279: invokestatic  #28
282: new           #22
285: dup
286: invokespecial #23
289: ldc           #24
291: invokevirtual #25
294: aload         8
296: invokevirtual #25
299: ldc           #79
301: invokevirtual #25
304: invokevirtual #27
307: aload         8
309: ldc           #78
311: invokestatic  #28
314: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0628
Start line: 2795
End line: 0
Method source code: 
    public void test0628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0628");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str3 = helpFormatter0.getOptPrefix();
        java.util.Comparator comparator4 = helpFormatter0.optionComparator;
        java.lang.String str5 = helpFormatter0.getOptPrefix();
        helpFormatter0.setLongOptSeparator("                                                                                                    ");
        org.apache.commons.cli.HelpFormatter helpFormatter8 = new org.apache.commons.cli.HelpFormatter();
        int int9 = helpFormatter8.getLeftPadding();
        helpFormatter8.defaultNewLine = "";
        java.lang.String str12 = helpFormatter8.defaultOptPrefix;
        java.lang.String str14 = helpFormatter8.rtrim("");
        int int15 = helpFormatter8.getDescPadding();
        helpFormatter8.defaultWidth = 0;
        java.util.Comparator comparator18 = helpFormatter8.optionComparator;
        helpFormatter0.optionComparator = comparator18;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "--" + "'", str2, "--");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "-" + "'", str3, "-");
        org.junit.Assert.assertNotNull(comparator4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "-" + "'", str5, "-");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "-" + "'", str12, "-");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 3 + "'", int15 == 3);
        org.junit.Assert.assertNotNull(comparator18);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #228
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #35
36: istore_2
37: aload_1
38: getfield      #52
41: astore_3
42: aload_1
43: invokevirtual #73
46: astore        4
48: aload_1
49: getfield      #10
52: astore        5
54: aload_1
55: invokevirtual #73
58: astore        6
60: aload_1
61: ldc           #118
63: invokevirtual #74
66: new           #8
69: dup
70: invokespecial #9
73: astore        7
75: aload         7
77: invokevirtual #35
80: istore        8
82: aload         7
84: ldc           #11
86: putfield      #36
89: aload         7
91: getfield      #42
94: astore        9
96: aload         7
98: ldc           #11
100: invokevirtual #12
103: astore        10
105: aload         7
107: invokevirtual #13
110: istore        11
112: aload         7
114: iconst_0
115: putfield      #57
118: aload         7
120: getfield      #10
123: astore        12
125: aload_1
126: aload         12
128: putfield      #10
131: new           #22
134: dup
135: invokespecial #23
138: ldc           #24
140: invokevirtual #25
143: iload_2
144: invokevirtual #29
147: ldc           #30
149: invokevirtual #25
152: iconst_1
153: invokevirtual #29
156: ldc           #24
158: invokevirtual #25
161: invokevirtual #27
164: iload_2
165: iconst_1
166: if_icmpne     173
169: iconst_1
170: goto          174
173: iconst_0
174: invokestatic  #31
177: new           #22
180: dup
181: invokespecial #23
184: ldc           #24
186: invokevirtual #25
189: aload_3
190: invokevirtual #25
193: ldc           #62
195: invokevirtual #25
198: invokevirtual #27
201: aload_3
202: ldc           #63
204: invokestatic  #28
207: new           #22
210: dup
211: invokespecial #23
214: ldc           #24
216: invokevirtual #25
219: aload         4
221: invokevirtual #25
224: ldc           #48
226: invokevirtual #25
229: invokevirtual #27
232: aload         4
234: ldc           #49
236: invokestatic  #28
239: aload         5
241: invokestatic  #21
244: new           #22
247: dup
248: invokespecial #23
251: ldc           #24
253: invokevirtual #25
256: aload         6
258: invokevirtual #25
261: ldc           #48
263: invokevirtual #25
266: invokevirtual #27
269: aload         6
271: ldc           #49
273: invokestatic  #28
276: new           #22
279: dup
280: invokespecial #23
283: ldc           #24
285: invokevirtual #25
288: iload         8
290: invokevirtual #29
293: ldc           #30
295: invokevirtual #25
298: iconst_1
299: invokevirtual #29
302: ldc           #24
304: invokevirtual #25
307: invokevirtual #27
310: iload         8
312: iconst_1
313: if_icmpne     320
316: iconst_1
317: goto          321
320: iconst_0
321: invokestatic  #31
324: new           #22
327: dup
328: invokespecial #23
331: ldc           #24
333: invokevirtual #25
336: aload         9
338: invokevirtual #25
341: ldc           #48
343: invokevirtual #25
346: invokevirtual #27
349: aload         9
351: ldc           #49
353: invokestatic  #28
356: new           #22
359: dup
360: invokespecial #23
363: ldc           #24
365: invokevirtual #25
368: aload         10
370: invokevirtual #25
373: ldc           #26
375: invokevirtual #25
378: invokevirtual #27
381: aload         10
383: ldc           #11
385: invokestatic  #28
388: new           #22
391: dup
392: invokespecial #23
395: ldc           #24
397: invokevirtual #25
400: iload         11
402: invokevirtual #29
405: ldc           #30
407: invokevirtual #25
410: iconst_3
411: invokevirtual #29
414: ldc           #24
416: invokevirtual #25
419: invokevirtual #27
422: iload         11
424: iconst_3
425: if_icmpne     432
428: iconst_1
429: goto          433
432: iconst_0
433: invokestatic  #31
436: aload         12
438: invokestatic  #21
441: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0629
Start line: 2827
End line: 0
Method source code: 
    public void test0629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0629");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.util.Comparator comparator1 = helpFormatter0.optionComparator;
        java.lang.String str2 = helpFormatter0.defaultNewLine;
        java.io.PrintWriter printWriter3 = null;
        org.apache.commons.cli.Options options5 = null;
        try {
            helpFormatter0.printOptions(printWriter3, 32, options5, (int) (byte) -1, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: null");
        } catch (java.lang.NegativeArraySizeException e) {
        }
        org.junit.Assert.assertNotNull(comparator1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "\n" + "'", str2, "\n");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #229
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: getfield      #10
36: astore_2
37: aload_1
38: getfield      #36
41: astore_3
42: aconst_null
43: astore        4
45: aconst_null
46: astore        5
48: aload_1
49: aload         4
51: bipush        32
53: aload         5
55: iconst_m1
56: bipush        10
58: invokevirtual #17
61: ldc           #84
63: invokestatic  #19
66: goto          71
69: astore        6
71: aload_2
72: invokestatic  #21
75: new           #22
78: dup
79: invokespecial #23
82: ldc           #24
84: invokevirtual #25
87: aload_3
88: invokevirtual #25
91: ldc           #32
93: invokevirtual #25
96: invokevirtual #27
99: aload_3
100: ldc           #33
102: invokestatic  #28
105: return
Exception table:
from    to  target type
48    66    69   Class java/lang/NegativeArraySizeException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0630
Start line: 2847
End line: 0
Method source code: 
    public void test0630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0630");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        java.lang.String str6 = helpFormatter0.rtrim("");
        java.lang.String str8 = helpFormatter0.rtrim("-");
        helpFormatter0.defaultWidth = (short) -1;
        helpFormatter0.setWidth((int) (short) 10);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "-" + "'", str8, "-");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #230
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #35
36: istore_2
37: aload_1
38: ldc           #11
40: putfield      #36
43: aload_1
44: getfield      #42
47: astore_3
48: aload_1
49: ldc           #11
51: invokevirtual #12
54: astore        4
56: aload_1
57: ldc           #49
59: invokevirtual #12
62: astore        5
64: aload_1
65: iconst_m1
66: putfield      #57
69: aload_1
70: bipush        10
72: invokevirtual #90
75: new           #22
78: dup
79: invokespecial #23
82: ldc           #24
84: invokevirtual #25
87: iload_2
88: invokevirtual #29
91: ldc           #30
93: invokevirtual #25
96: iconst_1
97: invokevirtual #29
100: ldc           #24
102: invokevirtual #25
105: invokevirtual #27
108: iload_2
109: iconst_1
110: if_icmpne     117
113: iconst_1
114: goto          118
117: iconst_0
118: invokestatic  #31
121: new           #22
124: dup
125: invokespecial #23
128: ldc           #24
130: invokevirtual #25
133: aload_3
134: invokevirtual #25
137: ldc           #48
139: invokevirtual #25
142: invokevirtual #27
145: aload_3
146: ldc           #49
148: invokestatic  #28
151: new           #22
154: dup
155: invokespecial #23
158: ldc           #24
160: invokevirtual #25
163: aload         4
165: invokevirtual #25
168: ldc           #26
170: invokevirtual #25
173: invokevirtual #27
176: aload         4
178: ldc           #11
180: invokestatic  #28
183: new           #22
186: dup
187: invokespecial #23
190: ldc           #24
192: invokevirtual #25
195: aload         5
197: invokevirtual #25
200: ldc           #48
202: invokevirtual #25
205: invokevirtual #27
208: aload         5
210: ldc           #49
212: invokestatic  #28
215: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0631
Start line: 2865
End line: 0
Method source code: 
    public void test0631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0631");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.lang.String str1 = helpFormatter0.defaultSyntaxPrefix;
        int int2 = helpFormatter0.getWidth();
        java.lang.String str3 = helpFormatter0.getLongOptSeparator();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "usage: " + "'", str1, "usage: ");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 74 + "'", int2 == 74);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + " " + "'", str3, " ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #231
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: getfield      #45
36: astore_2
37: aload_1
38: invokevirtual #66
41: istore_3
42: aload_1
43: invokevirtual #72
46: astore        4
48: new           #22
51: dup
52: invokespecial #23
55: ldc           #24
57: invokevirtual #25
60: aload_2
61: invokevirtual #25
64: ldc           #104
66: invokevirtual #25
69: invokevirtual #27
72: aload_2
73: ldc           #46
75: invokestatic  #28
78: new           #22
81: dup
82: invokespecial #23
85: ldc           #24
87: invokevirtual #25
90: iload_3
91: invokevirtual #29
94: ldc           #30
96: invokevirtual #25
99: bipush        74
101: invokevirtual #29
104: ldc           #24
106: invokevirtual #25
109: invokevirtual #27
112: iload_3
113: bipush        74
115: if_icmpne     122
118: iconst_1
119: goto          123
122: iconst_0
123: invokestatic  #31
126: new           #22
129: dup
130: invokespecial #23
133: ldc           #24
135: invokevirtual #25
138: aload         4
140: invokevirtual #25
143: ldc           #75
145: invokevirtual #25
148: invokevirtual #27
151: aload         4
153: ldc           #38
155: invokestatic  #28
158: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0632
Start line: 2878
End line: 0
Method source code: 
    public void test0632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0632");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.defaultDescPad = '4';
        helpFormatter0.setNewLine("");
        helpFormatter0.defaultDescPad = 'a';
        java.lang.String str10 = helpFormatter0.defaultNewLine;
        java.io.PrintWriter printWriter11 = null;
        try {
            helpFormatter0.printWrapped(printWriter11, (int) ' ', 52, "\n");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #232
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #35
36: istore_2
37: aload_1
38: ldc           #11
40: putfield      #36
43: aload_1
44: bipush        52
46: putfield      #44
49: aload_1
50: ldc           #11
52: invokevirtual #88
55: aload_1
56: bipush        97
58: putfield      #44
61: aload_1
62: getfield      #36
65: astore_3
66: aconst_null
67: astore        4
69: aload_1
70: aload         4
72: bipush        32
74: bipush        52
76: ldc           #33
78: invokevirtual #187
81: ldc           #18
83: invokestatic  #19
86: goto          91
89: astore        5
91: new           #22
94: dup
95: invokespecial #23
98: ldc           #24
100: invokevirtual #25
103: iload_2
104: invokevirtual #29
107: ldc           #30
109: invokevirtual #25
112: iconst_1
113: invokevirtual #29
116: ldc           #24
118: invokevirtual #25
121: invokevirtual #27
124: iload_2
125: iconst_1
126: if_icmpne     133
129: iconst_1
130: goto          134
133: iconst_0
134: invokestatic  #31
137: new           #22
140: dup
141: invokespecial #23
144: ldc           #24
146: invokevirtual #25
149: aload_3
150: invokevirtual #25
153: ldc           #26
155: invokevirtual #25
158: invokevirtual #27
161: aload_3
162: ldc           #11
164: invokestatic  #28
167: return
Exception table:
from    to  target type
69    86    89   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0633
Start line: 2901
End line: 0
Method source code: 
    public void test0633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0633");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setLongOptPrefix(" ");
        helpFormatter0.defaultDescPad = (short) 10;
        helpFormatter0.defaultSyntaxPrefix = "";
        helpFormatter0.setLongOptPrefix("");
        java.lang.String str13 = helpFormatter0.defaultNewLine;
        java.lang.String str14 = helpFormatter0.getLongOptPrefix();
        java.lang.String str15 = helpFormatter0.getArgName();
        helpFormatter0.defaultWidth = (byte) 1;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "arg" + "'", str15, "arg");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #233
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #35
36: istore_2
37: aload_1
38: ldc           #11
40: putfield      #36
43: aload_1
44: getfield      #42
47: astore_3
48: aload_1
49: ldc           #38
51: invokevirtual #43
54: aload_1
55: bipush        10
57: putfield      #44
60: aload_1
61: ldc           #11
63: putfield      #45
66: aload_1
67: ldc           #11
69: invokevirtual #43
72: aload_1
73: getfield      #36
76: astore        4
78: aload_1
79: invokevirtual #53
82: astore        5
84: aload_1
85: invokevirtual #83
88: astore        6
90: aload_1
91: iconst_1
92: putfield      #57
95: new           #22
98: dup
99: invokespecial #23
102: ldc           #24
104: invokevirtual #25
107: iload_2
108: invokevirtual #29
111: ldc           #30
113: invokevirtual #25
116: iconst_1
117: invokevirtual #29
120: ldc           #24
122: invokevirtual #25
125: invokevirtual #27
128: iload_2
129: iconst_1
130: if_icmpne     137
133: iconst_1
134: goto          138
137: iconst_0
138: invokestatic  #31
141: new           #22
144: dup
145: invokespecial #23
148: ldc           #24
150: invokevirtual #25
153: aload_3
154: invokevirtual #25
157: ldc           #48
159: invokevirtual #25
162: invokevirtual #27
165: aload_3
166: ldc           #49
168: invokestatic  #28
171: new           #22
174: dup
175: invokespecial #23
178: ldc           #24
180: invokevirtual #25
183: aload         4
185: invokevirtual #25
188: ldc           #26
190: invokevirtual #25
193: invokevirtual #27
196: aload         4
198: ldc           #11
200: invokestatic  #28
203: new           #22
206: dup
207: invokespecial #23
210: ldc           #24
212: invokevirtual #25
215: aload         5
217: invokevirtual #25
220: ldc           #26
222: invokevirtual #25
225: invokevirtual #27
228: aload         5
230: ldc           #11
232: invokestatic  #28
235: new           #22
238: dup
239: invokespecial #23
242: ldc           #24
244: invokevirtual #25
247: aload         6
249: invokevirtual #25
252: ldc           #79
254: invokevirtual #25
257: invokevirtual #27
260: aload         6
262: ldc           #78
264: invokestatic  #28
267: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0634
Start line: 2924
End line: 0
Method source code: 
    public void test0634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0634");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        int int6 = helpFormatter0.defaultWidth;
        java.lang.String str7 = helpFormatter0.getLongOptPrefix();
        java.lang.String str8 = helpFormatter0.getLongOptPrefix();
        helpFormatter0.setLongOptSeparator("hi!");
        int int11 = helpFormatter0.getWidth();
        java.lang.String str13 = helpFormatter0.rtrim("                                                    ");
        helpFormatter0.setLongOptPrefix("");
        helpFormatter0.defaultArgName = "                                                                                                    ";
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "--" + "'", str5, "--");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 74 + "'", int6 == 74);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "--" + "'", str7, "--");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "--" + "'", str8, "--");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 74 + "'", int11 == 74);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #234
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #35
36: istore_2
37: aload_1
38: ldc           #11
40: putfield      #36
43: aload_1
44: getfield      #42
47: astore_3
48: aload_1
49: getfield      #52
52: astore        4
54: aload_1
55: getfield      #57
58: istore        5
60: aload_1
61: invokevirtual #53
64: astore        6
66: aload_1
67: invokevirtual #53
70: astore        7
72: aload_1
73: ldc           #65
75: invokevirtual #74
78: aload_1
79: invokevirtual #66
82: istore        8
84: aload_1
85: ldc           #77
87: invokevirtual #12
90: astore        9
92: aload_1
93: ldc           #11
95: invokevirtual #43
98: aload_1
99: ldc           #118
101: putfield      #15
104: new           #22
107: dup
108: invokespecial #23
111: ldc           #24
113: invokevirtual #25
116: iload_2
117: invokevirtual #29
120: ldc           #30
122: invokevirtual #25
125: iconst_1
126: invokevirtual #29
129: ldc           #24
131: invokevirtual #25
134: invokevirtual #27
137: iload_2
138: iconst_1
139: if_icmpne     146
142: iconst_1
143: goto          147
146: iconst_0
147: invokestatic  #31
150: new           #22
153: dup
154: invokespecial #23
157: ldc           #24
159: invokevirtual #25
162: aload_3
163: invokevirtual #25
166: ldc           #48
168: invokevirtual #25
171: invokevirtual #27
174: aload_3
175: ldc           #49
177: invokestatic  #28
180: new           #22
183: dup
184: invokespecial #23
187: ldc           #24
189: invokevirtual #25
192: aload         4
194: invokevirtual #25
197: ldc           #62
199: invokevirtual #25
202: invokevirtual #27
205: aload         4
207: ldc           #63
209: invokestatic  #28
212: new           #22
215: dup
216: invokespecial #23
219: ldc           #24
221: invokevirtual #25
224: iload         5
226: invokevirtual #29
229: ldc           #30
231: invokevirtual #25
234: bipush        74
236: invokevirtual #29
239: ldc           #24
241: invokevirtual #25
244: invokevirtual #27
247: iload         5
249: bipush        74
251: if_icmpne     258
254: iconst_1
255: goto          259
258: iconst_0
259: invokestatic  #31
262: new           #22
265: dup
266: invokespecial #23
269: ldc           #24
271: invokevirtual #25
274: aload         6
276: invokevirtual #25
279: ldc           #62
281: invokevirtual #25
284: invokevirtual #27
287: aload         6
289: ldc           #63
291: invokestatic  #28
294: new           #22
297: dup
298: invokespecial #23
301: ldc           #24
303: invokevirtual #25
306: aload         7
308: invokevirtual #25
311: ldc           #62
313: invokevirtual #25
316: invokevirtual #27
319: aload         7
321: ldc           #63
323: invokestatic  #28
326: new           #22
329: dup
330: invokespecial #23
333: ldc           #24
335: invokevirtual #25
338: iload         8
340: invokevirtual #29
343: ldc           #30
345: invokevirtual #25
348: bipush        74
350: invokevirtual #29
353: ldc           #24
355: invokevirtual #25
358: invokevirtual #27
361: iload         8
363: bipush        74
365: if_icmpne     372
368: iconst_1
369: goto          373
372: iconst_0
373: invokestatic  #31
376: new           #22
379: dup
380: invokespecial #23
383: ldc           #24
385: invokevirtual #25
388: aload         9
390: invokevirtual #25
393: ldc           #26
395: invokevirtual #25
398: invokevirtual #27
401: aload         9
403: ldc           #11
405: invokestatic  #28
408: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0635
Start line: 2951
End line: 0
Method source code: 
    public void test0635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0635");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.lang.String str1 = helpFormatter0.defaultSyntaxPrefix;
        helpFormatter0.setOptPrefix(" ");
        helpFormatter0.setOptPrefix("\n");
        java.io.PrintWriter printWriter6 = null;
        org.apache.commons.cli.Options options9 = null;
        try {
            helpFormatter0.printUsage(printWriter6, (-2), " ", options9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "usage: " + "'", str1, "usage: ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #235
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: getfield      #45
36: astore_2
37: aload_1
38: ldc           #38
40: invokevirtual #51
43: aload_1
44: ldc           #33
46: invokevirtual #51
49: aconst_null
50: astore_3
51: aconst_null
52: astore        4
54: aload_1
55: aload_3
56: bipush        -2
58: ldc           #38
60: aload         4
62: invokevirtual #81
65: ldc           #18
67: invokestatic  #19
70: goto          75
73: astore        5
75: new           #22
78: dup
79: invokespecial #23
82: ldc           #24
84: invokevirtual #25
87: aload_2
88: invokevirtual #25
91: ldc           #104
93: invokevirtual #25
96: invokevirtual #27
99: aload_2
100: ldc           #46
102: invokestatic  #28
105: return
Exception table:
from    to  target type
54    70    73   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0636
Start line: 2971
End line: 0
Method source code: 
    public void test0636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0636");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        java.lang.String str6 = helpFormatter0.getLongOptSeparator();
        java.lang.String str7 = helpFormatter0.getLongOptSeparator();
        java.lang.String str9 = helpFormatter0.createPadding((int) (byte) 1);
        java.lang.String str10 = helpFormatter0.defaultOptPrefix;
        java.lang.StringBuffer stringBuffer11 = null;
        try {
            java.lang.StringBuffer stringBuffer15 = helpFormatter0.renderWrappedText(stringBuffer11, (int) (short) -1, (int) (short) 1, "                                ");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + " " + "'", str6, " ");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + " " + "'", str7, " ");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + " " + "'", str9, " ");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "-" + "'", str10, "-");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #236
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #35
36: istore_2
37: aload_1
38: ldc           #11
40: putfield      #36
43: aload_1
44: bipush        10
46: invokevirtual #37
49: aload_1
50: invokevirtual #72
53: astore_3
54: aload_1
55: invokevirtual #72
58: astore        4
60: aload_1
61: iconst_1
62: invokevirtual #93
65: astore        5
67: aload_1
68: getfield      #42
71: astore        6
73: aconst_null
74: astore        7
76: aload_1
77: aload         7
79: iconst_m1
80: iconst_1
81: ldc           #95
83: invokevirtual #123
86: astore        8
88: ldc           #18
90: invokestatic  #19
93: goto          98
96: astore        8
98: new           #22
101: dup
102: invokespecial #23
105: ldc           #24
107: invokevirtual #25
110: iload_2
111: invokevirtual #29
114: ldc           #30
116: invokevirtual #25
119: iconst_1
120: invokevirtual #29
123: ldc           #24
125: invokevirtual #25
128: invokevirtual #27
131: iload_2
132: iconst_1
133: if_icmpne     140
136: iconst_1
137: goto          141
140: iconst_0
141: invokestatic  #31
144: new           #22
147: dup
148: invokespecial #23
151: ldc           #24
153: invokevirtual #25
156: aload_3
157: invokevirtual #25
160: ldc           #75
162: invokevirtual #25
165: invokevirtual #27
168: aload_3
169: ldc           #38
171: invokestatic  #28
174: new           #22
177: dup
178: invokespecial #23
181: ldc           #24
183: invokevirtual #25
186: aload         4
188: invokevirtual #25
191: ldc           #75
193: invokevirtual #25
196: invokevirtual #27
199: aload         4
201: ldc           #38
203: invokestatic  #28
206: new           #22
209: dup
210: invokespecial #23
213: ldc           #24
215: invokevirtual #25
218: aload         5
220: invokevirtual #25
223: ldc           #75
225: invokevirtual #25
228: invokevirtual #27
231: aload         5
233: ldc           #38
235: invokestatic  #28
238: new           #22
241: dup
242: invokespecial #23
245: ldc           #24
247: invokevirtual #25
250: aload         6
252: invokevirtual #25
255: ldc           #48
257: invokevirtual #25
260: invokevirtual #27
263: aload         6
265: ldc           #49
267: invokestatic  #28
270: return
Exception table:
from    to  target type
76    93    96   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0637
Start line: 2998
End line: 0
Method source code: 
    public void test0637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0637");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str6 = helpFormatter0.getNewLine();
        java.util.Comparator comparator7 = helpFormatter0.getOptionComparator();
        org.apache.commons.cli.HelpFormatter helpFormatter8 = new org.apache.commons.cli.HelpFormatter();
        int int9 = helpFormatter8.getLeftPadding();
        helpFormatter8.defaultNewLine = "";
        java.lang.String str12 = helpFormatter8.defaultOptPrefix;
        helpFormatter8.setLongOptPrefix(" ");
        helpFormatter8.defaultDescPad = (short) 10;
        java.lang.String str17 = helpFormatter8.defaultArgName;
        java.util.Comparator comparator18 = helpFormatter8.optionComparator;
        helpFormatter0.setOptionComparator(comparator18);
        helpFormatter0.defaultSyntaxPrefix = "                                                                                                 ";
        org.apache.commons.cli.HelpFormatter helpFormatter22 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter22.setOptPrefix("");
        helpFormatter22.defaultLongOptPrefix = "";
        java.lang.String str27 = helpFormatter22.defaultLongOptPrefix;
        helpFormatter22.defaultDescPad = 0;
        org.apache.commons.cli.HelpFormatter helpFormatter30 = new org.apache.commons.cli.HelpFormatter();
        java.util.Comparator comparator31 = helpFormatter30.optionComparator;
        int int32 = helpFormatter30.getLeftPadding();
        int int33 = helpFormatter30.defaultLeftPad;
        java.lang.String str35 = helpFormatter30.createPadding((int) 'a');
        org.apache.commons.cli.HelpFormatter helpFormatter36 = new org.apache.commons.cli.HelpFormatter();
        int int37 = helpFormatter36.getLeftPadding();
        helpFormatter36.defaultNewLine = "";
        helpFormatter36.defaultDescPad = '4';
        helpFormatter36.setNewLine("");
        int int47 = helpFormatter36.findWrapPos("\n", (int) ' ', 3);
        java.util.Comparator comparator48 = helpFormatter36.optionComparator;
        helpFormatter30.setOptionComparator(comparator48);
        helpFormatter22.setOptionComparator(comparator48);
        helpFormatter0.setOptionComparator(comparator48);
        helpFormatter0.defaultLeftPad = '#';
        helpFormatter0.setDescPadding(100);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\n" + "'", str6, "\n");
        org.junit.Assert.assertNotNull(comparator7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "-" + "'", str12, "-");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "arg" + "'", str17, "arg");
        org.junit.Assert.assertNotNull(comparator18);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(comparator31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "                                                                                                 " + "'", str35, "                                                                                                 ");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(comparator48);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #237
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: ldc           #11
35: invokevirtual #51
38: aload_1
39: ldc           #11
41: putfield      #52
44: aload_1
45: getfield      #52
48: astore_2
49: aload_1
50: invokevirtual #16
53: astore_3
54: aload_1
55: invokevirtual #58
58: astore        4
60: new           #8
63: dup
64: invokespecial #9
67: astore        5
69: aload         5
71: invokevirtual #35
74: istore        6
76: aload         5
78: ldc           #11
80: putfield      #36
83: aload         5
85: getfield      #42
88: astore        7
90: aload         5
92: ldc           #38
94: invokevirtual #43
97: aload         5
99: bipush        10
101: putfield      #44
104: aload         5
106: getfield      #15
109: astore        8
111: aload         5
113: getfield      #10
116: astore        9
118: aload_1
119: aload         9
121: invokevirtual #99
124: aload_1
125: ldc           #14
127: putfield      #45
130: new           #8
133: dup
134: invokespecial #9
137: astore        10
139: aload         10
141: ldc           #11
143: invokevirtual #51
146: aload         10
148: ldc           #11
150: putfield      #52
153: aload         10
155: getfield      #52
158: astore        11
160: aload         10
162: iconst_0
163: putfield      #44
166: new           #8
169: dup
170: invokespecial #9
173: astore        12
175: aload         12
177: getfield      #10
180: astore        13
182: aload         12
184: invokevirtual #35
187: istore        14
189: aload         12
191: getfield      #40
194: istore        15
196: aload         12
198: bipush        97
200: invokevirtual #93
203: astore        16
205: new           #8
208: dup
209: invokespecial #9
212: astore        17
214: aload         17
216: invokevirtual #35
219: istore        18
221: aload         17
223: ldc           #11
225: putfield      #36
228: aload         17
230: bipush        52
232: putfield      #44
235: aload         17
237: ldc           #11
239: invokevirtual #88
242: aload         17
244: ldc           #33
246: bipush        32
248: iconst_3
249: invokevirtual #61
252: istore        19
254: aload         17
256: getfield      #10
259: astore        20
261: aload         12
263: aload         20
265: invokevirtual #99
268: aload         10
270: aload         20
272: invokevirtual #99
275: aload_1
276: aload         20
278: invokevirtual #99
281: aload_1
282: bipush        35
284: putfield      #40
287: aload_1
288: bipush        100
290: invokevirtual #37
293: new           #22
296: dup
297: invokespecial #23
300: ldc           #24
302: invokevirtual #25
305: aload_2
306: invokevirtual #25
309: ldc           #26
311: invokevirtual #25
314: invokevirtual #27
317: aload_2
318: ldc           #11
320: invokestatic  #28
323: new           #22
326: dup
327: invokespecial #23
330: ldc           #24
332: invokevirtual #25
335: aload_3
336: invokevirtual #25
339: ldc           #32
341: invokevirtual #25
344: invokevirtual #27
347: aload_3
348: ldc           #33
350: invokestatic  #28
353: aload         4
355: invokestatic  #21
358: new           #22
361: dup
362: invokespecial #23
365: ldc           #24
367: invokevirtual #25
370: iload         6
372: invokevirtual #29
375: ldc           #30
377: invokevirtual #25
380: iconst_1
381: invokevirtual #29
384: ldc           #24
386: invokevirtual #25
389: invokevirtual #27
392: iload         6
394: iconst_1
395: if_icmpne     402
398: iconst_1
399: goto          403
402: iconst_0
403: invokestatic  #31
406: new           #22
409: dup
410: invokespecial #23
413: ldc           #24
415: invokevirtual #25
418: aload         7
420: invokevirtual #25
423: ldc           #48
425: invokevirtual #25
428: invokevirtual #27
431: aload         7
433: ldc           #49
435: invokestatic  #28
438: new           #22
441: dup
442: invokespecial #23
445: ldc           #24
447: invokevirtual #25
450: aload         8
452: invokevirtual #25
455: ldc           #79
457: invokevirtual #25
460: invokevirtual #27
463: aload         8
465: ldc           #78
467: invokestatic  #28
470: aload         9
472: invokestatic  #21
475: new           #22
478: dup
479: invokespecial #23
482: ldc           #24
484: invokevirtual #25
487: aload         11
489: invokevirtual #25
492: ldc           #26
494: invokevirtual #25
497: invokevirtual #27
500: aload         11
502: ldc           #11
504: invokestatic  #28
507: aload         13
509: invokestatic  #21
512: new           #22
515: dup
516: invokespecial #23
519: ldc           #24
521: invokevirtual #25
524: iload         14
526: invokevirtual #29
529: ldc           #30
531: invokevirtual #25
534: iconst_1
535: invokevirtual #29
538: ldc           #24
540: invokevirtual #25
543: invokevirtual #27
546: iload         14
548: iconst_1
549: if_icmpne     556
552: iconst_1
553: goto          557
556: iconst_0
557: invokestatic  #31
560: new           #22
563: dup
564: invokespecial #23
567: ldc           #24
569: invokevirtual #25
572: iload         15
574: invokevirtual #29
577: ldc           #30
579: invokevirtual #25
582: iconst_1
583: invokevirtual #29
586: ldc           #24
588: invokevirtual #25
591: invokevirtual #27
594: iload         15
596: iconst_1
597: if_icmpne     604
600: iconst_1
601: goto          605
604: iconst_0
605: invokestatic  #31
608: new           #22
611: dup
612: invokespecial #23
615: ldc           #24
617: invokevirtual #25
620: aload         16
622: invokevirtual #25
625: ldc           #142
627: invokevirtual #25
630: invokevirtual #27
633: aload         16
635: ldc           #14
637: invokestatic  #28
640: new           #22
643: dup
644: invokespecial #23
647: ldc           #24
649: invokevirtual #25
652: iload         18
654: invokevirtual #29
657: ldc           #30
659: invokevirtual #25
662: iconst_1
663: invokevirtual #29
666: ldc           #24
668: invokevirtual #25
671: invokevirtual #27
674: iload         18
676: iconst_1
677: if_icmpne     684
680: iconst_1
681: goto          685
684: iconst_0
685: invokestatic  #31
688: new           #22
691: dup
692: invokespecial #23
695: ldc           #24
697: invokevirtual #25
700: iload         19
702: invokevirtual #29
705: ldc           #30
707: invokevirtual #25
710: iconst_m1
711: invokevirtual #29
714: ldc           #24
716: invokevirtual #25
719: invokevirtual #27
722: iload         19
724: iconst_m1
725: if_icmpne     732
728: iconst_1
729: goto          733
732: iconst_0
733: invokestatic  #31
736: aload         20
738: invokestatic  #21
741: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0638
Start line: 3057
End line: 0
Method source code: 
    public void test0638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0638");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.defaultLongOptPrefix;
        int int6 = helpFormatter0.findWrapPos("", 100, (int) (byte) 0);
        helpFormatter0.defaultNewLine = "          ";
        java.io.PrintWriter printWriter9 = null;
        org.apache.commons.cli.Options options13 = null;
        try {
            helpFormatter0.printHelp(printWriter9, 3, "          ", " ", options13, (int) 'a', 10, "-", false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "--" + "'", str2, "--");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #238
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #35
36: istore_2
37: aload_1
38: getfield      #52
41: astore_3
42: aload_1
43: ldc           #11
45: bipush        100
47: iconst_0
48: invokevirtual #61
51: istore        4
53: aload_1
54: ldc           #67
56: putfield      #36
59: aconst_null
60: astore        5
62: aconst_null
63: astore        6
65: aload_1
66: aload         5
68: iconst_3
69: ldc           #67
71: ldc           #38
73: aload         6
75: bipush        97
77: bipush        10
79: ldc           #49
81: iconst_0
82: invokevirtual #138
85: ldc           #18
87: invokestatic  #19
90: goto          95
93: astore        7
95: new           #22
98: dup
99: invokespecial #23
102: ldc           #24
104: invokevirtual #25
107: iload_2
108: invokevirtual #29
111: ldc           #30
113: invokevirtual #25
116: iconst_1
117: invokevirtual #29
120: ldc           #24
122: invokevirtual #25
125: invokevirtual #27
128: iload_2
129: iconst_1
130: if_icmpne     137
133: iconst_1
134: goto          138
137: iconst_0
138: invokestatic  #31
141: new           #22
144: dup
145: invokespecial #23
148: ldc           #24
150: invokevirtual #25
153: aload_3
154: invokevirtual #25
157: ldc           #62
159: invokevirtual #25
162: invokevirtual #27
165: aload_3
166: ldc           #63
168: invokestatic  #28
171: new           #22
174: dup
175: invokespecial #23
178: ldc           #24
180: invokevirtual #25
183: iload         4
185: invokevirtual #29
188: ldc           #30
190: invokevirtual #25
193: iconst_m1
194: invokevirtual #29
197: ldc           #24
199: invokevirtual #25
202: invokevirtual #27
205: iload         4
207: iconst_m1
208: if_icmpne     215
211: iconst_1
212: goto          216
215: iconst_0
216: invokestatic  #31
219: return
Exception table:
from    to  target type
65    90    93   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0639
Start line: 3080
End line: 0
Method source code: 
    public void test0639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0639");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setLongOptPrefix(" ");
        org.apache.commons.cli.Options options8 = null;
        try {
            helpFormatter0.printHelp(" ", options8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #239
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #35
36: istore_2
37: aload_1
38: ldc           #11
40: putfield      #36
43: aload_1
44: getfield      #42
47: astore_3
48: aload_1
49: ldc           #38
51: invokevirtual #43
54: aconst_null
55: astore        4
57: aload_1
58: ldc           #38
60: aload         4
62: invokevirtual #240
65: ldc           #18
67: invokestatic  #19
70: goto          75
73: astore        5
75: new           #22
78: dup
79: invokespecial #23
82: ldc           #24
84: invokevirtual #25
87: iload_2
88: invokevirtual #29
91: ldc           #30
93: invokevirtual #25
96: iconst_1
97: invokevirtual #29
100: ldc           #24
102: invokevirtual #25
105: invokevirtual #27
108: iload_2
109: iconst_1
110: if_icmpne     117
113: iconst_1
114: goto          118
117: iconst_0
118: invokestatic  #31
121: new           #22
124: dup
125: invokespecial #23
128: ldc           #24
130: invokevirtual #25
133: aload_3
134: invokevirtual #25
137: ldc           #48
139: invokevirtual #25
142: invokevirtual #27
145: aload_3
146: ldc           #49
148: invokestatic  #28
151: return
Exception table:
from    to  target type
57    70    73   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0640
Start line: 3101
End line: 0
Method source code: 
    public void test0640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0640");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultOptPrefix;
        java.lang.String str6 = helpFormatter0.getLongOptPrefix();
        java.lang.String str7 = helpFormatter0.defaultOptPrefix;
        java.util.Comparator comparator8 = helpFormatter0.getOptionComparator();
        java.io.PrintWriter printWriter9 = null;
        try {
            helpFormatter0.printWrapped(printWriter9, (int) 'a', "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(comparator8);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #241
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: ldc           #11
35: invokevirtual #51
38: aload_1
39: ldc           #11
41: putfield      #52
44: aload_1
45: getfield      #42
48: astore_2
49: aload_1
50: invokevirtual #53
53: astore_3
54: aload_1
55: getfield      #42
58: astore        4
60: aload_1
61: invokevirtual #58
64: astore        5
66: aconst_null
67: astore        6
69: aload_1
70: aload         6
72: bipush        97
74: ldc           #11
76: invokevirtual #180
79: ldc           #18
81: invokestatic  #19
84: goto          89
87: astore        7
89: new           #22
92: dup
93: invokespecial #23
96: ldc           #24
98: invokevirtual #25
101: aload_2
102: invokevirtual #25
105: ldc           #26
107: invokevirtual #25
110: invokevirtual #27
113: aload_2
114: ldc           #11
116: invokestatic  #28
119: new           #22
122: dup
123: invokespecial #23
126: ldc           #24
128: invokevirtual #25
131: aload_3
132: invokevirtual #25
135: ldc           #26
137: invokevirtual #25
140: invokevirtual #27
143: aload_3
144: ldc           #11
146: invokestatic  #28
149: new           #22
152: dup
153: invokespecial #23
156: ldc           #24
158: invokevirtual #25
161: aload         4
163: invokevirtual #25
166: ldc           #26
168: invokevirtual #25
171: invokevirtual #27
174: aload         4
176: ldc           #11
178: invokestatic  #28
181: aload         5
183: invokestatic  #21
186: return
Exception table:
from    to  target type
69    84    87   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0641
Start line: 3126
End line: 0
Method source code: 
    public void test0641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0641");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        java.lang.String str6 = helpFormatter0.getLongOptSeparator();
        java.lang.String str7 = helpFormatter0.getLongOptSeparator();
        java.lang.String str9 = helpFormatter0.createPadding((int) (byte) 1);
        java.util.Comparator comparator10 = helpFormatter0.getOptionComparator();
        java.lang.Class<?> wildcardClass11 = helpFormatter0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + " " + "'", str6, " ");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + " " + "'", str7, " ");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + " " + "'", str9, " ");
        org.junit.Assert.assertNotNull(comparator10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #242
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #35
36: istore_2
37: aload_1
38: ldc           #11
40: putfield      #36
43: aload_1
44: bipush        10
46: invokevirtual #37
49: aload_1
50: invokevirtual #72
53: astore_3
54: aload_1
55: invokevirtual #72
58: astore        4
60: aload_1
61: iconst_1
62: invokevirtual #93
65: astore        5
67: aload_1
68: invokevirtual #58
71: astore        6
73: aload_1
74: invokevirtual #154
77: astore        7
79: new           #22
82: dup
83: invokespecial #23
86: ldc           #24
88: invokevirtual #25
91: iload_2
92: invokevirtual #29
95: ldc           #30
97: invokevirtual #25
100: iconst_1
101: invokevirtual #29
104: ldc           #24
106: invokevirtual #25
109: invokevirtual #27
112: iload_2
113: iconst_1
114: if_icmpne     121
117: iconst_1
118: goto          122
121: iconst_0
122: invokestatic  #31
125: new           #22
128: dup
129: invokespecial #23
132: ldc           #24
134: invokevirtual #25
137: aload_3
138: invokevirtual #25
141: ldc           #75
143: invokevirtual #25
146: invokevirtual #27
149: aload_3
150: ldc           #38
152: invokestatic  #28
155: new           #22
158: dup
159: invokespecial #23
162: ldc           #24
164: invokevirtual #25
167: aload         4
169: invokevirtual #25
172: ldc           #75
174: invokevirtual #25
177: invokevirtual #27
180: aload         4
182: ldc           #38
184: invokestatic  #28
187: new           #22
190: dup
191: invokespecial #23
194: ldc           #24
196: invokevirtual #25
199: aload         5
201: invokevirtual #25
204: ldc           #75
206: invokevirtual #25
209: invokevirtual #27
212: aload         5
214: ldc           #38
216: invokestatic  #28
219: aload         6
221: invokestatic  #21
224: aload         7
226: invokestatic  #21
229: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0642
Start line: 3147
End line: 0
Method source code: 
    public void test0642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0642");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setLongOptPrefix(" ");
        helpFormatter0.defaultDescPad = (short) 10;
        helpFormatter0.defaultSyntaxPrefix = "";
        helpFormatter0.setLongOptPrefix("");
        java.lang.String str13 = helpFormatter0.defaultNewLine;
        org.apache.commons.cli.Options options16 = null;
        try {
            helpFormatter0.printHelp("", "--", options16, "arg", false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: cmdLineSyntax not provided");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #243
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #35
36: istore_2
37: aload_1
38: ldc           #11
40: putfield      #36
43: aload_1
44: getfield      #42
47: astore_3
48: aload_1
49: ldc           #38
51: invokevirtual #43
54: aload_1
55: bipush        10
57: putfield      #44
60: aload_1
61: ldc           #11
63: putfield      #45
66: aload_1
67: ldc           #11
69: invokevirtual #43
72: aload_1
73: getfield      #36
76: astore        4
78: aconst_null
79: astore        5
81: aload_1
82: ldc           #11
84: ldc           #63
86: aload         5
88: ldc           #78
90: iconst_0
91: invokevirtual #109
94: ldc           #69
96: invokestatic  #19
99: goto          104
102: astore        6
104: new           #22
107: dup
108: invokespecial #23
111: ldc           #24
113: invokevirtual #25
116: iload_2
117: invokevirtual #29
120: ldc           #30
122: invokevirtual #25
125: iconst_1
126: invokevirtual #29
129: ldc           #24
131: invokevirtual #25
134: invokevirtual #27
137: iload_2
138: iconst_1
139: if_icmpne     146
142: iconst_1
143: goto          147
146: iconst_0
147: invokestatic  #31
150: new           #22
153: dup
154: invokespecial #23
157: ldc           #24
159: invokevirtual #25
162: aload_3
163: invokevirtual #25
166: ldc           #48
168: invokevirtual #25
171: invokevirtual #27
174: aload_3
175: ldc           #49
177: invokestatic  #28
180: new           #22
183: dup
184: invokespecial #23
187: ldc           #24
189: invokevirtual #25
192: aload         4
194: invokevirtual #25
197: ldc           #26
199: invokevirtual #25
202: invokevirtual #27
205: aload         4
207: ldc           #11
209: invokestatic  #28
212: return
Exception table:
from    to  target type
81    99   102   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0643
Start line: 3173
End line: 0
Method source code: 
    public void test0643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0643");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str3 = helpFormatter0.getOptPrefix();
        java.lang.String str4 = helpFormatter0.getOptPrefix();
        int int5 = helpFormatter0.getLeftPadding();
        java.lang.String str6 = helpFormatter0.getArgName();
        helpFormatter0.setLongOptSeparator("                                                                                                 ");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "--" + "'", str2, "--");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "-" + "'", str3, "-");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "arg" + "'", str6, "arg");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #244
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #35
36: istore_2
37: aload_1
38: getfield      #52
41: astore_3
42: aload_1
43: invokevirtual #73
46: astore        4
48: aload_1
49: invokevirtual #73
52: astore        5
54: aload_1
55: invokevirtual #35
58: istore        6
60: aload_1
61: invokevirtual #83
64: astore        7
66: aload_1
67: ldc           #14
69: invokevirtual #74
72: new           #22
75: dup
76: invokespecial #23
79: ldc           #24
81: invokevirtual #25
84: iload_2
85: invokevirtual #29
88: ldc           #30
90: invokevirtual #25
93: iconst_1
94: invokevirtual #29
97: ldc           #24
99: invokevirtual #25
102: invokevirtual #27
105: iload_2
106: iconst_1
107: if_icmpne     114
110: iconst_1
111: goto          115
114: iconst_0
115: invokestatic  #31
118: new           #22
121: dup
122: invokespecial #23
125: ldc           #24
127: invokevirtual #25
130: aload_3
131: invokevirtual #25
134: ldc           #62
136: invokevirtual #25
139: invokevirtual #27
142: aload_3
143: ldc           #63
145: invokestatic  #28
148: new           #22
151: dup
152: invokespecial #23
155: ldc           #24
157: invokevirtual #25
160: aload         4
162: invokevirtual #25
165: ldc           #48
167: invokevirtual #25
170: invokevirtual #27
173: aload         4
175: ldc           #49
177: invokestatic  #28
180: new           #22
183: dup
184: invokespecial #23
187: ldc           #24
189: invokevirtual #25
192: aload         5
194: invokevirtual #25
197: ldc           #48
199: invokevirtual #25
202: invokevirtual #27
205: aload         5
207: ldc           #49
209: invokestatic  #28
212: new           #22
215: dup
216: invokespecial #23
219: ldc           #24
221: invokevirtual #25
224: iload         6
226: invokevirtual #29
229: ldc           #30
231: invokevirtual #25
234: iconst_1
235: invokevirtual #29
238: ldc           #24
240: invokevirtual #25
243: invokevirtual #27
246: iload         6
248: iconst_1
249: if_icmpne     256
252: iconst_1
253: goto          257
256: iconst_0
257: invokestatic  #31
260: new           #22
263: dup
264: invokespecial #23
267: ldc           #24
269: invokevirtual #25
272: aload         7
274: invokevirtual #25
277: ldc           #79
279: invokevirtual #25
282: invokevirtual #27
285: aload         7
287: ldc           #78
289: invokestatic  #28
292: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0644
Start line: 3193
End line: 0
Method source code: 
    public void test0644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0644");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.util.Comparator comparator1 = helpFormatter0.optionComparator;
        java.lang.String str2 = helpFormatter0.getLongOptPrefix();
        helpFormatter0.setLongOptPrefix("");
        org.apache.commons.cli.HelpFormatter helpFormatter5 = new org.apache.commons.cli.HelpFormatter();
        int int6 = helpFormatter5.getLeftPadding();
        helpFormatter5.defaultNewLine = "";
        helpFormatter5.defaultDescPad = '4';
        helpFormatter5.setNewLine("");
        helpFormatter5.setSyntaxPrefix("");
        java.lang.String str15 = helpFormatter5.getSyntaxPrefix();
        helpFormatter5.setWidth((-2));
        java.lang.String str18 = helpFormatter5.defaultNewLine;
        java.lang.String str19 = helpFormatter5.getArgName();
        org.apache.commons.cli.HelpFormatter helpFormatter20 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter20.setOptPrefix("");
        helpFormatter20.defaultLongOptPrefix = "";
        java.lang.String str25 = helpFormatter20.defaultLongOptPrefix;
        java.lang.String str26 = helpFormatter20.getNewLine();
        helpFormatter20.setSyntaxPrefix(" ");
        java.lang.String str29 = helpFormatter20.defaultOptPrefix;
        java.util.Comparator comparator30 = helpFormatter20.getOptionComparator();
        helpFormatter5.optionComparator = comparator30;
        helpFormatter0.optionComparator = comparator30;
        org.junit.Assert.assertNotNull(comparator1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "--" + "'", str2, "--");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "arg" + "'", str19, "arg");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNotNull(comparator30);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #245
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: getfield      #10
36: astore_2
37: aload_1
38: invokevirtual #53
41: astore_3
42: aload_1
43: ldc           #11
45: invokevirtual #43
48: new           #8
51: dup
52: invokespecial #9
55: astore        4
57: aload         4
59: invokevirtual #35
62: istore        5
64: aload         4
66: ldc           #11
68: putfield      #36
71: aload         4
73: bipush        52
75: putfield      #44
78: aload         4
80: ldc           #11
82: invokevirtual #88
85: aload         4
87: ldc           #11
89: invokevirtual #39
92: aload         4
94: invokevirtual #89
97: astore        6
99: aload         4
101: bipush        -2
103: invokevirtual #90
106: aload         4
108: getfield      #36
111: astore        7
113: aload         4
115: invokevirtual #83
118: astore        8
120: new           #8
123: dup
124: invokespecial #9
127: astore        9
129: aload         9
131: ldc           #11
133: invokevirtual #51
136: aload         9
138: ldc           #11
140: putfield      #52
143: aload         9
145: getfield      #52
148: astore        10
150: aload         9
152: invokevirtual #16
155: astore        11
157: aload         9
159: ldc           #38
161: invokevirtual #39
164: aload         9
166: getfield      #42
169: astore        12
171: aload         9
173: invokevirtual #58
176: astore        13
178: aload         4
180: aload         13
182: putfield      #10
185: aload_1
186: aload         13
188: putfield      #10
191: aload_2
192: invokestatic  #21
195: new           #22
198: dup
199: invokespecial #23
202: ldc           #24
204: invokevirtual #25
207: aload_3
208: invokevirtual #25
211: ldc           #62
213: invokevirtual #25
216: invokevirtual #27
219: aload_3
220: ldc           #63
222: invokestatic  #28
225: new           #22
228: dup
229: invokespecial #23
232: ldc           #24
234: invokevirtual #25
237: iload         5
239: invokevirtual #29
242: ldc           #30
244: invokevirtual #25
247: iconst_1
248: invokevirtual #29
251: ldc           #24
253: invokevirtual #25
256: invokevirtual #27
259: iload         5
261: iconst_1
262: if_icmpne     269
265: iconst_1
266: goto          270
269: iconst_0
270: invokestatic  #31
273: new           #22
276: dup
277: invokespecial #23
280: ldc           #24
282: invokevirtual #25
285: aload         6
287: invokevirtual #25
290: ldc           #26
292: invokevirtual #25
295: invokevirtual #27
298: aload         6
300: ldc           #11
302: invokestatic  #28
305: new           #22
308: dup
309: invokespecial #23
312: ldc           #24
314: invokevirtual #25
317: aload         7
319: invokevirtual #25
322: ldc           #26
324: invokevirtual #25
327: invokevirtual #27
330: aload         7
332: ldc           #11
334: invokestatic  #28
337: new           #22
340: dup
341: invokespecial #23
344: ldc           #24
346: invokevirtual #25
349: aload         8
351: invokevirtual #25
354: ldc           #79
356: invokevirtual #25
359: invokevirtual #27
362: aload         8
364: ldc           #78
366: invokestatic  #28
369: new           #22
372: dup
373: invokespecial #23
376: ldc           #24
378: invokevirtual #25
381: aload         10
383: invokevirtual #25
386: ldc           #26
388: invokevirtual #25
391: invokevirtual #27
394: aload         10
396: ldc           #11
398: invokestatic  #28
401: new           #22
404: dup
405: invokespecial #23
408: ldc           #24
410: invokevirtual #25
413: aload         11
415: invokevirtual #25
418: ldc           #32
420: invokevirtual #25
423: invokevirtual #27
426: aload         11
428: ldc           #33
430: invokestatic  #28
433: new           #22
436: dup
437: invokespecial #23
440: ldc           #24
442: invokevirtual #25
445: aload         12
447: invokevirtual #25
450: ldc           #26
452: invokevirtual #25
455: invokevirtual #27
458: aload         12
460: ldc           #11
462: invokestatic  #28
465: aload         13
467: invokestatic  #21
470: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0645
Start line: 3233
End line: 0
Method source code: 
    public void test0645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0645");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        int int9 = helpFormatter0.findWrapPos(" ", (int) (byte) 10, (int) '4');
        helpFormatter0.defaultOptPrefix = "arg";
        int int12 = helpFormatter0.defaultLeftPad;
        java.lang.String str14 = helpFormatter0.rtrim("\n");
        helpFormatter0.defaultSyntaxPrefix = "                                ";
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #246
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: ldc           #11
35: invokevirtual #51
38: aload_1
39: ldc           #11
41: putfield      #52
44: aload_1
45: getfield      #52
48: astore_2
49: aload_1
50: ldc           #38
52: bipush        10
54: bipush        52
56: invokevirtual #61
59: istore_3
60: aload_1
61: ldc           #78
63: putfield      #42
66: aload_1
67: getfield      #40
70: istore        4
72: aload_1
73: ldc           #33
75: invokevirtual #12
78: astore        5
80: aload_1
81: ldc           #95
83: putfield      #45
86: new           #22
89: dup
90: invokespecial #23
93: ldc           #24
95: invokevirtual #25
98: aload_2
99: invokevirtual #25
102: ldc           #26
104: invokevirtual #25
107: invokevirtual #27
110: aload_2
111: ldc           #11
113: invokestatic  #28
116: new           #22
119: dup
120: invokespecial #23
123: ldc           #24
125: invokevirtual #25
128: iload_3
129: invokevirtual #29
132: ldc           #30
134: invokevirtual #25
137: iconst_m1
138: invokevirtual #29
141: ldc           #24
143: invokevirtual #25
146: invokevirtual #27
149: iload_3
150: iconst_m1
151: if_icmpne     158
154: iconst_1
155: goto          159
158: iconst_0
159: invokestatic  #31
162: new           #22
165: dup
166: invokespecial #23
169: ldc           #24
171: invokevirtual #25
174: iload         4
176: invokevirtual #29
179: ldc           #30
181: invokevirtual #25
184: iconst_1
185: invokevirtual #29
188: ldc           #24
190: invokevirtual #25
193: invokevirtual #27
196: iload         4
198: iconst_1
199: if_icmpne     206
202: iconst_1
203: goto          207
206: iconst_0
207: invokestatic  #31
210: new           #22
213: dup
214: invokespecial #23
217: ldc           #24
219: invokevirtual #25
222: aload         5
224: invokevirtual #25
227: ldc           #26
229: invokevirtual #25
232: invokevirtual #27
235: aload         5
237: ldc           #11
239: invokestatic  #28
242: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0646
Start line: 3252
End line: 0
Method source code: 
    public void test0646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0646");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.util.Comparator comparator1 = helpFormatter0.optionComparator;
        int int2 = helpFormatter0.defaultWidth;
        helpFormatter0.defaultOptPrefix = "--";
        java.io.PrintWriter printWriter5 = null;
        try {
            helpFormatter0.printUsage(printWriter5, 74, "                                ");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(comparator1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 74 + "'", int2 == 74);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #247
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: getfield      #10
36: astore_2
37: aload_1
38: getfield      #57
41: istore_3
42: aload_1
43: ldc           #63
45: putfield      #42
48: aconst_null
49: astore        4
51: aload_1
52: aload         4
54: bipush        74
56: ldc           #95
58: invokevirtual #248
61: ldc           #18
63: invokestatic  #19
66: goto          71
69: astore        5
71: aload_2
72: invokestatic  #21
75: new           #22
78: dup
79: invokespecial #23
82: ldc           #24
84: invokevirtual #25
87: iload_3
88: invokevirtual #29
91: ldc           #30
93: invokevirtual #25
96: bipush        74
98: invokevirtual #29
101: ldc           #24
103: invokevirtual #25
106: invokevirtual #27
109: iload_3
110: bipush        74
112: if_icmpne     119
115: iconst_1
116: goto          120
119: iconst_0
120: invokestatic  #31
123: return
Exception table:
from    to  target type
51    66    69   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0647
Start line: 3272
End line: 0
Method source code: 
    public void test0647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0647");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.defaultArgName;
        java.lang.String str3 = helpFormatter0.defaultNewLine;
        helpFormatter0.setDescPadding((int) ' ');
        java.lang.String str6 = helpFormatter0.getNewLine();
        helpFormatter0.defaultLeftPad = '4';
        helpFormatter0.defaultOptPrefix = "usage: ";
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "arg" + "'", str2, "arg");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\n" + "'", str3, "\n");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\n" + "'", str6, "\n");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #249
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #35
36: istore_2
37: aload_1
38: getfield      #15
41: astore_3
42: aload_1
43: getfield      #36
46: astore        4
48: aload_1
49: bipush        32
51: invokevirtual #37
54: aload_1
55: invokevirtual #16
58: astore        5
60: aload_1
61: bipush        52
63: putfield      #40
66: aload_1
67: ldc           #46
69: putfield      #42
72: new           #22
75: dup
76: invokespecial #23
79: ldc           #24
81: invokevirtual #25
84: iload_2
85: invokevirtual #29
88: ldc           #30
90: invokevirtual #25
93: iconst_1
94: invokevirtual #29
97: ldc           #24
99: invokevirtual #25
102: invokevirtual #27
105: iload_2
106: iconst_1
107: if_icmpne     114
110: iconst_1
111: goto          115
114: iconst_0
115: invokestatic  #31
118: new           #22
121: dup
122: invokespecial #23
125: ldc           #24
127: invokevirtual #25
130: aload_3
131: invokevirtual #25
134: ldc           #79
136: invokevirtual #25
139: invokevirtual #27
142: aload_3
143: ldc           #78
145: invokestatic  #28
148: new           #22
151: dup
152: invokespecial #23
155: ldc           #24
157: invokevirtual #25
160: aload         4
162: invokevirtual #25
165: ldc           #32
167: invokevirtual #25
170: invokevirtual #27
173: aload         4
175: ldc           #33
177: invokestatic  #28
180: new           #22
183: dup
184: invokespecial #23
187: ldc           #24
189: invokevirtual #25
192: aload         5
194: invokevirtual #25
197: ldc           #32
199: invokevirtual #25
202: invokevirtual #27
205: aload         5
207: ldc           #33
209: invokestatic  #28
212: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0648
Start line: 3290
End line: 0
Method source code: 
    public void test0648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0648");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.getArgName();
        helpFormatter0.defaultNewLine = "\n";
        helpFormatter0.defaultLeftPad = (byte) -1;
        helpFormatter0.setLongOptSeparator("");
        org.apache.commons.cli.HelpFormatter helpFormatter9 = new org.apache.commons.cli.HelpFormatter();
        int int10 = helpFormatter9.getLeftPadding();
        helpFormatter9.defaultNewLine = "";
        helpFormatter9.setDescPadding(10);
        helpFormatter9.setSyntaxPrefix(" ");
        java.util.Comparator comparator17 = helpFormatter9.getOptionComparator();
        helpFormatter0.setOptionComparator(comparator17);
        java.lang.String str19 = helpFormatter0.getLongOptPrefix();
        java.lang.String str20 = helpFormatter0.getOptPrefix();
        org.apache.commons.cli.Options options23 = null;
        try {
            helpFormatter0.printHelp("   ", "usage: ", options23, "hi!", false);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: null");
        } catch (java.lang.NegativeArraySizeException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "arg" + "'", str2, "arg");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(comparator17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "--" + "'", str19, "--");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "-" + "'", str20, "-");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #250
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #35
36: istore_2
37: aload_1
38: invokevirtual #83
41: astore_3
42: aload_1
43: ldc           #33
45: putfield      #36
48: aload_1
49: iconst_m1
50: putfield      #40
53: aload_1
54: ldc           #11
56: invokevirtual #74
59: new           #8
62: dup
63: invokespecial #9
66: astore        4
68: aload         4
70: invokevirtual #35
73: istore        5
75: aload         4
77: ldc           #11
79: putfield      #36
82: aload         4
84: bipush        10
86: invokevirtual #37
89: aload         4
91: ldc           #38
93: invokevirtual #39
96: aload         4
98: invokevirtual #58
101: astore        6
103: aload_1
104: aload         6
106: invokevirtual #99
109: aload_1
110: invokevirtual #53
113: astore        7
115: aload_1
116: invokevirtual #73
119: astore        8
121: aconst_null
122: astore        9
124: aload_1
125: ldc           #113
127: ldc           #46
129: aload         9
131: ldc           #65
133: iconst_0
134: invokevirtual #109
137: ldc           #84
139: invokestatic  #19
142: goto          147
145: astore        10
147: new           #22
150: dup
151: invokespecial #23
154: ldc           #24
156: invokevirtual #25
159: iload_2
160: invokevirtual #29
163: ldc           #30
165: invokevirtual #25
168: iconst_1
169: invokevirtual #29
172: ldc           #24
174: invokevirtual #25
177: invokevirtual #27
180: iload_2
181: iconst_1
182: if_icmpne     189
185: iconst_1
186: goto          190
189: iconst_0
190: invokestatic  #31
193: new           #22
196: dup
197: invokespecial #23
200: ldc           #24
202: invokevirtual #25
205: aload_3
206: invokevirtual #25
209: ldc           #79
211: invokevirtual #25
214: invokevirtual #27
217: aload_3
218: ldc           #78
220: invokestatic  #28
223: new           #22
226: dup
227: invokespecial #23
230: ldc           #24
232: invokevirtual #25
235: iload         5
237: invokevirtual #29
240: ldc           #30
242: invokevirtual #25
245: iconst_1
246: invokevirtual #29
249: ldc           #24
251: invokevirtual #25
254: invokevirtual #27
257: iload         5
259: iconst_1
260: if_icmpne     267
263: iconst_1
264: goto          268
267: iconst_0
268: invokestatic  #31
271: aload         6
273: invokestatic  #21
276: new           #22
279: dup
280: invokespecial #23
283: ldc           #24
285: invokevirtual #25
288: aload         7
290: invokevirtual #25
293: ldc           #62
295: invokevirtual #25
298: invokevirtual #27
301: aload         7
303: ldc           #63
305: invokestatic  #28
308: new           #22
311: dup
312: invokespecial #23
315: ldc           #24
317: invokevirtual #25
320: aload         8
322: invokevirtual #25
325: ldc           #48
327: invokevirtual #25
330: invokevirtual #27
333: aload         8
335: ldc           #49
337: invokestatic  #28
340: return
Exception table:
from    to  target type
124   142   145   Class java/lang/NegativeArraySizeException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0649
Start line: 3325
End line: 0
Method source code: 
    public void test0649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0649");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.lang.String str1 = helpFormatter0.getArgName();
        int int5 = helpFormatter0.findWrapPos("arg", 0, (int) (byte) 10);
        helpFormatter0.defaultArgName = "usage:";
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "arg" + "'", str1, "arg");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #251
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #83
36: astore_2
37: aload_1
38: ldc           #78
40: iconst_0
41: bipush        10
43: invokevirtual #61
46: istore_3
47: aload_1
48: ldc           #108
50: putfield      #15
53: new           #22
56: dup
57: invokespecial #23
60: ldc           #24
62: invokevirtual #25
65: aload_2
66: invokevirtual #25
69: ldc           #79
71: invokevirtual #25
74: invokevirtual #27
77: aload_2
78: ldc           #78
80: invokestatic  #28
83: new           #22
86: dup
87: invokespecial #23
90: ldc           #24
92: invokevirtual #25
95: iload_3
96: invokevirtual #29
99: ldc           #30
101: invokevirtual #25
104: iconst_m1
105: invokevirtual #29
108: ldc           #24
110: invokevirtual #25
113: invokevirtual #27
116: iload_3
117: iconst_m1
118: if_icmpne     125
121: iconst_1
122: goto          126
125: iconst_0
126: invokestatic  #31
129: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0650
Start line: 3337
End line: 0
Method source code: 
    public void test0650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0650");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str6 = helpFormatter0.getNewLine();
        helpFormatter0.setSyntaxPrefix(" ");
        java.lang.String str9 = helpFormatter0.defaultOptPrefix;
        java.lang.String str10 = helpFormatter0.getNewLine();
        helpFormatter0.defaultDescPad = 0;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\n" + "'", str6, "\n");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\n" + "'", str10, "\n");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #252
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: ldc           #11
35: invokevirtual #51
38: aload_1
39: ldc           #11
41: putfield      #52
44: aload_1
45: getfield      #52
48: astore_2
49: aload_1
50: invokevirtual #16
53: astore_3
54: aload_1
55: ldc           #38
57: invokevirtual #39
60: aload_1
61: getfield      #42
64: astore        4
66: aload_1
67: invokevirtual #16
70: astore        5
72: aload_1
73: iconst_0
74: putfield      #44
77: new           #22
80: dup
81: invokespecial #23
84: ldc           #24
86: invokevirtual #25
89: aload_2
90: invokevirtual #25
93: ldc           #26
95: invokevirtual #25
98: invokevirtual #27
101: aload_2
102: ldc           #11
104: invokestatic  #28
107: new           #22
110: dup
111: invokespecial #23
114: ldc           #24
116: invokevirtual #25
119: aload_3
120: invokevirtual #25
123: ldc           #32
125: invokevirtual #25
128: invokevirtual #27
131: aload_3
132: ldc           #33
134: invokestatic  #28
137: new           #22
140: dup
141: invokespecial #23
144: ldc           #24
146: invokevirtual #25
149: aload         4
151: invokevirtual #25
154: ldc           #26
156: invokevirtual #25
159: invokevirtual #27
162: aload         4
164: ldc           #11
166: invokestatic  #28
169: new           #22
172: dup
173: invokespecial #23
176: ldc           #24
178: invokevirtual #25
181: aload         5
183: invokevirtual #25
186: ldc           #32
188: invokevirtual #25
191: invokevirtual #27
194: aload         5
196: ldc           #33
198: invokestatic  #28
201: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0651
Start line: 3356
End line: 0
Method source code: 
    public void test0651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0651");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.defaultArgName;
        java.lang.String str3 = helpFormatter0.defaultNewLine;
        helpFormatter0.defaultLeftPad = 10;
        java.lang.String str6 = helpFormatter0.defaultSyntaxPrefix;
        helpFormatter0.defaultOptPrefix = "arg";
        java.util.Comparator comparator9 = helpFormatter0.optionComparator;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "arg" + "'", str2, "arg");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\n" + "'", str3, "\n");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "usage: " + "'", str6, "usage: ");
        org.junit.Assert.assertNotNull(comparator9);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #253
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #35
36: istore_2
37: aload_1
38: getfield      #15
41: astore_3
42: aload_1
43: getfield      #36
46: astore        4
48: aload_1
49: bipush        10
51: putfield      #40
54: aload_1
55: getfield      #45
58: astore        5
60: aload_1
61: ldc           #78
63: putfield      #42
66: aload_1
67: getfield      #10
70: astore        6
72: new           #22
75: dup
76: invokespecial #23
79: ldc           #24
81: invokevirtual #25
84: iload_2
85: invokevirtual #29
88: ldc           #30
90: invokevirtual #25
93: iconst_1
94: invokevirtual #29
97: ldc           #24
99: invokevirtual #25
102: invokevirtual #27
105: iload_2
106: iconst_1
107: if_icmpne     114
110: iconst_1
111: goto          115
114: iconst_0
115: invokestatic  #31
118: new           #22
121: dup
122: invokespecial #23
125: ldc           #24
127: invokevirtual #25
130: aload_3
131: invokevirtual #25
134: ldc           #79
136: invokevirtual #25
139: invokevirtual #27
142: aload_3
143: ldc           #78
145: invokestatic  #28
148: new           #22
151: dup
152: invokespecial #23
155: ldc           #24
157: invokevirtual #25
160: aload         4
162: invokevirtual #25
165: ldc           #32
167: invokevirtual #25
170: invokevirtual #27
173: aload         4
175: ldc           #33
177: invokestatic  #28
180: new           #22
183: dup
184: invokespecial #23
187: ldc           #24
189: invokevirtual #25
192: aload         5
194: invokevirtual #25
197: ldc           #104
199: invokevirtual #25
202: invokevirtual #27
205: aload         5
207: ldc           #46
209: invokestatic  #28
212: aload         6
214: invokestatic  #21
217: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0652
Start line: 3375
End line: 0
Method source code: 
    public void test0652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0652");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.getArgName();
        helpFormatter0.defaultNewLine = "\n";
        helpFormatter0.defaultLeftPad = (byte) -1;
        helpFormatter0.setLongOptSeparator("");
        helpFormatter0.setLongOptSeparator("-");
        java.lang.String str11 = helpFormatter0.getSyntaxPrefix();
        org.apache.commons.cli.Options options15 = null;
        try {
            helpFormatter0.printHelp((int) (byte) -1, "-", "--", options15, "-");
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: null");
        } catch (java.lang.NegativeArraySizeException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "arg" + "'", str2, "arg");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "usage: " + "'", str11, "usage: ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #254
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #35
36: istore_2
37: aload_1
38: invokevirtual #83
41: astore_3
42: aload_1
43: ldc           #33
45: putfield      #36
48: aload_1
49: iconst_m1
50: putfield      #40
53: aload_1
54: ldc           #11
56: invokevirtual #74
59: aload_1
60: ldc           #49
62: invokevirtual #74
65: aload_1
66: invokevirtual #89
69: astore        4
71: aconst_null
72: astore        5
74: aload_1
75: iconst_m1
76: ldc           #49
78: ldc           #63
80: aload         5
82: ldc           #49
84: invokevirtual #150
87: ldc           #84
89: invokestatic  #19
92: goto          97
95: astore        6
97: new           #22
100: dup
101: invokespecial #23
104: ldc           #24
106: invokevirtual #25
109: iload_2
110: invokevirtual #29
113: ldc           #30
115: invokevirtual #25
118: iconst_1
119: invokevirtual #29
122: ldc           #24
124: invokevirtual #25
127: invokevirtual #27
130: iload_2
131: iconst_1
132: if_icmpne     139
135: iconst_1
136: goto          140
139: iconst_0
140: invokestatic  #31
143: new           #22
146: dup
147: invokespecial #23
150: ldc           #24
152: invokevirtual #25
155: aload_3
156: invokevirtual #25
159: ldc           #79
161: invokevirtual #25
164: invokevirtual #27
167: aload_3
168: ldc           #78
170: invokestatic  #28
173: new           #22
176: dup
177: invokespecial #23
180: ldc           #24
182: invokevirtual #25
185: aload         4
187: invokevirtual #25
190: ldc           #104
192: invokevirtual #25
195: invokevirtual #27
198: aload         4
200: ldc           #46
202: invokestatic  #28
205: return
Exception table:
from    to  target type
74    92    95   Class java/lang/NegativeArraySizeException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0653
Start line: 3400
End line: 0
Method source code: 
    public void test0653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0653");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.util.Comparator comparator1 = helpFormatter0.optionComparator;
        int int2 = helpFormatter0.getLeftPadding();
        int int6 = helpFormatter0.findWrapPos("-", 100, (-1));
        helpFormatter0.defaultWidth = (short) 100;
        java.lang.String str9 = helpFormatter0.getNewLine();
        helpFormatter0.defaultDescPad = 10;
        org.apache.commons.cli.Options options14 = null;
        try {
            helpFormatter0.printHelp("                                                    ", "--", options14, "          ", false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(comparator1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\n" + "'", str9, "\n");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #255
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: getfield      #10
36: astore_2
37: aload_1
38: invokevirtual #35
41: istore_3
42: aload_1
43: ldc           #49
45: bipush        100
47: iconst_m1
48: invokevirtual #61
51: istore        4
53: aload_1
54: bipush        100
56: putfield      #57
59: aload_1
60: invokevirtual #16
63: astore        5
65: aload_1
66: bipush        10
68: putfield      #44
71: aconst_null
72: astore        6
74: aload_1
75: ldc           #77
77: ldc           #63
79: aload         6
81: ldc           #67
83: iconst_0
84: invokevirtual #109
87: ldc           #18
89: invokestatic  #19
92: goto          97
95: astore        7
97: aload_2
98: invokestatic  #21
101: new           #22
104: dup
105: invokespecial #23
108: ldc           #24
110: invokevirtual #25
113: iload_3
114: invokevirtual #29
117: ldc           #30
119: invokevirtual #25
122: iconst_1
123: invokevirtual #29
126: ldc           #24
128: invokevirtual #25
131: invokevirtual #27
134: iload_3
135: iconst_1
136: if_icmpne     143
139: iconst_1
140: goto          144
143: iconst_0
144: invokestatic  #31
147: new           #22
150: dup
151: invokespecial #23
154: ldc           #24
156: invokevirtual #25
159: iload         4
161: invokevirtual #29
164: ldc           #30
166: invokevirtual #25
169: iconst_m1
170: invokevirtual #29
173: ldc           #24
175: invokevirtual #25
178: invokevirtual #27
181: iload         4
183: iconst_m1
184: if_icmpne     191
187: iconst_1
188: goto          192
191: iconst_0
192: invokestatic  #31
195: new           #22
198: dup
199: invokespecial #23
202: ldc           #24
204: invokevirtual #25
207: aload         5
209: invokevirtual #25
212: ldc           #32
214: invokevirtual #25
217: invokevirtual #27
220: aload         5
222: ldc           #33
224: invokestatic  #28
227: return
Exception table:
from    to  target type
74    92    95   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0654
Start line: 3425
End line: 0
Method source code: 
    public void test0654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0654");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.getArgName();
        helpFormatter0.defaultNewLine = "\n";
        helpFormatter0.defaultLeftPad = (byte) -1;
        helpFormatter0.setLongOptSeparator("");
        java.io.PrintWriter printWriter9 = null;
        try {
            helpFormatter0.printWrapped(printWriter9, (int) (byte) 1, "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "arg" + "'", str2, "arg");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #256
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: invokevirtual #83
42: astore_3
43: aload_1
44: ldc           #33
46: putfield      #36
49: aload_1
50: iconst_m1
51: putfield      #40
54: aload_1
55: ldc           #11
57: invokevirtual #74
60: aconst_null
61: astore        4
63: aload_1
64: aload         4
66: iconst_1
67: ldc           #65
69: invokevirtual #180
72: ldc           #18
74: invokestatic  #19
77: goto          82
80: astore        5
82: new           #22
85: dup
86: invokespecial #23
89: ldc           #24
91: invokevirtual #25
94: iload_2
95: invokevirtual #29
98: ldc           #30
100: invokevirtual #25
103: iconst_1
104: invokevirtual #29
107: ldc           #24
109: invokevirtual #25
112: invokevirtual #27
115: iload_2
116: iconst_1
117: if_icmpne     124
120: iconst_1
121: goto          125
124: iconst_0
125: invokestatic  #31
128: new           #22
131: dup
132: invokespecial #23
135: ldc           #24
137: invokevirtual #25
140: aload_3
141: invokevirtual #25
144: ldc           #79
146: invokevirtual #25
149: invokevirtual #27
152: aload_3
153: ldc           #78
155: invokestatic  #28
158: return
Exception table:
from    to  target type
63    77    80   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0655
Start line: 3447
End line: 0
Method source code: 
    public void test0655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0655");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.defaultDescPad = '4';
        helpFormatter0.setNewLine("");
        helpFormatter0.defaultDescPad = 'a';
        int int10 = helpFormatter0.getWidth();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 74 + "'", int10 == 74);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #257
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: bipush        52
47: putfield      #44
50: aload_1
51: ldc           #11
53: invokevirtual #88
56: aload_1
57: bipush        97
59: putfield      #44
62: aload_1
63: invokevirtual #66
66: istore_3
67: new           #22
70: dup
71: invokespecial #23
74: ldc           #24
76: invokevirtual #25
79: iload_2
80: invokevirtual #29
83: ldc           #30
85: invokevirtual #25
88: iconst_1
89: invokevirtual #29
92: ldc           #24
94: invokevirtual #25
97: invokevirtual #27
100: iload_2
101: iconst_1
102: if_icmpne     109
105: iconst_1
106: goto          110
109: iconst_0
110: invokestatic  #31
113: new           #22
116: dup
117: invokespecial #23
120: ldc           #24
122: invokevirtual #25
125: iload_3
126: invokevirtual #29
129: ldc           #30
131: invokevirtual #25
134: bipush        74
136: invokevirtual #29
139: ldc           #24
141: invokevirtual #25
144: invokevirtual #27
147: iload_3
148: bipush        74
150: if_icmpne     157
153: iconst_1
154: goto          158
157: iconst_0
158: invokestatic  #31
161: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0656
Start line: 3462
End line: 0
Method source code: 
    public void test0656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0656");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.getArgName();
        helpFormatter0.defaultNewLine = "\n";
        helpFormatter0.defaultLeftPad = (byte) -1;
        helpFormatter0.setLongOptSeparator("");
        helpFormatter0.setLongOptSeparator("-");
        java.lang.String str11 = helpFormatter0.getSyntaxPrefix();
        java.lang.String str13 = helpFormatter0.createPadding(100);
        helpFormatter0.defaultSyntaxPrefix = "          ";
        org.apache.commons.cli.Options options19 = null;
        try {
            helpFormatter0.printHelp((int) (byte) 1, "\n", "\n", options19, "usage: ");
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: null");
        } catch (java.lang.NegativeArraySizeException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "arg" + "'", str2, "arg");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "usage: " + "'", str11, "usage: ");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "                                                                                                    " + "'", str13, "                                                                                                    ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #258
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: invokevirtual #83
42: astore_3
43: aload_1
44: ldc           #33
46: putfield      #36
49: aload_1
50: iconst_m1
51: putfield      #40
54: aload_1
55: ldc           #11
57: invokevirtual #74
60: aload_1
61: ldc           #49
63: invokevirtual #74
66: aload_1
67: invokevirtual #89
70: astore        4
72: aload_1
73: bipush        100
75: invokevirtual #93
78: astore        5
80: aload_1
81: ldc           #67
83: putfield      #45
86: aconst_null
87: astore        6
89: aload_1
90: iconst_1
91: ldc           #33
93: ldc           #33
95: aload         6
97: ldc           #46
99: invokevirtual #150
102: ldc           #84
104: invokestatic  #19
107: goto          112
110: astore        7
112: new           #22
115: dup
116: invokespecial #23
119: ldc           #24
121: invokevirtual #25
124: iload_2
125: invokevirtual #29
128: ldc           #30
130: invokevirtual #25
133: iconst_1
134: invokevirtual #29
137: ldc           #24
139: invokevirtual #25
142: invokevirtual #27
145: iload_2
146: iconst_1
147: if_icmpne     154
150: iconst_1
151: goto          155
154: iconst_0
155: invokestatic  #31
158: new           #22
161: dup
162: invokespecial #23
165: ldc           #24
167: invokevirtual #25
170: aload_3
171: invokevirtual #25
174: ldc           #79
176: invokevirtual #25
179: invokevirtual #27
182: aload_3
183: ldc           #78
185: invokestatic  #28
188: new           #22
191: dup
192: invokespecial #23
195: ldc           #24
197: invokevirtual #25
200: aload         4
202: invokevirtual #25
205: ldc           #104
207: invokevirtual #25
210: invokevirtual #27
213: aload         4
215: ldc           #46
217: invokestatic  #28
220: new           #22
223: dup
224: invokespecial #23
227: ldc           #24
229: invokevirtual #25
232: aload         5
234: invokevirtual #25
237: ldc           #222
239: invokevirtual #25
242: invokevirtual #27
245: aload         5
247: ldc           #118
249: invokestatic  #28
252: return
Exception table:
from    to  target type
89   107   110   Class java/lang/NegativeArraySizeException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0657
Start line: 3490
End line: 0
Method source code: 
    public void test0657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0657");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setLongOptPrefix(" ");
        helpFormatter0.defaultDescPad = (short) 10;
        helpFormatter0.setLongOptPrefix("--");
        java.lang.String str11 = helpFormatter0.getLongOptSeparator();
        helpFormatter0.setDescPadding((-2));
        java.util.Comparator comparator14 = helpFormatter0.getOptionComparator();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + " " + "'", str11, " ");
        org.junit.Assert.assertNotNull(comparator14);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #259
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: getfield      #42
48: astore_3
49: aload_1
50: ldc           #38
52: invokevirtual #43
55: aload_1
56: bipush        10
58: putfield      #44
61: aload_1
62: ldc           #63
64: invokevirtual #43
67: aload_1
68: invokevirtual #72
71: astore        4
73: aload_1
74: bipush        -2
76: invokevirtual #37
79: aload_1
80: invokevirtual #58
83: astore        5
85: new           #22
88: dup
89: invokespecial #23
92: ldc           #24
94: invokevirtual #25
97: iload_2
98: invokevirtual #29
101: ldc           #30
103: invokevirtual #25
106: iconst_1
107: invokevirtual #29
110: ldc           #24
112: invokevirtual #25
115: invokevirtual #27
118: iload_2
119: iconst_1
120: if_icmpne     127
123: iconst_1
124: goto          128
127: iconst_0
128: invokestatic  #31
131: new           #22
134: dup
135: invokespecial #23
138: ldc           #24
140: invokevirtual #25
143: aload_3
144: invokevirtual #25
147: ldc           #48
149: invokevirtual #25
152: invokevirtual #27
155: aload_3
156: ldc           #49
158: invokestatic  #28
161: new           #22
164: dup
165: invokespecial #23
168: ldc           #24
170: invokevirtual #25
173: aload         4
175: invokevirtual #25
178: ldc           #75
180: invokevirtual #25
183: invokevirtual #27
186: aload         4
188: ldc           #38
190: invokestatic  #28
193: aload         5
195: invokestatic  #21
198: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0658
Start line: 3510
End line: 0
Method source code: 
    public void test0658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0658");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.defaultArgName;
        java.lang.String str3 = helpFormatter0.getNewLine();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "arg" + "'", str2, "arg");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\n" + "'", str3, "\n");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #260
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: getfield      #15
42: astore_3
43: aload_1
44: invokevirtual #16
47: astore        4
49: new           #22
52: dup
53: invokespecial #23
56: ldc           #24
58: invokevirtual #25
61: iload_2
62: invokevirtual #29
65: ldc           #30
67: invokevirtual #25
70: iconst_1
71: invokevirtual #29
74: ldc           #24
76: invokevirtual #25
79: invokevirtual #27
82: iload_2
83: iconst_1
84: if_icmpne     91
87: iconst_1
88: goto          92
91: iconst_0
92: invokestatic  #31
95: new           #22
98: dup
99: invokespecial #23
102: ldc           #24
104: invokevirtual #25
107: aload_3
108: invokevirtual #25
111: ldc           #79
113: invokevirtual #25
116: invokevirtual #27
119: aload_3
120: ldc           #78
122: invokestatic  #28
125: new           #22
128: dup
129: invokespecial #23
132: ldc           #24
134: invokevirtual #25
137: aload         4
139: invokevirtual #25
142: ldc           #32
144: invokevirtual #25
147: invokevirtual #27
150: aload         4
152: ldc           #33
154: invokestatic  #28
157: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0659
Start line: 3523
End line: 0
Method source code: 
    public void test0659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0659");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setLongOptPrefix(" ");
        helpFormatter0.defaultDescPad = (short) 10;
        helpFormatter0.defaultSyntaxPrefix = "";
        java.lang.String str11 = helpFormatter0.defaultLongOptPrefix;
        org.apache.commons.cli.HelpFormatter helpFormatter12 = new org.apache.commons.cli.HelpFormatter();
        int int13 = helpFormatter12.getLeftPadding();
        helpFormatter12.defaultNewLine = "";
        java.lang.String str16 = helpFormatter12.defaultOptPrefix;
        helpFormatter12.setLongOptPrefix(" ");
        helpFormatter12.defaultDescPad = (short) 10;
        helpFormatter12.setLongOptSeparator("");
        helpFormatter12.defaultOptPrefix = "                                                                                                 ";
        java.util.Comparator comparator25 = helpFormatter12.getOptionComparator();
        helpFormatter0.optionComparator = comparator25;
        helpFormatter0.defaultLeftPad = 52;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + " " + "'", str11, " ");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "-" + "'", str16, "-");
        org.junit.Assert.assertNotNull(comparator25);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #261
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: getfield      #42
48: astore_3
49: aload_1
50: ldc           #38
52: invokevirtual #43
55: aload_1
56: bipush        10
58: putfield      #44
61: aload_1
62: ldc           #11
64: putfield      #45
67: aload_1
68: getfield      #52
71: astore        4
73: new           #8
76: dup
77: invokespecial #9
80: astore        5
82: aload         5
84: invokevirtual #35
87: istore        6
89: aload         5
91: ldc           #11
93: putfield      #36
96: aload         5
98: getfield      #42
101: astore        7
103: aload         5
105: ldc           #38
107: invokevirtual #43
110: aload         5
112: bipush        10
114: putfield      #44
117: aload         5
119: ldc           #11
121: invokevirtual #74
124: aload         5
126: ldc           #14
128: putfield      #42
131: aload         5
133: invokevirtual #58
136: astore        8
138: aload_1
139: aload         8
141: putfield      #10
144: aload_1
145: bipush        52
147: putfield      #40
150: new           #22
153: dup
154: invokespecial #23
157: ldc           #24
159: invokevirtual #25
162: iload_2
163: invokevirtual #29
166: ldc           #30
168: invokevirtual #25
171: iconst_1
172: invokevirtual #29
175: ldc           #24
177: invokevirtual #25
180: invokevirtual #27
183: iload_2
184: iconst_1
185: if_icmpne     192
188: iconst_1
189: goto          193
192: iconst_0
193: invokestatic  #31
196: new           #22
199: dup
200: invokespecial #23
203: ldc           #24
205: invokevirtual #25
208: aload_3
209: invokevirtual #25
212: ldc           #48
214: invokevirtual #25
217: invokevirtual #27
220: aload_3
221: ldc           #49
223: invokestatic  #28
226: new           #22
229: dup
230: invokespecial #23
233: ldc           #24
235: invokevirtual #25
238: aload         4
240: invokevirtual #25
243: ldc           #75
245: invokevirtual #25
248: invokevirtual #27
251: aload         4
253: ldc           #38
255: invokestatic  #28
258: new           #22
261: dup
262: invokespecial #23
265: ldc           #24
267: invokevirtual #25
270: iload         6
272: invokevirtual #29
275: ldc           #30
277: invokevirtual #25
280: iconst_1
281: invokevirtual #29
284: ldc           #24
286: invokevirtual #25
289: invokevirtual #27
292: iload         6
294: iconst_1
295: if_icmpne     302
298: iconst_1
299: goto          303
302: iconst_0
303: invokestatic  #31
306: new           #22
309: dup
310: invokespecial #23
313: ldc           #24
315: invokevirtual #25
318: aload         7
320: invokevirtual #25
323: ldc           #48
325: invokevirtual #25
328: invokevirtual #27
331: aload         7
333: ldc           #49
335: invokestatic  #28
338: aload         8
340: invokestatic  #21
343: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0660
Start line: 3554
End line: 0
Method source code: 
    public void test0660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0660");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setLongOptPrefix(" ");
        helpFormatter0.defaultDescPad = (short) 10;
        helpFormatter0.defaultSyntaxPrefix = "";
        helpFormatter0.setLongOptPrefix("");
        java.lang.String str13 = helpFormatter0.defaultNewLine;
        helpFormatter0.defaultArgName = "usage: ";
        org.apache.commons.cli.HelpFormatter helpFormatter16 = new org.apache.commons.cli.HelpFormatter();
        java.lang.String str17 = helpFormatter16.defaultSyntaxPrefix;
        java.util.Comparator comparator18 = helpFormatter16.optionComparator;
        helpFormatter0.setOptionComparator(comparator18);
        java.io.PrintWriter printWriter20 = null;
        org.apache.commons.cli.Options options24 = null;
        try {
            helpFormatter0.printHelp(printWriter20, 52, "--", "usage:", options24, 32, (int) (byte) 10, "usage:", false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "usage: " + "'", str17, "usage: ");
        org.junit.Assert.assertNotNull(comparator18);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #262
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: getfield      #42
48: astore_3
49: aload_1
50: ldc           #38
52: invokevirtual #43
55: aload_1
56: bipush        10
58: putfield      #44
61: aload_1
62: ldc           #11
64: putfield      #45
67: aload_1
68: ldc           #11
70: invokevirtual #43
73: aload_1
74: getfield      #36
77: astore        4
79: aload_1
80: ldc           #46
82: putfield      #15
85: new           #8
88: dup
89: invokespecial #9
92: astore        5
94: aload         5
96: getfield      #45
99: astore        6
101: aload         5
103: getfield      #10
106: astore        7
108: aload_1
109: aload         7
111: invokevirtual #99
114: aconst_null
115: astore        8
117: aconst_null
118: astore        9
120: aload_1
121: aload         8
123: bipush        52
125: ldc           #63
127: ldc           #108
129: aload         9
131: bipush        32
133: bipush        10
135: ldc           #108
137: iconst_0
138: invokevirtual #138
141: ldc           #18
143: invokestatic  #19
146: goto          151
149: astore        10
151: new           #22
154: dup
155: invokespecial #23
158: ldc           #24
160: invokevirtual #25
163: iload_2
164: invokevirtual #29
167: ldc           #30
169: invokevirtual #25
172: iconst_1
173: invokevirtual #29
176: ldc           #24
178: invokevirtual #25
181: invokevirtual #27
184: iload_2
185: iconst_1
186: if_icmpne     193
189: iconst_1
190: goto          194
193: iconst_0
194: invokestatic  #31
197: new           #22
200: dup
201: invokespecial #23
204: ldc           #24
206: invokevirtual #25
209: aload_3
210: invokevirtual #25
213: ldc           #48
215: invokevirtual #25
218: invokevirtual #27
221: aload_3
222: ldc           #49
224: invokestatic  #28
227: new           #22
230: dup
231: invokespecial #23
234: ldc           #24
236: invokevirtual #25
239: aload         4
241: invokevirtual #25
244: ldc           #26
246: invokevirtual #25
249: invokevirtual #27
252: aload         4
254: ldc           #11
256: invokestatic  #28
259: new           #22
262: dup
263: invokespecial #23
266: ldc           #24
268: invokevirtual #25
271: aload         6
273: invokevirtual #25
276: ldc           #104
278: invokevirtual #25
281: invokevirtual #27
284: aload         6
286: ldc           #46
288: invokestatic  #28
291: aload         7
293: invokestatic  #21
296: return
Exception table:
from    to  target type
120   146   149   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0661
Start line: 3588
End line: 0
Method source code: 
    public void test0661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0661");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str6 = helpFormatter0.getNewLine();
        java.util.Comparator comparator7 = helpFormatter0.getOptionComparator();
        helpFormatter0.setDescPadding(3);
        helpFormatter0.defaultDescPad = 10;
        java.lang.String str12 = helpFormatter0.getArgName();
        java.io.PrintWriter printWriter13 = null;
        org.apache.commons.cli.Options options17 = null;
        try {
            helpFormatter0.printHelp(printWriter13, (-2), "--", "", options17, (int) (short) 10, 52, "                                                    ");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\n" + "'", str6, "\n");
        org.junit.Assert.assertNotNull(comparator7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "arg" + "'", str12, "arg");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #263
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #11
36: invokevirtual #51
39: aload_1
40: ldc           #11
42: putfield      #52
45: aload_1
46: getfield      #52
49: astore_2
50: aload_1
51: invokevirtual #16
54: astore_3
55: aload_1
56: invokevirtual #58
59: astore        4
61: aload_1
62: iconst_3
63: invokevirtual #37
66: aload_1
67: bipush        10
69: putfield      #44
72: aload_1
73: invokevirtual #83
76: astore        5
78: aconst_null
79: astore        6
81: aconst_null
82: astore        7
84: aload_1
85: aload         6
87: bipush        -2
89: ldc           #63
91: ldc           #11
93: aload         7
95: bipush        10
97: bipush        52
99: ldc           #77
101: invokevirtual #68
104: ldc           #157
106: invokestatic  #19
109: goto          114
112: astore        8
114: new           #22
117: dup
118: invokespecial #23
121: ldc           #24
123: invokevirtual #25
126: aload_2
127: invokevirtual #25
130: ldc           #26
132: invokevirtual #25
135: invokevirtual #27
138: aload_2
139: ldc           #11
141: invokestatic  #28
144: new           #22
147: dup
148: invokespecial #23
151: ldc           #24
153: invokevirtual #25
156: aload_3
157: invokevirtual #25
160: ldc           #32
162: invokevirtual #25
165: invokevirtual #27
168: aload_3
169: ldc           #33
171: invokestatic  #28
174: aload         4
176: invokestatic  #21
179: new           #22
182: dup
183: invokespecial #23
186: ldc           #24
188: invokevirtual #25
191: aload         5
193: invokevirtual #25
196: ldc           #79
198: invokevirtual #25
201: invokevirtual #27
204: aload         5
206: ldc           #78
208: invokestatic  #28
211: return
Exception table:
from    to  target type
84   109   112   Class java/lang/StringIndexOutOfBoundsException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0662
Start line: 3616
End line: 0
Method source code: 
    public void test0662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0662");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        helpFormatter0.setSyntaxPrefix(" ");
        int int8 = helpFormatter0.defaultLeftPad;
        helpFormatter0.setLeftPadding(1);
        helpFormatter0.defaultSyntaxPrefix = "arg";
        java.lang.String str13 = helpFormatter0.defaultArgName;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "arg" + "'", str13, "arg");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #264
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: bipush        10
47: invokevirtual #37
50: aload_1
51: ldc           #38
53: invokevirtual #39
56: aload_1
57: getfield      #40
60: istore_3
61: aload_1
62: iconst_1
63: invokevirtual #55
66: aload_1
67: ldc           #78
69: putfield      #45
72: aload_1
73: getfield      #15
76: astore        4
78: new           #22
81: dup
82: invokespecial #23
85: ldc           #24
87: invokevirtual #25
90: iload_2
91: invokevirtual #29
94: ldc           #30
96: invokevirtual #25
99: iconst_1
100: invokevirtual #29
103: ldc           #24
105: invokevirtual #25
108: invokevirtual #27
111: iload_2
112: iconst_1
113: if_icmpne     120
116: iconst_1
117: goto          121
120: iconst_0
121: invokestatic  #31
124: new           #22
127: dup
128: invokespecial #23
131: ldc           #24
133: invokevirtual #25
136: iload_3
137: invokevirtual #29
140: ldc           #30
142: invokevirtual #25
145: iconst_1
146: invokevirtual #29
149: ldc           #24
151: invokevirtual #25
154: invokevirtual #27
157: iload_3
158: iconst_1
159: if_icmpne     166
162: iconst_1
163: goto          167
166: iconst_0
167: invokestatic  #31
170: new           #22
173: dup
174: invokespecial #23
177: ldc           #24
179: invokevirtual #25
182: aload         4
184: invokevirtual #25
187: ldc           #79
189: invokevirtual #25
192: invokevirtual #27
195: aload         4
197: ldc           #78
199: invokestatic  #28
202: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0663
Start line: 3634
End line: 0
Method source code: 
    public void test0663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0663");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.defaultLongOptPrefix = "hi!";
        int int3 = helpFormatter0.getWidth();
        helpFormatter0.setLongOptPrefix("          ");
        int int6 = helpFormatter0.defaultLeftPad;
        helpFormatter0.setLeftPadding(1);
        helpFormatter0.setLongOptPrefix("");
        helpFormatter0.setLongOptPrefix("                                ");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 74 + "'", int3 == 74);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #265
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #65
36: putfield      #52
39: aload_1
40: invokevirtual #66
43: istore_2
44: aload_1
45: ldc           #67
47: invokevirtual #43
50: aload_1
51: getfield      #40
54: istore_3
55: aload_1
56: iconst_1
57: invokevirtual #55
60: aload_1
61: ldc           #11
63: invokevirtual #43
66: aload_1
67: ldc           #95
69: invokevirtual #43
72: new           #22
75: dup
76: invokespecial #23
79: ldc           #24
81: invokevirtual #25
84: iload_2
85: invokevirtual #29
88: ldc           #30
90: invokevirtual #25
93: bipush        74
95: invokevirtual #29
98: ldc           #24
100: invokevirtual #25
103: invokevirtual #27
106: iload_2
107: bipush        74
109: if_icmpne     116
112: iconst_1
113: goto          117
116: iconst_0
117: invokestatic  #31
120: new           #22
123: dup
124: invokespecial #23
127: ldc           #24
129: invokevirtual #25
132: iload_3
133: invokevirtual #29
136: ldc           #30
138: invokevirtual #25
141: iconst_1
142: invokevirtual #29
145: ldc           #24
147: invokevirtual #25
150: invokevirtual #27
153: iload_3
154: iconst_1
155: if_icmpne     162
158: iconst_1
159: goto          163
162: iconst_0
163: invokestatic  #31
166: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0664
Start line: 3650
End line: 0
Method source code: 
    public void test0664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0664");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str6 = helpFormatter0.getNewLine();
        java.util.Comparator comparator7 = helpFormatter0.getOptionComparator();
        org.apache.commons.cli.HelpFormatter helpFormatter8 = new org.apache.commons.cli.HelpFormatter();
        int int9 = helpFormatter8.getLeftPadding();
        helpFormatter8.defaultNewLine = "";
        java.lang.String str12 = helpFormatter8.defaultOptPrefix;
        helpFormatter8.setLongOptPrefix(" ");
        helpFormatter8.defaultDescPad = (short) 10;
        java.lang.String str17 = helpFormatter8.defaultArgName;
        java.util.Comparator comparator18 = helpFormatter8.optionComparator;
        helpFormatter0.setOptionComparator(comparator18);
        helpFormatter0.setLongOptSeparator("          ");
        helpFormatter0.setWidth(100);
        helpFormatter0.setDescPadding((int) (short) 10);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\n" + "'", str6, "\n");
        org.junit.Assert.assertNotNull(comparator7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "-" + "'", str12, "-");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "arg" + "'", str17, "arg");
        org.junit.Assert.assertNotNull(comparator18);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #266
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #11
36: invokevirtual #51
39: aload_1
40: ldc           #11
42: putfield      #52
45: aload_1
46: getfield      #52
49: astore_2
50: aload_1
51: invokevirtual #16
54: astore_3
55: aload_1
56: invokevirtual #58
59: astore        4
61: new           #8
64: dup
65: invokespecial #9
68: astore        5
70: aload         5
72: invokevirtual #35
75: istore        6
77: aload         5
79: ldc           #11
81: putfield      #36
84: aload         5
86: getfield      #42
89: astore        7
91: aload         5
93: ldc           #38
95: invokevirtual #43
98: aload         5
100: bipush        10
102: putfield      #44
105: aload         5
107: getfield      #15
110: astore        8
112: aload         5
114: getfield      #10
117: astore        9
119: aload_1
120: aload         9
122: invokevirtual #99
125: aload_1
126: ldc           #67
128: invokevirtual #74
131: aload_1
132: bipush        100
134: invokevirtual #90
137: aload_1
138: bipush        10
140: invokevirtual #37
143: new           #22
146: dup
147: invokespecial #23
150: ldc           #24
152: invokevirtual #25
155: aload_2
156: invokevirtual #25
159: ldc           #26
161: invokevirtual #25
164: invokevirtual #27
167: aload_2
168: ldc           #11
170: invokestatic  #28
173: new           #22
176: dup
177: invokespecial #23
180: ldc           #24
182: invokevirtual #25
185: aload_3
186: invokevirtual #25
189: ldc           #32
191: invokevirtual #25
194: invokevirtual #27
197: aload_3
198: ldc           #33
200: invokestatic  #28
203: aload         4
205: invokestatic  #21
208: new           #22
211: dup
212: invokespecial #23
215: ldc           #24
217: invokevirtual #25
220: iload         6
222: invokevirtual #29
225: ldc           #30
227: invokevirtual #25
230: iconst_1
231: invokevirtual #29
234: ldc           #24
236: invokevirtual #25
239: invokevirtual #27
242: iload         6
244: iconst_1
245: if_icmpne     252
248: iconst_1
249: goto          253
252: iconst_0
253: invokestatic  #31
256: new           #22
259: dup
260: invokespecial #23
263: ldc           #24
265: invokevirtual #25
268: aload         7
270: invokevirtual #25
273: ldc           #48
275: invokevirtual #25
278: invokevirtual #27
281: aload         7
283: ldc           #49
285: invokestatic  #28
288: new           #22
291: dup
292: invokespecial #23
295: ldc           #24
297: invokevirtual #25
300: aload         8
302: invokevirtual #25
305: ldc           #79
307: invokevirtual #25
310: invokevirtual #27
313: aload         8
315: ldc           #78
317: invokestatic  #28
320: aload         9
322: invokestatic  #21
325: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0665
Start line: 3681
End line: 0
Method source code: 
    public void test0665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0665");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.getArgName();
        helpFormatter0.defaultNewLine = "\n";
        java.lang.String str5 = helpFormatter0.getSyntaxPrefix();
        int int6 = helpFormatter0.defaultDescPad;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "arg" + "'", str2, "arg");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "usage: " + "'", str5, "usage: ");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 3 + "'", int6 == 3);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #267
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: invokevirtual #83
42: astore_3
43: aload_1
44: ldc           #33
46: putfield      #36
49: aload_1
50: invokevirtual #89
53: astore        4
55: aload_1
56: getfield      #44
59: istore        5
61: new           #22
64: dup
65: invokespecial #23
68: ldc           #24
70: invokevirtual #25
73: iload_2
74: invokevirtual #29
77: ldc           #30
79: invokevirtual #25
82: iconst_1
83: invokevirtual #29
86: ldc           #24
88: invokevirtual #25
91: invokevirtual #27
94: iload_2
95: iconst_1
96: if_icmpne     103
99: iconst_1
100: goto          104
103: iconst_0
104: invokestatic  #31
107: new           #22
110: dup
111: invokespecial #23
114: ldc           #24
116: invokevirtual #25
119: aload_3
120: invokevirtual #25
123: ldc           #79
125: invokevirtual #25
128: invokevirtual #27
131: aload_3
132: ldc           #78
134: invokestatic  #28
137: new           #22
140: dup
141: invokespecial #23
144: ldc           #24
146: invokevirtual #25
149: aload         4
151: invokevirtual #25
154: ldc           #104
156: invokevirtual #25
159: invokevirtual #27
162: aload         4
164: ldc           #46
166: invokestatic  #28
169: new           #22
172: dup
173: invokespecial #23
176: ldc           #24
178: invokevirtual #25
181: iload         5
183: invokevirtual #29
186: ldc           #30
188: invokevirtual #25
191: iconst_3
192: invokevirtual #29
195: ldc           #24
197: invokevirtual #25
200: invokevirtual #27
203: iload         5
205: iconst_3
206: if_icmpne     213
209: iconst_1
210: goto          214
213: iconst_0
214: invokestatic  #31
217: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0666
Start line: 3697
End line: 0
Method source code: 
    public void test0666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0666");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str6 = helpFormatter0.getNewLine();
        helpFormatter0.setSyntaxPrefix(" ");
        java.lang.String str9 = helpFormatter0.defaultOptPrefix;
        java.lang.String str10 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.defaultSyntaxPrefix = "                                ";
        java.io.PrintWriter printWriter13 = null;
        try {
            helpFormatter0.printWrapped(printWriter13, (-1), (int) (short) 0, "usage:");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\n" + "'", str6, "\n");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #268
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #11
36: invokevirtual #51
39: aload_1
40: ldc           #11
42: putfield      #52
45: aload_1
46: getfield      #52
49: astore_2
50: aload_1
51: invokevirtual #16
54: astore_3
55: aload_1
56: ldc           #38
58: invokevirtual #39
61: aload_1
62: getfield      #42
65: astore        4
67: aload_1
68: getfield      #42
71: astore        5
73: aload_1
74: ldc           #95
76: putfield      #45
79: aconst_null
80: astore        6
82: aload_1
83: aload         6
85: iconst_m1
86: iconst_0
87: ldc           #108
89: invokevirtual #187
92: ldc           #18
94: invokestatic  #19
97: goto          102
100: astore        7
102: new           #22
105: dup
106: invokespecial #23
109: ldc           #24
111: invokevirtual #25
114: aload_2
115: invokevirtual #25
118: ldc           #26
120: invokevirtual #25
123: invokevirtual #27
126: aload_2
127: ldc           #11
129: invokestatic  #28
132: new           #22
135: dup
136: invokespecial #23
139: ldc           #24
141: invokevirtual #25
144: aload_3
145: invokevirtual #25
148: ldc           #32
150: invokevirtual #25
153: invokevirtual #27
156: aload_3
157: ldc           #33
159: invokestatic  #28
162: new           #22
165: dup
166: invokespecial #23
169: ldc           #24
171: invokevirtual #25
174: aload         4
176: invokevirtual #25
179: ldc           #26
181: invokevirtual #25
184: invokevirtual #27
187: aload         4
189: ldc           #11
191: invokestatic  #28
194: new           #22
197: dup
198: invokespecial #23
201: ldc           #24
203: invokevirtual #25
206: aload         5
208: invokevirtual #25
211: ldc           #26
213: invokevirtual #25
216: invokevirtual #27
219: aload         5
221: ldc           #11
223: invokestatic  #28
226: return
Exception table:
from    to  target type
82    97   100   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0667
Start line: 3724
End line: 0
Method source code: 
    public void test0667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0667");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.lang.String str1 = helpFormatter0.defaultSyntaxPrefix;
        helpFormatter0.setOptPrefix(" ");
        java.lang.String str4 = helpFormatter0.defaultLongOptPrefix;
        org.apache.commons.cli.Options options6 = null;
        try {
            helpFormatter0.printHelp("hi!", options6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "usage: " + "'", str1, "usage: ");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "--" + "'", str4, "--");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #269
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: getfield      #45
37: astore_2
38: aload_1
39: ldc           #38
41: invokevirtual #51
44: aload_1
45: getfield      #52
48: astore_3
49: aconst_null
50: astore        4
52: aload_1
53: ldc           #65
55: aload         4
57: invokevirtual #240
60: ldc           #18
62: invokestatic  #19
65: goto          70
68: astore        5
70: new           #22
73: dup
74: invokespecial #23
77: ldc           #24
79: invokevirtual #25
82: aload_2
83: invokevirtual #25
86: ldc           #104
88: invokevirtual #25
91: invokevirtual #27
94: aload_2
95: ldc           #46
97: invokestatic  #28
100: new           #22
103: dup
104: invokespecial #23
107: ldc           #24
109: invokevirtual #25
112: aload_3
113: invokevirtual #25
116: ldc           #62
118: invokevirtual #25
121: invokevirtual #27
124: aload_3
125: ldc           #63
127: invokestatic  #28
130: return
Exception table:
from    to  target type
52    65    68   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0668
Start line: 3744
End line: 0
Method source code: 
    public void test0668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0668");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setLongOptPrefix(" ");
        helpFormatter0.defaultDescPad = (short) 10;
        java.lang.String str9 = helpFormatter0.defaultArgName;
        helpFormatter0.setSyntaxPrefix("");
        helpFormatter0.defaultOptPrefix = "                                                                                                 ";
        helpFormatter0.setLongOptPrefix("          ");
        helpFormatter0.defaultArgName = "\n";
        helpFormatter0.setArgName("");
        org.apache.commons.cli.HelpFormatter helpFormatter20 = new org.apache.commons.cli.HelpFormatter();
        int int21 = helpFormatter20.getLeftPadding();
        helpFormatter20.defaultNewLine = "";
        java.lang.String str24 = helpFormatter20.defaultOptPrefix;
        helpFormatter20.setLongOptPrefix(" ");
        helpFormatter20.defaultDescPad = (short) 10;
        java.lang.String str29 = helpFormatter20.defaultArgName;
        java.util.Comparator comparator30 = helpFormatter20.optionComparator;
        helpFormatter0.setOptionComparator(comparator30);
        java.lang.String str32 = helpFormatter0.getOptPrefix();
        org.apache.commons.cli.Options options36 = null;
        try {
            helpFormatter0.printHelp((int) (byte) 1, "--", "-", options36, "                                                                                                 ");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "arg" + "'", str9, "arg");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "-" + "'", str24, "-");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "arg" + "'", str29, "arg");
        org.junit.Assert.assertNotNull(comparator30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "                                                                                                 " + "'", str32, "                                                                                                 ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #270
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: getfield      #42
48: astore_3
49: aload_1
50: ldc           #38
52: invokevirtual #43
55: aload_1
56: bipush        10
58: putfield      #44
61: aload_1
62: getfield      #15
65: astore        4
67: aload_1
68: ldc           #11
70: invokevirtual #39
73: aload_1
74: ldc           #14
76: putfield      #42
79: aload_1
80: ldc           #67
82: invokevirtual #43
85: aload_1
86: ldc           #33
88: putfield      #15
91: aload_1
92: ldc           #11
94: invokevirtual #59
97: new           #8
100: dup
101: invokespecial #9
104: astore        5
106: aload         5
108: invokevirtual #35
111: istore        6
113: aload         5
115: ldc           #11
117: putfield      #36
120: aload         5
122: getfield      #42
125: astore        7
127: aload         5
129: ldc           #38
131: invokevirtual #43
134: aload         5
136: bipush        10
138: putfield      #44
141: aload         5
143: getfield      #15
146: astore        8
148: aload         5
150: getfield      #10
153: astore        9
155: aload_1
156: aload         9
158: invokevirtual #99
161: aload_1
162: invokevirtual #73
165: astore        10
167: aconst_null
168: astore        11
170: aload_1
171: iconst_1
172: ldc           #63
174: ldc           #49
176: aload         11
178: ldc           #14
180: invokevirtual #150
183: ldc           #18
185: invokestatic  #19
188: goto          193
191: astore        12
193: new           #22
196: dup
197: invokespecial #23
200: ldc           #24
202: invokevirtual #25
205: iload_2
206: invokevirtual #29
209: ldc           #30
211: invokevirtual #25
214: iconst_1
215: invokevirtual #29
218: ldc           #24
220: invokevirtual #25
223: invokevirtual #27
226: iload_2
227: iconst_1
228: if_icmpne     235
231: iconst_1
232: goto          236
235: iconst_0
236: invokestatic  #31
239: new           #22
242: dup
243: invokespecial #23
246: ldc           #24
248: invokevirtual #25
251: aload_3
252: invokevirtual #25
255: ldc           #48
257: invokevirtual #25
260: invokevirtual #27
263: aload_3
264: ldc           #49
266: invokestatic  #28
269: new           #22
272: dup
273: invokespecial #23
276: ldc           #24
278: invokevirtual #25
281: aload         4
283: invokevirtual #25
286: ldc           #79
288: invokevirtual #25
291: invokevirtual #27
294: aload         4
296: ldc           #78
298: invokestatic  #28
301: new           #22
304: dup
305: invokespecial #23
308: ldc           #24
310: invokevirtual #25
313: iload         6
315: invokevirtual #29
318: ldc           #30
320: invokevirtual #25
323: iconst_1
324: invokevirtual #29
327: ldc           #24
329: invokevirtual #25
332: invokevirtual #27
335: iload         6
337: iconst_1
338: if_icmpne     345
341: iconst_1
342: goto          346
345: iconst_0
346: invokestatic  #31
349: new           #22
352: dup
353: invokespecial #23
356: ldc           #24
358: invokevirtual #25
361: aload         7
363: invokevirtual #25
366: ldc           #48
368: invokevirtual #25
371: invokevirtual #27
374: aload         7
376: ldc           #49
378: invokestatic  #28
381: new           #22
384: dup
385: invokespecial #23
388: ldc           #24
390: invokevirtual #25
393: aload         8
395: invokevirtual #25
398: ldc           #79
400: invokevirtual #25
403: invokevirtual #27
406: aload         8
408: ldc           #78
410: invokestatic  #28
413: aload         9
415: invokestatic  #21
418: new           #22
421: dup
422: invokespecial #23
425: ldc           #24
427: invokevirtual #25
430: aload         10
432: invokevirtual #25
435: ldc           #142
437: invokevirtual #25
440: invokevirtual #27
443: aload         10
445: ldc           #14
447: invokestatic  #28
450: return
Exception table:
from    to  target type
170   188   191   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0669
Start line: 3788
End line: 0
Method source code: 
    public void test0669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0669");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.defaultLongOptPrefix = "hi!";
        java.lang.String str3 = helpFormatter0.defaultLongOptPrefix;
        helpFormatter0.setNewLine("-");
        java.lang.String str6 = helpFormatter0.getLongOptPrefix();
        helpFormatter0.defaultArgName = " ";
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!" + "'", str3, "hi!");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #271
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #65
36: putfield      #52
39: aload_1
40: getfield      #52
43: astore_2
44: aload_1
45: ldc           #49
47: invokevirtual #88
50: aload_1
51: invokevirtual #53
54: astore_3
55: aload_1
56: ldc           #38
58: putfield      #15
61: new           #22
64: dup
65: invokespecial #23
68: ldc           #24
70: invokevirtual #25
73: aload_2
74: invokevirtual #25
77: ldc           #97
79: invokevirtual #25
82: invokevirtual #27
85: aload_2
86: ldc           #65
88: invokestatic  #28
91: new           #22
94: dup
95: invokespecial #23
98: ldc           #24
100: invokevirtual #25
103: aload_3
104: invokevirtual #25
107: ldc           #97
109: invokevirtual #25
112: invokevirtual #27
115: aload_3
116: ldc           #65
118: invokestatic  #28
121: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0670
Start line: 3802
End line: 0
Method source code: 
    public void test0670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0670");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.getArgName();
        helpFormatter0.setSyntaxPrefix("usage: ");
        java.lang.String str5 = helpFormatter0.getArgName();
        org.apache.commons.cli.Options options7 = null;
        try {
            helpFormatter0.printHelp("usage: ", options7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "arg" + "'", str2, "arg");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "arg" + "'", str5, "arg");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #272
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: invokevirtual #83
42: astore_3
43: aload_1
44: ldc           #46
46: invokevirtual #39
49: aload_1
50: invokevirtual #83
53: astore        4
55: aconst_null
56: astore        5
58: aload_1
59: ldc           #46
61: aload         5
63: invokevirtual #240
66: ldc           #18
68: invokestatic  #19
71: goto          76
74: astore        6
76: new           #22
79: dup
80: invokespecial #23
83: ldc           #24
85: invokevirtual #25
88: iload_2
89: invokevirtual #29
92: ldc           #30
94: invokevirtual #25
97: iconst_1
98: invokevirtual #29
101: ldc           #24
103: invokevirtual #25
106: invokevirtual #27
109: iload_2
110: iconst_1
111: if_icmpne     118
114: iconst_1
115: goto          119
118: iconst_0
119: invokestatic  #31
122: new           #22
125: dup
126: invokespecial #23
129: ldc           #24
131: invokevirtual #25
134: aload_3
135: invokevirtual #25
138: ldc           #79
140: invokevirtual #25
143: invokevirtual #27
146: aload_3
147: ldc           #78
149: invokestatic  #28
152: new           #22
155: dup
156: invokespecial #23
159: ldc           #24
161: invokevirtual #25
164: aload         4
166: invokevirtual #25
169: ldc           #79
171: invokevirtual #25
174: invokevirtual #27
177: aload         4
179: ldc           #78
181: invokestatic  #28
184: return
Exception table:
from    to  target type
58    71    74   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0671
Start line: 3824
End line: 0
Method source code: 
    public void test0671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0671");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.getArgName();
        helpFormatter0.setSyntaxPrefix("usage: ");
        java.lang.String str5 = helpFormatter0.defaultSyntaxPrefix;
        helpFormatter0.setLeftPadding((int) '#');
        java.lang.String str8 = helpFormatter0.getLongOptPrefix();
        org.apache.commons.cli.Options options12 = null;
        try {
            helpFormatter0.printHelp(32, "                                                    ", "usage:", options12, "hi!", false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "arg" + "'", str2, "arg");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "usage: " + "'", str5, "usage: ");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "--" + "'", str8, "--");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #273
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: invokevirtual #83
42: astore_3
43: aload_1
44: ldc           #46
46: invokevirtual #39
49: aload_1
50: getfield      #45
53: astore        4
55: aload_1
56: bipush        35
58: invokevirtual #55
61: aload_1
62: invokevirtual #53
65: astore        5
67: aconst_null
68: astore        6
70: aload_1
71: bipush        32
73: ldc           #77
75: ldc           #108
77: aload         6
79: ldc           #65
81: iconst_0
82: invokevirtual #274
85: ldc           #18
87: invokestatic  #19
90: goto          95
93: astore        7
95: new           #22
98: dup
99: invokespecial #23
102: ldc           #24
104: invokevirtual #25
107: iload_2
108: invokevirtual #29
111: ldc           #30
113: invokevirtual #25
116: iconst_1
117: invokevirtual #29
120: ldc           #24
122: invokevirtual #25
125: invokevirtual #27
128: iload_2
129: iconst_1
130: if_icmpne     137
133: iconst_1
134: goto          138
137: iconst_0
138: invokestatic  #31
141: new           #22
144: dup
145: invokespecial #23
148: ldc           #24
150: invokevirtual #25
153: aload_3
154: invokevirtual #25
157: ldc           #79
159: invokevirtual #25
162: invokevirtual #27
165: aload_3
166: ldc           #78
168: invokestatic  #28
171: new           #22
174: dup
175: invokespecial #23
178: ldc           #24
180: invokevirtual #25
183: aload         4
185: invokevirtual #25
188: ldc           #104
190: invokevirtual #25
193: invokevirtual #27
196: aload         4
198: ldc           #46
200: invokestatic  #28
203: new           #22
206: dup
207: invokespecial #23
210: ldc           #24
212: invokevirtual #25
215: aload         5
217: invokevirtual #25
220: ldc           #62
222: invokevirtual #25
225: invokevirtual #27
228: aload         5
230: ldc           #63
232: invokestatic  #28
235: return
Exception table:
from    to  target type
70    90    93   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0672
Start line: 3849
End line: 0
Method source code: 
    public void test0672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0672");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setLongOptPrefix(" ");
        helpFormatter0.defaultDescPad = (short) 10;
        helpFormatter0.defaultSyntaxPrefix = "";
        helpFormatter0.setLongOptPrefix("");
        int int13 = helpFormatter0.getDescPadding();
        java.lang.String str14 = helpFormatter0.getSyntaxPrefix();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 10 + "'", int13 == 10);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #275
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: getfield      #42
48: astore_3
49: aload_1
50: ldc           #38
52: invokevirtual #43
55: aload_1
56: bipush        10
58: putfield      #44
61: aload_1
62: ldc           #11
64: putfield      #45
67: aload_1
68: ldc           #11
70: invokevirtual #43
73: aload_1
74: invokevirtual #13
77: istore        4
79: aload_1
80: invokevirtual #89
83: astore        5
85: new           #22
88: dup
89: invokespecial #23
92: ldc           #24
94: invokevirtual #25
97: iload_2
98: invokevirtual #29
101: ldc           #30
103: invokevirtual #25
106: iconst_1
107: invokevirtual #29
110: ldc           #24
112: invokevirtual #25
115: invokevirtual #27
118: iload_2
119: iconst_1
120: if_icmpne     127
123: iconst_1
124: goto          128
127: iconst_0
128: invokestatic  #31
131: new           #22
134: dup
135: invokespecial #23
138: ldc           #24
140: invokevirtual #25
143: aload_3
144: invokevirtual #25
147: ldc           #48
149: invokevirtual #25
152: invokevirtual #27
155: aload_3
156: ldc           #49
158: invokestatic  #28
161: new           #22
164: dup
165: invokespecial #23
168: ldc           #24
170: invokevirtual #25
173: iload         4
175: invokevirtual #29
178: ldc           #30
180: invokevirtual #25
183: bipush        10
185: invokevirtual #29
188: ldc           #24
190: invokevirtual #25
193: invokevirtual #27
196: iload         4
198: bipush        10
200: if_icmpne     207
203: iconst_1
204: goto          208
207: iconst_0
208: invokestatic  #31
211: new           #22
214: dup
215: invokespecial #23
218: ldc           #24
220: invokevirtual #25
223: aload         5
225: invokevirtual #25
228: ldc           #26
230: invokevirtual #25
233: invokevirtual #27
236: aload         5
238: ldc           #11
240: invokestatic  #28
243: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0673
Start line: 3869
End line: 0
Method source code: 
    public void test0673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0673");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        java.lang.String str6 = helpFormatter0.rtrim("");
        java.lang.String str8 = helpFormatter0.rtrim("-");
        helpFormatter0.defaultOptPrefix = "--";
        helpFormatter0.defaultDescPad = 0;
        int int16 = helpFormatter0.findWrapPos("", (-1), (int) (short) 0);
        java.lang.String str17 = helpFormatter0.defaultOptPrefix;
        int int18 = helpFormatter0.getDescPadding();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "-" + "'", str8, "-");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "--" + "'", str17, "--");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #276
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: getfield      #42
48: astore_3
49: aload_1
50: ldc           #11
52: invokevirtual #12
55: astore        4
57: aload_1
58: ldc           #49
60: invokevirtual #12
63: astore        5
65: aload_1
66: ldc           #63
68: putfield      #42
71: aload_1
72: iconst_0
73: putfield      #44
76: aload_1
77: ldc           #11
79: iconst_m1
80: iconst_0
81: invokevirtual #61
84: istore        6
86: aload_1
87: getfield      #42
90: astore        7
92: aload_1
93: invokevirtual #13
96: istore        8
98: new           #22
101: dup
102: invokespecial #23
105: ldc           #24
107: invokevirtual #25
110: iload_2
111: invokevirtual #29
114: ldc           #30
116: invokevirtual #25
119: iconst_1
120: invokevirtual #29
123: ldc           #24
125: invokevirtual #25
128: invokevirtual #27
131: iload_2
132: iconst_1
133: if_icmpne     140
136: iconst_1
137: goto          141
140: iconst_0
141: invokestatic  #31
144: new           #22
147: dup
148: invokespecial #23
151: ldc           #24
153: invokevirtual #25
156: aload_3
157: invokevirtual #25
160: ldc           #48
162: invokevirtual #25
165: invokevirtual #27
168: aload_3
169: ldc           #49
171: invokestatic  #28
174: new           #22
177: dup
178: invokespecial #23
181: ldc           #24
183: invokevirtual #25
186: aload         4
188: invokevirtual #25
191: ldc           #26
193: invokevirtual #25
196: invokevirtual #27
199: aload         4
201: ldc           #11
203: invokestatic  #28
206: new           #22
209: dup
210: invokespecial #23
213: ldc           #24
215: invokevirtual #25
218: aload         5
220: invokevirtual #25
223: ldc           #48
225: invokevirtual #25
228: invokevirtual #27
231: aload         5
233: ldc           #49
235: invokestatic  #28
238: new           #22
241: dup
242: invokespecial #23
245: ldc           #24
247: invokevirtual #25
250: iload         6
252: invokevirtual #29
255: ldc           #30
257: invokevirtual #25
260: iconst_m1
261: invokevirtual #29
264: ldc           #24
266: invokevirtual #25
269: invokevirtual #27
272: iload         6
274: iconst_m1
275: if_icmpne     282
278: iconst_1
279: goto          283
282: iconst_0
283: invokestatic  #31
286: new           #22
289: dup
290: invokespecial #23
293: ldc           #24
295: invokevirtual #25
298: aload         7
300: invokevirtual #25
303: ldc           #62
305: invokevirtual #25
308: invokevirtual #27
311: aload         7
313: ldc           #63
315: invokestatic  #28
318: new           #22
321: dup
322: invokespecial #23
325: ldc           #24
327: invokevirtual #25
330: iload         8
332: invokevirtual #29
335: ldc           #30
337: invokevirtual #25
340: iconst_0
341: invokevirtual #29
344: ldc           #24
346: invokevirtual #25
349: invokevirtual #27
352: iload         8
354: ifne          361
357: iconst_1
358: goto          362
361: iconst_0
362: invokestatic  #31
365: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0674
Start line: 3893
End line: 0
Method source code: 
    public void test0674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0674");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultOptPrefix;
        java.lang.String str6 = helpFormatter0.getLongOptPrefix();
        int int7 = helpFormatter0.defaultLeftPad;
        java.lang.String str8 = helpFormatter0.defaultArgName;
        helpFormatter0.setLongOptSeparator("                                                    ");
        helpFormatter0.setWidth((int) (byte) 100);
        java.lang.String str14 = helpFormatter0.rtrim("\n");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "arg" + "'", str8, "arg");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #277
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #11
36: invokevirtual #51
39: aload_1
40: ldc           #11
42: putfield      #52
45: aload_1
46: getfield      #42
49: astore_2
50: aload_1
51: invokevirtual #53
54: astore_3
55: aload_1
56: getfield      #40
59: istore        4
61: aload_1
62: getfield      #15
65: astore        5
67: aload_1
68: ldc           #77
70: invokevirtual #74
73: aload_1
74: bipush        100
76: invokevirtual #90
79: aload_1
80: ldc           #33
82: invokevirtual #12
85: astore        6
87: new           #22
90: dup
91: invokespecial #23
94: ldc           #24
96: invokevirtual #25
99: aload_2
100: invokevirtual #25
103: ldc           #26
105: invokevirtual #25
108: invokevirtual #27
111: aload_2
112: ldc           #11
114: invokestatic  #28
117: new           #22
120: dup
121: invokespecial #23
124: ldc           #24
126: invokevirtual #25
129: aload_3
130: invokevirtual #25
133: ldc           #26
135: invokevirtual #25
138: invokevirtual #27
141: aload_3
142: ldc           #11
144: invokestatic  #28
147: new           #22
150: dup
151: invokespecial #23
154: ldc           #24
156: invokevirtual #25
159: iload         4
161: invokevirtual #29
164: ldc           #30
166: invokevirtual #25
169: iconst_1
170: invokevirtual #29
173: ldc           #24
175: invokevirtual #25
178: invokevirtual #27
181: iload         4
183: iconst_1
184: if_icmpne     191
187: iconst_1
188: goto          192
191: iconst_0
192: invokestatic  #31
195: new           #22
198: dup
199: invokespecial #23
202: ldc           #24
204: invokevirtual #25
207: aload         5
209: invokevirtual #25
212: ldc           #79
214: invokevirtual #25
217: invokevirtual #27
220: aload         5
222: ldc           #78
224: invokestatic  #28
227: new           #22
230: dup
231: invokespecial #23
234: ldc           #24
236: invokevirtual #25
239: aload         6
241: invokevirtual #25
244: ldc           #26
246: invokevirtual #25
249: invokevirtual #27
252: aload         6
254: ldc           #11
256: invokestatic  #28
259: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0675
Start line: 3914
End line: 0
Method source code: 
    public void test0675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0675");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.defaultDescPad = '4';
        helpFormatter0.setNewLine("");
        helpFormatter0.setLongOptPrefix(" ");
        java.lang.String str10 = helpFormatter0.getLongOptPrefix();
        helpFormatter0.setLongOptSeparator("hi!");
        java.lang.String str13 = helpFormatter0.defaultLongOptPrefix;
        int int14 = helpFormatter0.defaultWidth;
        int int15 = helpFormatter0.defaultWidth;
        helpFormatter0.setArgName("--");
        int int18 = helpFormatter0.defaultLeftPad;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + " " + "'", str10, " ");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + " " + "'", str13, " ");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 74 + "'", int14 == 74);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 74 + "'", int15 == 74);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #278
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: bipush        52
47: putfield      #44
50: aload_1
51: ldc           #11
53: invokevirtual #88
56: aload_1
57: ldc           #38
59: invokevirtual #43
62: aload_1
63: invokevirtual #53
66: astore_3
67: aload_1
68: ldc           #65
70: invokevirtual #74
73: aload_1
74: getfield      #52
77: astore        4
79: aload_1
80: getfield      #57
83: istore        5
85: aload_1
86: getfield      #57
89: istore        6
91: aload_1
92: ldc           #63
94: invokevirtual #59
97: aload_1
98: getfield      #40
101: istore        7
103: new           #22
106: dup
107: invokespecial #23
110: ldc           #24
112: invokevirtual #25
115: iload_2
116: invokevirtual #29
119: ldc           #30
121: invokevirtual #25
124: iconst_1
125: invokevirtual #29
128: ldc           #24
130: invokevirtual #25
133: invokevirtual #27
136: iload_2
137: iconst_1
138: if_icmpne     145
141: iconst_1
142: goto          146
145: iconst_0
146: invokestatic  #31
149: new           #22
152: dup
153: invokespecial #23
156: ldc           #24
158: invokevirtual #25
161: aload_3
162: invokevirtual #25
165: ldc           #75
167: invokevirtual #25
170: invokevirtual #27
173: aload_3
174: ldc           #38
176: invokestatic  #28
179: new           #22
182: dup
183: invokespecial #23
186: ldc           #24
188: invokevirtual #25
191: aload         4
193: invokevirtual #25
196: ldc           #75
198: invokevirtual #25
201: invokevirtual #27
204: aload         4
206: ldc           #38
208: invokestatic  #28
211: new           #22
214: dup
215: invokespecial #23
218: ldc           #24
220: invokevirtual #25
223: iload         5
225: invokevirtual #29
228: ldc           #30
230: invokevirtual #25
233: bipush        74
235: invokevirtual #29
238: ldc           #24
240: invokevirtual #25
243: invokevirtual #27
246: iload         5
248: bipush        74
250: if_icmpne     257
253: iconst_1
254: goto          258
257: iconst_0
258: invokestatic  #31
261: new           #22
264: dup
265: invokespecial #23
268: ldc           #24
270: invokevirtual #25
273: iload         6
275: invokevirtual #29
278: ldc           #30
280: invokevirtual #25
283: bipush        74
285: invokevirtual #29
288: ldc           #24
290: invokevirtual #25
293: invokevirtual #27
296: iload         6
298: bipush        74
300: if_icmpne     307
303: iconst_1
304: goto          308
307: iconst_0
308: invokestatic  #31
311: new           #22
314: dup
315: invokespecial #23
318: ldc           #24
320: invokevirtual #25
323: iload         7
325: invokevirtual #29
328: ldc           #30
330: invokevirtual #25
333: iconst_1
334: invokevirtual #29
337: ldc           #24
339: invokevirtual #25
342: invokevirtual #27
345: iload         7
347: iconst_1
348: if_icmpne     355
351: iconst_1
352: goto          356
355: iconst_0
356: invokestatic  #31
359: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0676
Start line: 3939
End line: 0
Method source code: 
    public void test0676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0676");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        int int6 = helpFormatter0.getLeftPadding();
        java.lang.String str8 = helpFormatter0.rtrim("");
        java.io.PrintWriter printWriter9 = null;
        org.apache.commons.cli.Options options13 = null;
        try {
            helpFormatter0.printHelp(printWriter9, (int) (short) 1, "usage: ", "          ", options13, (int) (short) 10, 0, "                                                    ", true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #279
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #11
36: invokevirtual #51
39: aload_1
40: ldc           #11
42: putfield      #52
45: aload_1
46: getfield      #52
49: astore_2
50: aload_1
51: invokevirtual #35
54: istore_3
55: aload_1
56: ldc           #11
58: invokevirtual #12
61: astore        4
63: aconst_null
64: astore        5
66: aconst_null
67: astore        6
69: aload_1
70: aload         5
72: iconst_1
73: ldc           #46
75: ldc           #67
77: aload         6
79: bipush        10
81: iconst_0
82: ldc           #77
84: iconst_1
85: invokevirtual #138
88: ldc           #18
90: invokestatic  #19
93: goto          98
96: astore        7
98: new           #22
101: dup
102: invokespecial #23
105: ldc           #24
107: invokevirtual #25
110: aload_2
111: invokevirtual #25
114: ldc           #26
116: invokevirtual #25
119: invokevirtual #27
122: aload_2
123: ldc           #11
125: invokestatic  #28
128: new           #22
131: dup
132: invokespecial #23
135: ldc           #24
137: invokevirtual #25
140: iload_3
141: invokevirtual #29
144: ldc           #30
146: invokevirtual #25
149: iconst_1
150: invokevirtual #29
153: ldc           #24
155: invokevirtual #25
158: invokevirtual #27
161: iload_3
162: iconst_1
163: if_icmpne     170
166: iconst_1
167: goto          171
170: iconst_0
171: invokestatic  #31
174: new           #22
177: dup
178: invokespecial #23
181: ldc           #24
183: invokevirtual #25
186: aload         4
188: invokevirtual #25
191: ldc           #26
193: invokevirtual #25
196: invokevirtual #27
199: aload         4
201: ldc           #11
203: invokestatic  #28
206: return
Exception table:
from    to  target type
69    93    96   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0677
Start line: 3963
End line: 0
Method source code: 
    public void test0677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0677");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.util.Comparator comparator1 = helpFormatter0.optionComparator;
        java.lang.String str3 = helpFormatter0.rtrim("");
        helpFormatter0.setLongOptSeparator(" ");
        helpFormatter0.setArgName("--");
        helpFormatter0.defaultNewLine = "                                                                                                    ";
        helpFormatter0.setLongOptSeparator("                                                    ");
        java.lang.String str12 = helpFormatter0.getNewLine();
        org.junit.Assert.assertNotNull(comparator1);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "                                                                                                    " + "'", str12, "                                                                                                    ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #280
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: getfield      #10
37: astore_2
38: aload_1
39: ldc           #11
41: invokevirtual #12
44: astore_3
45: aload_1
46: ldc           #38
48: invokevirtual #74
51: aload_1
52: ldc           #63
54: invokevirtual #59
57: aload_1
58: ldc           #118
60: putfield      #36
63: aload_1
64: ldc           #77
66: invokevirtual #74
69: aload_1
70: invokevirtual #16
73: astore        4
75: aload_2
76: invokestatic  #21
79: new           #22
82: dup
83: invokespecial #23
86: ldc           #24
88: invokevirtual #25
91: aload_3
92: invokevirtual #25
95: ldc           #26
97: invokevirtual #25
100: invokevirtual #27
103: aload_3
104: ldc           #11
106: invokestatic  #28
109: new           #22
112: dup
113: invokespecial #23
116: ldc           #24
118: invokevirtual #25
121: aload         4
123: invokevirtual #25
126: ldc           #222
128: invokevirtual #25
131: invokevirtual #27
134: aload         4
136: ldc           #118
138: invokestatic  #28
141: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0678
Start line: 3980
End line: 0
Method source code: 
    public void test0678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0678");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        java.lang.String str6 = helpFormatter0.getOptPrefix();
        java.lang.String str7 = helpFormatter0.getNewLine();
        helpFormatter0.defaultOptPrefix = "";
        helpFormatter0.setNewLine("");
        java.lang.String str12 = helpFormatter0.getArgName();
        java.lang.String str13 = helpFormatter0.getSyntaxPrefix();
        helpFormatter0.setLongOptSeparator("                                                    ");
        java.lang.String str16 = helpFormatter0.getSyntaxPrefix();
        helpFormatter0.defaultSyntaxPrefix = "                                ";
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "-" + "'", str6, "-");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "arg" + "'", str12, "arg");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "usage: " + "'", str13, "usage: ");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "usage: " + "'", str16, "usage: ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #281
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: bipush        10
47: invokevirtual #37
50: aload_1
51: invokevirtual #73
54: astore_3
55: aload_1
56: invokevirtual #16
59: astore        4
61: aload_1
62: ldc           #11
64: putfield      #42
67: aload_1
68: ldc           #11
70: invokevirtual #88
73: aload_1
74: invokevirtual #83
77: astore        5
79: aload_1
80: invokevirtual #89
83: astore        6
85: aload_1
86: ldc           #77
88: invokevirtual #74
91: aload_1
92: invokevirtual #89
95: astore        7
97: aload_1
98: ldc           #95
100: putfield      #45
103: new           #22
106: dup
107: invokespecial #23
110: ldc           #24
112: invokevirtual #25
115: iload_2
116: invokevirtual #29
119: ldc           #30
121: invokevirtual #25
124: iconst_1
125: invokevirtual #29
128: ldc           #24
130: invokevirtual #25
133: invokevirtual #27
136: iload_2
137: iconst_1
138: if_icmpne     145
141: iconst_1
142: goto          146
145: iconst_0
146: invokestatic  #31
149: new           #22
152: dup
153: invokespecial #23
156: ldc           #24
158: invokevirtual #25
161: aload_3
162: invokevirtual #25
165: ldc           #48
167: invokevirtual #25
170: invokevirtual #27
173: aload_3
174: ldc           #49
176: invokestatic  #28
179: new           #22
182: dup
183: invokespecial #23
186: ldc           #24
188: invokevirtual #25
191: aload         4
193: invokevirtual #25
196: ldc           #26
198: invokevirtual #25
201: invokevirtual #27
204: aload         4
206: ldc           #11
208: invokestatic  #28
211: new           #22
214: dup
215: invokespecial #23
218: ldc           #24
220: invokevirtual #25
223: aload         5
225: invokevirtual #25
228: ldc           #79
230: invokevirtual #25
233: invokevirtual #27
236: aload         5
238: ldc           #78
240: invokestatic  #28
243: new           #22
246: dup
247: invokespecial #23
250: ldc           #24
252: invokevirtual #25
255: aload         6
257: invokevirtual #25
260: ldc           #104
262: invokevirtual #25
265: invokevirtual #27
268: aload         6
270: ldc           #46
272: invokestatic  #28
275: new           #22
278: dup
279: invokespecial #23
282: ldc           #24
284: invokevirtual #25
287: aload         7
289: invokevirtual #25
292: ldc           #104
294: invokevirtual #25
297: invokevirtual #27
300: aload         7
302: ldc           #46
304: invokestatic  #28
307: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0679
Start line: 4005
End line: 0
Method source code: 
    public void test0679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0679");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.util.Comparator comparator1 = helpFormatter0.optionComparator;
        int int2 = helpFormatter0.defaultLeftPad;
        helpFormatter0.setDescPadding((int) (byte) 100);
        int int5 = helpFormatter0.defaultLeftPad;
        helpFormatter0.defaultWidth = (byte) 10;
        org.apache.commons.cli.Options options11 = null;
        try {
            helpFormatter0.printHelp((int) (short) -1, "", "--", options11, "usage: ");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: cmdLineSyntax not provided");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(comparator1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #282
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: getfield      #10
37: astore_2
38: aload_1
39: getfield      #40
42: istore_3
43: aload_1
44: bipush        100
46: invokevirtual #37
49: aload_1
50: getfield      #40
53: istore        4
55: aload_1
56: bipush        10
58: putfield      #57
61: aconst_null
62: astore        5
64: aload_1
65: iconst_m1
66: ldc           #11
68: ldc           #63
70: aload         5
72: ldc           #46
74: invokevirtual #150
77: ldc           #69
79: invokestatic  #19
82: goto          87
85: astore        6
87: aload_2
88: invokestatic  #21
91: new           #22
94: dup
95: invokespecial #23
98: ldc           #24
100: invokevirtual #25
103: iload_3
104: invokevirtual #29
107: ldc           #30
109: invokevirtual #25
112: iconst_1
113: invokevirtual #29
116: ldc           #24
118: invokevirtual #25
121: invokevirtual #27
124: iload_3
125: iconst_1
126: if_icmpne     133
129: iconst_1
130: goto          134
133: iconst_0
134: invokestatic  #31
137: new           #22
140: dup
141: invokespecial #23
144: ldc           #24
146: invokevirtual #25
149: iload         4
151: invokevirtual #29
154: ldc           #30
156: invokevirtual #25
159: iconst_1
160: invokevirtual #29
163: ldc           #24
165: invokevirtual #25
168: invokevirtual #27
171: iload         4
173: iconst_1
174: if_icmpne     181
177: iconst_1
178: goto          182
181: iconst_0
182: invokestatic  #31
185: return
Exception table:
from    to  target type
64    82    85   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0680
Start line: 4028
End line: 0
Method source code: 
    public void test0680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0680");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultOptPrefix;
        java.lang.String str6 = helpFormatter0.getLongOptPrefix();
        helpFormatter0.defaultArgName = "                                                                                                 ";
        java.util.Comparator comparator9 = helpFormatter0.optionComparator;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(comparator9);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #283
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #11
36: invokevirtual #51
39: aload_1
40: ldc           #11
42: putfield      #52
45: aload_1
46: getfield      #42
49: astore_2
50: aload_1
51: invokevirtual #53
54: astore_3
55: aload_1
56: ldc           #14
58: putfield      #15
61: aload_1
62: getfield      #10
65: astore        4
67: new           #22
70: dup
71: invokespecial #23
74: ldc           #24
76: invokevirtual #25
79: aload_2
80: invokevirtual #25
83: ldc           #26
85: invokevirtual #25
88: invokevirtual #27
91: aload_2
92: ldc           #11
94: invokestatic  #28
97: new           #22
100: dup
101: invokespecial #23
104: ldc           #24
106: invokevirtual #25
109: aload_3
110: invokevirtual #25
113: ldc           #26
115: invokevirtual #25
118: invokevirtual #27
121: aload_3
122: ldc           #11
124: invokestatic  #28
127: aload         4
129: invokestatic  #21
132: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0681
Start line: 4044
End line: 0
Method source code: 
    public void test0681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0681");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.util.Comparator comparator1 = helpFormatter0.optionComparator;
        helpFormatter0.setLongOptSeparator("   ");
        org.junit.Assert.assertNotNull(comparator1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #284
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: getfield      #10
37: astore_2
38: aload_1
39: ldc           #113
41: invokevirtual #74
44: aload_2
45: invokestatic  #21
48: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0682
Start line: 4054
End line: 0
Method source code: 
    public void test0682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0682");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setLongOptPrefix(" ");
        helpFormatter0.defaultDescPad = (short) 10;
        helpFormatter0.defaultSyntaxPrefix = "";
        java.lang.String str11 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str12 = helpFormatter0.getSyntaxPrefix();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + " " + "'", str11, " ");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #285
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: getfield      #42
48: astore_3
49: aload_1
50: ldc           #38
52: invokevirtual #43
55: aload_1
56: bipush        10
58: putfield      #44
61: aload_1
62: ldc           #11
64: putfield      #45
67: aload_1
68: getfield      #52
71: astore        4
73: aload_1
74: invokevirtual #89
77: astore        5
79: new           #22
82: dup
83: invokespecial #23
86: ldc           #24
88: invokevirtual #25
91: iload_2
92: invokevirtual #29
95: ldc           #30
97: invokevirtual #25
100: iconst_1
101: invokevirtual #29
104: ldc           #24
106: invokevirtual #25
109: invokevirtual #27
112: iload_2
113: iconst_1
114: if_icmpne     121
117: iconst_1
118: goto          122
121: iconst_0
122: invokestatic  #31
125: new           #22
128: dup
129: invokespecial #23
132: ldc           #24
134: invokevirtual #25
137: aload_3
138: invokevirtual #25
141: ldc           #48
143: invokevirtual #25
146: invokevirtual #27
149: aload_3
150: ldc           #49
152: invokestatic  #28
155: new           #22
158: dup
159: invokespecial #23
162: ldc           #24
164: invokevirtual #25
167: aload         4
169: invokevirtual #25
172: ldc           #75
174: invokevirtual #25
177: invokevirtual #27
180: aload         4
182: ldc           #38
184: invokestatic  #28
187: new           #22
190: dup
191: invokespecial #23
194: ldc           #24
196: invokevirtual #25
199: aload         5
201: invokevirtual #25
204: ldc           #26
206: invokevirtual #25
209: invokevirtual #27
212: aload         5
214: ldc           #11
216: invokestatic  #28
219: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0683
Start line: 4073
End line: 0
Method source code: 
    public void test0683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0683");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str3 = helpFormatter0.getOptPrefix();
        int int4 = helpFormatter0.defaultDescPad;
        java.lang.String str5 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.defaultOptPrefix = "\n";
        java.io.PrintWriter printWriter8 = null;
        org.apache.commons.cli.Options options12 = null;
        try {
            helpFormatter0.printHelp(printWriter8, 97, "hi!", "", options12, (int) (byte) 1, 0, "                                                    ", true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "--" + "'", str2, "--");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "-" + "'", str3, "-");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 3 + "'", int4 == 3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "-" + "'", str5, "-");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #286
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: getfield      #52
42: astore_3
43: aload_1
44: invokevirtual #73
47: astore        4
49: aload_1
50: getfield      #44
53: istore        5
55: aload_1
56: getfield      #42
59: astore        6
61: aload_1
62: ldc           #33
64: putfield      #42
67: aconst_null
68: astore        7
70: aconst_null
71: astore        8
73: aload_1
74: aload         7
76: bipush        97
78: ldc           #65
80: ldc           #11
82: aload         8
84: iconst_1
85: iconst_0
86: ldc           #77
88: iconst_1
89: invokevirtual #138
92: ldc           #18
94: invokestatic  #19
97: goto          102
100: astore        9
102: new           #22
105: dup
106: invokespecial #23
109: ldc           #24
111: invokevirtual #25
114: iload_2
115: invokevirtual #29
118: ldc           #30
120: invokevirtual #25
123: iconst_1
124: invokevirtual #29
127: ldc           #24
129: invokevirtual #25
132: invokevirtual #27
135: iload_2
136: iconst_1
137: if_icmpne     144
140: iconst_1
141: goto          145
144: iconst_0
145: invokestatic  #31
148: new           #22
151: dup
152: invokespecial #23
155: ldc           #24
157: invokevirtual #25
160: aload_3
161: invokevirtual #25
164: ldc           #62
166: invokevirtual #25
169: invokevirtual #27
172: aload_3
173: ldc           #63
175: invokestatic  #28
178: new           #22
181: dup
182: invokespecial #23
185: ldc           #24
187: invokevirtual #25
190: aload         4
192: invokevirtual #25
195: ldc           #48
197: invokevirtual #25
200: invokevirtual #27
203: aload         4
205: ldc           #49
207: invokestatic  #28
210: new           #22
213: dup
214: invokespecial #23
217: ldc           #24
219: invokevirtual #25
222: iload         5
224: invokevirtual #29
227: ldc           #30
229: invokevirtual #25
232: iconst_3
233: invokevirtual #29
236: ldc           #24
238: invokevirtual #25
241: invokevirtual #27
244: iload         5
246: iconst_3
247: if_icmpne     254
250: iconst_1
251: goto          255
254: iconst_0
255: invokestatic  #31
258: new           #22
261: dup
262: invokespecial #23
265: ldc           #24
267: invokevirtual #25
270: aload         6
272: invokevirtual #25
275: ldc           #48
277: invokevirtual #25
280: invokevirtual #27
283: aload         6
285: ldc           #49
287: invokestatic  #28
290: return
Exception table:
from    to  target type
73    97   100   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0684
Start line: 4100
End line: 0
Method source code: 
    public void test0684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0684");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.defaultLongOptPrefix = "hi!";
        helpFormatter0.setDescPadding((int) (short) 0);
        java.lang.String str5 = helpFormatter0.getOptPrefix();
        org.apache.commons.cli.HelpFormatter helpFormatter6 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter6.setOptPrefix("");
        helpFormatter6.defaultLongOptPrefix = "";
        java.lang.String str11 = helpFormatter6.defaultLongOptPrefix;
        java.lang.String str12 = helpFormatter6.getNewLine();
        java.lang.String str13 = helpFormatter6.defaultOptPrefix;
        helpFormatter6.setDescPadding(74);
        java.util.Comparator comparator16 = helpFormatter6.getOptionComparator();
        helpFormatter0.optionComparator = comparator16;
        java.util.Comparator comparator18 = helpFormatter0.optionComparator;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "-" + "'", str5, "-");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\n" + "'", str12, "\n");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(comparator16);
        org.junit.Assert.assertNotNull(comparator18);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #287
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #65
36: putfield      #52
39: aload_1
40: iconst_0
41: invokevirtual #37
44: aload_1
45: invokevirtual #73
48: astore_2
49: new           #8
52: dup
53: invokespecial #9
56: astore_3
57: aload_3
58: ldc           #11
60: invokevirtual #51
63: aload_3
64: ldc           #11
66: putfield      #52
69: aload_3
70: getfield      #52
73: astore        4
75: aload_3
76: invokevirtual #16
79: astore        5
81: aload_3
82: getfield      #42
85: astore        6
87: aload_3
88: bipush        74
90: invokevirtual #37
93: aload_3
94: invokevirtual #58
97: astore        7
99: aload_1
100: aload         7
102: putfield      #10
105: aload_1
106: getfield      #10
109: astore        8
111: new           #22
114: dup
115: invokespecial #23
118: ldc           #24
120: invokevirtual #25
123: aload_2
124: invokevirtual #25
127: ldc           #48
129: invokevirtual #25
132: invokevirtual #27
135: aload_2
136: ldc           #49
138: invokestatic  #28
141: new           #22
144: dup
145: invokespecial #23
148: ldc           #24
150: invokevirtual #25
153: aload         4
155: invokevirtual #25
158: ldc           #26
160: invokevirtual #25
163: invokevirtual #27
166: aload         4
168: ldc           #11
170: invokestatic  #28
173: new           #22
176: dup
177: invokespecial #23
180: ldc           #24
182: invokevirtual #25
185: aload         5
187: invokevirtual #25
190: ldc           #32
192: invokevirtual #25
195: invokevirtual #27
198: aload         5
200: ldc           #33
202: invokestatic  #28
205: new           #22
208: dup
209: invokespecial #23
212: ldc           #24
214: invokevirtual #25
217: aload         6
219: invokevirtual #25
222: ldc           #26
224: invokevirtual #25
227: invokevirtual #27
230: aload         6
232: ldc           #11
234: invokestatic  #28
237: aload         7
239: invokestatic  #21
242: aload         8
244: invokestatic  #21
247: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0685
Start line: 4126
End line: 0
Method source code: 
    public void test0685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0685");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        java.lang.String str3 = helpFormatter0.getLongOptSeparator();
        helpFormatter0.setWidth(0);
        helpFormatter0.defaultNewLine = "          ";
        helpFormatter0.setLongOptSeparator("                                                                                                 ");
        java.lang.String str10 = helpFormatter0.getLongOptSeparator();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + " " + "'", str3, " ");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "                                                                                                 " + "'", str10, "                                                                                                 ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #288
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #11
36: invokevirtual #51
39: aload_1
40: invokevirtual #72
43: astore_2
44: aload_1
45: iconst_0
46: invokevirtual #90
49: aload_1
50: ldc           #67
52: putfield      #36
55: aload_1
56: ldc           #14
58: invokevirtual #74
61: aload_1
62: invokevirtual #72
65: astore_3
66: new           #22
69: dup
70: invokespecial #23
73: ldc           #24
75: invokevirtual #25
78: aload_2
79: invokevirtual #25
82: ldc           #75
84: invokevirtual #25
87: invokevirtual #27
90: aload_2
91: ldc           #38
93: invokestatic  #28
96: new           #22
99: dup
100: invokespecial #23
103: ldc           #24
105: invokevirtual #25
108: aload_3
109: invokevirtual #25
112: ldc           #142
114: invokevirtual #25
117: invokevirtual #27
120: aload_3
121: ldc           #14
123: invokestatic  #28
126: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0686
Start line: 4141
End line: 0
Method source code: 
    public void test0686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0686");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.util.Comparator comparator1 = helpFormatter0.optionComparator;
        int int2 = helpFormatter0.getLeftPadding();
        int int6 = helpFormatter0.findWrapPos("-", 100, (-1));
        helpFormatter0.setSyntaxPrefix("          ");
        java.lang.String str9 = helpFormatter0.defaultNewLine;
        org.junit.Assert.assertNotNull(comparator1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\n" + "'", str9, "\n");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #289
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: getfield      #10
37: astore_2
38: aload_1
39: invokevirtual #35
42: istore_3
43: aload_1
44: ldc           #49
46: bipush        100
48: iconst_m1
49: invokevirtual #61
52: istore        4
54: aload_1
55: ldc           #67
57: invokevirtual #39
60: aload_1
61: getfield      #36
64: astore        5
66: aload_2
67: invokestatic  #21
70: new           #22
73: dup
74: invokespecial #23
77: ldc           #24
79: invokevirtual #25
82: iload_3
83: invokevirtual #29
86: ldc           #30
88: invokevirtual #25
91: iconst_1
92: invokevirtual #29
95: ldc           #24
97: invokevirtual #25
100: invokevirtual #27
103: iload_3
104: iconst_1
105: if_icmpne     112
108: iconst_1
109: goto          113
112: iconst_0
113: invokestatic  #31
116: new           #22
119: dup
120: invokespecial #23
123: ldc           #24
125: invokevirtual #25
128: iload         4
130: invokevirtual #29
133: ldc           #30
135: invokevirtual #25
138: iconst_m1
139: invokevirtual #29
142: ldc           #24
144: invokevirtual #25
147: invokevirtual #27
150: iload         4
152: iconst_m1
153: if_icmpne     160
156: iconst_1
157: goto          161
160: iconst_0
161: invokestatic  #31
164: new           #22
167: dup
168: invokespecial #23
171: ldc           #24
173: invokevirtual #25
176: aload         5
178: invokevirtual #25
181: ldc           #32
183: invokevirtual #25
186: invokevirtual #27
189: aload         5
191: ldc           #33
193: invokestatic  #28
196: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0687
Start line: 4157
End line: 0
Method source code: 
    public void test0687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0687");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        java.lang.String str3 = helpFormatter0.getLongOptSeparator();
        helpFormatter0.setWidth(0);
        helpFormatter0.defaultNewLine = "          ";
        helpFormatter0.setOptPrefix("hi!");
        java.io.PrintWriter printWriter10 = null;
        try {
            helpFormatter0.printWrapped(printWriter10, (int) (byte) 1, "                                                                                                 ");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + " " + "'", str3, " ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #290
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #11
36: invokevirtual #51
39: aload_1
40: invokevirtual #72
43: astore_2
44: aload_1
45: iconst_0
46: invokevirtual #90
49: aload_1
50: ldc           #67
52: putfield      #36
55: aload_1
56: ldc           #65
58: invokevirtual #51
61: aconst_null
62: astore_3
63: aload_1
64: aload_3
65: iconst_1
66: ldc           #14
68: invokevirtual #180
71: ldc           #18
73: invokestatic  #19
76: goto          81
79: astore        4
81: new           #22
84: dup
85: invokespecial #23
88: ldc           #24
90: invokevirtual #25
93: aload_2
94: invokevirtual #25
97: ldc           #75
99: invokevirtual #25
102: invokevirtual #27
105: aload_2
106: ldc           #38
108: invokestatic  #28
111: return
Exception table:
from    to  target type
63    76    79   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0688
Start line: 4178
End line: 0
Method source code: 
    public void test0688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0688");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.defaultLongOptPrefix;
        helpFormatter0.defaultSyntaxPrefix = "--";
        java.lang.String str5 = helpFormatter0.defaultOptPrefix;
        java.lang.String str7 = helpFormatter0.createPadding(97);
        helpFormatter0.setArgName("");
        helpFormatter0.setLeftPadding(10);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "--" + "'", str2, "--");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "-" + "'", str5, "-");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "                                                                                                 " + "'", str7, "                                                                                                 ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #291
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: getfield      #52
42: astore_3
43: aload_1
44: ldc           #63
46: putfield      #45
49: aload_1
50: getfield      #42
53: astore        4
55: aload_1
56: bipush        97
58: invokevirtual #93
61: astore        5
63: aload_1
64: ldc           #11
66: invokevirtual #59
69: aload_1
70: bipush        10
72: invokevirtual #55
75: new           #22
78: dup
79: invokespecial #23
82: ldc           #24
84: invokevirtual #25
87: iload_2
88: invokevirtual #29
91: ldc           #30
93: invokevirtual #25
96: iconst_1
97: invokevirtual #29
100: ldc           #24
102: invokevirtual #25
105: invokevirtual #27
108: iload_2
109: iconst_1
110: if_icmpne     117
113: iconst_1
114: goto          118
117: iconst_0
118: invokestatic  #31
121: new           #22
124: dup
125: invokespecial #23
128: ldc           #24
130: invokevirtual #25
133: aload_3
134: invokevirtual #25
137: ldc           #62
139: invokevirtual #25
142: invokevirtual #27
145: aload_3
146: ldc           #63
148: invokestatic  #28
151: new           #22
154: dup
155: invokespecial #23
158: ldc           #24
160: invokevirtual #25
163: aload         4
165: invokevirtual #25
168: ldc           #48
170: invokevirtual #25
173: invokevirtual #27
176: aload         4
178: ldc           #49
180: invokestatic  #28
183: new           #22
186: dup
187: invokespecial #23
190: ldc           #24
192: invokevirtual #25
195: aload         5
197: invokevirtual #25
200: ldc           #142
202: invokevirtual #25
205: invokevirtual #27
208: aload         5
210: ldc           #14
212: invokestatic  #28
215: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0689
Start line: 4196
End line: 0
Method source code: 
    public void test0689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0689");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        java.lang.String str6 = helpFormatter0.defaultNewLine;
        helpFormatter0.setDescPadding(10);
        org.apache.commons.cli.HelpFormatter helpFormatter9 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter9.setOptPrefix("");
        helpFormatter9.defaultLongOptPrefix = "";
        java.lang.String str14 = helpFormatter9.defaultLongOptPrefix;
        java.lang.String str15 = helpFormatter9.getNewLine();
        java.util.Comparator comparator16 = helpFormatter9.getOptionComparator();
        helpFormatter0.optionComparator = comparator16;
        java.lang.String str19 = helpFormatter0.rtrim("");
        java.lang.StringBuffer stringBuffer20 = null;
        org.apache.commons.cli.Options options22 = null;
        try {
            java.lang.StringBuffer stringBuffer25 = helpFormatter0.renderOptions(stringBuffer20, 0, options22, 100, 3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\n" + "'", str15, "\n");
        org.junit.Assert.assertNotNull(comparator16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #292
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: bipush        10
47: invokevirtual #37
50: aload_1
51: getfield      #36
54: astore_3
55: aload_1
56: bipush        10
58: invokevirtual #37
61: new           #8
64: dup
65: invokespecial #9
68: astore        4
70: aload         4
72: ldc           #11
74: invokevirtual #51
77: aload         4
79: ldc           #11
81: putfield      #52
84: aload         4
86: getfield      #52
89: astore        5
91: aload         4
93: invokevirtual #16
96: astore        6
98: aload         4
100: invokevirtual #58
103: astore        7
105: aload_1
106: aload         7
108: putfield      #10
111: aload_1
112: ldc           #11
114: invokevirtual #12
117: astore        8
119: aconst_null
120: astore        9
122: aconst_null
123: astore        10
125: aload_1
126: aload         9
128: iconst_0
129: aload         10
131: bipush        100
133: iconst_3
134: invokevirtual #47
137: astore        11
139: ldc           #18
141: invokestatic  #19
144: goto          149
147: astore        11
149: new           #22
152: dup
153: invokespecial #23
156: ldc           #24
158: invokevirtual #25
161: iload_2
162: invokevirtual #29
165: ldc           #30
167: invokevirtual #25
170: iconst_1
171: invokevirtual #29
174: ldc           #24
176: invokevirtual #25
179: invokevirtual #27
182: iload_2
183: iconst_1
184: if_icmpne     191
187: iconst_1
188: goto          192
191: iconst_0
192: invokestatic  #31
195: new           #22
198: dup
199: invokespecial #23
202: ldc           #24
204: invokevirtual #25
207: aload_3
208: invokevirtual #25
211: ldc           #26
213: invokevirtual #25
216: invokevirtual #27
219: aload_3
220: ldc           #11
222: invokestatic  #28
225: new           #22
228: dup
229: invokespecial #23
232: ldc           #24
234: invokevirtual #25
237: aload         5
239: invokevirtual #25
242: ldc           #26
244: invokevirtual #25
247: invokevirtual #27
250: aload         5
252: ldc           #11
254: invokestatic  #28
257: new           #22
260: dup
261: invokespecial #23
264: ldc           #24
266: invokevirtual #25
269: aload         6
271: invokevirtual #25
274: ldc           #32
276: invokevirtual #25
279: invokevirtual #27
282: aload         6
284: ldc           #33
286: invokestatic  #28
289: aload         7
291: invokestatic  #21
294: new           #22
297: dup
298: invokespecial #23
301: ldc           #24
303: invokevirtual #25
306: aload         8
308: invokevirtual #25
311: ldc           #26
313: invokevirtual #25
316: invokevirtual #27
319: aload         8
321: ldc           #11
323: invokestatic  #28
326: return
Exception table:
from    to  target type
125   144   147   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0690
Start line: 4231
End line: 0
Method source code: 
    public void test0690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0690");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.lang.String str1 = helpFormatter0.defaultSyntaxPrefix;
        helpFormatter0.setNewLine("-");
        org.apache.commons.cli.Options options6 = null;
        try {
            helpFormatter0.printHelp("-", "usage:", options6, "--");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "usage: " + "'", str1, "usage: ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #293
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: getfield      #45
37: astore_2
38: aload_1
39: ldc           #49
41: invokevirtual #88
44: aconst_null
45: astore_3
46: aload_1
47: ldc           #49
49: ldc           #108
51: aload_3
52: ldc           #63
54: invokevirtual #128
57: ldc           #18
59: invokestatic  #19
62: goto          67
65: astore        4
67: new           #22
70: dup
71: invokespecial #23
74: ldc           #24
76: invokevirtual #25
79: aload_2
80: invokevirtual #25
83: ldc           #104
85: invokevirtual #25
88: invokevirtual #27
91: aload_2
92: ldc           #46
94: invokestatic  #28
97: return
Exception table:
from    to  target type
46    62    65   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0691
Start line: 4249
End line: 0
Method source code: 
    public void test0691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0691");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.defaultDescPad = '4';
        helpFormatter0.setNewLine("");
        helpFormatter0.defaultWidth = '4';
        java.lang.String str10 = helpFormatter0.getLongOptSeparator();
        int int11 = helpFormatter0.getWidth();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + " " + "'", str10, " ");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #294
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: bipush        52
47: putfield      #44
50: aload_1
51: ldc           #11
53: invokevirtual #88
56: aload_1
57: bipush        52
59: putfield      #57
62: aload_1
63: invokevirtual #72
66: astore_3
67: aload_1
68: invokevirtual #66
71: istore        4
73: new           #22
76: dup
77: invokespecial #23
80: ldc           #24
82: invokevirtual #25
85: iload_2
86: invokevirtual #29
89: ldc           #30
91: invokevirtual #25
94: iconst_1
95: invokevirtual #29
98: ldc           #24
100: invokevirtual #25
103: invokevirtual #27
106: iload_2
107: iconst_1
108: if_icmpne     115
111: iconst_1
112: goto          116
115: iconst_0
116: invokestatic  #31
119: new           #22
122: dup
123: invokespecial #23
126: ldc           #24
128: invokevirtual #25
131: aload_3
132: invokevirtual #25
135: ldc           #75
137: invokevirtual #25
140: invokevirtual #27
143: aload_3
144: ldc           #38
146: invokestatic  #28
149: new           #22
152: dup
153: invokespecial #23
156: ldc           #24
158: invokevirtual #25
161: iload         4
163: invokevirtual #29
166: ldc           #30
168: invokevirtual #25
171: bipush        52
173: invokevirtual #29
176: ldc           #24
178: invokevirtual #25
181: invokevirtual #27
184: iload         4
186: bipush        52
188: if_icmpne     195
191: iconst_1
192: goto          196
195: iconst_0
196: invokestatic  #31
199: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0692
Start line: 4266
End line: 0
Method source code: 
    public void test0692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0692");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultOptPrefix;
        java.lang.String str6 = helpFormatter0.getLongOptPrefix();
        helpFormatter0.defaultArgName = "                                                                                                 ";
        int int9 = helpFormatter0.defaultLeftPad;
        java.lang.String str10 = helpFormatter0.defaultSyntaxPrefix;
        java.lang.String str12 = helpFormatter0.createPadding(32);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "usage: " + "'", str10, "usage: ");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "                                " + "'", str12, "                                ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #295
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #11
36: invokevirtual #51
39: aload_1
40: ldc           #11
42: putfield      #52
45: aload_1
46: getfield      #42
49: astore_2
50: aload_1
51: invokevirtual #53
54: astore_3
55: aload_1
56: ldc           #14
58: putfield      #15
61: aload_1
62: getfield      #40
65: istore        4
67: aload_1
68: getfield      #45
71: astore        5
73: aload_1
74: bipush        32
76: invokevirtual #93
79: astore        6
81: new           #22
84: dup
85: invokespecial #23
88: ldc           #24
90: invokevirtual #25
93: aload_2
94: invokevirtual #25
97: ldc           #26
99: invokevirtual #25
102: invokevirtual #27
105: aload_2
106: ldc           #11
108: invokestatic  #28
111: new           #22
114: dup
115: invokespecial #23
118: ldc           #24
120: invokevirtual #25
123: aload_3
124: invokevirtual #25
127: ldc           #26
129: invokevirtual #25
132: invokevirtual #27
135: aload_3
136: ldc           #11
138: invokestatic  #28
141: new           #22
144: dup
145: invokespecial #23
148: ldc           #24
150: invokevirtual #25
153: iload         4
155: invokevirtual #29
158: ldc           #30
160: invokevirtual #25
163: iconst_1
164: invokevirtual #29
167: ldc           #24
169: invokevirtual #25
172: invokevirtual #27
175: iload         4
177: iconst_1
178: if_icmpne     185
181: iconst_1
182: goto          186
185: iconst_0
186: invokestatic  #31
189: new           #22
192: dup
193: invokespecial #23
196: ldc           #24
198: invokevirtual #25
201: aload         5
203: invokevirtual #25
206: ldc           #104
208: invokevirtual #25
211: invokevirtual #27
214: aload         5
216: ldc           #46
218: invokestatic  #28
221: new           #22
224: dup
225: invokespecial #23
228: ldc           #24
230: invokevirtual #25
233: aload         6
235: invokevirtual #25
238: ldc           #94
240: invokevirtual #25
243: invokevirtual #27
246: aload         6
248: ldc           #95
250: invokestatic  #28
253: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0693
Start line: 4286
End line: 0
Method source code: 
    public void test0693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0693");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str3 = helpFormatter0.getOptPrefix();
        int int4 = helpFormatter0.defaultDescPad;
        int int5 = helpFormatter0.defaultLeftPad;
        int int6 = helpFormatter0.defaultLeftPad;
        java.lang.String str7 = helpFormatter0.getNewLine();
        java.lang.String str8 = helpFormatter0.getLongOptPrefix();
        java.lang.String str9 = helpFormatter0.defaultArgName;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "--" + "'", str2, "--");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "-" + "'", str3, "-");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 3 + "'", int4 == 3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\n" + "'", str7, "\n");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "--" + "'", str8, "--");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "arg" + "'", str9, "arg");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #296
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: getfield      #52
42: astore_3
43: aload_1
44: invokevirtual #73
47: astore        4
49: aload_1
50: getfield      #44
53: istore        5
55: aload_1
56: getfield      #40
59: istore        6
61: aload_1
62: getfield      #40
65: istore        7
67: aload_1
68: invokevirtual #16
71: astore        8
73: aload_1
74: invokevirtual #53
77: astore        9
79: aload_1
80: getfield      #15
83: astore        10
85: new           #22
88: dup
89: invokespecial #23
92: ldc           #24
94: invokevirtual #25
97: iload_2
98: invokevirtual #29
101: ldc           #30
103: invokevirtual #25
106: iconst_1
107: invokevirtual #29
110: ldc           #24
112: invokevirtual #25
115: invokevirtual #27
118: iload_2
119: iconst_1
120: if_icmpne     127
123: iconst_1
124: goto          128
127: iconst_0
128: invokestatic  #31
131: new           #22
134: dup
135: invokespecial #23
138: ldc           #24
140: invokevirtual #25
143: aload_3
144: invokevirtual #25
147: ldc           #62
149: invokevirtual #25
152: invokevirtual #27
155: aload_3
156: ldc           #63
158: invokestatic  #28
161: new           #22
164: dup
165: invokespecial #23
168: ldc           #24
170: invokevirtual #25
173: aload         4
175: invokevirtual #25
178: ldc           #48
180: invokevirtual #25
183: invokevirtual #27
186: aload         4
188: ldc           #49
190: invokestatic  #28
193: new           #22
196: dup
197: invokespecial #23
200: ldc           #24
202: invokevirtual #25
205: iload         5
207: invokevirtual #29
210: ldc           #30
212: invokevirtual #25
215: iconst_3
216: invokevirtual #29
219: ldc           #24
221: invokevirtual #25
224: invokevirtual #27
227: iload         5
229: iconst_3
230: if_icmpne     237
233: iconst_1
234: goto          238
237: iconst_0
238: invokestatic  #31
241: new           #22
244: dup
245: invokespecial #23
248: ldc           #24
250: invokevirtual #25
253: iload         6
255: invokevirtual #29
258: ldc           #30
260: invokevirtual #25
263: iconst_1
264: invokevirtual #29
267: ldc           #24
269: invokevirtual #25
272: invokevirtual #27
275: iload         6
277: iconst_1
278: if_icmpne     285
281: iconst_1
282: goto          286
285: iconst_0
286: invokestatic  #31
289: new           #22
292: dup
293: invokespecial #23
296: ldc           #24
298: invokevirtual #25
301: iload         7
303: invokevirtual #29
306: ldc           #30
308: invokevirtual #25
311: iconst_1
312: invokevirtual #29
315: ldc           #24
317: invokevirtual #25
320: invokevirtual #27
323: iload         7
325: iconst_1
326: if_icmpne     333
329: iconst_1
330: goto          334
333: iconst_0
334: invokestatic  #31
337: new           #22
340: dup
341: invokespecial #23
344: ldc           #24
346: invokevirtual #25
349: aload         8
351: invokevirtual #25
354: ldc           #32
356: invokevirtual #25
359: invokevirtual #27
362: aload         8
364: ldc           #33
366: invokestatic  #28
369: new           #22
372: dup
373: invokespecial #23
376: ldc           #24
378: invokevirtual #25
381: aload         9
383: invokevirtual #25
386: ldc           #62
388: invokevirtual #25
391: invokevirtual #27
394: aload         9
396: ldc           #63
398: invokestatic  #28
401: new           #22
404: dup
405: invokespecial #23
408: ldc           #24
410: invokevirtual #25
413: aload         10
415: invokevirtual #25
418: ldc           #79
420: invokevirtual #25
423: invokevirtual #27
426: aload         10
428: ldc           #78
430: invokestatic  #28
433: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0694
Start line: 4311
End line: 0
Method source code: 
    public void test0694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0694");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.util.Comparator comparator1 = helpFormatter0.optionComparator;
        int int2 = helpFormatter0.getLeftPadding();
        int int6 = helpFormatter0.findWrapPos("-", 100, (-1));
        helpFormatter0.defaultWidth = (short) 100;
        helpFormatter0.defaultArgName = "\n";
        java.io.PrintWriter printWriter11 = null;
        try {
            helpFormatter0.printWrapped(printWriter11, 10, (int) (short) -1, "--");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(comparator1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #297
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: getfield      #10
37: astore_2
38: aload_1
39: invokevirtual #35
42: istore_3
43: aload_1
44: ldc           #49
46: bipush        100
48: iconst_m1
49: invokevirtual #61
52: istore        4
54: aload_1
55: bipush        100
57: putfield      #57
60: aload_1
61: ldc           #33
63: putfield      #15
66: aconst_null
67: astore        5
69: aload_1
70: aload         5
72: bipush        10
74: iconst_m1
75: ldc           #63
77: invokevirtual #187
80: ldc           #18
82: invokestatic  #19
85: goto          90
88: astore        6
90: aload_2
91: invokestatic  #21
94: new           #22
97: dup
98: invokespecial #23
101: ldc           #24
103: invokevirtual #25
106: iload_3
107: invokevirtual #29
110: ldc           #30
112: invokevirtual #25
115: iconst_1
116: invokevirtual #29
119: ldc           #24
121: invokevirtual #25
124: invokevirtual #27
127: iload_3
128: iconst_1
129: if_icmpne     136
132: iconst_1
133: goto          137
136: iconst_0
137: invokestatic  #31
140: new           #22
143: dup
144: invokespecial #23
147: ldc           #24
149: invokevirtual #25
152: iload         4
154: invokevirtual #29
157: ldc           #30
159: invokevirtual #25
162: iconst_m1
163: invokevirtual #29
166: ldc           #24
168: invokevirtual #25
171: invokevirtual #27
174: iload         4
176: iconst_m1
177: if_icmpne     184
180: iconst_1
181: goto          185
184: iconst_0
185: invokestatic  #31
188: return
Exception table:
from    to  target type
69    85    88   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0695
Start line: 4334
End line: 0
Method source code: 
    public void test0695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0695");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.defaultDescPad = '4';
        helpFormatter0.setNewLine("");
        helpFormatter0.defaultWidth = '4';
        org.apache.commons.cli.HelpFormatter helpFormatter10 = new org.apache.commons.cli.HelpFormatter();
        int int11 = helpFormatter10.getLeftPadding();
        java.lang.String str12 = helpFormatter10.defaultLongOptPrefix;
        java.lang.String str13 = helpFormatter10.getOptPrefix();
        java.util.Comparator comparator14 = helpFormatter10.optionComparator;
        java.util.Comparator comparator15 = helpFormatter10.optionComparator;
        helpFormatter0.optionComparator = comparator15;
        helpFormatter0.defaultNewLine = "                                                                                                 ";
        helpFormatter0.setLongOptPrefix(" ");
        int int21 = helpFormatter0.getWidth();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "--" + "'", str12, "--");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "-" + "'", str13, "-");
        org.junit.Assert.assertNotNull(comparator14);
        org.junit.Assert.assertNotNull(comparator15);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #298
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: bipush        52
47: putfield      #44
50: aload_1
51: ldc           #11
53: invokevirtual #88
56: aload_1
57: bipush        52
59: putfield      #57
62: new           #8
65: dup
66: invokespecial #9
69: astore_3
70: aload_3
71: invokevirtual #35
74: istore        4
76: aload_3
77: getfield      #52
80: astore        5
82: aload_3
83: invokevirtual #73
86: astore        6
88: aload_3
89: getfield      #10
92: astore        7
94: aload_3
95: getfield      #10
98: astore        8
100: aload_1
101: aload         8
103: putfield      #10
106: aload_1
107: ldc           #14
109: putfield      #36
112: aload_1
113: ldc           #38
115: invokevirtual #43
118: aload_1
119: invokevirtual #66
122: istore        9
124: new           #22
127: dup
128: invokespecial #23
131: ldc           #24
133: invokevirtual #25
136: iload_2
137: invokevirtual #29
140: ldc           #30
142: invokevirtual #25
145: iconst_1
146: invokevirtual #29
149: ldc           #24
151: invokevirtual #25
154: invokevirtual #27
157: iload_2
158: iconst_1
159: if_icmpne     166
162: iconst_1
163: goto          167
166: iconst_0
167: invokestatic  #31
170: new           #22
173: dup
174: invokespecial #23
177: ldc           #24
179: invokevirtual #25
182: iload         4
184: invokevirtual #29
187: ldc           #30
189: invokevirtual #25
192: iconst_1
193: invokevirtual #29
196: ldc           #24
198: invokevirtual #25
201: invokevirtual #27
204: iload         4
206: iconst_1
207: if_icmpne     214
210: iconst_1
211: goto          215
214: iconst_0
215: invokestatic  #31
218: new           #22
221: dup
222: invokespecial #23
225: ldc           #24
227: invokevirtual #25
230: aload         5
232: invokevirtual #25
235: ldc           #62
237: invokevirtual #25
240: invokevirtual #27
243: aload         5
245: ldc           #63
247: invokestatic  #28
250: new           #22
253: dup
254: invokespecial #23
257: ldc           #24
259: invokevirtual #25
262: aload         6
264: invokevirtual #25
267: ldc           #48
269: invokevirtual #25
272: invokevirtual #27
275: aload         6
277: ldc           #49
279: invokestatic  #28
282: aload         7
284: invokestatic  #21
287: aload         8
289: invokestatic  #21
292: new           #22
295: dup
296: invokespecial #23
299: ldc           #24
301: invokevirtual #25
304: iload         9
306: invokevirtual #29
309: ldc           #30
311: invokevirtual #25
314: bipush        52
316: invokevirtual #29
319: ldc           #24
321: invokevirtual #25
324: invokevirtual #27
327: iload         9
329: bipush        52
331: if_icmpne     338
334: iconst_1
335: goto          339
338: iconst_0
339: invokestatic  #31
342: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0696
Start line: 4363
End line: 0
Method source code: 
    public void test0696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0696");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.defaultArgName;
        java.lang.String str3 = helpFormatter0.defaultNewLine;
        helpFormatter0.defaultLeftPad = 10;
        java.io.PrintWriter printWriter6 = null;
        try {
            helpFormatter0.printWrapped(printWriter6, (int) (short) 10, 0, "          ");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "arg" + "'", str2, "arg");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\n" + "'", str3, "\n");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #299
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: getfield      #15
42: astore_3
43: aload_1
44: getfield      #36
47: astore        4
49: aload_1
50: bipush        10
52: putfield      #40
55: aconst_null
56: astore        5
58: aload_1
59: aload         5
61: bipush        10
63: iconst_0
64: ldc           #67
66: invokevirtual #187
69: ldc           #18
71: invokestatic  #19
74: goto          79
77: astore        6
79: new           #22
82: dup
83: invokespecial #23
86: ldc           #24
88: invokevirtual #25
91: iload_2
92: invokevirtual #29
95: ldc           #30
97: invokevirtual #25
100: iconst_1
101: invokevirtual #29
104: ldc           #24
106: invokevirtual #25
109: invokevirtual #27
112: iload_2
113: iconst_1
114: if_icmpne     121
117: iconst_1
118: goto          122
121: iconst_0
122: invokestatic  #31
125: new           #22
128: dup
129: invokespecial #23
132: ldc           #24
134: invokevirtual #25
137: aload_3
138: invokevirtual #25
141: ldc           #79
143: invokevirtual #25
146: invokevirtual #27
149: aload_3
150: ldc           #78
152: invokestatic  #28
155: new           #22
158: dup
159: invokespecial #23
162: ldc           #24
164: invokevirtual #25
167: aload         4
169: invokevirtual #25
172: ldc           #32
174: invokevirtual #25
177: invokevirtual #27
180: aload         4
182: ldc           #33
184: invokestatic  #28
187: return
Exception table:
from    to  target type
58    74    77   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0697
Start line: 4385
End line: 0
Method source code: 
    public void test0697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0697");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.util.Comparator comparator1 = helpFormatter0.optionComparator;
        java.lang.String str2 = helpFormatter0.getLongOptPrefix();
        helpFormatter0.setLongOptPrefix("");
        int int8 = helpFormatter0.findWrapPos("--", (-2), (int) '4');
        org.junit.Assert.assertNotNull(comparator1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "--" + "'", str2, "--");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #300
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: getfield      #10
37: astore_2
38: aload_1
39: invokevirtual #53
42: astore_3
43: aload_1
44: ldc           #11
46: invokevirtual #43
49: aload_1
50: ldc           #63
52: bipush        -2
54: bipush        52
56: invokevirtual #61
59: istore        4
61: aload_2
62: invokestatic  #21
65: new           #22
68: dup
69: invokespecial #23
72: ldc           #24
74: invokevirtual #25
77: aload_3
78: invokevirtual #25
81: ldc           #62
83: invokevirtual #25
86: invokevirtual #27
89: aload_3
90: ldc           #63
92: invokestatic  #28
95: new           #22
98: dup
99: invokespecial #23
102: ldc           #24
104: invokevirtual #25
107: iload         4
109: invokevirtual #29
112: ldc           #30
114: invokevirtual #25
117: iconst_m1
118: invokevirtual #29
121: ldc           #24
123: invokevirtual #25
126: invokevirtual #27
129: iload         4
131: iconst_m1
132: if_icmpne     139
135: iconst_1
136: goto          140
139: iconst_0
140: invokestatic  #31
143: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0698
Start line: 4399
End line: 0
Method source code: 
    public void test0698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0698");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        int int4 = helpFormatter0.defaultWidth;
        helpFormatter0.setOptPrefix("");
        helpFormatter0.setOptPrefix("arg");
        org.apache.commons.cli.HelpFormatter helpFormatter9 = new org.apache.commons.cli.HelpFormatter();
        int int10 = helpFormatter9.getLeftPadding();
        helpFormatter9.defaultNewLine = "";
        helpFormatter9.defaultDescPad = '4';
        helpFormatter9.setNewLine("");
        int int20 = helpFormatter9.findWrapPos("\n", (int) ' ', 3);
        java.util.Comparator comparator21 = helpFormatter9.optionComparator;
        helpFormatter0.setOptionComparator(comparator21);
        helpFormatter0.setSyntaxPrefix("-");
        java.lang.StringBuffer stringBuffer25 = null;
        org.apache.commons.cli.Options options27 = null;
        try {
            java.lang.StringBuffer stringBuffer30 = helpFormatter0.renderOptions(stringBuffer25, (int) 'a', options27, 52, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 74 + "'", int4 == 74);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(comparator21);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #301
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: getfield      #57
48: istore_3
49: aload_1
50: ldc           #11
52: invokevirtual #51
55: aload_1
56: ldc           #78
58: invokevirtual #51
61: new           #8
64: dup
65: invokespecial #9
68: astore        4
70: aload         4
72: invokevirtual #35
75: istore        5
77: aload         4
79: ldc           #11
81: putfield      #36
84: aload         4
86: bipush        52
88: putfield      #44
91: aload         4
93: ldc           #11
95: invokevirtual #88
98: aload         4
100: ldc           #33
102: bipush        32
104: iconst_3
105: invokevirtual #61
108: istore        6
110: aload         4
112: getfield      #10
115: astore        7
117: aload_1
118: aload         7
120: invokevirtual #99
123: aload_1
124: ldc           #49
126: invokevirtual #39
129: aconst_null
130: astore        8
132: aconst_null
133: astore        9
135: aload_1
136: aload         8
138: bipush        97
140: aload         9
142: bipush        52
144: iconst_1
145: invokevirtual #47
148: astore        10
150: ldc           #18
152: invokestatic  #19
155: goto          160
158: astore        10
160: new           #22
163: dup
164: invokespecial #23
167: ldc           #24
169: invokevirtual #25
172: iload_2
173: invokevirtual #29
176: ldc           #30
178: invokevirtual #25
181: iconst_1
182: invokevirtual #29
185: ldc           #24
187: invokevirtual #25
190: invokevirtual #27
193: iload_2
194: iconst_1
195: if_icmpne     202
198: iconst_1
199: goto          203
202: iconst_0
203: invokestatic  #31
206: new           #22
209: dup
210: invokespecial #23
213: ldc           #24
215: invokevirtual #25
218: iload_3
219: invokevirtual #29
222: ldc           #30
224: invokevirtual #25
227: bipush        74
229: invokevirtual #29
232: ldc           #24
234: invokevirtual #25
237: invokevirtual #27
240: iload_3
241: bipush        74
243: if_icmpne     250
246: iconst_1
247: goto          251
250: iconst_0
251: invokestatic  #31
254: new           #22
257: dup
258: invokespecial #23
261: ldc           #24
263: invokevirtual #25
266: iload         5
268: invokevirtual #29
271: ldc           #30
273: invokevirtual #25
276: iconst_1
277: invokevirtual #29
280: ldc           #24
282: invokevirtual #25
285: invokevirtual #27
288: iload         5
290: iconst_1
291: if_icmpne     298
294: iconst_1
295: goto          299
298: iconst_0
299: invokestatic  #31
302: new           #22
305: dup
306: invokespecial #23
309: ldc           #24
311: invokevirtual #25
314: iload         6
316: invokevirtual #29
319: ldc           #30
321: invokevirtual #25
324: iconst_m1
325: invokevirtual #29
328: ldc           #24
330: invokevirtual #25
333: invokevirtual #27
336: iload         6
338: iconst_m1
339: if_icmpne     346
342: iconst_1
343: goto          347
346: iconst_0
347: invokestatic  #31
350: aload         7
352: invokestatic  #21
355: return
Exception table:
from    to  target type
135   155   158   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0699
Start line: 4434
End line: 0
Method source code: 
    public void test0699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0699");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.defaultLongOptPrefix = "hi!";
        int int3 = helpFormatter0.getWidth();
        helpFormatter0.setLongOptPrefix("          ");
        int int6 = helpFormatter0.defaultLeftPad;
        helpFormatter0.setLeftPadding(1);
        helpFormatter0.setWidth((int) (short) -1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 74 + "'", int3 == 74);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #302
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #65
36: putfield      #52
39: aload_1
40: invokevirtual #66
43: istore_2
44: aload_1
45: ldc           #67
47: invokevirtual #43
50: aload_1
51: getfield      #40
54: istore_3
55: aload_1
56: iconst_1
57: invokevirtual #55
60: aload_1
61: iconst_m1
62: invokevirtual #90
65: new           #22
68: dup
69: invokespecial #23
72: ldc           #24
74: invokevirtual #25
77: iload_2
78: invokevirtual #29
81: ldc           #30
83: invokevirtual #25
86: bipush        74
88: invokevirtual #29
91: ldc           #24
93: invokevirtual #25
96: invokevirtual #27
99: iload_2
100: bipush        74
102: if_icmpne     109
105: iconst_1
106: goto          110
109: iconst_0
110: invokestatic  #31
113: new           #22
116: dup
117: invokespecial #23
120: ldc           #24
122: invokevirtual #25
125: iload_3
126: invokevirtual #29
129: ldc           #30
131: invokevirtual #25
134: iconst_1
135: invokevirtual #29
138: ldc           #24
140: invokevirtual #25
143: invokevirtual #27
146: iload_3
147: iconst_1
148: if_icmpne     155
151: iconst_1
152: goto          156
155: iconst_0
156: invokestatic  #31
159: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0700
Start line: 4449
End line: 0
Method source code: 
    public void test0700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0700");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        java.lang.String str3 = helpFormatter0.getLongOptPrefix();
        helpFormatter0.setLongOptSeparator("\n");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "--" + "'", str3, "--");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #303
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #11
36: invokevirtual #51
39: aload_1
40: invokevirtual #53
43: astore_2
44: aload_1
45: ldc           #33
47: invokevirtual #74
50: new           #22
53: dup
54: invokespecial #23
57: ldc           #24
59: invokevirtual #25
62: aload_2
63: invokevirtual #25
66: ldc           #62
68: invokevirtual #25
71: invokevirtual #27
74: aload_2
75: ldc           #63
77: invokestatic  #28
80: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0701
Start line: 4460
End line: 0
Method source code: 
    public void test0701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0701");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        int int4 = helpFormatter0.defaultWidth;
        helpFormatter0.setOptPrefix("");
        helpFormatter0.setOptPrefix("arg");
        org.apache.commons.cli.HelpFormatter helpFormatter9 = new org.apache.commons.cli.HelpFormatter();
        int int10 = helpFormatter9.getLeftPadding();
        helpFormatter9.defaultNewLine = "";
        helpFormatter9.defaultDescPad = '4';
        helpFormatter9.setNewLine("");
        int int20 = helpFormatter9.findWrapPos("\n", (int) ' ', 3);
        java.util.Comparator comparator21 = helpFormatter9.optionComparator;
        helpFormatter0.setOptionComparator(comparator21);
        helpFormatter0.setSyntaxPrefix("-");
        java.lang.String str25 = helpFormatter0.defaultSyntaxPrefix;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 74 + "'", int4 == 74);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(comparator21);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "-" + "'", str25, "-");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #304
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: getfield      #57
48: istore_3
49: aload_1
50: ldc           #11
52: invokevirtual #51
55: aload_1
56: ldc           #78
58: invokevirtual #51
61: new           #8
64: dup
65: invokespecial #9
68: astore        4
70: aload         4
72: invokevirtual #35
75: istore        5
77: aload         4
79: ldc           #11
81: putfield      #36
84: aload         4
86: bipush        52
88: putfield      #44
91: aload         4
93: ldc           #11
95: invokevirtual #88
98: aload         4
100: ldc           #33
102: bipush        32
104: iconst_3
105: invokevirtual #61
108: istore        6
110: aload         4
112: getfield      #10
115: astore        7
117: aload_1
118: aload         7
120: invokevirtual #99
123: aload_1
124: ldc           #49
126: invokevirtual #39
129: aload_1
130: getfield      #45
133: astore        8
135: new           #22
138: dup
139: invokespecial #23
142: ldc           #24
144: invokevirtual #25
147: iload_2
148: invokevirtual #29
151: ldc           #30
153: invokevirtual #25
156: iconst_1
157: invokevirtual #29
160: ldc           #24
162: invokevirtual #25
165: invokevirtual #27
168: iload_2
169: iconst_1
170: if_icmpne     177
173: iconst_1
174: goto          178
177: iconst_0
178: invokestatic  #31
181: new           #22
184: dup
185: invokespecial #23
188: ldc           #24
190: invokevirtual #25
193: iload_3
194: invokevirtual #29
197: ldc           #30
199: invokevirtual #25
202: bipush        74
204: invokevirtual #29
207: ldc           #24
209: invokevirtual #25
212: invokevirtual #27
215: iload_3
216: bipush        74
218: if_icmpne     225
221: iconst_1
222: goto          226
225: iconst_0
226: invokestatic  #31
229: new           #22
232: dup
233: invokespecial #23
236: ldc           #24
238: invokevirtual #25
241: iload         5
243: invokevirtual #29
246: ldc           #30
248: invokevirtual #25
251: iconst_1
252: invokevirtual #29
255: ldc           #24
257: invokevirtual #25
260: invokevirtual #27
263: iload         5
265: iconst_1
266: if_icmpne     273
269: iconst_1
270: goto          274
273: iconst_0
274: invokestatic  #31
277: new           #22
280: dup
281: invokespecial #23
284: ldc           #24
286: invokevirtual #25
289: iload         6
291: invokevirtual #29
294: ldc           #30
296: invokevirtual #25
299: iconst_m1
300: invokevirtual #29
303: ldc           #24
305: invokevirtual #25
308: invokevirtual #27
311: iload         6
313: iconst_m1
314: if_icmpne     321
317: iconst_1
318: goto          322
321: iconst_0
322: invokestatic  #31
325: aload         7
327: invokestatic  #21
330: new           #22
333: dup
334: invokespecial #23
337: ldc           #24
339: invokevirtual #25
342: aload         8
344: invokevirtual #25
347: ldc           #48
349: invokevirtual #25
352: invokevirtual #27
355: aload         8
357: ldc           #49
359: invokestatic  #28
362: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0702
Start line: 4488
End line: 0
Method source code: 
    public void test0702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0702");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setLongOptPrefix(" ");
        helpFormatter0.defaultDescPad = (short) 10;
        java.lang.String str9 = helpFormatter0.defaultArgName;
        helpFormatter0.setSyntaxPrefix("");
        helpFormatter0.defaultOptPrefix = "                                                                                                 ";
        helpFormatter0.setLongOptPrefix("          ");
        helpFormatter0.defaultArgName = "\n";
        helpFormatter0.setArgName("");
        org.apache.commons.cli.HelpFormatter helpFormatter20 = new org.apache.commons.cli.HelpFormatter();
        int int21 = helpFormatter20.getLeftPadding();
        helpFormatter20.defaultNewLine = "";
        java.lang.String str24 = helpFormatter20.defaultOptPrefix;
        helpFormatter20.setLongOptPrefix(" ");
        helpFormatter20.defaultDescPad = (short) 10;
        java.lang.String str29 = helpFormatter20.defaultArgName;
        java.util.Comparator comparator30 = helpFormatter20.optionComparator;
        helpFormatter0.setOptionComparator(comparator30);
        java.lang.String str32 = helpFormatter0.getOptPrefix();
        helpFormatter0.setNewLine("                                ");
        org.apache.commons.cli.Options options37 = null;
        try {
            helpFormatter0.printHelp("arg", "-", options37, "                                                                                                 ");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "arg" + "'", str9, "arg");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "-" + "'", str24, "-");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "arg" + "'", str29, "arg");
        org.junit.Assert.assertNotNull(comparator30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "                                                                                                 " + "'", str32, "                                                                                                 ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #305
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: getfield      #42
48: astore_3
49: aload_1
50: ldc           #38
52: invokevirtual #43
55: aload_1
56: bipush        10
58: putfield      #44
61: aload_1
62: getfield      #15
65: astore        4
67: aload_1
68: ldc           #11
70: invokevirtual #39
73: aload_1
74: ldc           #14
76: putfield      #42
79: aload_1
80: ldc           #67
82: invokevirtual #43
85: aload_1
86: ldc           #33
88: putfield      #15
91: aload_1
92: ldc           #11
94: invokevirtual #59
97: new           #8
100: dup
101: invokespecial #9
104: astore        5
106: aload         5
108: invokevirtual #35
111: istore        6
113: aload         5
115: ldc           #11
117: putfield      #36
120: aload         5
122: getfield      #42
125: astore        7
127: aload         5
129: ldc           #38
131: invokevirtual #43
134: aload         5
136: bipush        10
138: putfield      #44
141: aload         5
143: getfield      #15
146: astore        8
148: aload         5
150: getfield      #10
153: astore        9
155: aload_1
156: aload         9
158: invokevirtual #99
161: aload_1
162: invokevirtual #73
165: astore        10
167: aload_1
168: ldc           #95
170: invokevirtual #88
173: aconst_null
174: astore        11
176: aload_1
177: ldc           #78
179: ldc           #49
181: aload         11
183: ldc           #14
185: invokevirtual #128
188: ldc           #18
190: invokestatic  #19
193: goto          198
196: astore        12
198: new           #22
201: dup
202: invokespecial #23
205: ldc           #24
207: invokevirtual #25
210: iload_2
211: invokevirtual #29
214: ldc           #30
216: invokevirtual #25
219: iconst_1
220: invokevirtual #29
223: ldc           #24
225: invokevirtual #25
228: invokevirtual #27
231: iload_2
232: iconst_1
233: if_icmpne     240
236: iconst_1
237: goto          241
240: iconst_0
241: invokestatic  #31
244: new           #22
247: dup
248: invokespecial #23
251: ldc           #24
253: invokevirtual #25
256: aload_3
257: invokevirtual #25
260: ldc           #48
262: invokevirtual #25
265: invokevirtual #27
268: aload_3
269: ldc           #49
271: invokestatic  #28
274: new           #22
277: dup
278: invokespecial #23
281: ldc           #24
283: invokevirtual #25
286: aload         4
288: invokevirtual #25
291: ldc           #79
293: invokevirtual #25
296: invokevirtual #27
299: aload         4
301: ldc           #78
303: invokestatic  #28
306: new           #22
309: dup
310: invokespecial #23
313: ldc           #24
315: invokevirtual #25
318: iload         6
320: invokevirtual #29
323: ldc           #30
325: invokevirtual #25
328: iconst_1
329: invokevirtual #29
332: ldc           #24
334: invokevirtual #25
337: invokevirtual #27
340: iload         6
342: iconst_1
343: if_icmpne     350
346: iconst_1
347: goto          351
350: iconst_0
351: invokestatic  #31
354: new           #22
357: dup
358: invokespecial #23
361: ldc           #24
363: invokevirtual #25
366: aload         7
368: invokevirtual #25
371: ldc           #48
373: invokevirtual #25
376: invokevirtual #27
379: aload         7
381: ldc           #49
383: invokestatic  #28
386: new           #22
389: dup
390: invokespecial #23
393: ldc           #24
395: invokevirtual #25
398: aload         8
400: invokevirtual #25
403: ldc           #79
405: invokevirtual #25
408: invokevirtual #27
411: aload         8
413: ldc           #78
415: invokestatic  #28
418: aload         9
420: invokestatic  #21
423: new           #22
426: dup
427: invokespecial #23
430: ldc           #24
432: invokevirtual #25
435: aload         10
437: invokevirtual #25
440: ldc           #142
442: invokevirtual #25
445: invokevirtual #27
448: aload         10
450: ldc           #14
452: invokestatic  #28
455: return
Exception table:
from    to  target type
176   193   196   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0703
Start line: 4533
End line: 0
Method source code: 
    public void test0703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0703");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.defaultDescPad = '4';
        int int6 = helpFormatter0.defaultLeftPad;
        java.lang.String str7 = helpFormatter0.getLongOptPrefix();
        java.lang.StringBuffer stringBuffer8 = null;
        try {
            java.lang.StringBuffer stringBuffer12 = helpFormatter0.renderWrappedText(stringBuffer8, (int) (short) 0, 52, "usage: ");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "--" + "'", str7, "--");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #306
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: bipush        52
47: putfield      #44
50: aload_1
51: getfield      #40
54: istore_3
55: aload_1
56: invokevirtual #53
59: astore        4
61: aconst_null
62: astore        5
64: aload_1
65: aload         5
67: iconst_0
68: bipush        52
70: ldc           #46
72: invokevirtual #123
75: astore        6
77: ldc           #18
79: invokestatic  #19
82: goto          87
85: astore        6
87: new           #22
90: dup
91: invokespecial #23
94: ldc           #24
96: invokevirtual #25
99: iload_2
100: invokevirtual #29
103: ldc           #30
105: invokevirtual #25
108: iconst_1
109: invokevirtual #29
112: ldc           #24
114: invokevirtual #25
117: invokevirtual #27
120: iload_2
121: iconst_1
122: if_icmpne     129
125: iconst_1
126: goto          130
129: iconst_0
130: invokestatic  #31
133: new           #22
136: dup
137: invokespecial #23
140: ldc           #24
142: invokevirtual #25
145: iload_3
146: invokevirtual #29
149: ldc           #30
151: invokevirtual #25
154: iconst_1
155: invokevirtual #29
158: ldc           #24
160: invokevirtual #25
163: invokevirtual #27
166: iload_3
167: iconst_1
168: if_icmpne     175
171: iconst_1
172: goto          176
175: iconst_0
176: invokestatic  #31
179: new           #22
182: dup
183: invokespecial #23
186: ldc           #24
188: invokevirtual #25
191: aload         4
193: invokevirtual #25
196: ldc           #62
198: invokevirtual #25
201: invokevirtual #27
204: aload         4
206: ldc           #63
208: invokestatic  #28
211: return
Exception table:
from    to  target type
64    82    85   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0704
Start line: 4556
End line: 0
Method source code: 
    public void test0704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0704");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setLongOptPrefix(" ");
        helpFormatter0.defaultDescPad = (short) 10;
        helpFormatter0.defaultSyntaxPrefix = "";
        helpFormatter0.setLongOptPrefix("");
        java.lang.String str13 = helpFormatter0.defaultNewLine;
        helpFormatter0.defaultArgName = "usage: ";
        java.lang.String str16 = helpFormatter0.getLongOptPrefix();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #307
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: getfield      #42
48: astore_3
49: aload_1
50: ldc           #38
52: invokevirtual #43
55: aload_1
56: bipush        10
58: putfield      #44
61: aload_1
62: ldc           #11
64: putfield      #45
67: aload_1
68: ldc           #11
70: invokevirtual #43
73: aload_1
74: getfield      #36
77: astore        4
79: aload_1
80: ldc           #46
82: putfield      #15
85: aload_1
86: invokevirtual #53
89: astore        5
91: new           #22
94: dup
95: invokespecial #23
98: ldc           #24
100: invokevirtual #25
103: iload_2
104: invokevirtual #29
107: ldc           #30
109: invokevirtual #25
112: iconst_1
113: invokevirtual #29
116: ldc           #24
118: invokevirtual #25
121: invokevirtual #27
124: iload_2
125: iconst_1
126: if_icmpne     133
129: iconst_1
130: goto          134
133: iconst_0
134: invokestatic  #31
137: new           #22
140: dup
141: invokespecial #23
144: ldc           #24
146: invokevirtual #25
149: aload_3
150: invokevirtual #25
153: ldc           #48
155: invokevirtual #25
158: invokevirtual #27
161: aload_3
162: ldc           #49
164: invokestatic  #28
167: new           #22
170: dup
171: invokespecial #23
174: ldc           #24
176: invokevirtual #25
179: aload         4
181: invokevirtual #25
184: ldc           #26
186: invokevirtual #25
189: invokevirtual #27
192: aload         4
194: ldc           #11
196: invokestatic  #28
199: new           #22
202: dup
203: invokespecial #23
206: ldc           #24
208: invokevirtual #25
211: aload         5
213: invokevirtual #25
216: ldc           #26
218: invokevirtual #25
221: invokevirtual #27
224: aload         5
226: ldc           #11
228: invokestatic  #28
231: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0705
Start line: 4577
End line: 0
Method source code: 
    public void test0705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0705");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        int int6 = helpFormatter0.getLeftPadding();
        helpFormatter0.setLongOptSeparator("\n");
        java.lang.String str9 = helpFormatter0.getLongOptPrefix();
        java.lang.String str10 = helpFormatter0.getLongOptPrefix();
        int int11 = helpFormatter0.getWidth();
        helpFormatter0.defaultOptPrefix = " ";
        helpFormatter0.defaultNewLine = "          ";
        java.lang.String str16 = helpFormatter0.defaultArgName;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 74 + "'", int11 == 74);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "arg" + "'", str16, "arg");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #308
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #11
36: invokevirtual #51
39: aload_1
40: ldc           #11
42: putfield      #52
45: aload_1
46: getfield      #52
49: astore_2
50: aload_1
51: invokevirtual #35
54: istore_3
55: aload_1
56: ldc           #33
58: invokevirtual #74
61: aload_1
62: invokevirtual #53
65: astore        4
67: aload_1
68: invokevirtual #53
71: astore        5
73: aload_1
74: invokevirtual #66
77: istore        6
79: aload_1
80: ldc           #38
82: putfield      #42
85: aload_1
86: ldc           #67
88: putfield      #36
91: aload_1
92: getfield      #15
95: astore        7
97: new           #22
100: dup
101: invokespecial #23
104: ldc           #24
106: invokevirtual #25
109: aload_2
110: invokevirtual #25
113: ldc           #26
115: invokevirtual #25
118: invokevirtual #27
121: aload_2
122: ldc           #11
124: invokestatic  #28
127: new           #22
130: dup
131: invokespecial #23
134: ldc           #24
136: invokevirtual #25
139: iload_3
140: invokevirtual #29
143: ldc           #30
145: invokevirtual #25
148: iconst_1
149: invokevirtual #29
152: ldc           #24
154: invokevirtual #25
157: invokevirtual #27
160: iload_3
161: iconst_1
162: if_icmpne     169
165: iconst_1
166: goto          170
169: iconst_0
170: invokestatic  #31
173: new           #22
176: dup
177: invokespecial #23
180: ldc           #24
182: invokevirtual #25
185: aload         4
187: invokevirtual #25
190: ldc           #26
192: invokevirtual #25
195: invokevirtual #27
198: aload         4
200: ldc           #11
202: invokestatic  #28
205: new           #22
208: dup
209: invokespecial #23
212: ldc           #24
214: invokevirtual #25
217: aload         5
219: invokevirtual #25
222: ldc           #26
224: invokevirtual #25
227: invokevirtual #27
230: aload         5
232: ldc           #11
234: invokestatic  #28
237: new           #22
240: dup
241: invokespecial #23
244: ldc           #24
246: invokevirtual #25
249: iload         6
251: invokevirtual #29
254: ldc           #30
256: invokevirtual #25
259: bipush        74
261: invokevirtual #29
264: ldc           #24
266: invokevirtual #25
269: invokevirtual #27
272: iload         6
274: bipush        74
276: if_icmpne     283
279: iconst_1
280: goto          284
283: iconst_0
284: invokestatic  #31
287: new           #22
290: dup
291: invokespecial #23
294: ldc           #24
296: invokevirtual #25
299: aload         7
301: invokevirtual #25
304: ldc           #79
306: invokevirtual #25
309: invokevirtual #27
312: aload         7
314: ldc           #78
316: invokestatic  #28
319: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0706
Start line: 4601
End line: 0
Method source code: 
    public void test0706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0706");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        java.lang.String str6 = helpFormatter0.getOptPrefix();
        java.lang.String str7 = helpFormatter0.getNewLine();
        helpFormatter0.defaultOptPrefix = "";
        helpFormatter0.setLongOptPrefix("");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "-" + "'", str6, "-");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #309
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: bipush        10
47: invokevirtual #37
50: aload_1
51: invokevirtual #73
54: astore_3
55: aload_1
56: invokevirtual #16
59: astore        4
61: aload_1
62: ldc           #11
64: putfield      #42
67: aload_1
68: ldc           #11
70: invokevirtual #43
73: new           #22
76: dup
77: invokespecial #23
80: ldc           #24
82: invokevirtual #25
85: iload_2
86: invokevirtual #29
89: ldc           #30
91: invokevirtual #25
94: iconst_1
95: invokevirtual #29
98: ldc           #24
100: invokevirtual #25
103: invokevirtual #27
106: iload_2
107: iconst_1
108: if_icmpne     115
111: iconst_1
112: goto          116
115: iconst_0
116: invokestatic  #31
119: new           #22
122: dup
123: invokespecial #23
126: ldc           #24
128: invokevirtual #25
131: aload_3
132: invokevirtual #25
135: ldc           #48
137: invokevirtual #25
140: invokevirtual #27
143: aload_3
144: ldc           #49
146: invokestatic  #28
149: new           #22
152: dup
153: invokespecial #23
156: ldc           #24
158: invokevirtual #25
161: aload         4
163: invokevirtual #25
166: ldc           #26
168: invokevirtual #25
171: invokevirtual #27
174: aload         4
176: ldc           #11
178: invokestatic  #28
181: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0707
Start line: 4618
End line: 0
Method source code: 
    public void test0707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0707");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str6 = helpFormatter0.getNewLine();
        java.util.Comparator comparator7 = helpFormatter0.getOptionComparator();
        org.apache.commons.cli.HelpFormatter helpFormatter8 = new org.apache.commons.cli.HelpFormatter();
        int int9 = helpFormatter8.getLeftPadding();
        helpFormatter8.defaultNewLine = "";
        java.lang.String str12 = helpFormatter8.defaultOptPrefix;
        helpFormatter8.setLongOptPrefix(" ");
        helpFormatter8.defaultDescPad = (short) 10;
        java.lang.String str17 = helpFormatter8.defaultArgName;
        java.util.Comparator comparator18 = helpFormatter8.optionComparator;
        helpFormatter0.setOptionComparator(comparator18);
        helpFormatter0.defaultSyntaxPrefix = "                                                                                                 ";
        org.apache.commons.cli.HelpFormatter helpFormatter22 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter22.setOptPrefix("");
        helpFormatter22.defaultLongOptPrefix = "";
        java.lang.String str27 = helpFormatter22.defaultLongOptPrefix;
        helpFormatter22.defaultDescPad = 0;
        org.apache.commons.cli.HelpFormatter helpFormatter30 = new org.apache.commons.cli.HelpFormatter();
        java.util.Comparator comparator31 = helpFormatter30.optionComparator;
        int int32 = helpFormatter30.getLeftPadding();
        int int33 = helpFormatter30.defaultLeftPad;
        java.lang.String str35 = helpFormatter30.createPadding((int) 'a');
        org.apache.commons.cli.HelpFormatter helpFormatter36 = new org.apache.commons.cli.HelpFormatter();
        int int37 = helpFormatter36.getLeftPadding();
        helpFormatter36.defaultNewLine = "";
        helpFormatter36.defaultDescPad = '4';
        helpFormatter36.setNewLine("");
        int int47 = helpFormatter36.findWrapPos("\n", (int) ' ', 3);
        java.util.Comparator comparator48 = helpFormatter36.optionComparator;
        helpFormatter30.setOptionComparator(comparator48);
        helpFormatter22.setOptionComparator(comparator48);
        helpFormatter0.setOptionComparator(comparator48);
        helpFormatter0.defaultDescPad = (byte) 10;
        int int54 = helpFormatter0.defaultLeftPad;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\n" + "'", str6, "\n");
        org.junit.Assert.assertNotNull(comparator7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "-" + "'", str12, "-");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "arg" + "'", str17, "arg");
        org.junit.Assert.assertNotNull(comparator18);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(comparator31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "                                                                                                 " + "'", str35, "                                                                                                 ");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(comparator48);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #310
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #11
36: invokevirtual #51
39: aload_1
40: ldc           #11
42: putfield      #52
45: aload_1
46: getfield      #52
49: astore_2
50: aload_1
51: invokevirtual #16
54: astore_3
55: aload_1
56: invokevirtual #58
59: astore        4
61: new           #8
64: dup
65: invokespecial #9
68: astore        5
70: aload         5
72: invokevirtual #35
75: istore        6
77: aload         5
79: ldc           #11
81: putfield      #36
84: aload         5
86: getfield      #42
89: astore        7
91: aload         5
93: ldc           #38
95: invokevirtual #43
98: aload         5
100: bipush        10
102: putfield      #44
105: aload         5
107: getfield      #15
110: astore        8
112: aload         5
114: getfield      #10
117: astore        9
119: aload_1
120: aload         9
122: invokevirtual #99
125: aload_1
126: ldc           #14
128: putfield      #45
131: new           #8
134: dup
135: invokespecial #9
138: astore        10
140: aload         10
142: ldc           #11
144: invokevirtual #51
147: aload         10
149: ldc           #11
151: putfield      #52
154: aload         10
156: getfield      #52
159: astore        11
161: aload         10
163: iconst_0
164: putfield      #44
167: new           #8
170: dup
171: invokespecial #9
174: astore        12
176: aload         12
178: getfield      #10
181: astore        13
183: aload         12
185: invokevirtual #35
188: istore        14
190: aload         12
192: getfield      #40
195: istore        15
197: aload         12
199: bipush        97
201: invokevirtual #93
204: astore        16
206: new           #8
209: dup
210: invokespecial #9
213: astore        17
215: aload         17
217: invokevirtual #35
220: istore        18
222: aload         17
224: ldc           #11
226: putfield      #36
229: aload         17
231: bipush        52
233: putfield      #44
236: aload         17
238: ldc           #11
240: invokevirtual #88
243: aload         17
245: ldc           #33
247: bipush        32
249: iconst_3
250: invokevirtual #61
253: istore        19
255: aload         17
257: getfield      #10
260: astore        20
262: aload         12
264: aload         20
266: invokevirtual #99
269: aload         10
271: aload         20
273: invokevirtual #99
276: aload_1
277: aload         20
279: invokevirtual #99
282: aload_1
283: bipush        10
285: putfield      #44
288: aload_1
289: getfield      #40
292: istore        21
294: new           #22
297: dup
298: invokespecial #23
301: ldc           #24
303: invokevirtual #25
306: aload_2
307: invokevirtual #25
310: ldc           #26
312: invokevirtual #25
315: invokevirtual #27
318: aload_2
319: ldc           #11
321: invokestatic  #28
324: new           #22
327: dup
328: invokespecial #23
331: ldc           #24
333: invokevirtual #25
336: aload_3
337: invokevirtual #25
340: ldc           #32
342: invokevirtual #25
345: invokevirtual #27
348: aload_3
349: ldc           #33
351: invokestatic  #28
354: aload         4
356: invokestatic  #21
359: new           #22
362: dup
363: invokespecial #23
366: ldc           #24
368: invokevirtual #25
371: iload         6
373: invokevirtual #29
376: ldc           #30
378: invokevirtual #25
381: iconst_1
382: invokevirtual #29
385: ldc           #24
387: invokevirtual #25
390: invokevirtual #27
393: iload         6
395: iconst_1
396: if_icmpne     403
399: iconst_1
400: goto          404
403: iconst_0
404: invokestatic  #31
407: new           #22
410: dup
411: invokespecial #23
414: ldc           #24
416: invokevirtual #25
419: aload         7
421: invokevirtual #25
424: ldc           #48
426: invokevirtual #25
429: invokevirtual #27
432: aload         7
434: ldc           #49
436: invokestatic  #28
439: new           #22
442: dup
443: invokespecial #23
446: ldc           #24
448: invokevirtual #25
451: aload         8
453: invokevirtual #25
456: ldc           #79
458: invokevirtual #25
461: invokevirtual #27
464: aload         8
466: ldc           #78
468: invokestatic  #28
471: aload         9
473: invokestatic  #21
476: new           #22
479: dup
480: invokespecial #23
483: ldc           #24
485: invokevirtual #25
488: aload         11
490: invokevirtual #25
493: ldc           #26
495: invokevirtual #25
498: invokevirtual #27
501: aload         11
503: ldc           #11
505: invokestatic  #28
508: aload         13
510: invokestatic  #21
513: new           #22
516: dup
517: invokespecial #23
520: ldc           #24
522: invokevirtual #25
525: iload         14
527: invokevirtual #29
530: ldc           #30
532: invokevirtual #25
535: iconst_1
536: invokevirtual #29
539: ldc           #24
541: invokevirtual #25
544: invokevirtual #27
547: iload         14
549: iconst_1
550: if_icmpne     557
553: iconst_1
554: goto          558
557: iconst_0
558: invokestatic  #31
561: new           #22
564: dup
565: invokespecial #23
568: ldc           #24
570: invokevirtual #25
573: iload         15
575: invokevirtual #29
578: ldc           #30
580: invokevirtual #25
583: iconst_1
584: invokevirtual #29
587: ldc           #24
589: invokevirtual #25
592: invokevirtual #27
595: iload         15
597: iconst_1
598: if_icmpne     605
601: iconst_1
602: goto          606
605: iconst_0
606: invokestatic  #31
609: new           #22
612: dup
613: invokespecial #23
616: ldc           #24
618: invokevirtual #25
621: aload         16
623: invokevirtual #25
626: ldc           #142
628: invokevirtual #25
631: invokevirtual #27
634: aload         16
636: ldc           #14
638: invokestatic  #28
641: new           #22
644: dup
645: invokespecial #23
648: ldc           #24
650: invokevirtual #25
653: iload         18
655: invokevirtual #29
658: ldc           #30
660: invokevirtual #25
663: iconst_1
664: invokevirtual #29
667: ldc           #24
669: invokevirtual #25
672: invokevirtual #27
675: iload         18
677: iconst_1
678: if_icmpne     685
681: iconst_1
682: goto          686
685: iconst_0
686: invokestatic  #31
689: new           #22
692: dup
693: invokespecial #23
696: ldc           #24
698: invokevirtual #25
701: iload         19
703: invokevirtual #29
706: ldc           #30
708: invokevirtual #25
711: iconst_m1
712: invokevirtual #29
715: ldc           #24
717: invokevirtual #25
720: invokevirtual #27
723: iload         19
725: iconst_m1
726: if_icmpne     733
729: iconst_1
730: goto          734
733: iconst_0
734: invokestatic  #31
737: aload         20
739: invokestatic  #21
742: new           #22
745: dup
746: invokespecial #23
749: ldc           #24
751: invokevirtual #25
754: iload         21
756: invokevirtual #29
759: ldc           #30
761: invokevirtual #25
764: iconst_1
765: invokevirtual #29
768: ldc           #24
770: invokevirtual #25
773: invokevirtual #27
776: iload         21
778: iconst_1
779: if_icmpne     786
782: iconst_1
783: goto          787
786: iconst_0
787: invokestatic  #31
790: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0708
Start line: 4678
End line: 0
Method source code: 
    public void test0708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0708");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        int int6 = helpFormatter0.getLeftPadding();
        helpFormatter0.setLongOptSeparator("\n");
        java.lang.String str9 = helpFormatter0.getLongOptPrefix();
        java.lang.String str10 = helpFormatter0.getLongOptPrefix();
        int int11 = helpFormatter0.getWidth();
        helpFormatter0.defaultNewLine = "   ";
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 74 + "'", int11 == 74);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #311
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #11
36: invokevirtual #51
39: aload_1
40: ldc           #11
42: putfield      #52
45: aload_1
46: getfield      #52
49: astore_2
50: aload_1
51: invokevirtual #35
54: istore_3
55: aload_1
56: ldc           #33
58: invokevirtual #74
61: aload_1
62: invokevirtual #53
65: astore        4
67: aload_1
68: invokevirtual #53
71: astore        5
73: aload_1
74: invokevirtual #66
77: istore        6
79: aload_1
80: ldc           #113
82: putfield      #36
85: new           #22
88: dup
89: invokespecial #23
92: ldc           #24
94: invokevirtual #25
97: aload_2
98: invokevirtual #25
101: ldc           #26
103: invokevirtual #25
106: invokevirtual #27
109: aload_2
110: ldc           #11
112: invokestatic  #28
115: new           #22
118: dup
119: invokespecial #23
122: ldc           #24
124: invokevirtual #25
127: iload_3
128: invokevirtual #29
131: ldc           #30
133: invokevirtual #25
136: iconst_1
137: invokevirtual #29
140: ldc           #24
142: invokevirtual #25
145: invokevirtual #27
148: iload_3
149: iconst_1
150: if_icmpne     157
153: iconst_1
154: goto          158
157: iconst_0
158: invokestatic  #31
161: new           #22
164: dup
165: invokespecial #23
168: ldc           #24
170: invokevirtual #25
173: aload         4
175: invokevirtual #25
178: ldc           #26
180: invokevirtual #25
183: invokevirtual #27
186: aload         4
188: ldc           #11
190: invokestatic  #28
193: new           #22
196: dup
197: invokespecial #23
200: ldc           #24
202: invokevirtual #25
205: aload         5
207: invokevirtual #25
210: ldc           #26
212: invokevirtual #25
215: invokevirtual #27
218: aload         5
220: ldc           #11
222: invokestatic  #28
225: new           #22
228: dup
229: invokespecial #23
232: ldc           #24
234: invokevirtual #25
237: iload         6
239: invokevirtual #29
242: ldc           #30
244: invokevirtual #25
247: bipush        74
249: invokevirtual #29
252: ldc           #24
254: invokevirtual #25
257: invokevirtual #27
260: iload         6
262: bipush        74
264: if_icmpne     271
267: iconst_1
268: goto          272
271: iconst_0
272: invokestatic  #31
275: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0709
Start line: 4699
End line: 0
Method source code: 
    public void test0709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0709");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.defaultArgName;
        java.lang.Class<?> wildcardClass3 = helpFormatter0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "arg" + "'", str2, "arg");
        org.junit.Assert.assertNotNull(wildcardClass3);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #312
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: getfield      #15
42: astore_3
43: aload_1
44: invokevirtual #154
47: astore        4
49: new           #22
52: dup
53: invokespecial #23
56: ldc           #24
58: invokevirtual #25
61: iload_2
62: invokevirtual #29
65: ldc           #30
67: invokevirtual #25
70: iconst_1
71: invokevirtual #29
74: ldc           #24
76: invokevirtual #25
79: invokevirtual #27
82: iload_2
83: iconst_1
84: if_icmpne     91
87: iconst_1
88: goto          92
91: iconst_0
92: invokestatic  #31
95: new           #22
98: dup
99: invokespecial #23
102: ldc           #24
104: invokevirtual #25
107: aload_3
108: invokevirtual #25
111: ldc           #79
113: invokevirtual #25
116: invokevirtual #27
119: aload_3
120: ldc           #78
122: invokestatic  #28
125: aload         4
127: invokestatic  #21
130: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0710
Start line: 4712
End line: 0
Method source code: 
    public void test0710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0710");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.getArgName();
        helpFormatter0.setSyntaxPrefix("usage: ");
        java.lang.String str5 = helpFormatter0.defaultSyntaxPrefix;
        helpFormatter0.setLeftPadding((int) '#');
        java.lang.String str8 = helpFormatter0.getLongOptPrefix();
        java.lang.String str9 = helpFormatter0.defaultArgName;
        int int13 = helpFormatter0.findWrapPos("hi!", (int) 'a', (int) ' ');
        helpFormatter0.setSyntaxPrefix("");
        java.lang.String str16 = helpFormatter0.getLongOptSeparator();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "arg" + "'", str2, "arg");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "usage: " + "'", str5, "usage: ");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "--" + "'", str8, "--");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "arg" + "'", str9, "arg");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + " " + "'", str16, " ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #313
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: invokevirtual #83
42: astore_3
43: aload_1
44: ldc           #46
46: invokevirtual #39
49: aload_1
50: getfield      #45
53: astore        4
55: aload_1
56: bipush        35
58: invokevirtual #55
61: aload_1
62: invokevirtual #53
65: astore        5
67: aload_1
68: getfield      #15
71: astore        6
73: aload_1
74: ldc           #65
76: bipush        97
78: bipush        32
80: invokevirtual #61
83: istore        7
85: aload_1
86: ldc           #11
88: invokevirtual #39
91: aload_1
92: invokevirtual #72
95: astore        8
97: new           #22
100: dup
101: invokespecial #23
104: ldc           #24
106: invokevirtual #25
109: iload_2
110: invokevirtual #29
113: ldc           #30
115: invokevirtual #25
118: iconst_1
119: invokevirtual #29
122: ldc           #24
124: invokevirtual #25
127: invokevirtual #27
130: iload_2
131: iconst_1
132: if_icmpne     139
135: iconst_1
136: goto          140
139: iconst_0
140: invokestatic  #31
143: new           #22
146: dup
147: invokespecial #23
150: ldc           #24
152: invokevirtual #25
155: aload_3
156: invokevirtual #25
159: ldc           #79
161: invokevirtual #25
164: invokevirtual #27
167: aload_3
168: ldc           #78
170: invokestatic  #28
173: new           #22
176: dup
177: invokespecial #23
180: ldc           #24
182: invokevirtual #25
185: aload         4
187: invokevirtual #25
190: ldc           #104
192: invokevirtual #25
195: invokevirtual #27
198: aload         4
200: ldc           #46
202: invokestatic  #28
205: new           #22
208: dup
209: invokespecial #23
212: ldc           #24
214: invokevirtual #25
217: aload         5
219: invokevirtual #25
222: ldc           #62
224: invokevirtual #25
227: invokevirtual #27
230: aload         5
232: ldc           #63
234: invokestatic  #28
237: new           #22
240: dup
241: invokespecial #23
244: ldc           #24
246: invokevirtual #25
249: aload         6
251: invokevirtual #25
254: ldc           #79
256: invokevirtual #25
259: invokevirtual #27
262: aload         6
264: ldc           #78
266: invokestatic  #28
269: new           #22
272: dup
273: invokespecial #23
276: ldc           #24
278: invokevirtual #25
281: iload         7
283: invokevirtual #29
286: ldc           #30
288: invokevirtual #25
291: iconst_m1
292: invokevirtual #29
295: ldc           #24
297: invokevirtual #25
300: invokevirtual #27
303: iload         7
305: iconst_m1
306: if_icmpne     313
309: iconst_1
310: goto          314
313: iconst_0
314: invokestatic  #31
317: new           #22
320: dup
321: invokespecial #23
324: ldc           #24
326: invokevirtual #25
329: aload         8
331: invokevirtual #25
334: ldc           #75
336: invokevirtual #25
339: invokevirtual #27
342: aload         8
344: ldc           #38
346: invokestatic  #28
349: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0711
Start line: 4736
End line: 0
Method source code: 
    public void test0711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0711");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        java.lang.String str6 = helpFormatter0.rtrim("");
        int int7 = helpFormatter0.getDescPadding();
        int int8 = helpFormatter0.getDescPadding();
        helpFormatter0.setWidth((int) '4');
        int int11 = helpFormatter0.defaultWidth;
        int int12 = helpFormatter0.defaultDescPad;
        java.io.PrintWriter printWriter13 = null;
        org.apache.commons.cli.Options options17 = null;
        try {
            helpFormatter0.printHelp(printWriter13, (int) (short) 10, "usage: ", "--", options17, 32, 1, "                                                                                                    ");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 3 + "'", int7 == 3);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 3 + "'", int8 == 3);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 3 + "'", int12 == 3);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #314
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: getfield      #42
48: astore_3
49: aload_1
50: ldc           #11
52: invokevirtual #12
55: astore        4
57: aload_1
58: invokevirtual #13
61: istore        5
63: aload_1
64: invokevirtual #13
67: istore        6
69: aload_1
70: bipush        52
72: invokevirtual #90
75: aload_1
76: getfield      #57
79: istore        7
81: aload_1
82: getfield      #44
85: istore        8
87: aconst_null
88: astore        9
90: aconst_null
91: astore        10
93: aload_1
94: aload         9
96: bipush        10
98: ldc           #46
100: ldc           #63
102: aload         10
104: bipush        32
106: iconst_1
107: ldc           #118
109: invokevirtual #68
112: ldc           #18
114: invokestatic  #19
117: goto          122
120: astore        11
122: new           #22
125: dup
126: invokespecial #23
129: ldc           #24
131: invokevirtual #25
134: iload_2
135: invokevirtual #29
138: ldc           #30
140: invokevirtual #25
143: iconst_1
144: invokevirtual #29
147: ldc           #24
149: invokevirtual #25
152: invokevirtual #27
155: iload_2
156: iconst_1
157: if_icmpne     164
160: iconst_1
161: goto          165
164: iconst_0
165: invokestatic  #31
168: new           #22
171: dup
172: invokespecial #23
175: ldc           #24
177: invokevirtual #25
180: aload_3
181: invokevirtual #25
184: ldc           #48
186: invokevirtual #25
189: invokevirtual #27
192: aload_3
193: ldc           #49
195: invokestatic  #28
198: new           #22
201: dup
202: invokespecial #23
205: ldc           #24
207: invokevirtual #25
210: aload         4
212: invokevirtual #25
215: ldc           #26
217: invokevirtual #25
220: invokevirtual #27
223: aload         4
225: ldc           #11
227: invokestatic  #28
230: new           #22
233: dup
234: invokespecial #23
237: ldc           #24
239: invokevirtual #25
242: iload         5
244: invokevirtual #29
247: ldc           #30
249: invokevirtual #25
252: iconst_3
253: invokevirtual #29
256: ldc           #24
258: invokevirtual #25
261: invokevirtual #27
264: iload         5
266: iconst_3
267: if_icmpne     274
270: iconst_1
271: goto          275
274: iconst_0
275: invokestatic  #31
278: new           #22
281: dup
282: invokespecial #23
285: ldc           #24
287: invokevirtual #25
290: iload         6
292: invokevirtual #29
295: ldc           #30
297: invokevirtual #25
300: iconst_3
301: invokevirtual #29
304: ldc           #24
306: invokevirtual #25
309: invokevirtual #27
312: iload         6
314: iconst_3
315: if_icmpne     322
318: iconst_1
319: goto          323
322: iconst_0
323: invokestatic  #31
326: new           #22
329: dup
330: invokespecial #23
333: ldc           #24
335: invokevirtual #25
338: iload         7
340: invokevirtual #29
343: ldc           #30
345: invokevirtual #25
348: bipush        52
350: invokevirtual #29
353: ldc           #24
355: invokevirtual #25
358: invokevirtual #27
361: iload         7
363: bipush        52
365: if_icmpne     372
368: iconst_1
369: goto          373
372: iconst_0
373: invokestatic  #31
376: new           #22
379: dup
380: invokespecial #23
383: ldc           #24
385: invokevirtual #25
388: iload         8
390: invokevirtual #29
393: ldc           #30
395: invokevirtual #25
398: iconst_3
399: invokevirtual #29
402: ldc           #24
404: invokevirtual #25
407: invokevirtual #27
410: iload         8
412: iconst_3
413: if_icmpne     420
416: iconst_1
417: goto          421
420: iconst_0
421: invokestatic  #31
424: return
Exception table:
from    to  target type
93   117   120   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0712
Start line: 4768
End line: 0
Method source code: 
    public void test0712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0712");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.defaultLongOptPrefix = "hi!";
        java.lang.String str3 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str4 = helpFormatter0.defaultNewLine;
        helpFormatter0.defaultWidth = (short) 100;
        java.lang.String str7 = helpFormatter0.getArgName();
        helpFormatter0.setSyntaxPrefix("          ");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!" + "'", str3, "hi!");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\n" + "'", str4, "\n");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "arg" + "'", str7, "arg");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #315
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #65
36: putfield      #52
39: aload_1
40: getfield      #52
43: astore_2
44: aload_1
45: getfield      #36
48: astore_3
49: aload_1
50: bipush        100
52: putfield      #57
55: aload_1
56: invokevirtual #83
59: astore        4
61: aload_1
62: ldc           #67
64: invokevirtual #39
67: new           #22
70: dup
71: invokespecial #23
74: ldc           #24
76: invokevirtual #25
79: aload_2
80: invokevirtual #25
83: ldc           #97
85: invokevirtual #25
88: invokevirtual #27
91: aload_2
92: ldc           #65
94: invokestatic  #28
97: new           #22
100: dup
101: invokespecial #23
104: ldc           #24
106: invokevirtual #25
109: aload_3
110: invokevirtual #25
113: ldc           #32
115: invokevirtual #25
118: invokevirtual #27
121: aload_3
122: ldc           #33
124: invokestatic  #28
127: new           #22
130: dup
131: invokespecial #23
134: ldc           #24
136: invokevirtual #25
139: aload         4
141: invokevirtual #25
144: ldc           #79
146: invokevirtual #25
149: invokevirtual #27
152: aload         4
154: ldc           #78
156: invokestatic  #28
159: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0713
Start line: 4784
End line: 0
Method source code: 
    public void test0713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0713");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        int int6 = helpFormatter0.defaultWidth;
        java.lang.String str7 = helpFormatter0.getLongOptPrefix();
        java.lang.String str8 = helpFormatter0.getLongOptPrefix();
        helpFormatter0.setLongOptSeparator("hi!");
        int int11 = helpFormatter0.getWidth();
        java.lang.String str13 = helpFormatter0.rtrim("                                                    ");
        helpFormatter0.setLongOptPrefix("");
        java.lang.String str16 = helpFormatter0.defaultSyntaxPrefix;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "--" + "'", str5, "--");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 74 + "'", int6 == 74);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "--" + "'", str7, "--");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "--" + "'", str8, "--");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 74 + "'", int11 == 74);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "usage: " + "'", str16, "usage: ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #316
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: getfield      #42
48: astore_3
49: aload_1
50: getfield      #52
53: astore        4
55: aload_1
56: getfield      #57
59: istore        5
61: aload_1
62: invokevirtual #53
65: astore        6
67: aload_1
68: invokevirtual #53
71: astore        7
73: aload_1
74: ldc           #65
76: invokevirtual #74
79: aload_1
80: invokevirtual #66
83: istore        8
85: aload_1
86: ldc           #77
88: invokevirtual #12
91: astore        9
93: aload_1
94: ldc           #11
96: invokevirtual #43
99: aload_1
100: getfield      #45
103: astore        10
105: new           #22
108: dup
109: invokespecial #23
112: ldc           #24
114: invokevirtual #25
117: iload_2
118: invokevirtual #29
121: ldc           #30
123: invokevirtual #25
126: iconst_1
127: invokevirtual #29
130: ldc           #24
132: invokevirtual #25
135: invokevirtual #27
138: iload_2
139: iconst_1
140: if_icmpne     147
143: iconst_1
144: goto          148
147: iconst_0
148: invokestatic  #31
151: new           #22
154: dup
155: invokespecial #23
158: ldc           #24
160: invokevirtual #25
163: aload_3
164: invokevirtual #25
167: ldc           #48
169: invokevirtual #25
172: invokevirtual #27
175: aload_3
176: ldc           #49
178: invokestatic  #28
181: new           #22
184: dup
185: invokespecial #23
188: ldc           #24
190: invokevirtual #25
193: aload         4
195: invokevirtual #25
198: ldc           #62
200: invokevirtual #25
203: invokevirtual #27
206: aload         4
208: ldc           #63
210: invokestatic  #28
213: new           #22
216: dup
217: invokespecial #23
220: ldc           #24
222: invokevirtual #25
225: iload         5
227: invokevirtual #29
230: ldc           #30
232: invokevirtual #25
235: bipush        74
237: invokevirtual #29
240: ldc           #24
242: invokevirtual #25
245: invokevirtual #27
248: iload         5
250: bipush        74
252: if_icmpne     259
255: iconst_1
256: goto          260
259: iconst_0
260: invokestatic  #31
263: new           #22
266: dup
267: invokespecial #23
270: ldc           #24
272: invokevirtual #25
275: aload         6
277: invokevirtual #25
280: ldc           #62
282: invokevirtual #25
285: invokevirtual #27
288: aload         6
290: ldc           #63
292: invokestatic  #28
295: new           #22
298: dup
299: invokespecial #23
302: ldc           #24
304: invokevirtual #25
307: aload         7
309: invokevirtual #25
312: ldc           #62
314: invokevirtual #25
317: invokevirtual #27
320: aload         7
322: ldc           #63
324: invokestatic  #28
327: new           #22
330: dup
331: invokespecial #23
334: ldc           #24
336: invokevirtual #25
339: iload         8
341: invokevirtual #29
344: ldc           #30
346: invokevirtual #25
349: bipush        74
351: invokevirtual #29
354: ldc           #24
356: invokevirtual #25
359: invokevirtual #27
362: iload         8
364: bipush        74
366: if_icmpne     373
369: iconst_1
370: goto          374
373: iconst_0
374: invokestatic  #31
377: new           #22
380: dup
381: invokespecial #23
384: ldc           #24
386: invokevirtual #25
389: aload         9
391: invokevirtual #25
394: ldc           #26
396: invokevirtual #25
399: invokevirtual #27
402: aload         9
404: ldc           #11
406: invokestatic  #28
409: new           #22
412: dup
413: invokespecial #23
416: ldc           #24
418: invokevirtual #25
421: aload         10
423: invokevirtual #25
426: ldc           #104
428: invokevirtual #25
431: invokevirtual #27
434: aload         10
436: ldc           #46
438: invokestatic  #28
441: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0714
Start line: 4812
End line: 0
Method source code: 
    public void test0714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0714");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        java.lang.String str6 = helpFormatter0.rtrim("");
        int int7 = helpFormatter0.getDescPadding();
        helpFormatter0.defaultWidth = 0;
        java.util.Comparator comparator10 = helpFormatter0.optionComparator;
        java.lang.String str12 = helpFormatter0.rtrim("");
        java.lang.String str13 = helpFormatter0.getNewLine();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 3 + "'", int7 == 3);
        org.junit.Assert.assertNotNull(comparator10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #317
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: getfield      #42
48: astore_3
49: aload_1
50: ldc           #11
52: invokevirtual #12
55: astore        4
57: aload_1
58: invokevirtual #13
61: istore        5
63: aload_1
64: iconst_0
65: putfield      #57
68: aload_1
69: getfield      #10
72: astore        6
74: aload_1
75: ldc           #11
77: invokevirtual #12
80: astore        7
82: aload_1
83: invokevirtual #16
86: astore        8
88: new           #22
91: dup
92: invokespecial #23
95: ldc           #24
97: invokevirtual #25
100: iload_2
101: invokevirtual #29
104: ldc           #30
106: invokevirtual #25
109: iconst_1
110: invokevirtual #29
113: ldc           #24
115: invokevirtual #25
118: invokevirtual #27
121: iload_2
122: iconst_1
123: if_icmpne     130
126: iconst_1
127: goto          131
130: iconst_0
131: invokestatic  #31
134: new           #22
137: dup
138: invokespecial #23
141: ldc           #24
143: invokevirtual #25
146: aload_3
147: invokevirtual #25
150: ldc           #48
152: invokevirtual #25
155: invokevirtual #27
158: aload_3
159: ldc           #49
161: invokestatic  #28
164: new           #22
167: dup
168: invokespecial #23
171: ldc           #24
173: invokevirtual #25
176: aload         4
178: invokevirtual #25
181: ldc           #26
183: invokevirtual #25
186: invokevirtual #27
189: aload         4
191: ldc           #11
193: invokestatic  #28
196: new           #22
199: dup
200: invokespecial #23
203: ldc           #24
205: invokevirtual #25
208: iload         5
210: invokevirtual #29
213: ldc           #30
215: invokevirtual #25
218: iconst_3
219: invokevirtual #29
222: ldc           #24
224: invokevirtual #25
227: invokevirtual #27
230: iload         5
232: iconst_3
233: if_icmpne     240
236: iconst_1
237: goto          241
240: iconst_0
241: invokestatic  #31
244: aload         6
246: invokestatic  #21
249: new           #22
252: dup
253: invokespecial #23
256: ldc           #24
258: invokevirtual #25
261: aload         7
263: invokevirtual #25
266: ldc           #26
268: invokevirtual #25
271: invokevirtual #27
274: aload         7
276: ldc           #11
278: invokestatic  #28
281: new           #22
284: dup
285: invokespecial #23
288: ldc           #24
290: invokevirtual #25
293: aload         8
295: invokevirtual #25
298: ldc           #26
300: invokevirtual #25
303: invokevirtual #27
306: aload         8
308: ldc           #11
310: invokestatic  #28
313: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0715
Start line: 4835
End line: 0
Method source code: 
    public void test0715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0715");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        int int6 = helpFormatter0.getLeftPadding();
        helpFormatter0.setLongOptSeparator("\n");
        java.lang.String str9 = helpFormatter0.getLongOptPrefix();
        java.lang.String str10 = helpFormatter0.getLongOptPrefix();
        int int11 = helpFormatter0.getWidth();
        org.apache.commons.cli.HelpFormatter helpFormatter12 = new org.apache.commons.cli.HelpFormatter();
        int int13 = helpFormatter12.getLeftPadding();
        helpFormatter12.defaultNewLine = "";
        helpFormatter12.defaultDescPad = '4';
        helpFormatter12.setNewLine("");
        helpFormatter12.defaultWidth = '4';
        org.apache.commons.cli.HelpFormatter helpFormatter22 = new org.apache.commons.cli.HelpFormatter();
        int int23 = helpFormatter22.getLeftPadding();
        java.lang.String str24 = helpFormatter22.defaultLongOptPrefix;
        java.lang.String str25 = helpFormatter22.getOptPrefix();
        java.util.Comparator comparator26 = helpFormatter22.optionComparator;
        java.util.Comparator comparator27 = helpFormatter22.optionComparator;
        helpFormatter12.optionComparator = comparator27;
        helpFormatter0.optionComparator = comparator27;
        int int30 = helpFormatter0.getWidth();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 74 + "'", int11 == 74);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "--" + "'", str24, "--");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "-" + "'", str25, "-");
        org.junit.Assert.assertNotNull(comparator26);
        org.junit.Assert.assertNotNull(comparator27);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 74 + "'", int30 == 74);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #318
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #11
36: invokevirtual #51
39: aload_1
40: ldc           #11
42: putfield      #52
45: aload_1
46: getfield      #52
49: astore_2
50: aload_1
51: invokevirtual #35
54: istore_3
55: aload_1
56: ldc           #33
58: invokevirtual #74
61: aload_1
62: invokevirtual #53
65: astore        4
67: aload_1
68: invokevirtual #53
71: astore        5
73: aload_1
74: invokevirtual #66
77: istore        6
79: new           #8
82: dup
83: invokespecial #9
86: astore        7
88: aload         7
90: invokevirtual #35
93: istore        8
95: aload         7
97: ldc           #11
99: putfield      #36
102: aload         7
104: bipush        52
106: putfield      #44
109: aload         7
111: ldc           #11
113: invokevirtual #88
116: aload         7
118: bipush        52
120: putfield      #57
123: new           #8
126: dup
127: invokespecial #9
130: astore        9
132: aload         9
134: invokevirtual #35
137: istore        10
139: aload         9
141: getfield      #52
144: astore        11
146: aload         9
148: invokevirtual #73
151: astore        12
153: aload         9
155: getfield      #10
158: astore        13
160: aload         9
162: getfield      #10
165: astore        14
167: aload         7
169: aload         14
171: putfield      #10
174: aload_1
175: aload         14
177: putfield      #10
180: aload_1
181: invokevirtual #66
184: istore        15
186: new           #22
189: dup
190: invokespecial #23
193: ldc           #24
195: invokevirtual #25
198: aload_2
199: invokevirtual #25
202: ldc           #26
204: invokevirtual #25
207: invokevirtual #27
210: aload_2
211: ldc           #11
213: invokestatic  #28
216: new           #22
219: dup
220: invokespecial #23
223: ldc           #24
225: invokevirtual #25
228: iload_3
229: invokevirtual #29
232: ldc           #30
234: invokevirtual #25
237: iconst_1
238: invokevirtual #29
241: ldc           #24
243: invokevirtual #25
246: invokevirtual #27
249: iload_3
250: iconst_1
251: if_icmpne     258
254: iconst_1
255: goto          259
258: iconst_0
259: invokestatic  #31
262: new           #22
265: dup
266: invokespecial #23
269: ldc           #24
271: invokevirtual #25
274: aload         4
276: invokevirtual #25
279: ldc           #26
281: invokevirtual #25
284: invokevirtual #27
287: aload         4
289: ldc           #11
291: invokestatic  #28
294: new           #22
297: dup
298: invokespecial #23
301: ldc           #24
303: invokevirtual #25
306: aload         5
308: invokevirtual #25
311: ldc           #26
313: invokevirtual #25
316: invokevirtual #27
319: aload         5
321: ldc           #11
323: invokestatic  #28
326: new           #22
329: dup
330: invokespecial #23
333: ldc           #24
335: invokevirtual #25
338: iload         6
340: invokevirtual #29
343: ldc           #30
345: invokevirtual #25
348: bipush        74
350: invokevirtual #29
353: ldc           #24
355: invokevirtual #25
358: invokevirtual #27
361: iload         6
363: bipush        74
365: if_icmpne     372
368: iconst_1
369: goto          373
372: iconst_0
373: invokestatic  #31
376: new           #22
379: dup
380: invokespecial #23
383: ldc           #24
385: invokevirtual #25
388: iload         8
390: invokevirtual #29
393: ldc           #30
395: invokevirtual #25
398: iconst_1
399: invokevirtual #29
402: ldc           #24
404: invokevirtual #25
407: invokevirtual #27
410: iload         8
412: iconst_1
413: if_icmpne     420
416: iconst_1
417: goto          421
420: iconst_0
421: invokestatic  #31
424: new           #22
427: dup
428: invokespecial #23
431: ldc           #24
433: invokevirtual #25
436: iload         10
438: invokevirtual #29
441: ldc           #30
443: invokevirtual #25
446: iconst_1
447: invokevirtual #29
450: ldc           #24
452: invokevirtual #25
455: invokevirtual #27
458: iload         10
460: iconst_1
461: if_icmpne     468
464: iconst_1
465: goto          469
468: iconst_0
469: invokestatic  #31
472: new           #22
475: dup
476: invokespecial #23
479: ldc           #24
481: invokevirtual #25
484: aload         11
486: invokevirtual #25
489: ldc           #62
491: invokevirtual #25
494: invokevirtual #27
497: aload         11
499: ldc           #63
501: invokestatic  #28
504: new           #22
507: dup
508: invokespecial #23
511: ldc           #24
513: invokevirtual #25
516: aload         12
518: invokevirtual #25
521: ldc           #48
523: invokevirtual #25
526: invokevirtual #27
529: aload         12
531: ldc           #49
533: invokestatic  #28
536: aload         13
538: invokestatic  #21
541: aload         14
543: invokestatic  #21
546: new           #22
549: dup
550: invokespecial #23
553: ldc           #24
555: invokevirtual #25
558: iload         15
560: invokevirtual #29
563: ldc           #30
565: invokevirtual #25
568: bipush        74
570: invokevirtual #29
573: ldc           #24
575: invokevirtual #25
578: invokevirtual #27
581: iload         15
583: bipush        74
585: if_icmpne     592
588: iconst_1
589: goto          593
592: iconst_0
593: invokestatic  #31
596: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0716
Start line: 4877
End line: 0
Method source code: 
    public void test0716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0716");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        org.apache.commons.cli.HelpFormatter helpFormatter4 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter4.setOptPrefix("");
        helpFormatter4.defaultLongOptPrefix = "";
        java.lang.String str9 = helpFormatter4.defaultLongOptPrefix;
        helpFormatter4.defaultDescPad = 0;
        org.apache.commons.cli.HelpFormatter helpFormatter12 = new org.apache.commons.cli.HelpFormatter();
        java.util.Comparator comparator13 = helpFormatter12.optionComparator;
        int int14 = helpFormatter12.getLeftPadding();
        int int15 = helpFormatter12.defaultLeftPad;
        java.lang.String str17 = helpFormatter12.createPadding((int) 'a');
        org.apache.commons.cli.HelpFormatter helpFormatter18 = new org.apache.commons.cli.HelpFormatter();
        int int19 = helpFormatter18.getLeftPadding();
        helpFormatter18.defaultNewLine = "";
        helpFormatter18.defaultDescPad = '4';
        helpFormatter18.setNewLine("");
        int int29 = helpFormatter18.findWrapPos("\n", (int) ' ', 3);
        java.util.Comparator comparator30 = helpFormatter18.optionComparator;
        helpFormatter12.setOptionComparator(comparator30);
        helpFormatter4.setOptionComparator(comparator30);
        helpFormatter0.optionComparator = comparator30;
        int int34 = helpFormatter0.defaultWidth;
        org.apache.commons.cli.HelpFormatter helpFormatter35 = new org.apache.commons.cli.HelpFormatter();
        int int36 = helpFormatter35.getLeftPadding();
        helpFormatter35.defaultNewLine = "";
        helpFormatter35.setDescPadding(10);
        java.lang.String str41 = helpFormatter35.getOptPrefix();
        java.lang.String str42 = helpFormatter35.getNewLine();
        helpFormatter35.defaultOptPrefix = "";
        helpFormatter35.setNewLine("");
        helpFormatter35.defaultSyntaxPrefix = "usage: ";
        java.lang.String str49 = helpFormatter35.getArgName();
        java.util.Comparator comparator50 = helpFormatter35.optionComparator;
        helpFormatter0.setOptionComparator(comparator50);
        helpFormatter0.setSyntaxPrefix("-");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(comparator13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "                                                                                                 " + "'", str17, "                                                                                                 ");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(comparator30);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 74 + "'", int34 == 74);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "-" + "'", str41, "-");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "arg" + "'", str49, "arg");
        org.junit.Assert.assertNotNull(comparator50);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #319
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: new           #8
47: dup
48: invokespecial #9
51: astore_3
52: aload_3
53: ldc           #11
55: invokevirtual #51
58: aload_3
59: ldc           #11
61: putfield      #52
64: aload_3
65: getfield      #52
68: astore        4
70: aload_3
71: iconst_0
72: putfield      #44
75: new           #8
78: dup
79: invokespecial #9
82: astore        5
84: aload         5
86: getfield      #10
89: astore        6
91: aload         5
93: invokevirtual #35
96: istore        7
98: aload         5
100: getfield      #40
103: istore        8
105: aload         5
107: bipush        97
109: invokevirtual #93
112: astore        9
114: new           #8
117: dup
118: invokespecial #9
121: astore        10
123: aload         10
125: invokevirtual #35
128: istore        11
130: aload         10
132: ldc           #11
134: putfield      #36
137: aload         10
139: bipush        52
141: putfield      #44
144: aload         10
146: ldc           #11
148: invokevirtual #88
151: aload         10
153: ldc           #33
155: bipush        32
157: iconst_3
158: invokevirtual #61
161: istore        12
163: aload         10
165: getfield      #10
168: astore        13
170: aload         5
172: aload         13
174: invokevirtual #99
177: aload_3
178: aload         13
180: invokevirtual #99
183: aload_1
184: aload         13
186: putfield      #10
189: aload_1
190: getfield      #57
193: istore        14
195: new           #8
198: dup
199: invokespecial #9
202: astore        15
204: aload         15
206: invokevirtual #35
209: istore        16
211: aload         15
213: ldc           #11
215: putfield      #36
218: aload         15
220: bipush        10
222: invokevirtual #37
225: aload         15
227: invokevirtual #73
230: astore        17
232: aload         15
234: invokevirtual #16
237: astore        18
239: aload         15
241: ldc           #11
243: putfield      #42
246: aload         15
248: ldc           #11
250: invokevirtual #88
253: aload         15
255: ldc           #46
257: putfield      #45
260: aload         15
262: invokevirtual #83
265: astore        19
267: aload         15
269: getfield      #10
272: astore        20
274: aload_1
275: aload         20
277: invokevirtual #99
280: aload_1
281: ldc           #49
283: invokevirtual #39
286: new           #22
289: dup
290: invokespecial #23
293: ldc           #24
295: invokevirtual #25
298: iload_2
299: invokevirtual #29
302: ldc           #30
304: invokevirtual #25
307: iconst_1
308: invokevirtual #29
311: ldc           #24
313: invokevirtual #25
316: invokevirtual #27
319: iload_2
320: iconst_1
321: if_icmpne     328
324: iconst_1
325: goto          329
328: iconst_0
329: invokestatic  #31
332: new           #22
335: dup
336: invokespecial #23
339: ldc           #24
341: invokevirtual #25
344: aload         4
346: invokevirtual #25
349: ldc           #26
351: invokevirtual #25
354: invokevirtual #27
357: aload         4
359: ldc           #11
361: invokestatic  #28
364: aload         6
366: invokestatic  #21
369: new           #22
372: dup
373: invokespecial #23
376: ldc           #24
378: invokevirtual #25
381: iload         7
383: invokevirtual #29
386: ldc           #30
388: invokevirtual #25
391: iconst_1
392: invokevirtual #29
395: ldc           #24
397: invokevirtual #25
400: invokevirtual #27
403: iload         7
405: iconst_1
406: if_icmpne     413
409: iconst_1
410: goto          414
413: iconst_0
414: invokestatic  #31
417: new           #22
420: dup
421: invokespecial #23
424: ldc           #24
426: invokevirtual #25
429: iload         8
431: invokevirtual #29
434: ldc           #30
436: invokevirtual #25
439: iconst_1
440: invokevirtual #29
443: ldc           #24
445: invokevirtual #25
448: invokevirtual #27
451: iload         8
453: iconst_1
454: if_icmpne     461
457: iconst_1
458: goto          462
461: iconst_0
462: invokestatic  #31
465: new           #22
468: dup
469: invokespecial #23
472: ldc           #24
474: invokevirtual #25
477: aload         9
479: invokevirtual #25
482: ldc           #142
484: invokevirtual #25
487: invokevirtual #27
490: aload         9
492: ldc           #14
494: invokestatic  #28
497: new           #22
500: dup
501: invokespecial #23
504: ldc           #24
506: invokevirtual #25
509: iload         11
511: invokevirtual #29
514: ldc           #30
516: invokevirtual #25
519: iconst_1
520: invokevirtual #29
523: ldc           #24
525: invokevirtual #25
528: invokevirtual #27
531: iload         11
533: iconst_1
534: if_icmpne     541
537: iconst_1
538: goto          542
541: iconst_0
542: invokestatic  #31
545: new           #22
548: dup
549: invokespecial #23
552: ldc           #24
554: invokevirtual #25
557: iload         12
559: invokevirtual #29
562: ldc           #30
564: invokevirtual #25
567: iconst_m1
568: invokevirtual #29
571: ldc           #24
573: invokevirtual #25
576: invokevirtual #27
579: iload         12
581: iconst_m1
582: if_icmpne     589
585: iconst_1
586: goto          590
589: iconst_0
590: invokestatic  #31
593: aload         13
595: invokestatic  #21
598: new           #22
601: dup
602: invokespecial #23
605: ldc           #24
607: invokevirtual #25
610: iload         14
612: invokevirtual #29
615: ldc           #30
617: invokevirtual #25
620: bipush        74
622: invokevirtual #29
625: ldc           #24
627: invokevirtual #25
630: invokevirtual #27
633: iload         14
635: bipush        74
637: if_icmpne     644
640: iconst_1
641: goto          645
644: iconst_0
645: invokestatic  #31
648: new           #22
651: dup
652: invokespecial #23
655: ldc           #24
657: invokevirtual #25
660: iload         16
662: invokevirtual #29
665: ldc           #30
667: invokevirtual #25
670: iconst_1
671: invokevirtual #29
674: ldc           #24
676: invokevirtual #25
679: invokevirtual #27
682: iload         16
684: iconst_1
685: if_icmpne     692
688: iconst_1
689: goto          693
692: iconst_0
693: invokestatic  #31
696: new           #22
699: dup
700: invokespecial #23
703: ldc           #24
705: invokevirtual #25
708: aload         17
710: invokevirtual #25
713: ldc           #48
715: invokevirtual #25
718: invokevirtual #27
721: aload         17
723: ldc           #49
725: invokestatic  #28
728: new           #22
731: dup
732: invokespecial #23
735: ldc           #24
737: invokevirtual #25
740: aload         18
742: invokevirtual #25
745: ldc           #26
747: invokevirtual #25
750: invokevirtual #27
753: aload         18
755: ldc           #11
757: invokestatic  #28
760: new           #22
763: dup
764: invokespecial #23
767: ldc           #24
769: invokevirtual #25
772: aload         19
774: invokevirtual #25
777: ldc           #79
779: invokevirtual #25
782: invokevirtual #27
785: aload         19
787: ldc           #78
789: invokestatic  #28
792: aload         20
794: invokestatic  #21
797: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0717
Start line: 4935
End line: 0
Method source code: 
    public void test0717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0717");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        java.lang.String str3 = helpFormatter0.getLongOptSeparator();
        helpFormatter0.setWidth(0);
        helpFormatter0.defaultNewLine = "          ";
        helpFormatter0.setOptPrefix("hi!");
        org.apache.commons.cli.HelpFormatter helpFormatter10 = new org.apache.commons.cli.HelpFormatter();
        int int11 = helpFormatter10.getLeftPadding();
        helpFormatter10.defaultNewLine = "";
        helpFormatter10.setDescPadding(10);
        java.lang.String str16 = helpFormatter10.defaultNewLine;
        helpFormatter10.setDescPadding(10);
        org.apache.commons.cli.HelpFormatter helpFormatter19 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter19.setOptPrefix("");
        helpFormatter19.defaultLongOptPrefix = "";
        java.lang.String str24 = helpFormatter19.defaultLongOptPrefix;
        java.lang.String str25 = helpFormatter19.getNewLine();
        java.util.Comparator comparator26 = helpFormatter19.getOptionComparator();
        helpFormatter10.optionComparator = comparator26;
        helpFormatter0.optionComparator = comparator26;
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + " " + "'", str3, " ");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "\n" + "'", str25, "\n");
        org.junit.Assert.assertNotNull(comparator26);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #320
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #11
36: invokevirtual #51
39: aload_1
40: invokevirtual #72
43: astore_2
44: aload_1
45: iconst_0
46: invokevirtual #90
49: aload_1
50: ldc           #67
52: putfield      #36
55: aload_1
56: ldc           #65
58: invokevirtual #51
61: new           #8
64: dup
65: invokespecial #9
68: astore_3
69: aload_3
70: invokevirtual #35
73: istore        4
75: aload_3
76: ldc           #11
78: putfield      #36
81: aload_3
82: bipush        10
84: invokevirtual #37
87: aload_3
88: getfield      #36
91: astore        5
93: aload_3
94: bipush        10
96: invokevirtual #37
99: new           #8
102: dup
103: invokespecial #9
106: astore        6
108: aload         6
110: ldc           #11
112: invokevirtual #51
115: aload         6
117: ldc           #11
119: putfield      #52
122: aload         6
124: getfield      #52
127: astore        7
129: aload         6
131: invokevirtual #16
134: astore        8
136: aload         6
138: invokevirtual #58
141: astore        9
143: aload_3
144: aload         9
146: putfield      #10
149: aload_1
150: aload         9
152: putfield      #10
155: new           #22
158: dup
159: invokespecial #23
162: ldc           #24
164: invokevirtual #25
167: aload_2
168: invokevirtual #25
171: ldc           #75
173: invokevirtual #25
176: invokevirtual #27
179: aload_2
180: ldc           #38
182: invokestatic  #28
185: new           #22
188: dup
189: invokespecial #23
192: ldc           #24
194: invokevirtual #25
197: iload         4
199: invokevirtual #29
202: ldc           #30
204: invokevirtual #25
207: iconst_1
208: invokevirtual #29
211: ldc           #24
213: invokevirtual #25
216: invokevirtual #27
219: iload         4
221: iconst_1
222: if_icmpne     229
225: iconst_1
226: goto          230
229: iconst_0
230: invokestatic  #31
233: new           #22
236: dup
237: invokespecial #23
240: ldc           #24
242: invokevirtual #25
245: aload         5
247: invokevirtual #25
250: ldc           #26
252: invokevirtual #25
255: invokevirtual #27
258: aload         5
260: ldc           #11
262: invokestatic  #28
265: new           #22
268: dup
269: invokespecial #23
272: ldc           #24
274: invokevirtual #25
277: aload         7
279: invokevirtual #25
282: ldc           #26
284: invokevirtual #25
287: invokevirtual #27
290: aload         7
292: ldc           #11
294: invokestatic  #28
297: new           #22
300: dup
301: invokespecial #23
304: ldc           #24
306: invokevirtual #25
309: aload         8
311: invokevirtual #25
314: ldc           #32
316: invokevirtual #25
319: invokevirtual #27
322: aload         8
324: ldc           #33
326: invokestatic  #28
329: aload         9
331: invokestatic  #21
334: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0718
Start line: 4967
End line: 0
Method source code: 
    public void test0718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0718");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.defaultLongOptPrefix = "hi!";
        java.lang.String str4 = helpFormatter0.createPadding(10);
        java.lang.String str5 = helpFormatter0.getSyntaxPrefix();
        helpFormatter0.setNewLine("");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "          " + "'", str4, "          ");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "usage: " + "'", str5, "usage: ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #321
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #65
36: putfield      #52
39: aload_1
40: bipush        10
42: invokevirtual #93
45: astore_2
46: aload_1
47: invokevirtual #89
50: astore_3
51: aload_1
52: ldc           #11
54: invokevirtual #88
57: new           #22
60: dup
61: invokespecial #23
64: ldc           #24
66: invokevirtual #25
69: aload_2
70: invokevirtual #25
73: ldc           #135
75: invokevirtual #25
78: invokevirtual #27
81: aload_2
82: ldc           #67
84: invokestatic  #28
87: new           #22
90: dup
91: invokespecial #23
94: ldc           #24
96: invokevirtual #25
99: aload_3
100: invokevirtual #25
103: ldc           #104
105: invokevirtual #25
108: invokevirtual #27
111: aload_3
112: ldc           #46
114: invokestatic  #28
117: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0719
Start line: 4980
End line: 0
Method source code: 
    public void test0719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0719");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        java.lang.String str3 = helpFormatter0.defaultNewLine;
        helpFormatter0.setLeftPadding((int) (byte) 100);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\n" + "'", str3, "\n");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #322
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #11
36: invokevirtual #51
39: aload_1
40: getfield      #36
43: astore_2
44: aload_1
45: bipush        100
47: invokevirtual #55
50: new           #22
53: dup
54: invokespecial #23
57: ldc           #24
59: invokevirtual #25
62: aload_2
63: invokevirtual #25
66: ldc           #32
68: invokevirtual #25
71: invokevirtual #27
74: aload_2
75: ldc           #33
77: invokestatic  #28
80: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0720
Start line: 4991
End line: 0
Method source code: 
    public void test0720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0720");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str6 = helpFormatter0.getNewLine();
        java.util.Comparator comparator7 = helpFormatter0.getOptionComparator();
        helpFormatter0.setDescPadding(3);
        int int10 = helpFormatter0.defaultLeftPad;
        int int11 = helpFormatter0.getWidth();
        java.lang.String str12 = helpFormatter0.defaultNewLine;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\n" + "'", str6, "\n");
        org.junit.Assert.assertNotNull(comparator7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 74 + "'", int11 == 74);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\n" + "'", str12, "\n");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #323
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #11
36: invokevirtual #51
39: aload_1
40: ldc           #11
42: putfield      #52
45: aload_1
46: getfield      #52
49: astore_2
50: aload_1
51: invokevirtual #16
54: astore_3
55: aload_1
56: invokevirtual #58
59: astore        4
61: aload_1
62: iconst_3
63: invokevirtual #37
66: aload_1
67: getfield      #40
70: istore        5
72: aload_1
73: invokevirtual #66
76: istore        6
78: aload_1
79: getfield      #36
82: astore        7
84: new           #22
87: dup
88: invokespecial #23
91: ldc           #24
93: invokevirtual #25
96: aload_2
97: invokevirtual #25
100: ldc           #26
102: invokevirtual #25
105: invokevirtual #27
108: aload_2
109: ldc           #11
111: invokestatic  #28
114: new           #22
117: dup
118: invokespecial #23
121: ldc           #24
123: invokevirtual #25
126: aload_3
127: invokevirtual #25
130: ldc           #32
132: invokevirtual #25
135: invokevirtual #27
138: aload_3
139: ldc           #33
141: invokestatic  #28
144: aload         4
146: invokestatic  #21
149: new           #22
152: dup
153: invokespecial #23
156: ldc           #24
158: invokevirtual #25
161: iload         5
163: invokevirtual #29
166: ldc           #30
168: invokevirtual #25
171: iconst_1
172: invokevirtual #29
175: ldc           #24
177: invokevirtual #25
180: invokevirtual #27
183: iload         5
185: iconst_1
186: if_icmpne     193
189: iconst_1
190: goto          194
193: iconst_0
194: invokestatic  #31
197: new           #22
200: dup
201: invokespecial #23
204: ldc           #24
206: invokevirtual #25
209: iload         6
211: invokevirtual #29
214: ldc           #30
216: invokevirtual #25
219: bipush        74
221: invokevirtual #29
224: ldc           #24
226: invokevirtual #25
229: invokevirtual #27
232: iload         6
234: bipush        74
236: if_icmpne     243
239: iconst_1
240: goto          244
243: iconst_0
244: invokestatic  #31
247: new           #22
250: dup
251: invokespecial #23
254: ldc           #24
256: invokevirtual #25
259: aload         7
261: invokevirtual #25
264: ldc           #32
266: invokevirtual #25
269: invokevirtual #27
272: aload         7
274: ldc           #33
276: invokestatic  #28
279: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0721
Start line: 5013
End line: 0
Method source code: 
    public void test0721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0721");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str3 = helpFormatter0.getOptPrefix();
        java.util.Comparator comparator4 = helpFormatter0.optionComparator;
        java.lang.String str5 = helpFormatter0.getOptPrefix();
        helpFormatter0.setSyntaxPrefix("-");
        java.io.PrintWriter printWriter8 = null;
        try {
            helpFormatter0.printWrapped(printWriter8, (int) (short) 100, " ");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "--" + "'", str2, "--");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "-" + "'", str3, "-");
        org.junit.Assert.assertNotNull(comparator4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "-" + "'", str5, "-");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #324
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: getfield      #52
42: astore_3
43: aload_1
44: invokevirtual #73
47: astore        4
49: aload_1
50: getfield      #10
53: astore        5
55: aload_1
56: invokevirtual #73
59: astore        6
61: aload_1
62: ldc           #49
64: invokevirtual #39
67: aconst_null
68: astore        7
70: aload_1
71: aload         7
73: bipush        100
75: ldc           #38
77: invokevirtual #180
80: ldc           #18
82: invokestatic  #19
85: goto          90
88: astore        8
90: new           #22
93: dup
94: invokespecial #23
97: ldc           #24
99: invokevirtual #25
102: iload_2
103: invokevirtual #29
106: ldc           #30
108: invokevirtual #25
111: iconst_1
112: invokevirtual #29
115: ldc           #24
117: invokevirtual #25
120: invokevirtual #27
123: iload_2
124: iconst_1
125: if_icmpne     132
128: iconst_1
129: goto          133
132: iconst_0
133: invokestatic  #31
136: new           #22
139: dup
140: invokespecial #23
143: ldc           #24
145: invokevirtual #25
148: aload_3
149: invokevirtual #25
152: ldc           #62
154: invokevirtual #25
157: invokevirtual #27
160: aload_3
161: ldc           #63
163: invokestatic  #28
166: new           #22
169: dup
170: invokespecial #23
173: ldc           #24
175: invokevirtual #25
178: aload         4
180: invokevirtual #25
183: ldc           #48
185: invokevirtual #25
188: invokevirtual #27
191: aload         4
193: ldc           #49
195: invokestatic  #28
198: aload         5
200: invokestatic  #21
203: new           #22
206: dup
207: invokespecial #23
210: ldc           #24
212: invokevirtual #25
215: aload         6
217: invokevirtual #25
220: ldc           #48
222: invokevirtual #25
225: invokevirtual #27
228: aload         6
230: ldc           #49
232: invokestatic  #28
235: return
Exception table:
from    to  target type
70    85    88   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0722
Start line: 5039
End line: 0
Method source code: 
    public void test0722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0722");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.getArgName();
        helpFormatter0.setSyntaxPrefix("usage: ");
        java.lang.String str5 = helpFormatter0.getArgName();
        int int6 = helpFormatter0.getWidth();
        java.lang.String str7 = helpFormatter0.getLongOptPrefix();
        try {
            int int11 = helpFormatter0.findWrapPos("-", (int) (byte) 1, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "arg" + "'", str2, "arg");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "arg" + "'", str5, "arg");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 74 + "'", int6 == 74);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "--" + "'", str7, "--");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #325
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: invokevirtual #83
42: astore_3
43: aload_1
44: ldc           #46
46: invokevirtual #39
49: aload_1
50: invokevirtual #83
53: astore        4
55: aload_1
56: invokevirtual #66
59: istore        5
61: aload_1
62: invokevirtual #53
65: astore        6
67: aload_1
68: ldc           #49
70: iconst_1
71: iconst_m1
72: invokevirtual #61
75: istore        7
77: ldc_w         #326
80: invokestatic  #19
83: goto          88
86: astore        7
88: new           #22
91: dup
92: invokespecial #23
95: ldc           #24
97: invokevirtual #25
100: iload_2
101: invokevirtual #29
104: ldc           #30
106: invokevirtual #25
109: iconst_1
110: invokevirtual #29
113: ldc           #24
115: invokevirtual #25
118: invokevirtual #27
121: iload_2
122: iconst_1
123: if_icmpne     130
126: iconst_1
127: goto          131
130: iconst_0
131: invokestatic  #31
134: new           #22
137: dup
138: invokespecial #23
141: ldc           #24
143: invokevirtual #25
146: aload_3
147: invokevirtual #25
150: ldc           #79
152: invokevirtual #25
155: invokevirtual #27
158: aload_3
159: ldc           #78
161: invokestatic  #28
164: new           #22
167: dup
168: invokespecial #23
171: ldc           #24
173: invokevirtual #25
176: aload         4
178: invokevirtual #25
181: ldc           #79
183: invokevirtual #25
186: invokevirtual #27
189: aload         4
191: ldc           #78
193: invokestatic  #28
196: new           #22
199: dup
200: invokespecial #23
203: ldc           #24
205: invokevirtual #25
208: iload         5
210: invokevirtual #29
213: ldc           #30
215: invokevirtual #25
218: bipush        74
220: invokevirtual #29
223: ldc           #24
225: invokevirtual #25
228: invokevirtual #27
231: iload         5
233: bipush        74
235: if_icmpne     242
238: iconst_1
239: goto          243
242: iconst_0
243: invokestatic  #31
246: new           #22
249: dup
250: invokespecial #23
253: ldc           #24
255: invokevirtual #25
258: aload         6
260: invokevirtual #25
263: ldc           #62
265: invokevirtual #25
268: invokevirtual #27
271: aload         6
273: ldc           #63
275: invokestatic  #28
278: return
Exception table:
from    to  target type
67    83    86   Class java/lang/StringIndexOutOfBoundsException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0723
Start line: 5064
End line: 0
Method source code: 
    public void test0723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0723");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        java.lang.String str6 = helpFormatter0.rtrim("");
        int int7 = helpFormatter0.getDescPadding();
        int int8 = helpFormatter0.getDescPadding();
        java.lang.String str9 = helpFormatter0.getArgName();
        helpFormatter0.setDescPadding(0);
        helpFormatter0.defaultDescPad = (short) 100;
        java.util.Comparator comparator14 = helpFormatter0.optionComparator;
        java.lang.String str16 = helpFormatter0.createPadding(52);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 3 + "'", int7 == 3);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 3 + "'", int8 == 3);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "arg" + "'", str9, "arg");
        org.junit.Assert.assertNotNull(comparator14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "                                                    " + "'", str16, "                                                    ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #327
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: getfield      #42
48: astore_3
49: aload_1
50: ldc           #11
52: invokevirtual #12
55: astore        4
57: aload_1
58: invokevirtual #13
61: istore        5
63: aload_1
64: invokevirtual #13
67: istore        6
69: aload_1
70: invokevirtual #83
73: astore        7
75: aload_1
76: iconst_0
77: invokevirtual #37
80: aload_1
81: bipush        100
83: putfield      #44
86: aload_1
87: getfield      #10
90: astore        8
92: aload_1
93: bipush        52
95: invokevirtual #93
98: astore        9
100: new           #22
103: dup
104: invokespecial #23
107: ldc           #24
109: invokevirtual #25
112: iload_2
113: invokevirtual #29
116: ldc           #30
118: invokevirtual #25
121: iconst_1
122: invokevirtual #29
125: ldc           #24
127: invokevirtual #25
130: invokevirtual #27
133: iload_2
134: iconst_1
135: if_icmpne     142
138: iconst_1
139: goto          143
142: iconst_0
143: invokestatic  #31
146: new           #22
149: dup
150: invokespecial #23
153: ldc           #24
155: invokevirtual #25
158: aload_3
159: invokevirtual #25
162: ldc           #48
164: invokevirtual #25
167: invokevirtual #27
170: aload_3
171: ldc           #49
173: invokestatic  #28
176: new           #22
179: dup
180: invokespecial #23
183: ldc           #24
185: invokevirtual #25
188: aload         4
190: invokevirtual #25
193: ldc           #26
195: invokevirtual #25
198: invokevirtual #27
201: aload         4
203: ldc           #11
205: invokestatic  #28
208: new           #22
211: dup
212: invokespecial #23
215: ldc           #24
217: invokevirtual #25
220: iload         5
222: invokevirtual #29
225: ldc           #30
227: invokevirtual #25
230: iconst_3
231: invokevirtual #29
234: ldc           #24
236: invokevirtual #25
239: invokevirtual #27
242: iload         5
244: iconst_3
245: if_icmpne     252
248: iconst_1
249: goto          253
252: iconst_0
253: invokestatic  #31
256: new           #22
259: dup
260: invokespecial #23
263: ldc           #24
265: invokevirtual #25
268: iload         6
270: invokevirtual #29
273: ldc           #30
275: invokevirtual #25
278: iconst_3
279: invokevirtual #29
282: ldc           #24
284: invokevirtual #25
287: invokevirtual #27
290: iload         6
292: iconst_3
293: if_icmpne     300
296: iconst_1
297: goto          301
300: iconst_0
301: invokestatic  #31
304: new           #22
307: dup
308: invokespecial #23
311: ldc           #24
313: invokevirtual #25
316: aload         7
318: invokevirtual #25
321: ldc           #79
323: invokevirtual #25
326: invokevirtual #27
329: aload         7
331: ldc           #78
333: invokestatic  #28
336: aload         8
338: invokestatic  #21
341: new           #22
344: dup
345: invokespecial #23
348: ldc           #24
350: invokevirtual #25
353: aload         9
355: invokevirtual #25
358: ldc           #161
360: invokevirtual #25
363: invokevirtual #27
366: aload         9
368: ldc           #77
370: invokestatic  #28
373: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0724
Start line: 5090
End line: 0
Method source code: 
    public void test0724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0724");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        helpFormatter0.defaultDescPad = 0;
        int int8 = helpFormatter0.getWidth();
        helpFormatter0.defaultOptPrefix = " ";
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 74 + "'", int8 == 74);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #328
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #11
36: invokevirtual #51
39: aload_1
40: ldc           #11
42: putfield      #52
45: aload_1
46: getfield      #52
49: astore_2
50: aload_1
51: iconst_0
52: putfield      #44
55: aload_1
56: invokevirtual #66
59: istore_3
60: aload_1
61: ldc           #38
63: putfield      #42
66: new           #22
69: dup
70: invokespecial #23
73: ldc           #24
75: invokevirtual #25
78: aload_2
79: invokevirtual #25
82: ldc           #26
84: invokevirtual #25
87: invokevirtual #27
90: aload_2
91: ldc           #11
93: invokestatic  #28
96: new           #22
99: dup
100: invokespecial #23
103: ldc           #24
105: invokevirtual #25
108: iload_3
109: invokevirtual #29
112: ldc           #30
114: invokevirtual #25
117: bipush        74
119: invokevirtual #29
122: ldc           #24
124: invokevirtual #25
127: invokevirtual #27
130: iload_3
131: bipush        74
133: if_icmpne     140
136: iconst_1
137: goto          141
140: iconst_0
141: invokestatic  #31
144: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0725
Start line: 5105
End line: 0
Method source code: 
    public void test0725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0725");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        java.lang.String str6 = helpFormatter0.rtrim("");
        java.lang.String str8 = helpFormatter0.rtrim("-");
        java.lang.String str9 = helpFormatter0.getLongOptSeparator();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setNewLine(" ");
        java.lang.StringBuffer stringBuffer14 = null;
        try {
            java.lang.StringBuffer stringBuffer18 = helpFormatter0.renderWrappedText(stringBuffer14, (int) (short) 1, 3, "                                ");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "-" + "'", str8, "-");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + " " + "'", str9, " ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #329
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: getfield      #42
48: astore_3
49: aload_1
50: ldc           #11
52: invokevirtual #12
55: astore        4
57: aload_1
58: ldc           #49
60: invokevirtual #12
63: astore        5
65: aload_1
66: invokevirtual #72
69: astore        6
71: aload_1
72: ldc           #11
74: putfield      #36
77: aload_1
78: ldc           #38
80: invokevirtual #88
83: aconst_null
84: astore        7
86: aload_1
87: aload         7
89: iconst_1
90: iconst_3
91: ldc           #95
93: invokevirtual #123
96: astore        8
98: ldc           #18
100: invokestatic  #19
103: goto          108
106: astore        8
108: new           #22
111: dup
112: invokespecial #23
115: ldc           #24
117: invokevirtual #25
120: iload_2
121: invokevirtual #29
124: ldc           #30
126: invokevirtual #25
129: iconst_1
130: invokevirtual #29
133: ldc           #24
135: invokevirtual #25
138: invokevirtual #27
141: iload_2
142: iconst_1
143: if_icmpne     150
146: iconst_1
147: goto          151
150: iconst_0
151: invokestatic  #31
154: new           #22
157: dup
158: invokespecial #23
161: ldc           #24
163: invokevirtual #25
166: aload_3
167: invokevirtual #25
170: ldc           #48
172: invokevirtual #25
175: invokevirtual #27
178: aload_3
179: ldc           #49
181: invokestatic  #28
184: new           #22
187: dup
188: invokespecial #23
191: ldc           #24
193: invokevirtual #25
196: aload         4
198: invokevirtual #25
201: ldc           #26
203: invokevirtual #25
206: invokevirtual #27
209: aload         4
211: ldc           #11
213: invokestatic  #28
216: new           #22
219: dup
220: invokespecial #23
223: ldc           #24
225: invokevirtual #25
228: aload         5
230: invokevirtual #25
233: ldc           #48
235: invokevirtual #25
238: invokevirtual #27
241: aload         5
243: ldc           #49
245: invokestatic  #28
248: new           #22
251: dup
252: invokespecial #23
255: ldc           #24
257: invokevirtual #25
260: aload         6
262: invokevirtual #25
265: ldc           #75
267: invokevirtual #25
270: invokevirtual #27
273: aload         6
275: ldc           #38
277: invokestatic  #28
280: return
Exception table:
from    to  target type
86   103   106   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0726
Start line: 5133
End line: 0
Method source code: 
    public void test0726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0726");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        helpFormatter0.defaultArgName = "hi!";
        java.util.Comparator comparator8 = helpFormatter0.getOptionComparator();
        int int9 = helpFormatter0.getDescPadding();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(comparator8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10 + "'", int9 == 10);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #330
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: bipush        10
47: invokevirtual #37
50: aload_1
51: ldc           #65
53: putfield      #15
56: aload_1
57: invokevirtual #58
60: astore_3
61: aload_1
62: invokevirtual #13
65: istore        4
67: new           #22
70: dup
71: invokespecial #23
74: ldc           #24
76: invokevirtual #25
79: iload_2
80: invokevirtual #29
83: ldc           #30
85: invokevirtual #25
88: iconst_1
89: invokevirtual #29
92: ldc           #24
94: invokevirtual #25
97: invokevirtual #27
100: iload_2
101: iconst_1
102: if_icmpne     109
105: iconst_1
106: goto          110
109: iconst_0
110: invokestatic  #31
113: aload_3
114: invokestatic  #21
117: new           #22
120: dup
121: invokespecial #23
124: ldc           #24
126: invokevirtual #25
129: iload         4
131: invokevirtual #29
134: ldc           #30
136: invokevirtual #25
139: bipush        10
141: invokevirtual #29
144: ldc           #24
146: invokevirtual #25
149: invokevirtual #27
152: iload         4
154: bipush        10
156: if_icmpne     163
159: iconst_1
160: goto          164
163: iconst_0
164: invokestatic  #31
167: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0727
Start line: 5149
End line: 0
Method source code: 
    public void test0727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0727");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        java.lang.String str6 = helpFormatter0.rtrim("");
        int int7 = helpFormatter0.getDescPadding();
        int int8 = helpFormatter0.getDescPadding();
        java.lang.String str9 = helpFormatter0.getArgName();
        helpFormatter0.setDescPadding(0);
        helpFormatter0.defaultDescPad = (short) 100;
        java.util.Comparator comparator14 = helpFormatter0.optionComparator;
        java.lang.String str15 = helpFormatter0.getNewLine();
        java.io.PrintWriter printWriter16 = null;
        org.apache.commons.cli.Options options18 = null;
        try {
            helpFormatter0.printOptions(printWriter16, 52, options18, 0, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 3 + "'", int7 == 3);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 3 + "'", int8 == 3);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "arg" + "'", str9, "arg");
        org.junit.Assert.assertNotNull(comparator14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #331
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: getfield      #42
48: astore_3
49: aload_1
50: ldc           #11
52: invokevirtual #12
55: astore        4
57: aload_1
58: invokevirtual #13
61: istore        5
63: aload_1
64: invokevirtual #13
67: istore        6
69: aload_1
70: invokevirtual #83
73: astore        7
75: aload_1
76: iconst_0
77: invokevirtual #37
80: aload_1
81: bipush        100
83: putfield      #44
86: aload_1
87: getfield      #10
90: astore        8
92: aload_1
93: invokevirtual #16
96: astore        9
98: aconst_null
99: astore        10
101: aconst_null
102: astore        11
104: aload_1
105: aload         10
107: bipush        52
109: aload         11
111: iconst_0
112: bipush        100
114: invokevirtual #17
117: ldc           #18
119: invokestatic  #19
122: goto          127
125: astore        12
127: new           #22
130: dup
131: invokespecial #23
134: ldc           #24
136: invokevirtual #25
139: iload_2
140: invokevirtual #29
143: ldc           #30
145: invokevirtual #25
148: iconst_1
149: invokevirtual #29
152: ldc           #24
154: invokevirtual #25
157: invokevirtual #27
160: iload_2
161: iconst_1
162: if_icmpne     169
165: iconst_1
166: goto          170
169: iconst_0
170: invokestatic  #31
173: new           #22
176: dup
177: invokespecial #23
180: ldc           #24
182: invokevirtual #25
185: aload_3
186: invokevirtual #25
189: ldc           #48
191: invokevirtual #25
194: invokevirtual #27
197: aload_3
198: ldc           #49
200: invokestatic  #28
203: new           #22
206: dup
207: invokespecial #23
210: ldc           #24
212: invokevirtual #25
215: aload         4
217: invokevirtual #25
220: ldc           #26
222: invokevirtual #25
225: invokevirtual #27
228: aload         4
230: ldc           #11
232: invokestatic  #28
235: new           #22
238: dup
239: invokespecial #23
242: ldc           #24
244: invokevirtual #25
247: iload         5
249: invokevirtual #29
252: ldc           #30
254: invokevirtual #25
257: iconst_3
258: invokevirtual #29
261: ldc           #24
263: invokevirtual #25
266: invokevirtual #27
269: iload         5
271: iconst_3
272: if_icmpne     279
275: iconst_1
276: goto          280
279: iconst_0
280: invokestatic  #31
283: new           #22
286: dup
287: invokespecial #23
290: ldc           #24
292: invokevirtual #25
295: iload         6
297: invokevirtual #29
300: ldc           #30
302: invokevirtual #25
305: iconst_3
306: invokevirtual #29
309: ldc           #24
311: invokevirtual #25
314: invokevirtual #27
317: iload         6
319: iconst_3
320: if_icmpne     327
323: iconst_1
324: goto          328
327: iconst_0
328: invokestatic  #31
331: new           #22
334: dup
335: invokespecial #23
338: ldc           #24
340: invokevirtual #25
343: aload         7
345: invokevirtual #25
348: ldc           #79
350: invokevirtual #25
353: invokevirtual #27
356: aload         7
358: ldc           #78
360: invokestatic  #28
363: aload         8
365: invokestatic  #21
368: new           #22
371: dup
372: invokespecial #23
375: ldc           #24
377: invokevirtual #25
380: aload         9
382: invokevirtual #25
385: ldc           #26
387: invokevirtual #25
390: invokevirtual #27
393: aload         9
395: ldc           #11
397: invokestatic  #28
400: return
Exception table:
from    to  target type
104   122   125   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0728
Start line: 5184
End line: 0
Method source code: 
    public void test0728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0728");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setLongOptPrefix(" ");
        helpFormatter0.defaultDescPad = (short) 10;
        helpFormatter0.setLongOptPrefix("                                ");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #332
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: getfield      #42
48: astore_3
49: aload_1
50: ldc           #38
52: invokevirtual #43
55: aload_1
56: bipush        10
58: putfield      #44
61: aload_1
62: ldc           #95
64: invokevirtual #43
67: new           #22
70: dup
71: invokespecial #23
74: ldc           #24
76: invokevirtual #25
79: iload_2
80: invokevirtual #29
83: ldc           #30
85: invokevirtual #25
88: iconst_1
89: invokevirtual #29
92: ldc           #24
94: invokevirtual #25
97: invokevirtual #27
100: iload_2
101: iconst_1
102: if_icmpne     109
105: iconst_1
106: goto          110
109: iconst_0
110: invokestatic  #31
113: new           #22
116: dup
117: invokespecial #23
120: ldc           #24
122: invokevirtual #25
125: aload_3
126: invokevirtual #25
129: ldc           #48
131: invokevirtual #25
134: invokevirtual #27
137: aload_3
138: ldc           #49
140: invokestatic  #28
143: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0729
Start line: 5199
End line: 0
Method source code: 
    public void test0729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0729");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        org.apache.commons.cli.HelpFormatter helpFormatter6 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter6.setOptPrefix("");
        helpFormatter6.defaultLongOptPrefix = "";
        java.lang.String str11 = helpFormatter6.defaultLongOptPrefix;
        java.lang.String str12 = helpFormatter6.getNewLine();
        java.lang.String str13 = helpFormatter6.defaultOptPrefix;
        helpFormatter6.setDescPadding(74);
        java.util.Comparator comparator16 = helpFormatter6.getOptionComparator();
        helpFormatter0.optionComparator = comparator16;
        int int21 = helpFormatter0.findWrapPos("                                                                                                 ", 0, (int) '4');
        java.util.Comparator comparator22 = helpFormatter0.optionComparator;
        java.lang.String str23 = helpFormatter0.defaultArgName;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\n" + "'", str12, "\n");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(comparator16);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertNotNull(comparator22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "arg" + "'", str23, "arg");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #333
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: bipush        10
47: invokevirtual #37
50: new           #8
53: dup
54: invokespecial #9
57: astore_3
58: aload_3
59: ldc           #11
61: invokevirtual #51
64: aload_3
65: ldc           #11
67: putfield      #52
70: aload_3
71: getfield      #52
74: astore        4
76: aload_3
77: invokevirtual #16
80: astore        5
82: aload_3
83: getfield      #42
86: astore        6
88: aload_3
89: bipush        74
91: invokevirtual #37
94: aload_3
95: invokevirtual #58
98: astore        7
100: aload_1
101: aload         7
103: putfield      #10
106: aload_1
107: ldc           #14
109: iconst_0
110: bipush        52
112: invokevirtual #61
115: istore        8
117: aload_1
118: getfield      #10
121: astore        9
123: aload_1
124: getfield      #15
127: astore        10
129: new           #22
132: dup
133: invokespecial #23
136: ldc           #24
138: invokevirtual #25
141: iload_2
142: invokevirtual #29
145: ldc           #30
147: invokevirtual #25
150: iconst_1
151: invokevirtual #29
154: ldc           #24
156: invokevirtual #25
159: invokevirtual #27
162: iload_2
163: iconst_1
164: if_icmpne     171
167: iconst_1
168: goto          172
171: iconst_0
172: invokestatic  #31
175: new           #22
178: dup
179: invokespecial #23
182: ldc           #24
184: invokevirtual #25
187: aload         4
189: invokevirtual #25
192: ldc           #26
194: invokevirtual #25
197: invokevirtual #27
200: aload         4
202: ldc           #11
204: invokestatic  #28
207: new           #22
210: dup
211: invokespecial #23
214: ldc           #24
216: invokevirtual #25
219: aload         5
221: invokevirtual #25
224: ldc           #32
226: invokevirtual #25
229: invokevirtual #27
232: aload         5
234: ldc           #33
236: invokestatic  #28
239: new           #22
242: dup
243: invokespecial #23
246: ldc           #24
248: invokevirtual #25
251: aload         6
253: invokevirtual #25
256: ldc           #26
258: invokevirtual #25
261: invokevirtual #27
264: aload         6
266: ldc           #11
268: invokestatic  #28
271: aload         7
273: invokestatic  #21
276: new           #22
279: dup
280: invokespecial #23
283: ldc           #24
285: invokevirtual #25
288: iload         8
290: invokevirtual #29
293: ldc           #30
295: invokevirtual #25
298: bipush        52
300: invokevirtual #29
303: ldc           #24
305: invokevirtual #25
308: invokevirtual #27
311: iload         8
313: bipush        52
315: if_icmpne     322
318: iconst_1
319: goto          323
322: iconst_0
323: invokestatic  #31
326: aload         9
328: invokestatic  #21
331: new           #22
334: dup
335: invokespecial #23
338: ldc           #24
340: invokevirtual #25
343: aload         10
345: invokevirtual #25
348: ldc           #79
350: invokevirtual #25
353: invokevirtual #27
356: aload         10
358: ldc           #78
360: invokestatic  #28
363: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0730
Start line: 5229
End line: 0
Method source code: 
    public void test0730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0730");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultArgName = "\n";
        helpFormatter0.defaultLeftPad = 0;
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #334
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #11
36: invokevirtual #51
39: aload_1
40: ldc           #33
42: putfield      #15
45: aload_1
46: iconst_0
47: putfield      #40
50: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0731
Start line: 5239
End line: 0
Method source code: 
    public void test0731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0731");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        java.lang.String str6 = helpFormatter0.getLongOptSeparator();
        java.lang.String str7 = helpFormatter0.getLongOptSeparator();
        java.lang.String str8 = helpFormatter0.getOptPrefix();
        helpFormatter0.setNewLine("hi!");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + " " + "'", str6, " ");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + " " + "'", str7, " ");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "-" + "'", str8, "-");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #335
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: bipush        10
47: invokevirtual #37
50: aload_1
51: invokevirtual #72
54: astore_3
55: aload_1
56: invokevirtual #72
59: astore        4
61: aload_1
62: invokevirtual #73
65: astore        5
67: aload_1
68: ldc           #65
70: invokevirtual #88
73: new           #22
76: dup
77: invokespecial #23
80: ldc           #24
82: invokevirtual #25
85: iload_2
86: invokevirtual #29
89: ldc           #30
91: invokevirtual #25
94: iconst_1
95: invokevirtual #29
98: ldc           #24
100: invokevirtual #25
103: invokevirtual #27
106: iload_2
107: iconst_1
108: if_icmpne     115
111: iconst_1
112: goto          116
115: iconst_0
116: invokestatic  #31
119: new           #22
122: dup
123: invokespecial #23
126: ldc           #24
128: invokevirtual #25
131: aload_3
132: invokevirtual #25
135: ldc           #75
137: invokevirtual #25
140: invokevirtual #27
143: aload_3
144: ldc           #38
146: invokestatic  #28
149: new           #22
152: dup
153: invokespecial #23
156: ldc           #24
158: invokevirtual #25
161: aload         4
163: invokevirtual #25
166: ldc           #75
168: invokevirtual #25
171: invokevirtual #27
174: aload         4
176: ldc           #38
178: invokestatic  #28
181: new           #22
184: dup
185: invokespecial #23
188: ldc           #24
190: invokevirtual #25
193: aload         5
195: invokevirtual #25
198: ldc           #48
200: invokevirtual #25
203: invokevirtual #27
206: aload         5
208: ldc           #49
210: invokestatic  #28
213: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0732
Start line: 5257
End line: 0
Method source code: 
    public void test0732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0732");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        helpFormatter0.defaultArgName = "hi!";
        java.util.Comparator comparator8 = helpFormatter0.getOptionComparator();
        int int9 = helpFormatter0.getWidth();
        java.lang.String str10 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setArgName("                                ");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(comparator8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 74 + "'", int9 == 74);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "-" + "'", str10, "-");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #336
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: bipush        10
47: invokevirtual #37
50: aload_1
51: ldc           #65
53: putfield      #15
56: aload_1
57: invokevirtual #58
60: astore_3
61: aload_1
62: invokevirtual #66
65: istore        4
67: aload_1
68: getfield      #42
71: astore        5
73: aload_1
74: ldc           #95
76: invokevirtual #59
79: new           #22
82: dup
83: invokespecial #23
86: ldc           #24
88: invokevirtual #25
91: iload_2
92: invokevirtual #29
95: ldc           #30
97: invokevirtual #25
100: iconst_1
101: invokevirtual #29
104: ldc           #24
106: invokevirtual #25
109: invokevirtual #27
112: iload_2
113: iconst_1
114: if_icmpne     121
117: iconst_1
118: goto          122
121: iconst_0
122: invokestatic  #31
125: aload_3
126: invokestatic  #21
129: new           #22
132: dup
133: invokespecial #23
136: ldc           #24
138: invokevirtual #25
141: iload         4
143: invokevirtual #29
146: ldc           #30
148: invokevirtual #25
151: bipush        74
153: invokevirtual #29
156: ldc           #24
158: invokevirtual #25
161: invokevirtual #27
164: iload         4
166: bipush        74
168: if_icmpne     175
171: iconst_1
172: goto          176
175: iconst_0
176: invokestatic  #31
179: new           #22
182: dup
183: invokespecial #23
186: ldc           #24
188: invokevirtual #25
191: aload         5
193: invokevirtual #25
196: ldc           #48
198: invokevirtual #25
201: invokevirtual #27
204: aload         5
206: ldc           #49
208: invokestatic  #28
211: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0733
Start line: 5276
End line: 0
Method source code: 
    public void test0733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0733");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.util.Comparator comparator1 = helpFormatter0.optionComparator;
        java.lang.String str2 = helpFormatter0.getLongOptPrefix();
        java.lang.String str3 = helpFormatter0.defaultArgName;
        java.io.PrintWriter printWriter4 = null;
        org.apache.commons.cli.Options options7 = null;
        try {
            helpFormatter0.printUsage(printWriter4, 100, "arg", options7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(comparator1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "--" + "'", str2, "--");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "arg" + "'", str3, "arg");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #337
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: getfield      #10
37: astore_2
38: aload_1
39: invokevirtual #53
42: astore_3
43: aload_1
44: getfield      #15
47: astore        4
49: aconst_null
50: astore        5
52: aconst_null
53: astore        6
55: aload_1
56: aload         5
58: bipush        100
60: ldc           #78
62: aload         6
64: invokevirtual #81
67: ldc           #18
69: invokestatic  #19
72: goto          77
75: astore        7
77: aload_2
78: invokestatic  #21
81: new           #22
84: dup
85: invokespecial #23
88: ldc           #24
90: invokevirtual #25
93: aload_3
94: invokevirtual #25
97: ldc           #62
99: invokevirtual #25
102: invokevirtual #27
105: aload_3
106: ldc           #63
108: invokestatic  #28
111: new           #22
114: dup
115: invokespecial #23
118: ldc           #24
120: invokevirtual #25
123: aload         4
125: invokevirtual #25
128: ldc           #79
130: invokevirtual #25
133: invokevirtual #27
136: aload         4
138: ldc           #78
140: invokestatic  #28
143: return
Exception table:
from    to  target type
55    72    75   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0734
Start line: 5298
End line: 0
Method source code: 
    public void test0734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0734");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        java.lang.String str6 = helpFormatter0.rtrim("");
        java.lang.String str8 = helpFormatter0.rtrim("-");
        helpFormatter0.defaultOptPrefix = "--";
        helpFormatter0.defaultDescPad = (short) 1;
        java.io.PrintWriter printWriter13 = null;
        org.apache.commons.cli.Options options17 = null;
        try {
            helpFormatter0.printHelp(printWriter13, 10, "usage:", "usage:", options17, (int) (byte) 100, 10, "usage:");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "-" + "'", str8, "-");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #338
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: getfield      #42
48: astore_3
49: aload_1
50: ldc           #11
52: invokevirtual #12
55: astore        4
57: aload_1
58: ldc           #49
60: invokevirtual #12
63: astore        5
65: aload_1
66: ldc           #63
68: putfield      #42
71: aload_1
72: iconst_1
73: putfield      #44
76: aconst_null
77: astore        6
79: aconst_null
80: astore        7
82: aload_1
83: aload         6
85: bipush        10
87: ldc           #108
89: ldc           #108
91: aload         7
93: bipush        100
95: bipush        10
97: ldc           #108
99: invokevirtual #68
102: ldc           #18
104: invokestatic  #19
107: goto          112
110: astore        8
112: new           #22
115: dup
116: invokespecial #23
119: ldc           #24
121: invokevirtual #25
124: iload_2
125: invokevirtual #29
128: ldc           #30
130: invokevirtual #25
133: iconst_1
134: invokevirtual #29
137: ldc           #24
139: invokevirtual #25
142: invokevirtual #27
145: iload_2
146: iconst_1
147: if_icmpne     154
150: iconst_1
151: goto          155
154: iconst_0
155: invokestatic  #31
158: new           #22
161: dup
162: invokespecial #23
165: ldc           #24
167: invokevirtual #25
170: aload_3
171: invokevirtual #25
174: ldc           #48
176: invokevirtual #25
179: invokevirtual #27
182: aload_3
183: ldc           #49
185: invokestatic  #28
188: new           #22
191: dup
192: invokespecial #23
195: ldc           #24
197: invokevirtual #25
200: aload         4
202: invokevirtual #25
205: ldc           #26
207: invokevirtual #25
210: invokevirtual #27
213: aload         4
215: ldc           #11
217: invokestatic  #28
220: new           #22
223: dup
224: invokespecial #23
227: ldc           #24
229: invokevirtual #25
232: aload         5
234: invokevirtual #25
237: ldc           #48
239: invokevirtual #25
242: invokevirtual #27
245: aload         5
247: ldc           #49
249: invokestatic  #28
252: return
Exception table:
from    to  target type
82   107   110   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0735
Start line: 5325
End line: 0
Method source code: 
    public void test0735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0735");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.util.Comparator comparator1 = helpFormatter0.optionComparator;
        int int2 = helpFormatter0.getLeftPadding();
        int int3 = helpFormatter0.defaultLeftPad;
        java.lang.String str5 = helpFormatter0.createPadding((int) 'a');
        int int6 = helpFormatter0.defaultWidth;
        java.util.Comparator comparator7 = helpFormatter0.getOptionComparator();
        helpFormatter0.defaultSyntaxPrefix = "usage: ";
        org.junit.Assert.assertNotNull(comparator1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "                                                                                                 " + "'", str5, "                                                                                                 ");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 74 + "'", int6 == 74);
        org.junit.Assert.assertNotNull(comparator7);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #339
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: getfield      #10
37: astore_2
38: aload_1
39: invokevirtual #35
42: istore_3
43: aload_1
44: getfield      #40
47: istore        4
49: aload_1
50: bipush        97
52: invokevirtual #93
55: astore        5
57: aload_1
58: getfield      #57
61: istore        6
63: aload_1
64: invokevirtual #58
67: astore        7
69: aload_1
70: ldc           #46
72: putfield      #45
75: aload_2
76: invokestatic  #21
79: new           #22
82: dup
83: invokespecial #23
86: ldc           #24
88: invokevirtual #25
91: iload_3
92: invokevirtual #29
95: ldc           #30
97: invokevirtual #25
100: iconst_1
101: invokevirtual #29
104: ldc           #24
106: invokevirtual #25
109: invokevirtual #27
112: iload_3
113: iconst_1
114: if_icmpne     121
117: iconst_1
118: goto          122
121: iconst_0
122: invokestatic  #31
125: new           #22
128: dup
129: invokespecial #23
132: ldc           #24
134: invokevirtual #25
137: iload         4
139: invokevirtual #29
142: ldc           #30
144: invokevirtual #25
147: iconst_1
148: invokevirtual #29
151: ldc           #24
153: invokevirtual #25
156: invokevirtual #27
159: iload         4
161: iconst_1
162: if_icmpne     169
165: iconst_1
166: goto          170
169: iconst_0
170: invokestatic  #31
173: new           #22
176: dup
177: invokespecial #23
180: ldc           #24
182: invokevirtual #25
185: aload         5
187: invokevirtual #25
190: ldc           #142
192: invokevirtual #25
195: invokevirtual #27
198: aload         5
200: ldc           #14
202: invokestatic  #28
205: new           #22
208: dup
209: invokespecial #23
212: ldc           #24
214: invokevirtual #25
217: iload         6
219: invokevirtual #29
222: ldc           #30
224: invokevirtual #25
227: bipush        74
229: invokevirtual #29
232: ldc           #24
234: invokevirtual #25
237: invokevirtual #27
240: iload         6
242: bipush        74
244: if_icmpne     251
247: iconst_1
248: goto          252
251: iconst_0
252: invokestatic  #31
255: aload         7
257: invokestatic  #21
260: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0736
Start line: 5345
End line: 0
Method source code: 
    public void test0736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0736");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.util.Comparator comparator1 = helpFormatter0.optionComparator;
        int int2 = helpFormatter0.getLeftPadding();
        int int6 = helpFormatter0.findWrapPos("-", 100, (-1));
        helpFormatter0.defaultWidth = (short) 100;
        java.lang.String str9 = helpFormatter0.getNewLine();
        int int10 = helpFormatter0.getWidth();
        int int11 = helpFormatter0.getWidth();
        org.junit.Assert.assertNotNull(comparator1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\n" + "'", str9, "\n");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 100 + "'", int10 == 100);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #340
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: getfield      #10
37: astore_2
38: aload_1
39: invokevirtual #35
42: istore_3
43: aload_1
44: ldc           #49
46: bipush        100
48: iconst_m1
49: invokevirtual #61
52: istore        4
54: aload_1
55: bipush        100
57: putfield      #57
60: aload_1
61: invokevirtual #16
64: astore        5
66: aload_1
67: invokevirtual #66
70: istore        6
72: aload_1
73: invokevirtual #66
76: istore        7
78: aload_2
79: invokestatic  #21
82: new           #22
85: dup
86: invokespecial #23
89: ldc           #24
91: invokevirtual #25
94: iload_3
95: invokevirtual #29
98: ldc           #30
100: invokevirtual #25
103: iconst_1
104: invokevirtual #29
107: ldc           #24
109: invokevirtual #25
112: invokevirtual #27
115: iload_3
116: iconst_1
117: if_icmpne     124
120: iconst_1
121: goto          125
124: iconst_0
125: invokestatic  #31
128: new           #22
131: dup
132: invokespecial #23
135: ldc           #24
137: invokevirtual #25
140: iload         4
142: invokevirtual #29
145: ldc           #30
147: invokevirtual #25
150: iconst_m1
151: invokevirtual #29
154: ldc           #24
156: invokevirtual #25
159: invokevirtual #27
162: iload         4
164: iconst_m1
165: if_icmpne     172
168: iconst_1
169: goto          173
172: iconst_0
173: invokestatic  #31
176: new           #22
179: dup
180: invokespecial #23
183: ldc           #24
185: invokevirtual #25
188: aload         5
190: invokevirtual #25
193: ldc           #32
195: invokevirtual #25
198: invokevirtual #27
201: aload         5
203: ldc           #33
205: invokestatic  #28
208: new           #22
211: dup
212: invokespecial #23
215: ldc           #24
217: invokevirtual #25
220: iload         6
222: invokevirtual #29
225: ldc           #30
227: invokevirtual #25
230: bipush        100
232: invokevirtual #29
235: ldc           #24
237: invokevirtual #25
240: invokevirtual #27
243: iload         6
245: bipush        100
247: if_icmpne     254
250: iconst_1
251: goto          255
254: iconst_0
255: invokestatic  #31
258: new           #22
261: dup
262: invokespecial #23
265: ldc           #24
267: invokevirtual #25
270: iload         7
272: invokevirtual #29
275: ldc           #30
277: invokevirtual #25
280: bipush        100
282: invokevirtual #29
285: ldc           #24
287: invokevirtual #25
290: invokevirtual #27
293: iload         7
295: bipush        100
297: if_icmpne     304
300: iconst_1
301: goto          305
304: iconst_0
305: invokestatic  #31
308: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0737
Start line: 5365
End line: 0
Method source code: 
    public void test0737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0737");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str6 = helpFormatter0.getNewLine();
        java.util.Comparator comparator7 = helpFormatter0.getOptionComparator();
        helpFormatter0.setDescPadding(3);
        helpFormatter0.defaultDescPad = 10;
        java.lang.StringBuffer stringBuffer12 = null;
        try {
            java.lang.StringBuffer stringBuffer16 = helpFormatter0.renderWrappedText(stringBuffer12, (int) (byte) 100, 100, "\n");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\n" + "'", str6, "\n");
        org.junit.Assert.assertNotNull(comparator7);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #341
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #11
36: invokevirtual #51
39: aload_1
40: ldc           #11
42: putfield      #52
45: aload_1
46: getfield      #52
49: astore_2
50: aload_1
51: invokevirtual #16
54: astore_3
55: aload_1
56: invokevirtual #58
59: astore        4
61: aload_1
62: iconst_3
63: invokevirtual #37
66: aload_1
67: bipush        10
69: putfield      #44
72: aconst_null
73: astore        5
75: aload_1
76: aload         5
78: bipush        100
80: bipush        100
82: ldc           #33
84: invokevirtual #123
87: astore        6
89: ldc           #18
91: invokestatic  #19
94: goto          99
97: astore        6
99: new           #22
102: dup
103: invokespecial #23
106: ldc           #24
108: invokevirtual #25
111: aload_2
112: invokevirtual #25
115: ldc           #26
117: invokevirtual #25
120: invokevirtual #27
123: aload_2
124: ldc           #11
126: invokestatic  #28
129: new           #22
132: dup
133: invokespecial #23
136: ldc           #24
138: invokevirtual #25
141: aload_3
142: invokevirtual #25
145: ldc           #32
147: invokevirtual #25
150: invokevirtual #27
153: aload_3
154: ldc           #33
156: invokestatic  #28
159: aload         4
161: invokestatic  #21
164: return
Exception table:
from    to  target type
75    94    97   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0738
Start line: 5390
End line: 0
Method source code: 
    public void test0738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0738");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        java.lang.String str3 = helpFormatter0.getLongOptSeparator();
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        int int5 = helpFormatter0.defaultWidth;
        helpFormatter0.defaultLongOptPrefix = "--";
        int int8 = helpFormatter0.defaultWidth;
        java.lang.Class<?> wildcardClass9 = helpFormatter0.getClass();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + " " + "'", str3, " ");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 74 + "'", int5 == 74);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 74 + "'", int8 == 74);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #342
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #11
36: invokevirtual #51
39: aload_1
40: invokevirtual #72
43: astore_2
44: aload_1
45: getfield      #42
48: astore_3
49: aload_1
50: getfield      #57
53: istore        4
55: aload_1
56: ldc           #63
58: putfield      #52
61: aload_1
62: getfield      #57
65: istore        5
67: aload_1
68: invokevirtual #154
71: astore        6
73: new           #22
76: dup
77: invokespecial #23
80: ldc           #24
82: invokevirtual #25
85: aload_2
86: invokevirtual #25
89: ldc           #75
91: invokevirtual #25
94: invokevirtual #27
97: aload_2
98: ldc           #38
100: invokestatic  #28
103: new           #22
106: dup
107: invokespecial #23
110: ldc           #24
112: invokevirtual #25
115: aload_3
116: invokevirtual #25
119: ldc           #26
121: invokevirtual #25
124: invokevirtual #27
127: aload_3
128: ldc           #11
130: invokestatic  #28
133: new           #22
136: dup
137: invokespecial #23
140: ldc           #24
142: invokevirtual #25
145: iload         4
147: invokevirtual #29
150: ldc           #30
152: invokevirtual #25
155: bipush        74
157: invokevirtual #29
160: ldc           #24
162: invokevirtual #25
165: invokevirtual #27
168: iload         4
170: bipush        74
172: if_icmpne     179
175: iconst_1
176: goto          180
179: iconst_0
180: invokestatic  #31
183: new           #22
186: dup
187: invokespecial #23
190: ldc           #24
192: invokevirtual #25
195: iload         5
197: invokevirtual #29
200: ldc           #30
202: invokevirtual #25
205: bipush        74
207: invokevirtual #29
210: ldc           #24
212: invokevirtual #25
215: invokevirtual #27
218: iload         5
220: bipush        74
222: if_icmpne     229
225: iconst_1
226: goto          230
229: iconst_0
230: invokestatic  #31
233: aload         6
235: invokestatic  #21
238: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0739
Start line: 5409
End line: 0
Method source code: 
    public void test0739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0739");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str6 = helpFormatter0.getNewLine();
        java.lang.String str7 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setDescPadding(74);
        java.util.Comparator comparator10 = helpFormatter0.getOptionComparator();
        java.lang.String str11 = helpFormatter0.getArgName();
        java.lang.String str12 = helpFormatter0.getSyntaxPrefix();
        helpFormatter0.setLongOptSeparator("                                                                                                    ");
        java.lang.StringBuffer stringBuffer15 = null;
        try {
            java.lang.StringBuffer stringBuffer19 = helpFormatter0.renderWrappedText(stringBuffer15, 1, (int) 'a', "                                                                                                    ");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\n" + "'", str6, "\n");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(comparator10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "arg" + "'", str11, "arg");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "usage: " + "'", str12, "usage: ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #343
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #11
36: invokevirtual #51
39: aload_1
40: ldc           #11
42: putfield      #52
45: aload_1
46: getfield      #52
49: astore_2
50: aload_1
51: invokevirtual #16
54: astore_3
55: aload_1
56: getfield      #42
59: astore        4
61: aload_1
62: bipush        74
64: invokevirtual #37
67: aload_1
68: invokevirtual #58
71: astore        5
73: aload_1
74: invokevirtual #83
77: astore        6
79: aload_1
80: invokevirtual #89
83: astore        7
85: aload_1
86: ldc           #118
88: invokevirtual #74
91: aconst_null
92: astore        8
94: aload_1
95: aload         8
97: iconst_1
98: bipush        97
100: ldc           #118
102: invokevirtual #123
105: astore        9
107: ldc           #18
109: invokestatic  #19
112: goto          117
115: astore        9
117: new           #22
120: dup
121: invokespecial #23
124: ldc           #24
126: invokevirtual #25
129: aload_2
130: invokevirtual #25
133: ldc           #26
135: invokevirtual #25
138: invokevirtual #27
141: aload_2
142: ldc           #11
144: invokestatic  #28
147: new           #22
150: dup
151: invokespecial #23
154: ldc           #24
156: invokevirtual #25
159: aload_3
160: invokevirtual #25
163: ldc           #32
165: invokevirtual #25
168: invokevirtual #27
171: aload_3
172: ldc           #33
174: invokestatic  #28
177: new           #22
180: dup
181: invokespecial #23
184: ldc           #24
186: invokevirtual #25
189: aload         4
191: invokevirtual #25
194: ldc           #26
196: invokevirtual #25
199: invokevirtual #27
202: aload         4
204: ldc           #11
206: invokestatic  #28
209: aload         5
211: invokestatic  #21
214: new           #22
217: dup
218: invokespecial #23
221: ldc           #24
223: invokevirtual #25
226: aload         6
228: invokevirtual #25
231: ldc           #79
233: invokevirtual #25
236: invokevirtual #27
239: aload         6
241: ldc           #78
243: invokestatic  #28
246: new           #22
249: dup
250: invokespecial #23
253: ldc           #24
255: invokevirtual #25
258: aload         7
260: invokevirtual #25
263: ldc           #104
265: invokevirtual #25
268: invokevirtual #27
271: aload         7
273: ldc           #46
275: invokestatic  #28
278: return
Exception table:
from    to  target type
94   112   115   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0740
Start line: 5440
End line: 0
Method source code: 
    public void test0740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0740");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.lang.String str1 = helpFormatter0.defaultSyntaxPrefix;
        helpFormatter0.setOptPrefix(" ");
        int int4 = helpFormatter0.defaultDescPad;
        helpFormatter0.defaultLongOptPrefix = "--";
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "usage: " + "'", str1, "usage: ");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 3 + "'", int4 == 3);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #344
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: getfield      #45
37: astore_2
38: aload_1
39: ldc           #38
41: invokevirtual #51
44: aload_1
45: getfield      #44
48: istore_3
49: aload_1
50: ldc           #63
52: putfield      #52
55: new           #22
58: dup
59: invokespecial #23
62: ldc           #24
64: invokevirtual #25
67: aload_2
68: invokevirtual #25
71: ldc           #104
73: invokevirtual #25
76: invokevirtual #27
79: aload_2
80: ldc           #46
82: invokestatic  #28
85: new           #22
88: dup
89: invokespecial #23
92: ldc           #24
94: invokevirtual #25
97: iload_3
98: invokevirtual #29
101: ldc           #30
103: invokevirtual #25
106: iconst_3
107: invokevirtual #29
110: ldc           #24
112: invokevirtual #25
115: invokevirtual #27
118: iload_3
119: iconst_3
120: if_icmpne     127
123: iconst_1
124: goto          128
127: iconst_0
128: invokestatic  #31
131: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0741
Start line: 5453
End line: 0
Method source code: 
    public void test0741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0741");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        java.lang.String str6 = helpFormatter0.getOptPrefix();
        java.lang.String str7 = helpFormatter0.getNewLine();
        helpFormatter0.defaultOptPrefix = "";
        helpFormatter0.setNewLine("");
        java.lang.String str12 = helpFormatter0.getArgName();
        java.lang.String str13 = helpFormatter0.getSyntaxPrefix();
        helpFormatter0.setLongOptSeparator("                                                    ");
        org.apache.commons.cli.Options options17 = null;
        try {
            helpFormatter0.printHelp("          ", options17, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "-" + "'", str6, "-");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "arg" + "'", str12, "arg");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "usage: " + "'", str13, "usage: ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #345
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: bipush        10
47: invokevirtual #37
50: aload_1
51: invokevirtual #73
54: astore_3
55: aload_1
56: invokevirtual #16
59: astore        4
61: aload_1
62: ldc           #11
64: putfield      #42
67: aload_1
68: ldc           #11
70: invokevirtual #88
73: aload_1
74: invokevirtual #83
77: astore        5
79: aload_1
80: invokevirtual #89
83: astore        6
85: aload_1
86: ldc           #77
88: invokevirtual #74
91: aconst_null
92: astore        7
94: aload_1
95: ldc           #67
97: aload         7
99: iconst_0
100: invokevirtual #103
103: ldc           #18
105: invokestatic  #19
108: goto          113
111: astore        8
113: new           #22
116: dup
117: invokespecial #23
120: ldc           #24
122: invokevirtual #25
125: iload_2
126: invokevirtual #29
129: ldc           #30
131: invokevirtual #25
134: iconst_1
135: invokevirtual #29
138: ldc           #24
140: invokevirtual #25
143: invokevirtual #27
146: iload_2
147: iconst_1
148: if_icmpne     155
151: iconst_1
152: goto          156
155: iconst_0
156: invokestatic  #31
159: new           #22
162: dup
163: invokespecial #23
166: ldc           #24
168: invokevirtual #25
171: aload_3
172: invokevirtual #25
175: ldc           #48
177: invokevirtual #25
180: invokevirtual #27
183: aload_3
184: ldc           #49
186: invokestatic  #28
189: new           #22
192: dup
193: invokespecial #23
196: ldc           #24
198: invokevirtual #25
201: aload         4
203: invokevirtual #25
206: ldc           #26
208: invokevirtual #25
211: invokevirtual #27
214: aload         4
216: ldc           #11
218: invokestatic  #28
221: new           #22
224: dup
225: invokespecial #23
228: ldc           #24
230: invokevirtual #25
233: aload         5
235: invokevirtual #25
238: ldc           #79
240: invokevirtual #25
243: invokevirtual #27
246: aload         5
248: ldc           #78
250: invokestatic  #28
253: new           #22
256: dup
257: invokespecial #23
260: ldc           #24
262: invokevirtual #25
265: aload         6
267: invokevirtual #25
270: ldc           #104
272: invokevirtual #25
275: invokevirtual #27
278: aload         6
280: ldc           #46
282: invokestatic  #28
285: return
Exception table:
from    to  target type
94   108   111   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0742
Start line: 5483
End line: 0
Method source code: 
    public void test0742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0742");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        int int6 = helpFormatter0.defaultWidth;
        java.lang.String str7 = helpFormatter0.getLongOptPrefix();
        java.lang.String str8 = helpFormatter0.getLongOptPrefix();
        helpFormatter0.setLongOptSeparator("hi!");
        int int11 = helpFormatter0.getWidth();
        java.lang.String str12 = helpFormatter0.defaultLongOptPrefix;
        helpFormatter0.setDescPadding(1);
        helpFormatter0.setLongOptSeparator("-");
        org.apache.commons.cli.Options options20 = null;
        try {
            helpFormatter0.printHelp((int) ' ', " ", "\n", options20, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "--" + "'", str5, "--");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 74 + "'", int6 == 74);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "--" + "'", str7, "--");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "--" + "'", str8, "--");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 74 + "'", int11 == 74);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "--" + "'", str12, "--");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #346
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: getfield      #42
48: astore_3
49: aload_1
50: getfield      #52
53: astore        4
55: aload_1
56: getfield      #57
59: istore        5
61: aload_1
62: invokevirtual #53
65: astore        6
67: aload_1
68: invokevirtual #53
71: astore        7
73: aload_1
74: ldc           #65
76: invokevirtual #74
79: aload_1
80: invokevirtual #66
83: istore        8
85: aload_1
86: getfield      #52
89: astore        9
91: aload_1
92: iconst_1
93: invokevirtual #37
96: aload_1
97: ldc           #49
99: invokevirtual #74
102: aconst_null
103: astore        10
105: aload_1
106: bipush        32
108: ldc           #38
110: ldc           #33
112: aload         10
114: ldc           #11
116: invokevirtual #150
119: ldc           #18
121: invokestatic  #19
124: goto          129
127: astore        11
129: new           #22
132: dup
133: invokespecial #23
136: ldc           #24
138: invokevirtual #25
141: iload_2
142: invokevirtual #29
145: ldc           #30
147: invokevirtual #25
150: iconst_1
151: invokevirtual #29
154: ldc           #24
156: invokevirtual #25
159: invokevirtual #27
162: iload_2
163: iconst_1
164: if_icmpne     171
167: iconst_1
168: goto          172
171: iconst_0
172: invokestatic  #31
175: new           #22
178: dup
179: invokespecial #23
182: ldc           #24
184: invokevirtual #25
187: aload_3
188: invokevirtual #25
191: ldc           #48
193: invokevirtual #25
196: invokevirtual #27
199: aload_3
200: ldc           #49
202: invokestatic  #28
205: new           #22
208: dup
209: invokespecial #23
212: ldc           #24
214: invokevirtual #25
217: aload         4
219: invokevirtual #25
222: ldc           #62
224: invokevirtual #25
227: invokevirtual #27
230: aload         4
232: ldc           #63
234: invokestatic  #28
237: new           #22
240: dup
241: invokespecial #23
244: ldc           #24
246: invokevirtual #25
249: iload         5
251: invokevirtual #29
254: ldc           #30
256: invokevirtual #25
259: bipush        74
261: invokevirtual #29
264: ldc           #24
266: invokevirtual #25
269: invokevirtual #27
272: iload         5
274: bipush        74
276: if_icmpne     283
279: iconst_1
280: goto          284
283: iconst_0
284: invokestatic  #31
287: new           #22
290: dup
291: invokespecial #23
294: ldc           #24
296: invokevirtual #25
299: aload         6
301: invokevirtual #25
304: ldc           #62
306: invokevirtual #25
309: invokevirtual #27
312: aload         6
314: ldc           #63
316: invokestatic  #28
319: new           #22
322: dup
323: invokespecial #23
326: ldc           #24
328: invokevirtual #25
331: aload         7
333: invokevirtual #25
336: ldc           #62
338: invokevirtual #25
341: invokevirtual #27
344: aload         7
346: ldc           #63
348: invokestatic  #28
351: new           #22
354: dup
355: invokespecial #23
358: ldc           #24
360: invokevirtual #25
363: iload         8
365: invokevirtual #29
368: ldc           #30
370: invokevirtual #25
373: bipush        74
375: invokevirtual #29
378: ldc           #24
380: invokevirtual #25
383: invokevirtual #27
386: iload         8
388: bipush        74
390: if_icmpne     397
393: iconst_1
394: goto          398
397: iconst_0
398: invokestatic  #31
401: new           #22
404: dup
405: invokespecial #23
408: ldc           #24
410: invokevirtual #25
413: aload         9
415: invokevirtual #25
418: ldc           #62
420: invokevirtual #25
423: invokevirtual #27
426: aload         9
428: ldc           #63
430: invokestatic  #28
433: return
Exception table:
from    to  target type
105   124   127   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0743
Start line: 5518
End line: 0
Method source code: 
    public void test0743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0743");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        int int6 = helpFormatter0.defaultWidth;
        java.lang.String str7 = helpFormatter0.getLongOptPrefix();
        java.lang.String str8 = helpFormatter0.getLongOptPrefix();
        helpFormatter0.setLongOptSeparator("hi!");
        int int11 = helpFormatter0.getWidth();
        int int12 = helpFormatter0.getDescPadding();
        java.lang.String str13 = helpFormatter0.getOptPrefix();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "--" + "'", str5, "--");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 74 + "'", int6 == 74);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "--" + "'", str7, "--");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "--" + "'", str8, "--");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 74 + "'", int11 == 74);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 3 + "'", int12 == 3);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "-" + "'", str13, "-");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #347
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: getfield      #42
48: astore_3
49: aload_1
50: getfield      #52
53: astore        4
55: aload_1
56: getfield      #57
59: istore        5
61: aload_1
62: invokevirtual #53
65: astore        6
67: aload_1
68: invokevirtual #53
71: astore        7
73: aload_1
74: ldc           #65
76: invokevirtual #74
79: aload_1
80: invokevirtual #66
83: istore        8
85: aload_1
86: invokevirtual #13
89: istore        9
91: aload_1
92: invokevirtual #73
95: astore        10
97: new           #22
100: dup
101: invokespecial #23
104: ldc           #24
106: invokevirtual #25
109: iload_2
110: invokevirtual #29
113: ldc           #30
115: invokevirtual #25
118: iconst_1
119: invokevirtual #29
122: ldc           #24
124: invokevirtual #25
127: invokevirtual #27
130: iload_2
131: iconst_1
132: if_icmpne     139
135: iconst_1
136: goto          140
139: iconst_0
140: invokestatic  #31
143: new           #22
146: dup
147: invokespecial #23
150: ldc           #24
152: invokevirtual #25
155: aload_3
156: invokevirtual #25
159: ldc           #48
161: invokevirtual #25
164: invokevirtual #27
167: aload_3
168: ldc           #49
170: invokestatic  #28
173: new           #22
176: dup
177: invokespecial #23
180: ldc           #24
182: invokevirtual #25
185: aload         4
187: invokevirtual #25
190: ldc           #62
192: invokevirtual #25
195: invokevirtual #27
198: aload         4
200: ldc           #63
202: invokestatic  #28
205: new           #22
208: dup
209: invokespecial #23
212: ldc           #24
214: invokevirtual #25
217: iload         5
219: invokevirtual #29
222: ldc           #30
224: invokevirtual #25
227: bipush        74
229: invokevirtual #29
232: ldc           #24
234: invokevirtual #25
237: invokevirtual #27
240: iload         5
242: bipush        74
244: if_icmpne     251
247: iconst_1
248: goto          252
251: iconst_0
252: invokestatic  #31
255: new           #22
258: dup
259: invokespecial #23
262: ldc           #24
264: invokevirtual #25
267: aload         6
269: invokevirtual #25
272: ldc           #62
274: invokevirtual #25
277: invokevirtual #27
280: aload         6
282: ldc           #63
284: invokestatic  #28
287: new           #22
290: dup
291: invokespecial #23
294: ldc           #24
296: invokevirtual #25
299: aload         7
301: invokevirtual #25
304: ldc           #62
306: invokevirtual #25
309: invokevirtual #27
312: aload         7
314: ldc           #63
316: invokestatic  #28
319: new           #22
322: dup
323: invokespecial #23
326: ldc           #24
328: invokevirtual #25
331: iload         8
333: invokevirtual #29
336: ldc           #30
338: invokevirtual #25
341: bipush        74
343: invokevirtual #29
346: ldc           #24
348: invokevirtual #25
351: invokevirtual #27
354: iload         8
356: bipush        74
358: if_icmpne     365
361: iconst_1
362: goto          366
365: iconst_0
366: invokestatic  #31
369: new           #22
372: dup
373: invokespecial #23
376: ldc           #24
378: invokevirtual #25
381: iload         9
383: invokevirtual #29
386: ldc           #30
388: invokevirtual #25
391: iconst_3
392: invokevirtual #29
395: ldc           #24
397: invokevirtual #25
400: invokevirtual #27
403: iload         9
405: iconst_3
406: if_icmpne     413
409: iconst_1
410: goto          414
413: iconst_0
414: invokestatic  #31
417: new           #22
420: dup
421: invokespecial #23
424: ldc           #24
426: invokevirtual #25
429: aload         10
431: invokevirtual #25
434: ldc           #48
436: invokevirtual #25
439: invokevirtual #27
442: aload         10
444: ldc           #49
446: invokestatic  #28
449: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0744
Start line: 5545
End line: 0
Method source code: 
    public void test0744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0744");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.util.Comparator comparator1 = helpFormatter0.optionComparator;
        int int2 = helpFormatter0.getLeftPadding();
        java.lang.String str4 = helpFormatter0.rtrim("-");
        int int5 = helpFormatter0.getDescPadding();
        org.junit.Assert.assertNotNull(comparator1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 3 + "'", int5 == 3);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #348
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: getfield      #10
37: astore_2
38: aload_1
39: invokevirtual #35
42: istore_3
43: aload_1
44: ldc           #49
46: invokevirtual #12
49: astore        4
51: aload_1
52: invokevirtual #13
55: istore        5
57: aload_2
58: invokestatic  #21
61: new           #22
64: dup
65: invokespecial #23
68: ldc           #24
70: invokevirtual #25
73: iload_3
74: invokevirtual #29
77: ldc           #30
79: invokevirtual #25
82: iconst_1
83: invokevirtual #29
86: ldc           #24
88: invokevirtual #25
91: invokevirtual #27
94: iload_3
95: iconst_1
96: if_icmpne     103
99: iconst_1
100: goto          104
103: iconst_0
104: invokestatic  #31
107: new           #22
110: dup
111: invokespecial #23
114: ldc           #24
116: invokevirtual #25
119: aload         4
121: invokevirtual #25
124: ldc           #48
126: invokevirtual #25
129: invokevirtual #27
132: aload         4
134: ldc           #49
136: invokestatic  #28
139: new           #22
142: dup
143: invokespecial #23
146: ldc           #24
148: invokevirtual #25
151: iload         5
153: invokevirtual #29
156: ldc           #30
158: invokevirtual #25
161: iconst_3
162: invokevirtual #29
165: ldc           #24
167: invokevirtual #25
170: invokevirtual #27
173: iload         5
175: iconst_3
176: if_icmpne     183
179: iconst_1
180: goto          184
183: iconst_0
184: invokestatic  #31
187: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0745
Start line: 5560
End line: 0
Method source code: 
    public void test0745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0745");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str6 = helpFormatter0.getNewLine();
        java.util.Comparator comparator7 = helpFormatter0.getOptionComparator();
        helpFormatter0.setLongOptSeparator("usage: ");
        org.apache.commons.cli.HelpFormatter helpFormatter10 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter10.setOptPrefix("");
        helpFormatter10.defaultLongOptPrefix = "";
        java.lang.String str15 = helpFormatter10.defaultLongOptPrefix;
        java.lang.String str16 = helpFormatter10.getNewLine();
        java.util.Comparator comparator17 = helpFormatter10.getOptionComparator();
        helpFormatter0.optionComparator = comparator17;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\n" + "'", str6, "\n");
        org.junit.Assert.assertNotNull(comparator7);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\n" + "'", str16, "\n");
        org.junit.Assert.assertNotNull(comparator17);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #349
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #11
36: invokevirtual #51
39: aload_1
40: ldc           #11
42: putfield      #52
45: aload_1
46: getfield      #52
49: astore_2
50: aload_1
51: invokevirtual #16
54: astore_3
55: aload_1
56: invokevirtual #58
59: astore        4
61: aload_1
62: ldc           #46
64: invokevirtual #74
67: new           #8
70: dup
71: invokespecial #9
74: astore        5
76: aload         5
78: ldc           #11
80: invokevirtual #51
83: aload         5
85: ldc           #11
87: putfield      #52
90: aload         5
92: getfield      #52
95: astore        6
97: aload         5
99: invokevirtual #16
102: astore        7
104: aload         5
106: invokevirtual #58
109: astore        8
111: aload_1
112: aload         8
114: putfield      #10
117: new           #22
120: dup
121: invokespecial #23
124: ldc           #24
126: invokevirtual #25
129: aload_2
130: invokevirtual #25
133: ldc           #26
135: invokevirtual #25
138: invokevirtual #27
141: aload_2
142: ldc           #11
144: invokestatic  #28
147: new           #22
150: dup
151: invokespecial #23
154: ldc           #24
156: invokevirtual #25
159: aload_3
160: invokevirtual #25
163: ldc           #32
165: invokevirtual #25
168: invokevirtual #27
171: aload_3
172: ldc           #33
174: invokestatic  #28
177: aload         4
179: invokestatic  #21
182: new           #22
185: dup
186: invokespecial #23
189: ldc           #24
191: invokevirtual #25
194: aload         6
196: invokevirtual #25
199: ldc           #26
201: invokevirtual #25
204: invokevirtual #27
207: aload         6
209: ldc           #11
211: invokestatic  #28
214: new           #22
217: dup
218: invokespecial #23
221: ldc           #24
223: invokevirtual #25
226: aload         7
228: invokevirtual #25
231: ldc           #32
233: invokevirtual #25
236: invokevirtual #27
239: aload         7
241: ldc           #33
243: invokestatic  #28
246: aload         8
248: invokestatic  #21
251: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0746
Start line: 5586
End line: 0
Method source code: 
    public void test0746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0746");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str3 = helpFormatter0.getOptPrefix();
        java.util.Comparator comparator4 = helpFormatter0.optionComparator;
        java.lang.String str5 = helpFormatter0.getOptPrefix();
        org.apache.commons.cli.HelpFormatter helpFormatter6 = new org.apache.commons.cli.HelpFormatter();
        int int7 = helpFormatter6.getLeftPadding();
        java.lang.String str8 = helpFormatter6.getArgName();
        helpFormatter6.defaultNewLine = "\n";
        helpFormatter6.defaultLeftPad = (byte) -1;
        helpFormatter6.setLongOptSeparator("");
        org.apache.commons.cli.HelpFormatter helpFormatter15 = new org.apache.commons.cli.HelpFormatter();
        int int16 = helpFormatter15.getLeftPadding();
        helpFormatter15.defaultNewLine = "";
        helpFormatter15.setDescPadding(10);
        helpFormatter15.setSyntaxPrefix(" ");
        java.util.Comparator comparator23 = helpFormatter15.getOptionComparator();
        helpFormatter6.setOptionComparator(comparator23);
        helpFormatter0.optionComparator = comparator23;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "--" + "'", str2, "--");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "-" + "'", str3, "-");
        org.junit.Assert.assertNotNull(comparator4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "-" + "'", str5, "-");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "arg" + "'", str8, "arg");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(comparator23);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #350
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: getfield      #52
42: astore_3
43: aload_1
44: invokevirtual #73
47: astore        4
49: aload_1
50: getfield      #10
53: astore        5
55: aload_1
56: invokevirtual #73
59: astore        6
61: new           #8
64: dup
65: invokespecial #9
68: astore        7
70: aload         7
72: invokevirtual #35
75: istore        8
77: aload         7
79: invokevirtual #83
82: astore        9
84: aload         7
86: ldc           #33
88: putfield      #36
91: aload         7
93: iconst_m1
94: putfield      #40
97: aload         7
99: ldc           #11
101: invokevirtual #74
104: new           #8
107: dup
108: invokespecial #9
111: astore        10
113: aload         10
115: invokevirtual #35
118: istore        11
120: aload         10
122: ldc           #11
124: putfield      #36
127: aload         10
129: bipush        10
131: invokevirtual #37
134: aload         10
136: ldc           #38
138: invokevirtual #39
141: aload         10
143: invokevirtual #58
146: astore        12
148: aload         7
150: aload         12
152: invokevirtual #99
155: aload_1
156: aload         12
158: putfield      #10
161: new           #22
164: dup
165: invokespecial #23
168: ldc           #24
170: invokevirtual #25
173: iload_2
174: invokevirtual #29
177: ldc           #30
179: invokevirtual #25
182: iconst_1
183: invokevirtual #29
186: ldc           #24
188: invokevirtual #25
191: invokevirtual #27
194: iload_2
195: iconst_1
196: if_icmpne     203
199: iconst_1
200: goto          204
203: iconst_0
204: invokestatic  #31
207: new           #22
210: dup
211: invokespecial #23
214: ldc           #24
216: invokevirtual #25
219: aload_3
220: invokevirtual #25
223: ldc           #62
225: invokevirtual #25
228: invokevirtual #27
231: aload_3
232: ldc           #63
234: invokestatic  #28
237: new           #22
240: dup
241: invokespecial #23
244: ldc           #24
246: invokevirtual #25
249: aload         4
251: invokevirtual #25
254: ldc           #48
256: invokevirtual #25
259: invokevirtual #27
262: aload         4
264: ldc           #49
266: invokestatic  #28
269: aload         5
271: invokestatic  #21
274: new           #22
277: dup
278: invokespecial #23
281: ldc           #24
283: invokevirtual #25
286: aload         6
288: invokevirtual #25
291: ldc           #48
293: invokevirtual #25
296: invokevirtual #27
299: aload         6
301: ldc           #49
303: invokestatic  #28
306: new           #22
309: dup
310: invokespecial #23
313: ldc           #24
315: invokevirtual #25
318: iload         8
320: invokevirtual #29
323: ldc           #30
325: invokevirtual #25
328: iconst_1
329: invokevirtual #29
332: ldc           #24
334: invokevirtual #25
337: invokevirtual #27
340: iload         8
342: iconst_1
343: if_icmpne     350
346: iconst_1
347: goto          351
350: iconst_0
351: invokestatic  #31
354: new           #22
357: dup
358: invokespecial #23
361: ldc           #24
363: invokevirtual #25
366: aload         9
368: invokevirtual #25
371: ldc           #79
373: invokevirtual #25
376: invokevirtual #27
379: aload         9
381: ldc           #78
383: invokestatic  #28
386: new           #22
389: dup
390: invokespecial #23
393: ldc           #24
395: invokevirtual #25
398: iload         11
400: invokevirtual #29
403: ldc           #30
405: invokevirtual #25
408: iconst_1
409: invokevirtual #29
412: ldc           #24
414: invokevirtual #25
417: invokevirtual #27
420: iload         11
422: iconst_1
423: if_icmpne     430
426: iconst_1
427: goto          431
430: iconst_0
431: invokestatic  #31
434: aload         12
436: invokestatic  #21
439: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0747
Start line: 5621
End line: 0
Method source code: 
    public void test0747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0747");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.defaultDescPad = '4';
        helpFormatter0.setNewLine("");
        helpFormatter0.setSyntaxPrefix("");
        java.lang.String str10 = helpFormatter0.getSyntaxPrefix();
        helpFormatter0.setWidth((-2));
        java.lang.String str13 = helpFormatter0.defaultNewLine;
        java.lang.String str14 = helpFormatter0.getArgName();
        int int15 = helpFormatter0.defaultWidth;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "arg" + "'", str14, "arg");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-2) + "'", int15 == (-2));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #351
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: bipush        52
47: putfield      #44
50: aload_1
51: ldc           #11
53: invokevirtual #88
56: aload_1
57: ldc           #11
59: invokevirtual #39
62: aload_1
63: invokevirtual #89
66: astore_3
67: aload_1
68: bipush        -2
70: invokevirtual #90
73: aload_1
74: getfield      #36
77: astore        4
79: aload_1
80: invokevirtual #83
83: astore        5
85: aload_1
86: getfield      #57
89: istore        6
91: new           #22
94: dup
95: invokespecial #23
98: ldc           #24
100: invokevirtual #25
103: iload_2
104: invokevirtual #29
107: ldc           #30
109: invokevirtual #25
112: iconst_1
113: invokevirtual #29
116: ldc           #24
118: invokevirtual #25
121: invokevirtual #27
124: iload_2
125: iconst_1
126: if_icmpne     133
129: iconst_1
130: goto          134
133: iconst_0
134: invokestatic  #31
137: new           #22
140: dup
141: invokespecial #23
144: ldc           #24
146: invokevirtual #25
149: aload_3
150: invokevirtual #25
153: ldc           #26
155: invokevirtual #25
158: invokevirtual #27
161: aload_3
162: ldc           #11
164: invokestatic  #28
167: new           #22
170: dup
171: invokespecial #23
174: ldc           #24
176: invokevirtual #25
179: aload         4
181: invokevirtual #25
184: ldc           #26
186: invokevirtual #25
189: invokevirtual #27
192: aload         4
194: ldc           #11
196: invokestatic  #28
199: new           #22
202: dup
203: invokespecial #23
206: ldc           #24
208: invokevirtual #25
211: aload         5
213: invokevirtual #25
216: ldc           #79
218: invokevirtual #25
221: invokevirtual #27
224: aload         5
226: ldc           #78
228: invokestatic  #28
231: new           #22
234: dup
235: invokespecial #23
238: ldc           #24
240: invokevirtual #25
243: iload         6
245: invokevirtual #29
248: ldc           #30
250: invokevirtual #25
253: bipush        -2
255: invokevirtual #29
258: ldc           #24
260: invokevirtual #25
263: invokevirtual #27
266: iload         6
268: bipush        -2
270: if_icmpne     277
273: iconst_1
274: goto          278
277: iconst_0
278: invokestatic  #31
281: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0748
Start line: 5643
End line: 0
Method source code: 
    public void test0748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0748");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        java.lang.String str6 = helpFormatter0.rtrim("");
        java.lang.String str8 = helpFormatter0.rtrim("-");
        helpFormatter0.defaultOptPrefix = "--";
        helpFormatter0.defaultDescPad = 0;
        int int13 = helpFormatter0.getWidth();
        org.apache.commons.cli.Options options15 = null;
        try {
            helpFormatter0.printHelp("", options15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: cmdLineSyntax not provided");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "-" + "'", str8, "-");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 74 + "'", int13 == 74);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #352
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: getfield      #42
48: astore_3
49: aload_1
50: ldc           #11
52: invokevirtual #12
55: astore        4
57: aload_1
58: ldc           #49
60: invokevirtual #12
63: astore        5
65: aload_1
66: ldc           #63
68: putfield      #42
71: aload_1
72: iconst_0
73: putfield      #44
76: aload_1
77: invokevirtual #66
80: istore        6
82: aconst_null
83: astore        7
85: aload_1
86: ldc           #11
88: aload         7
90: invokevirtual #240
93: ldc           #69
95: invokestatic  #19
98: goto          103
101: astore        8
103: new           #22
106: dup
107: invokespecial #23
110: ldc           #24
112: invokevirtual #25
115: iload_2
116: invokevirtual #29
119: ldc           #30
121: invokevirtual #25
124: iconst_1
125: invokevirtual #29
128: ldc           #24
130: invokevirtual #25
133: invokevirtual #27
136: iload_2
137: iconst_1
138: if_icmpne     145
141: iconst_1
142: goto          146
145: iconst_0
146: invokestatic  #31
149: new           #22
152: dup
153: invokespecial #23
156: ldc           #24
158: invokevirtual #25
161: aload_3
162: invokevirtual #25
165: ldc           #48
167: invokevirtual #25
170: invokevirtual #27
173: aload_3
174: ldc           #49
176: invokestatic  #28
179: new           #22
182: dup
183: invokespecial #23
186: ldc           #24
188: invokevirtual #25
191: aload         4
193: invokevirtual #25
196: ldc           #26
198: invokevirtual #25
201: invokevirtual #27
204: aload         4
206: ldc           #11
208: invokestatic  #28
211: new           #22
214: dup
215: invokespecial #23
218: ldc           #24
220: invokevirtual #25
223: aload         5
225: invokevirtual #25
228: ldc           #48
230: invokevirtual #25
233: invokevirtual #27
236: aload         5
238: ldc           #49
240: invokestatic  #28
243: new           #22
246: dup
247: invokespecial #23
250: ldc           #24
252: invokevirtual #25
255: iload         6
257: invokevirtual #29
260: ldc           #30
262: invokevirtual #25
265: bipush        74
267: invokevirtual #29
270: ldc           #24
272: invokevirtual #25
275: invokevirtual #27
278: iload         6
280: bipush        74
282: if_icmpne     289
285: iconst_1
286: goto          290
289: iconst_0
290: invokestatic  #31
293: return
Exception table:
from    to  target type
85    98   101   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0749
Start line: 5671
End line: 0
Method source code: 
    public void test0749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0749");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultOptPrefix;
        org.apache.commons.cli.Options options9 = null;
        try {
            helpFormatter0.printHelp(32, " ", "                                                                                                    ", options9, "usage:");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #353
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #11
36: invokevirtual #51
39: aload_1
40: ldc           #11
42: putfield      #52
45: aload_1
46: getfield      #42
49: astore_2
50: aconst_null
51: astore_3
52: aload_1
53: bipush        32
55: ldc           #38
57: ldc           #118
59: aload_3
60: ldc           #108
62: invokevirtual #150
65: ldc           #18
67: invokestatic  #19
70: goto          75
73: astore        4
75: new           #22
78: dup
79: invokespecial #23
82: ldc           #24
84: invokevirtual #25
87: aload_2
88: invokevirtual #25
91: ldc           #26
93: invokevirtual #25
96: invokevirtual #27
99: aload_2
100: ldc           #11
102: invokestatic  #28
105: return
Exception table:
from    to  target type
52    70    73   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0750
Start line: 5690
End line: 0
Method source code: 
    public void test0750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0750");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        java.lang.String str6 = helpFormatter0.getOptPrefix();
        java.lang.String str7 = helpFormatter0.getNewLine();
        helpFormatter0.defaultOptPrefix = "";
        helpFormatter0.setNewLine("");
        java.lang.String str12 = helpFormatter0.getArgName();
        org.apache.commons.cli.Options options15 = null;
        try {
            helpFormatter0.printHelp("                                                                                                    ", "-", options15, "   ");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "-" + "'", str6, "-");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "arg" + "'", str12, "arg");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #354
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: bipush        10
47: invokevirtual #37
50: aload_1
51: invokevirtual #73
54: astore_3
55: aload_1
56: invokevirtual #16
59: astore        4
61: aload_1
62: ldc           #11
64: putfield      #42
67: aload_1
68: ldc           #11
70: invokevirtual #88
73: aload_1
74: invokevirtual #83
77: astore        5
79: aconst_null
80: astore        6
82: aload_1
83: ldc           #118
85: ldc           #49
87: aload         6
89: ldc           #113
91: invokevirtual #128
94: ldc           #18
96: invokestatic  #19
99: goto          104
102: astore        7
104: new           #22
107: dup
108: invokespecial #23
111: ldc           #24
113: invokevirtual #25
116: iload_2
117: invokevirtual #29
120: ldc           #30
122: invokevirtual #25
125: iconst_1
126: invokevirtual #29
129: ldc           #24
131: invokevirtual #25
134: invokevirtual #27
137: iload_2
138: iconst_1
139: if_icmpne     146
142: iconst_1
143: goto          147
146: iconst_0
147: invokestatic  #31
150: new           #22
153: dup
154: invokespecial #23
157: ldc           #24
159: invokevirtual #25
162: aload_3
163: invokevirtual #25
166: ldc           #48
168: invokevirtual #25
171: invokevirtual #27
174: aload_3
175: ldc           #49
177: invokestatic  #28
180: new           #22
183: dup
184: invokespecial #23
187: ldc           #24
189: invokevirtual #25
192: aload         4
194: invokevirtual #25
197: ldc           #26
199: invokevirtual #25
202: invokevirtual #27
205: aload         4
207: ldc           #11
209: invokestatic  #28
212: new           #22
215: dup
216: invokespecial #23
219: ldc           #24
221: invokevirtual #25
224: aload         5
226: invokevirtual #25
229: ldc           #79
231: invokevirtual #25
234: invokevirtual #27
237: aload         5
239: ldc           #78
241: invokestatic  #28
244: return
Exception table:
from    to  target type
82    99   102   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0751
Start line: 5717
End line: 0
Method source code: 
    public void test0751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0751");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.lang.String str1 = helpFormatter0.defaultSyntaxPrefix;
        int int2 = helpFormatter0.getWidth();
        java.lang.String str3 = helpFormatter0.defaultOptPrefix;
        int int4 = helpFormatter0.getLeftPadding();
        java.lang.String str5 = helpFormatter0.getNewLine();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "usage: " + "'", str1, "usage: ");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 74 + "'", int2 == 74);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "-" + "'", str3, "-");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\n" + "'", str5, "\n");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #355
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: getfield      #45
37: astore_2
38: aload_1
39: invokevirtual #66
42: istore_3
43: aload_1
44: getfield      #42
47: astore        4
49: aload_1
50: invokevirtual #35
53: istore        5
55: aload_1
56: invokevirtual #16
59: astore        6
61: new           #22
64: dup
65: invokespecial #23
68: ldc           #24
70: invokevirtual #25
73: aload_2
74: invokevirtual #25
77: ldc           #104
79: invokevirtual #25
82: invokevirtual #27
85: aload_2
86: ldc           #46
88: invokestatic  #28
91: new           #22
94: dup
95: invokespecial #23
98: ldc           #24
100: invokevirtual #25
103: iload_3
104: invokevirtual #29
107: ldc           #30
109: invokevirtual #25
112: bipush        74
114: invokevirtual #29
117: ldc           #24
119: invokevirtual #25
122: invokevirtual #27
125: iload_3
126: bipush        74
128: if_icmpne     135
131: iconst_1
132: goto          136
135: iconst_0
136: invokestatic  #31
139: new           #22
142: dup
143: invokespecial #23
146: ldc           #24
148: invokevirtual #25
151: aload         4
153: invokevirtual #25
156: ldc           #48
158: invokevirtual #25
161: invokevirtual #27
164: aload         4
166: ldc           #49
168: invokestatic  #28
171: new           #22
174: dup
175: invokespecial #23
178: ldc           #24
180: invokevirtual #25
183: iload         5
185: invokevirtual #29
188: ldc           #30
190: invokevirtual #25
193: iconst_1
194: invokevirtual #29
197: ldc           #24
199: invokevirtual #25
202: invokevirtual #27
205: iload         5
207: iconst_1
208: if_icmpne     215
211: iconst_1
212: goto          216
215: iconst_0
216: invokestatic  #31
219: new           #22
222: dup
223: invokespecial #23
226: ldc           #24
228: invokevirtual #25
231: aload         6
233: invokevirtual #25
236: ldc           #32
238: invokevirtual #25
241: invokevirtual #27
244: aload         6
246: ldc           #33
248: invokestatic  #28
251: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0752
Start line: 5734
End line: 0
Method source code: 
    public void test0752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0752");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str6 = helpFormatter0.getNewLine();
        helpFormatter0.setSyntaxPrefix(" ");
        java.lang.String str9 = helpFormatter0.defaultSyntaxPrefix;
        org.apache.commons.cli.HelpFormatter helpFormatter10 = new org.apache.commons.cli.HelpFormatter();
        java.lang.String str11 = helpFormatter10.defaultSyntaxPrefix;
        java.util.Comparator comparator12 = helpFormatter10.optionComparator;
        helpFormatter0.optionComparator = comparator12;
        int int14 = helpFormatter0.getWidth();
        helpFormatter0.setLeftPadding((int) (byte) 1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\n" + "'", str6, "\n");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + " " + "'", str9, " ");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "usage: " + "'", str11, "usage: ");
        org.junit.Assert.assertNotNull(comparator12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 74 + "'", int14 == 74);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #356
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #11
36: invokevirtual #51
39: aload_1
40: ldc           #11
42: putfield      #52
45: aload_1
46: getfield      #52
49: astore_2
50: aload_1
51: invokevirtual #16
54: astore_3
55: aload_1
56: ldc           #38
58: invokevirtual #39
61: aload_1
62: getfield      #45
65: astore        4
67: new           #8
70: dup
71: invokespecial #9
74: astore        5
76: aload         5
78: getfield      #45
81: astore        6
83: aload         5
85: getfield      #10
88: astore        7
90: aload_1
91: aload         7
93: putfield      #10
96: aload_1
97: invokevirtual #66
100: istore        8
102: aload_1
103: iconst_1
104: invokevirtual #55
107: new           #22
110: dup
111: invokespecial #23
114: ldc           #24
116: invokevirtual #25
119: aload_2
120: invokevirtual #25
123: ldc           #26
125: invokevirtual #25
128: invokevirtual #27
131: aload_2
132: ldc           #11
134: invokestatic  #28
137: new           #22
140: dup
141: invokespecial #23
144: ldc           #24
146: invokevirtual #25
149: aload_3
150: invokevirtual #25
153: ldc           #32
155: invokevirtual #25
158: invokevirtual #27
161: aload_3
162: ldc           #33
164: invokestatic  #28
167: new           #22
170: dup
171: invokespecial #23
174: ldc           #24
176: invokevirtual #25
179: aload         4
181: invokevirtual #25
184: ldc           #75
186: invokevirtual #25
189: invokevirtual #27
192: aload         4
194: ldc           #38
196: invokestatic  #28
199: new           #22
202: dup
203: invokespecial #23
206: ldc           #24
208: invokevirtual #25
211: aload         6
213: invokevirtual #25
216: ldc           #104
218: invokevirtual #25
221: invokevirtual #27
224: aload         6
226: ldc           #46
228: invokestatic  #28
231: aload         7
233: invokestatic  #21
236: new           #22
239: dup
240: invokespecial #23
243: ldc           #24
245: invokevirtual #25
248: iload         8
250: invokevirtual #29
253: ldc           #30
255: invokevirtual #25
258: bipush        74
260: invokevirtual #29
263: ldc           #24
265: invokevirtual #25
268: invokevirtual #27
271: iload         8
273: bipush        74
275: if_icmpne     282
278: iconst_1
279: goto          283
282: iconst_0
283: invokestatic  #31
286: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0753
Start line: 5759
End line: 0
Method source code: 
    public void test0753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0753");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setLongOptPrefix(" ");
        helpFormatter0.defaultDescPad = (short) 10;
        helpFormatter0.setLongOptPrefix("--");
        java.lang.String str11 = helpFormatter0.getLongOptSeparator();
        java.lang.String str12 = helpFormatter0.defaultArgName;
        java.lang.String str13 = helpFormatter0.getLongOptSeparator();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + " " + "'", str11, " ");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "arg" + "'", str12, "arg");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + " " + "'", str13, " ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #357
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: getfield      #42
48: astore_3
49: aload_1
50: ldc           #38
52: invokevirtual #43
55: aload_1
56: bipush        10
58: putfield      #44
61: aload_1
62: ldc           #63
64: invokevirtual #43
67: aload_1
68: invokevirtual #72
71: astore        4
73: aload_1
74: getfield      #15
77: astore        5
79: aload_1
80: invokevirtual #72
83: astore        6
85: new           #22
88: dup
89: invokespecial #23
92: ldc           #24
94: invokevirtual #25
97: iload_2
98: invokevirtual #29
101: ldc           #30
103: invokevirtual #25
106: iconst_1
107: invokevirtual #29
110: ldc           #24
112: invokevirtual #25
115: invokevirtual #27
118: iload_2
119: iconst_1
120: if_icmpne     127
123: iconst_1
124: goto          128
127: iconst_0
128: invokestatic  #31
131: new           #22
134: dup
135: invokespecial #23
138: ldc           #24
140: invokevirtual #25
143: aload_3
144: invokevirtual #25
147: ldc           #48
149: invokevirtual #25
152: invokevirtual #27
155: aload_3
156: ldc           #49
158: invokestatic  #28
161: new           #22
164: dup
165: invokespecial #23
168: ldc           #24
170: invokevirtual #25
173: aload         4
175: invokevirtual #25
178: ldc           #75
180: invokevirtual #25
183: invokevirtual #27
186: aload         4
188: ldc           #38
190: invokestatic  #28
193: new           #22
196: dup
197: invokespecial #23
200: ldc           #24
202: invokevirtual #25
205: aload         5
207: invokevirtual #25
210: ldc           #79
212: invokevirtual #25
215: invokevirtual #27
218: aload         5
220: ldc           #78
222: invokestatic  #28
225: new           #22
228: dup
229: invokespecial #23
232: ldc           #24
234: invokevirtual #25
237: aload         6
239: invokevirtual #25
242: ldc           #75
244: invokevirtual #25
247: invokevirtual #27
250: aload         6
252: ldc           #38
254: invokestatic  #28
257: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0754
Start line: 5780
End line: 0
Method source code: 
    public void test0754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0754");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        int int4 = helpFormatter0.defaultWidth;
        helpFormatter0.setOptPrefix("");
        helpFormatter0.setOptPrefix("arg");
        org.apache.commons.cli.Options options12 = null;
        try {
            helpFormatter0.printHelp((int) 'a', "usage: ", "", options12, "arg", true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 74 + "'", int4 == 74);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #358
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: getfield      #57
48: istore_3
49: aload_1
50: ldc           #11
52: invokevirtual #51
55: aload_1
56: ldc           #78
58: invokevirtual #51
61: aconst_null
62: astore        4
64: aload_1
65: bipush        97
67: ldc           #46
69: ldc           #11
71: aload         4
73: ldc           #78
75: iconst_1
76: invokevirtual #274
79: ldc           #18
81: invokestatic  #19
84: goto          89
87: astore        5
89: new           #22
92: dup
93: invokespecial #23
96: ldc           #24
98: invokevirtual #25
101: iload_2
102: invokevirtual #29
105: ldc           #30
107: invokevirtual #25
110: iconst_1
111: invokevirtual #29
114: ldc           #24
116: invokevirtual #25
119: invokevirtual #27
122: iload_2
123: iconst_1
124: if_icmpne     131
127: iconst_1
128: goto          132
131: iconst_0
132: invokestatic  #31
135: new           #22
138: dup
139: invokespecial #23
142: ldc           #24
144: invokevirtual #25
147: iload_3
148: invokevirtual #29
151: ldc           #30
153: invokevirtual #25
156: bipush        74
158: invokevirtual #29
161: ldc           #24
163: invokevirtual #25
166: invokevirtual #27
169: iload_3
170: bipush        74
172: if_icmpne     179
175: iconst_1
176: goto          180
179: iconst_0
180: invokestatic  #31
183: return
Exception table:
from    to  target type
64    84    87   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0755
Start line: 5802
End line: 0
Method source code: 
    public void test0755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0755");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        java.util.Comparator comparator6 = helpFormatter0.optionComparator;
        helpFormatter0.setLongOptPrefix("hi!");
        java.lang.String str9 = helpFormatter0.getLongOptSeparator();
        org.apache.commons.cli.HelpFormatter helpFormatter10 = new org.apache.commons.cli.HelpFormatter();
        int int11 = helpFormatter10.getLeftPadding();
        java.lang.String str12 = helpFormatter10.getArgName();
        helpFormatter10.setSyntaxPrefix("usage: ");
        org.apache.commons.cli.HelpFormatter helpFormatter15 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter15.setOptPrefix("");
        helpFormatter15.defaultLongOptPrefix = "";
        java.lang.String str20 = helpFormatter15.defaultLongOptPrefix;
        java.lang.String str21 = helpFormatter15.getNewLine();
        java.lang.String str22 = helpFormatter15.defaultOptPrefix;
        helpFormatter15.setDescPadding(74);
        java.util.Comparator comparator25 = helpFormatter15.getOptionComparator();
        helpFormatter10.optionComparator = comparator25;
        helpFormatter0.optionComparator = comparator25;
        helpFormatter0.setDescPadding((int) ' ');
        helpFormatter0.setDescPadding(0);
        java.io.PrintWriter printWriter32 = null;
        org.apache.commons.cli.Options options34 = null;
        try {
            helpFormatter0.printOptions(printWriter32, 1, options34, (int) (byte) 0, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(comparator6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + " " + "'", str9, " ");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "arg" + "'", str12, "arg");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "\n" + "'", str21, "\n");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(comparator25);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #359
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: bipush        10
47: invokevirtual #37
50: aload_1
51: getfield      #10
54: astore_3
55: aload_1
56: ldc           #65
58: invokevirtual #43
61: aload_1
62: invokevirtual #72
65: astore        4
67: new           #8
70: dup
71: invokespecial #9
74: astore        5
76: aload         5
78: invokevirtual #35
81: istore        6
83: aload         5
85: invokevirtual #83
88: astore        7
90: aload         5
92: ldc           #46
94: invokevirtual #39
97: new           #8
100: dup
101: invokespecial #9
104: astore        8
106: aload         8
108: ldc           #11
110: invokevirtual #51
113: aload         8
115: ldc           #11
117: putfield      #52
120: aload         8
122: getfield      #52
125: astore        9
127: aload         8
129: invokevirtual #16
132: astore        10
134: aload         8
136: getfield      #42
139: astore        11
141: aload         8
143: bipush        74
145: invokevirtual #37
148: aload         8
150: invokevirtual #58
153: astore        12
155: aload         5
157: aload         12
159: putfield      #10
162: aload_1
163: aload         12
165: putfield      #10
168: aload_1
169: bipush        32
171: invokevirtual #37
174: aload_1
175: iconst_0
176: invokevirtual #37
179: aconst_null
180: astore        13
182: aconst_null
183: astore        14
185: aload_1
186: aload         13
188: iconst_1
189: aload         14
191: iconst_0
192: iconst_0
193: invokevirtual #17
196: ldc           #18
198: invokestatic  #19
201: goto          206
204: astore        15
206: new           #22
209: dup
210: invokespecial #23
213: ldc           #24
215: invokevirtual #25
218: iload_2
219: invokevirtual #29
222: ldc           #30
224: invokevirtual #25
227: iconst_1
228: invokevirtual #29
231: ldc           #24
233: invokevirtual #25
236: invokevirtual #27
239: iload_2
240: iconst_1
241: if_icmpne     248
244: iconst_1
245: goto          249
248: iconst_0
249: invokestatic  #31
252: aload_3
253: invokestatic  #21
256: new           #22
259: dup
260: invokespecial #23
263: ldc           #24
265: invokevirtual #25
268: aload         4
270: invokevirtual #25
273: ldc           #75
275: invokevirtual #25
278: invokevirtual #27
281: aload         4
283: ldc           #38
285: invokestatic  #28
288: new           #22
291: dup
292: invokespecial #23
295: ldc           #24
297: invokevirtual #25
300: iload         6
302: invokevirtual #29
305: ldc           #30
307: invokevirtual #25
310: iconst_1
311: invokevirtual #29
314: ldc           #24
316: invokevirtual #25
319: invokevirtual #27
322: iload         6
324: iconst_1
325: if_icmpne     332
328: iconst_1
329: goto          333
332: iconst_0
333: invokestatic  #31
336: new           #22
339: dup
340: invokespecial #23
343: ldc           #24
345: invokevirtual #25
348: aload         7
350: invokevirtual #25
353: ldc           #79
355: invokevirtual #25
358: invokevirtual #27
361: aload         7
363: ldc           #78
365: invokestatic  #28
368: new           #22
371: dup
372: invokespecial #23
375: ldc           #24
377: invokevirtual #25
380: aload         9
382: invokevirtual #25
385: ldc           #26
387: invokevirtual #25
390: invokevirtual #27
393: aload         9
395: ldc           #11
397: invokestatic  #28
400: new           #22
403: dup
404: invokespecial #23
407: ldc           #24
409: invokevirtual #25
412: aload         10
414: invokevirtual #25
417: ldc           #32
419: invokevirtual #25
422: invokevirtual #27
425: aload         10
427: ldc           #33
429: invokestatic  #28
432: new           #22
435: dup
436: invokespecial #23
439: ldc           #24
441: invokevirtual #25
444: aload         11
446: invokevirtual #25
449: ldc           #26
451: invokevirtual #25
454: invokevirtual #27
457: aload         11
459: ldc           #11
461: invokestatic  #28
464: aload         12
466: invokestatic  #21
469: return
Exception table:
from    to  target type
185   201   204   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0756
Start line: 5849
End line: 0
Method source code: 
    public void test0756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0756");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setLongOptPrefix(" ");
        helpFormatter0.defaultDescPad = 0;
        helpFormatter0.defaultLeftPad = (byte) 100;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #360
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: getfield      #42
48: astore_3
49: aload_1
50: ldc           #38
52: invokevirtual #43
55: aload_1
56: iconst_0
57: putfield      #44
60: aload_1
61: bipush        100
63: putfield      #40
66: new           #22
69: dup
70: invokespecial #23
73: ldc           #24
75: invokevirtual #25
78: iload_2
79: invokevirtual #29
82: ldc           #30
84: invokevirtual #25
87: iconst_1
88: invokevirtual #29
91: ldc           #24
93: invokevirtual #25
96: invokevirtual #27
99: iload_2
100: iconst_1
101: if_icmpne     108
104: iconst_1
105: goto          109
108: iconst_0
109: invokestatic  #31
112: new           #22
115: dup
116: invokespecial #23
119: ldc           #24
121: invokevirtual #25
124: aload_3
125: invokevirtual #25
128: ldc           #48
130: invokevirtual #25
133: invokevirtual #27
136: aload_3
137: ldc           #49
139: invokestatic  #28
142: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0757
Start line: 5864
End line: 0
Method source code: 
    public void test0757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0757");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        java.lang.String str6 = helpFormatter0.rtrim("");
        int int7 = helpFormatter0.getDescPadding();
        int int8 = helpFormatter0.getDescPadding();
        helpFormatter0.setWidth((int) '4');
        int int11 = helpFormatter0.defaultWidth;
        java.lang.String str12 = helpFormatter0.getSyntaxPrefix();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 3 + "'", int7 == 3);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 3 + "'", int8 == 3);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "usage: " + "'", str12, "usage: ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #361
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: getfield      #42
48: astore_3
49: aload_1
50: ldc           #11
52: invokevirtual #12
55: astore        4
57: aload_1
58: invokevirtual #13
61: istore        5
63: aload_1
64: invokevirtual #13
67: istore        6
69: aload_1
70: bipush        52
72: invokevirtual #90
75: aload_1
76: getfield      #57
79: istore        7
81: aload_1
82: invokevirtual #89
85: astore        8
87: new           #22
90: dup
91: invokespecial #23
94: ldc           #24
96: invokevirtual #25
99: iload_2
100: invokevirtual #29
103: ldc           #30
105: invokevirtual #25
108: iconst_1
109: invokevirtual #29
112: ldc           #24
114: invokevirtual #25
117: invokevirtual #27
120: iload_2
121: iconst_1
122: if_icmpne     129
125: iconst_1
126: goto          130
129: iconst_0
130: invokestatic  #31
133: new           #22
136: dup
137: invokespecial #23
140: ldc           #24
142: invokevirtual #25
145: aload_3
146: invokevirtual #25
149: ldc           #48
151: invokevirtual #25
154: invokevirtual #27
157: aload_3
158: ldc           #49
160: invokestatic  #28
163: new           #22
166: dup
167: invokespecial #23
170: ldc           #24
172: invokevirtual #25
175: aload         4
177: invokevirtual #25
180: ldc           #26
182: invokevirtual #25
185: invokevirtual #27
188: aload         4
190: ldc           #11
192: invokestatic  #28
195: new           #22
198: dup
199: invokespecial #23
202: ldc           #24
204: invokevirtual #25
207: iload         5
209: invokevirtual #29
212: ldc           #30
214: invokevirtual #25
217: iconst_3
218: invokevirtual #29
221: ldc           #24
223: invokevirtual #25
226: invokevirtual #27
229: iload         5
231: iconst_3
232: if_icmpne     239
235: iconst_1
236: goto          240
239: iconst_0
240: invokestatic  #31
243: new           #22
246: dup
247: invokespecial #23
250: ldc           #24
252: invokevirtual #25
255: iload         6
257: invokevirtual #29
260: ldc           #30
262: invokevirtual #25
265: iconst_3
266: invokevirtual #29
269: ldc           #24
271: invokevirtual #25
274: invokevirtual #27
277: iload         6
279: iconst_3
280: if_icmpne     287
283: iconst_1
284: goto          288
287: iconst_0
288: invokestatic  #31
291: new           #22
294: dup
295: invokespecial #23
298: ldc           #24
300: invokevirtual #25
303: iload         7
305: invokevirtual #29
308: ldc           #30
310: invokevirtual #25
313: bipush        52
315: invokevirtual #29
318: ldc           #24
320: invokevirtual #25
323: invokevirtual #27
326: iload         7
328: bipush        52
330: if_icmpne     337
333: iconst_1
334: goto          338
337: iconst_0
338: invokestatic  #31
341: new           #22
344: dup
345: invokespecial #23
348: ldc           #24
350: invokevirtual #25
353: aload         8
355: invokevirtual #25
358: ldc           #104
360: invokevirtual #25
363: invokevirtual #27
366: aload         8
368: ldc           #46
370: invokestatic  #28
373: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0758
Start line: 5887
End line: 0
Method source code: 
    public void test0758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0758");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str3 = helpFormatter0.getOptPrefix();
        int int4 = helpFormatter0.defaultDescPad;
        int int5 = helpFormatter0.defaultLeftPad;
        int int6 = helpFormatter0.defaultLeftPad;
        int int10 = helpFormatter0.findWrapPos("                                                                                                 ", (int) (byte) 100, (-2));
        int int14 = helpFormatter0.findWrapPos("", 100, 74);
        helpFormatter0.setLeftPadding((int) (byte) 10);
        java.lang.String str18 = helpFormatter0.rtrim(" ");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "--" + "'", str2, "--");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "-" + "'", str3, "-");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 3 + "'", int4 == 3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #362
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: getfield      #52
42: astore_3
43: aload_1
44: invokevirtual #73
47: astore        4
49: aload_1
50: getfield      #44
53: istore        5
55: aload_1
56: getfield      #40
59: istore        6
61: aload_1
62: getfield      #40
65: istore        7
67: aload_1
68: ldc           #14
70: bipush        100
72: bipush        -2
74: invokevirtual #61
77: istore        8
79: aload_1
80: ldc           #11
82: bipush        100
84: bipush        74
86: invokevirtual #61
89: istore        9
91: aload_1
92: bipush        10
94: invokevirtual #55
97: aload_1
98: ldc           #38
100: invokevirtual #12
103: astore        10
105: new           #22
108: dup
109: invokespecial #23
112: ldc           #24
114: invokevirtual #25
117: iload_2
118: invokevirtual #29
121: ldc           #30
123: invokevirtual #25
126: iconst_1
127: invokevirtual #29
130: ldc           #24
132: invokevirtual #25
135: invokevirtual #27
138: iload_2
139: iconst_1
140: if_icmpne     147
143: iconst_1
144: goto          148
147: iconst_0
148: invokestatic  #31
151: new           #22
154: dup
155: invokespecial #23
158: ldc           #24
160: invokevirtual #25
163: aload_3
164: invokevirtual #25
167: ldc           #62
169: invokevirtual #25
172: invokevirtual #27
175: aload_3
176: ldc           #63
178: invokestatic  #28
181: new           #22
184: dup
185: invokespecial #23
188: ldc           #24
190: invokevirtual #25
193: aload         4
195: invokevirtual #25
198: ldc           #48
200: invokevirtual #25
203: invokevirtual #27
206: aload         4
208: ldc           #49
210: invokestatic  #28
213: new           #22
216: dup
217: invokespecial #23
220: ldc           #24
222: invokevirtual #25
225: iload         5
227: invokevirtual #29
230: ldc           #30
232: invokevirtual #25
235: iconst_3
236: invokevirtual #29
239: ldc           #24
241: invokevirtual #25
244: invokevirtual #27
247: iload         5
249: iconst_3
250: if_icmpne     257
253: iconst_1
254: goto          258
257: iconst_0
258: invokestatic  #31
261: new           #22
264: dup
265: invokespecial #23
268: ldc           #24
270: invokevirtual #25
273: iload         6
275: invokevirtual #29
278: ldc           #30
280: invokevirtual #25
283: iconst_1
284: invokevirtual #29
287: ldc           #24
289: invokevirtual #25
292: invokevirtual #27
295: iload         6
297: iconst_1
298: if_icmpne     305
301: iconst_1
302: goto          306
305: iconst_0
306: invokestatic  #31
309: new           #22
312: dup
313: invokespecial #23
316: ldc           #24
318: invokevirtual #25
321: iload         7
323: invokevirtual #29
326: ldc           #30
328: invokevirtual #25
331: iconst_1
332: invokevirtual #29
335: ldc           #24
337: invokevirtual #25
340: invokevirtual #27
343: iload         7
345: iconst_1
346: if_icmpne     353
349: iconst_1
350: goto          354
353: iconst_0
354: invokestatic  #31
357: new           #22
360: dup
361: invokespecial #23
364: ldc           #24
366: invokevirtual #25
369: iload         8
371: invokevirtual #29
374: ldc           #30
376: invokevirtual #25
379: iconst_m1
380: invokevirtual #29
383: ldc           #24
385: invokevirtual #25
388: invokevirtual #27
391: iload         8
393: iconst_m1
394: if_icmpne     401
397: iconst_1
398: goto          402
401: iconst_0
402: invokestatic  #31
405: new           #22
408: dup
409: invokespecial #23
412: ldc           #24
414: invokevirtual #25
417: iload         9
419: invokevirtual #29
422: ldc           #30
424: invokevirtual #25
427: iconst_m1
428: invokevirtual #29
431: ldc           #24
433: invokevirtual #25
436: invokevirtual #27
439: iload         9
441: iconst_m1
442: if_icmpne     449
445: iconst_1
446: goto          450
449: iconst_0
450: invokestatic  #31
453: new           #22
456: dup
457: invokespecial #23
460: ldc           #24
462: invokevirtual #25
465: aload         10
467: invokevirtual #25
470: ldc           #26
472: invokevirtual #25
475: invokevirtual #27
478: aload         10
480: ldc           #11
482: invokestatic  #28
485: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0759
Start line: 5913
End line: 0
Method source code: 
    public void test0759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0759");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        int int4 = helpFormatter0.defaultDescPad;
        helpFormatter0.defaultNewLine = " ";
        java.lang.String str7 = helpFormatter0.getSyntaxPrefix();
        helpFormatter0.defaultWidth = 1;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 3 + "'", int4 == 3);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "usage: " + "'", str7, "usage: ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #363
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: getfield      #44
48: istore_3
49: aload_1
50: ldc           #38
52: putfield      #36
55: aload_1
56: invokevirtual #89
59: astore        4
61: aload_1
62: iconst_1
63: putfield      #57
66: new           #22
69: dup
70: invokespecial #23
73: ldc           #24
75: invokevirtual #25
78: iload_2
79: invokevirtual #29
82: ldc           #30
84: invokevirtual #25
87: iconst_1
88: invokevirtual #29
91: ldc           #24
93: invokevirtual #25
96: invokevirtual #27
99: iload_2
100: iconst_1
101: if_icmpne     108
104: iconst_1
105: goto          109
108: iconst_0
109: invokestatic  #31
112: new           #22
115: dup
116: invokespecial #23
119: ldc           #24
121: invokevirtual #25
124: iload_3
125: invokevirtual #29
128: ldc           #30
130: invokevirtual #25
133: iconst_3
134: invokevirtual #29
137: ldc           #24
139: invokevirtual #25
142: invokevirtual #27
145: iload_3
146: iconst_3
147: if_icmpne     154
150: iconst_1
151: goto          155
154: iconst_0
155: invokestatic  #31
158: new           #22
161: dup
162: invokespecial #23
165: ldc           #24
167: invokevirtual #25
170: aload         4
172: invokevirtual #25
175: ldc           #104
177: invokevirtual #25
180: invokevirtual #27
183: aload         4
185: ldc           #46
187: invokestatic  #28
190: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0760
Start line: 5929
End line: 0
Method source code: 
    public void test0760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0760");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.defaultDescPad = '4';
        helpFormatter0.setNewLine("");
        helpFormatter0.setSyntaxPrefix("");
        java.lang.String str10 = helpFormatter0.getSyntaxPrefix();
        helpFormatter0.setWidth((-2));
        java.lang.String str13 = helpFormatter0.defaultNewLine;
        int int14 = helpFormatter0.defaultDescPad;
        java.lang.String str15 = helpFormatter0.getLongOptPrefix();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "--" + "'", str15, "--");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #364
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: bipush        52
47: putfield      #44
50: aload_1
51: ldc           #11
53: invokevirtual #88
56: aload_1
57: ldc           #11
59: invokevirtual #39
62: aload_1
63: invokevirtual #89
66: astore_3
67: aload_1
68: bipush        -2
70: invokevirtual #90
73: aload_1
74: getfield      #36
77: astore        4
79: aload_1
80: getfield      #44
83: istore        5
85: aload_1
86: invokevirtual #53
89: astore        6
91: new           #22
94: dup
95: invokespecial #23
98: ldc           #24
100: invokevirtual #25
103: iload_2
104: invokevirtual #29
107: ldc           #30
109: invokevirtual #25
112: iconst_1
113: invokevirtual #29
116: ldc           #24
118: invokevirtual #25
121: invokevirtual #27
124: iload_2
125: iconst_1
126: if_icmpne     133
129: iconst_1
130: goto          134
133: iconst_0
134: invokestatic  #31
137: new           #22
140: dup
141: invokespecial #23
144: ldc           #24
146: invokevirtual #25
149: aload_3
150: invokevirtual #25
153: ldc           #26
155: invokevirtual #25
158: invokevirtual #27
161: aload_3
162: ldc           #11
164: invokestatic  #28
167: new           #22
170: dup
171: invokespecial #23
174: ldc           #24
176: invokevirtual #25
179: aload         4
181: invokevirtual #25
184: ldc           #26
186: invokevirtual #25
189: invokevirtual #27
192: aload         4
194: ldc           #11
196: invokestatic  #28
199: new           #22
202: dup
203: invokespecial #23
206: ldc           #24
208: invokevirtual #25
211: iload         5
213: invokevirtual #29
216: ldc           #30
218: invokevirtual #25
221: bipush        52
223: invokevirtual #29
226: ldc           #24
228: invokevirtual #25
231: invokevirtual #27
234: iload         5
236: bipush        52
238: if_icmpne     245
241: iconst_1
242: goto          246
245: iconst_0
246: invokestatic  #31
249: new           #22
252: dup
253: invokespecial #23
256: ldc           #24
258: invokevirtual #25
261: aload         6
263: invokevirtual #25
266: ldc           #62
268: invokevirtual #25
271: invokevirtual #27
274: aload         6
276: ldc           #63
278: invokestatic  #28
281: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0761
Start line: 5951
End line: 0
Method source code: 
    public void test0761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0761");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        int int6 = helpFormatter0.defaultWidth;
        java.lang.String str7 = helpFormatter0.defaultNewLine;
        java.lang.String str8 = helpFormatter0.getNewLine();
        java.io.PrintWriter printWriter9 = null;
        try {
            helpFormatter0.printUsage(printWriter9, 32, "   ");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "--" + "'", str5, "--");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 74 + "'", int6 == 74);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #365
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: getfield      #42
48: astore_3
49: aload_1
50: getfield      #52
53: astore        4
55: aload_1
56: getfield      #57
59: istore        5
61: aload_1
62: getfield      #36
65: astore        6
67: aload_1
68: invokevirtual #16
71: astore        7
73: aconst_null
74: astore        8
76: aload_1
77: aload         8
79: bipush        32
81: ldc           #113
83: invokevirtual #248
86: ldc           #18
88: invokestatic  #19
91: goto          96
94: astore        9
96: new           #22
99: dup
100: invokespecial #23
103: ldc           #24
105: invokevirtual #25
108: iload_2
109: invokevirtual #29
112: ldc           #30
114: invokevirtual #25
117: iconst_1
118: invokevirtual #29
121: ldc           #24
123: invokevirtual #25
126: invokevirtual #27
129: iload_2
130: iconst_1
131: if_icmpne     138
134: iconst_1
135: goto          139
138: iconst_0
139: invokestatic  #31
142: new           #22
145: dup
146: invokespecial #23
149: ldc           #24
151: invokevirtual #25
154: aload_3
155: invokevirtual #25
158: ldc           #48
160: invokevirtual #25
163: invokevirtual #27
166: aload_3
167: ldc           #49
169: invokestatic  #28
172: new           #22
175: dup
176: invokespecial #23
179: ldc           #24
181: invokevirtual #25
184: aload         4
186: invokevirtual #25
189: ldc           #62
191: invokevirtual #25
194: invokevirtual #27
197: aload         4
199: ldc           #63
201: invokestatic  #28
204: new           #22
207: dup
208: invokespecial #23
211: ldc           #24
213: invokevirtual #25
216: iload         5
218: invokevirtual #29
221: ldc           #30
223: invokevirtual #25
226: bipush        74
228: invokevirtual #29
231: ldc           #24
233: invokevirtual #25
236: invokevirtual #27
239: iload         5
241: bipush        74
243: if_icmpne     250
246: iconst_1
247: goto          251
250: iconst_0
251: invokestatic  #31
254: new           #22
257: dup
258: invokespecial #23
261: ldc           #24
263: invokevirtual #25
266: aload         6
268: invokevirtual #25
271: ldc           #26
273: invokevirtual #25
276: invokevirtual #27
279: aload         6
281: ldc           #11
283: invokestatic  #28
286: new           #22
289: dup
290: invokespecial #23
293: ldc           #24
295: invokevirtual #25
298: aload         7
300: invokevirtual #25
303: ldc           #26
305: invokevirtual #25
308: invokevirtual #27
311: aload         7
313: ldc           #11
315: invokestatic  #28
318: return
Exception table:
from    to  target type
76    91    94   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0762
Start line: 5979
End line: 0
Method source code: 
    public void test0762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0762");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.defaultDescPad = '4';
        helpFormatter0.setNewLine("");
        int int11 = helpFormatter0.findWrapPos("\n", (int) ' ', 3);
        int int12 = helpFormatter0.getLeftPadding();
        helpFormatter0.setWidth(100);
        java.lang.StringBuffer stringBuffer15 = null;
        org.apache.commons.cli.Options options17 = null;
        try {
            java.lang.StringBuffer stringBuffer20 = helpFormatter0.renderOptions(stringBuffer15, (int) (short) 1, options17, 74, 74);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #366
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: bipush        52
47: putfield      #44
50: aload_1
51: ldc           #11
53: invokevirtual #88
56: aload_1
57: ldc           #33
59: bipush        32
61: iconst_3
62: invokevirtual #61
65: istore_3
66: aload_1
67: invokevirtual #35
70: istore        4
72: aload_1
73: bipush        100
75: invokevirtual #90
78: aconst_null
79: astore        5
81: aconst_null
82: astore        6
84: aload_1
85: aload         5
87: iconst_1
88: aload         6
90: bipush        74
92: bipush        74
94: invokevirtual #47
97: astore        7
99: ldc           #18
101: invokestatic  #19
104: goto          109
107: astore        7
109: new           #22
112: dup
113: invokespecial #23
116: ldc           #24
118: invokevirtual #25
121: iload_2
122: invokevirtual #29
125: ldc           #30
127: invokevirtual #25
130: iconst_1
131: invokevirtual #29
134: ldc           #24
136: invokevirtual #25
139: invokevirtual #27
142: iload_2
143: iconst_1
144: if_icmpne     151
147: iconst_1
148: goto          152
151: iconst_0
152: invokestatic  #31
155: new           #22
158: dup
159: invokespecial #23
162: ldc           #24
164: invokevirtual #25
167: iload_3
168: invokevirtual #29
171: ldc           #30
173: invokevirtual #25
176: iconst_m1
177: invokevirtual #29
180: ldc           #24
182: invokevirtual #25
185: invokevirtual #27
188: iload_3
189: iconst_m1
190: if_icmpne     197
193: iconst_1
194: goto          198
197: iconst_0
198: invokestatic  #31
201: new           #22
204: dup
205: invokespecial #23
208: ldc           #24
210: invokevirtual #25
213: iload         4
215: invokevirtual #29
218: ldc           #30
220: invokevirtual #25
223: iconst_1
224: invokevirtual #29
227: ldc           #24
229: invokevirtual #25
232: invokevirtual #27
235: iload         4
237: iconst_1
238: if_icmpne     245
241: iconst_1
242: goto          246
245: iconst_0
246: invokestatic  #31
249: return
Exception table:
from    to  target type
84   104   107   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0763
Start line: 6005
End line: 0
Method source code: 
    public void test0763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0763");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.defaultDescPad = '4';
        helpFormatter0.setNewLine("");
        helpFormatter0.setLongOptPrefix(" ");
        java.lang.String str10 = helpFormatter0.defaultSyntaxPrefix;
        helpFormatter0.setArgName("");
        java.lang.String str13 = helpFormatter0.getArgName();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "usage: " + "'", str10, "usage: ");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #367
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: bipush        52
47: putfield      #44
50: aload_1
51: ldc           #11
53: invokevirtual #88
56: aload_1
57: ldc           #38
59: invokevirtual #43
62: aload_1
63: getfield      #45
66: astore_3
67: aload_1
68: ldc           #11
70: invokevirtual #59
73: aload_1
74: invokevirtual #83
77: astore        4
79: new           #22
82: dup
83: invokespecial #23
86: ldc           #24
88: invokevirtual #25
91: iload_2
92: invokevirtual #29
95: ldc           #30
97: invokevirtual #25
100: iconst_1
101: invokevirtual #29
104: ldc           #24
106: invokevirtual #25
109: invokevirtual #27
112: iload_2
113: iconst_1
114: if_icmpne     121
117: iconst_1
118: goto          122
121: iconst_0
122: invokestatic  #31
125: new           #22
128: dup
129: invokespecial #23
132: ldc           #24
134: invokevirtual #25
137: aload_3
138: invokevirtual #25
141: ldc           #104
143: invokevirtual #25
146: invokevirtual #27
149: aload_3
150: ldc           #46
152: invokestatic  #28
155: new           #22
158: dup
159: invokespecial #23
162: ldc           #24
164: invokevirtual #25
167: aload         4
169: invokevirtual #25
172: ldc           #26
174: invokevirtual #25
177: invokevirtual #27
180: aload         4
182: ldc           #11
184: invokestatic  #28
187: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0764
Start line: 6023
End line: 0
Method source code: 
    public void test0764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0764");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultOptPrefix;
        java.lang.String str6 = helpFormatter0.getLongOptPrefix();
        java.lang.String str7 = helpFormatter0.defaultOptPrefix;
        int int8 = helpFormatter0.getLeftPadding();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #368
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #11
36: invokevirtual #51
39: aload_1
40: ldc           #11
42: putfield      #52
45: aload_1
46: getfield      #42
49: astore_2
50: aload_1
51: invokevirtual #53
54: astore_3
55: aload_1
56: getfield      #42
59: astore        4
61: aload_1
62: invokevirtual #35
65: istore        5
67: new           #22
70: dup
71: invokespecial #23
74: ldc           #24
76: invokevirtual #25
79: aload_2
80: invokevirtual #25
83: ldc           #26
85: invokevirtual #25
88: invokevirtual #27
91: aload_2
92: ldc           #11
94: invokestatic  #28
97: new           #22
100: dup
101: invokespecial #23
104: ldc           #24
106: invokevirtual #25
109: aload_3
110: invokevirtual #25
113: ldc           #26
115: invokevirtual #25
118: invokevirtual #27
121: aload_3
122: ldc           #11
124: invokestatic  #28
127: new           #22
130: dup
131: invokespecial #23
134: ldc           #24
136: invokevirtual #25
139: aload         4
141: invokevirtual #25
144: ldc           #26
146: invokevirtual #25
149: invokevirtual #27
152: aload         4
154: ldc           #11
156: invokestatic  #28
159: new           #22
162: dup
163: invokespecial #23
166: ldc           #24
168: invokevirtual #25
171: iload         5
173: invokevirtual #29
176: ldc           #30
178: invokevirtual #25
181: iconst_1
182: invokevirtual #29
185: ldc           #24
187: invokevirtual #25
190: invokevirtual #27
193: iload         5
195: iconst_1
196: if_icmpne     203
199: iconst_1
200: goto          204
203: iconst_0
204: invokestatic  #31
207: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0765
Start line: 6040
End line: 0
Method source code: 
    public void test0765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0765");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultOptPrefix;
        java.lang.String str6 = helpFormatter0.getLongOptPrefix();
        java.lang.String str7 = helpFormatter0.defaultOptPrefix;
        java.util.Comparator comparator8 = helpFormatter0.getOptionComparator();
        helpFormatter0.setArgName("                                                                                                 ");
        java.lang.String str11 = helpFormatter0.defaultLongOptPrefix;
        int int12 = helpFormatter0.getLeftPadding();
        java.io.PrintWriter printWriter13 = null;
        org.apache.commons.cli.Options options15 = null;
        try {
            helpFormatter0.printOptions(printWriter13, (int) (byte) 10, options15, (int) (byte) 100, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(comparator8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #369
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #11
36: invokevirtual #51
39: aload_1
40: ldc           #11
42: putfield      #52
45: aload_1
46: getfield      #42
49: astore_2
50: aload_1
51: invokevirtual #53
54: astore_3
55: aload_1
56: getfield      #42
59: astore        4
61: aload_1
62: invokevirtual #58
65: astore        5
67: aload_1
68: ldc           #14
70: invokevirtual #59
73: aload_1
74: getfield      #52
77: astore        6
79: aload_1
80: invokevirtual #35
83: istore        7
85: aconst_null
86: astore        8
88: aconst_null
89: astore        9
91: aload_1
92: aload         8
94: bipush        10
96: aload         9
98: bipush        100
100: bipush        32
102: invokevirtual #17
105: ldc           #18
107: invokestatic  #19
110: goto          115
113: astore        10
115: new           #22
118: dup
119: invokespecial #23
122: ldc           #24
124: invokevirtual #25
127: aload_2
128: invokevirtual #25
131: ldc           #26
133: invokevirtual #25
136: invokevirtual #27
139: aload_2
140: ldc           #11
142: invokestatic  #28
145: new           #22
148: dup
149: invokespecial #23
152: ldc           #24
154: invokevirtual #25
157: aload_3
158: invokevirtual #25
161: ldc           #26
163: invokevirtual #25
166: invokevirtual #27
169: aload_3
170: ldc           #11
172: invokestatic  #28
175: new           #22
178: dup
179: invokespecial #23
182: ldc           #24
184: invokevirtual #25
187: aload         4
189: invokevirtual #25
192: ldc           #26
194: invokevirtual #25
197: invokevirtual #27
200: aload         4
202: ldc           #11
204: invokestatic  #28
207: aload         5
209: invokestatic  #21
212: new           #22
215: dup
216: invokespecial #23
219: ldc           #24
221: invokevirtual #25
224: aload         6
226: invokevirtual #25
229: ldc           #26
231: invokevirtual #25
234: invokevirtual #27
237: aload         6
239: ldc           #11
241: invokestatic  #28
244: new           #22
247: dup
248: invokespecial #23
251: ldc           #24
253: invokevirtual #25
256: iload         7
258: invokevirtual #29
261: ldc           #30
263: invokevirtual #25
266: iconst_1
267: invokevirtual #29
270: ldc           #24
272: invokevirtual #25
275: invokevirtual #27
278: iload         7
280: iconst_1
281: if_icmpne     288
284: iconst_1
285: goto          289
288: iconst_0
289: invokestatic  #31
292: return
Exception table:
from    to  target type
91   110   113   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0766
Start line: 6071
End line: 0
Method source code: 
    public void test0766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0766");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str3 = helpFormatter0.getOptPrefix();
        java.util.Comparator comparator4 = helpFormatter0.optionComparator;
        java.lang.String str5 = helpFormatter0.getOptPrefix();
        helpFormatter0.setSyntaxPrefix("-");
        org.apache.commons.cli.Options options9 = null;
        try {
            helpFormatter0.printHelp(" ", options9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "--" + "'", str2, "--");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "-" + "'", str3, "-");
        org.junit.Assert.assertNotNull(comparator4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "-" + "'", str5, "-");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #370
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: getfield      #52
42: astore_3
43: aload_1
44: invokevirtual #73
47: astore        4
49: aload_1
50: getfield      #10
53: astore        5
55: aload_1
56: invokevirtual #73
59: astore        6
61: aload_1
62: ldc           #49
64: invokevirtual #39
67: aconst_null
68: astore        7
70: aload_1
71: ldc           #38
73: aload         7
75: invokevirtual #240
78: ldc           #18
80: invokestatic  #19
83: goto          88
86: astore        8
88: new           #22
91: dup
92: invokespecial #23
95: ldc           #24
97: invokevirtual #25
100: iload_2
101: invokevirtual #29
104: ldc           #30
106: invokevirtual #25
109: iconst_1
110: invokevirtual #29
113: ldc           #24
115: invokevirtual #25
118: invokevirtual #27
121: iload_2
122: iconst_1
123: if_icmpne     130
126: iconst_1
127: goto          131
130: iconst_0
131: invokestatic  #31
134: new           #22
137: dup
138: invokespecial #23
141: ldc           #24
143: invokevirtual #25
146: aload_3
147: invokevirtual #25
150: ldc           #62
152: invokevirtual #25
155: invokevirtual #27
158: aload_3
159: ldc           #63
161: invokestatic  #28
164: new           #22
167: dup
168: invokespecial #23
171: ldc           #24
173: invokevirtual #25
176: aload         4
178: invokevirtual #25
181: ldc           #48
183: invokevirtual #25
186: invokevirtual #27
189: aload         4
191: ldc           #49
193: invokestatic  #28
196: aload         5
198: invokestatic  #21
201: new           #22
204: dup
205: invokespecial #23
208: ldc           #24
210: invokevirtual #25
213: aload         6
215: invokevirtual #25
218: ldc           #48
220: invokevirtual #25
223: invokevirtual #27
226: aload         6
228: ldc           #49
230: invokestatic  #28
233: return
Exception table:
from    to  target type
70    83    86   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0767
Start line: 6097
End line: 0
Method source code: 
    public void test0767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0767");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        java.lang.String str6 = helpFormatter0.defaultNewLine;
        helpFormatter0.setDescPadding(10);
        int int9 = helpFormatter0.defaultLeftPad;
        int int10 = helpFormatter0.getLeftPadding();
        helpFormatter0.setLongOptSeparator("                                                                                                    ");
        java.lang.String str13 = helpFormatter0.getSyntaxPrefix();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "usage: " + "'", str13, "usage: ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #371
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: bipush        10
47: invokevirtual #37
50: aload_1
51: getfield      #36
54: astore_3
55: aload_1
56: bipush        10
58: invokevirtual #37
61: aload_1
62: getfield      #40
65: istore        4
67: aload_1
68: invokevirtual #35
71: istore        5
73: aload_1
74: ldc           #118
76: invokevirtual #74
79: aload_1
80: invokevirtual #89
83: astore        6
85: new           #22
88: dup
89: invokespecial #23
92: ldc           #24
94: invokevirtual #25
97: iload_2
98: invokevirtual #29
101: ldc           #30
103: invokevirtual #25
106: iconst_1
107: invokevirtual #29
110: ldc           #24
112: invokevirtual #25
115: invokevirtual #27
118: iload_2
119: iconst_1
120: if_icmpne     127
123: iconst_1
124: goto          128
127: iconst_0
128: invokestatic  #31
131: new           #22
134: dup
135: invokespecial #23
138: ldc           #24
140: invokevirtual #25
143: aload_3
144: invokevirtual #25
147: ldc           #26
149: invokevirtual #25
152: invokevirtual #27
155: aload_3
156: ldc           #11
158: invokestatic  #28
161: new           #22
164: dup
165: invokespecial #23
168: ldc           #24
170: invokevirtual #25
173: iload         4
175: invokevirtual #29
178: ldc           #30
180: invokevirtual #25
183: iconst_1
184: invokevirtual #29
187: ldc           #24
189: invokevirtual #25
192: invokevirtual #27
195: iload         4
197: iconst_1
198: if_icmpne     205
201: iconst_1
202: goto          206
205: iconst_0
206: invokestatic  #31
209: new           #22
212: dup
213: invokespecial #23
216: ldc           #24
218: invokevirtual #25
221: iload         5
223: invokevirtual #29
226: ldc           #30
228: invokevirtual #25
231: iconst_1
232: invokevirtual #29
235: ldc           #24
237: invokevirtual #25
240: invokevirtual #27
243: iload         5
245: iconst_1
246: if_icmpne     253
249: iconst_1
250: goto          254
253: iconst_0
254: invokestatic  #31
257: new           #22
260: dup
261: invokespecial #23
264: ldc           #24
266: invokevirtual #25
269: aload         6
271: invokevirtual #25
274: ldc           #104
276: invokevirtual #25
279: invokevirtual #27
282: aload         6
284: ldc           #46
286: invokestatic  #28
289: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0768
Start line: 6118
End line: 0
Method source code: 
    public void test0768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0768");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.defaultDescPad = '4';
        helpFormatter0.setNewLine("");
        helpFormatter0.setSyntaxPrefix("");
        java.lang.String str10 = helpFormatter0.getSyntaxPrefix();
        helpFormatter0.setWidth((-2));
        helpFormatter0.defaultOptPrefix = "usage: ";
        int int15 = helpFormatter0.getDescPadding();
        java.lang.String str17 = helpFormatter0.rtrim(" ");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #372
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: bipush        52
47: putfield      #44
50: aload_1
51: ldc           #11
53: invokevirtual #88
56: aload_1
57: ldc           #11
59: invokevirtual #39
62: aload_1
63: invokevirtual #89
66: astore_3
67: aload_1
68: bipush        -2
70: invokevirtual #90
73: aload_1
74: ldc           #46
76: putfield      #42
79: aload_1
80: invokevirtual #13
83: istore        4
85: aload_1
86: ldc           #38
88: invokevirtual #12
91: astore        5
93: new           #22
96: dup
97: invokespecial #23
100: ldc           #24
102: invokevirtual #25
105: iload_2
106: invokevirtual #29
109: ldc           #30
111: invokevirtual #25
114: iconst_1
115: invokevirtual #29
118: ldc           #24
120: invokevirtual #25
123: invokevirtual #27
126: iload_2
127: iconst_1
128: if_icmpne     135
131: iconst_1
132: goto          136
135: iconst_0
136: invokestatic  #31
139: new           #22
142: dup
143: invokespecial #23
146: ldc           #24
148: invokevirtual #25
151: aload_3
152: invokevirtual #25
155: ldc           #26
157: invokevirtual #25
160: invokevirtual #27
163: aload_3
164: ldc           #11
166: invokestatic  #28
169: new           #22
172: dup
173: invokespecial #23
176: ldc           #24
178: invokevirtual #25
181: iload         4
183: invokevirtual #29
186: ldc           #30
188: invokevirtual #25
191: bipush        52
193: invokevirtual #29
196: ldc           #24
198: invokevirtual #25
201: invokevirtual #27
204: iload         4
206: bipush        52
208: if_icmpne     215
211: iconst_1
212: goto          216
215: iconst_0
216: invokestatic  #31
219: new           #22
222: dup
223: invokespecial #23
226: ldc           #24
228: invokevirtual #25
231: aload         5
233: invokevirtual #25
236: ldc           #26
238: invokevirtual #25
241: invokevirtual #27
244: aload         5
246: ldc           #11
248: invokestatic  #28
251: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0769
Start line: 6139
End line: 0
Method source code: 
    public void test0769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0769");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        java.lang.String str6 = helpFormatter0.getOptPrefix();
        java.lang.String str7 = helpFormatter0.getNewLine();
        helpFormatter0.defaultOptPrefix = "";
        helpFormatter0.setNewLine("");
        java.lang.String str12 = helpFormatter0.getArgName();
        java.lang.String str13 = helpFormatter0.getSyntaxPrefix();
        java.lang.String str14 = helpFormatter0.getSyntaxPrefix();
        helpFormatter0.defaultNewLine = "arg";
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "-" + "'", str6, "-");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "arg" + "'", str12, "arg");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "usage: " + "'", str13, "usage: ");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "usage: " + "'", str14, "usage: ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #373
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: bipush        10
47: invokevirtual #37
50: aload_1
51: invokevirtual #73
54: astore_3
55: aload_1
56: invokevirtual #16
59: astore        4
61: aload_1
62: ldc           #11
64: putfield      #42
67: aload_1
68: ldc           #11
70: invokevirtual #88
73: aload_1
74: invokevirtual #83
77: astore        5
79: aload_1
80: invokevirtual #89
83: astore        6
85: aload_1
86: invokevirtual #89
89: astore        7
91: aload_1
92: ldc           #78
94: putfield      #36
97: new           #22
100: dup
101: invokespecial #23
104: ldc           #24
106: invokevirtual #25
109: iload_2
110: invokevirtual #29
113: ldc           #30
115: invokevirtual #25
118: iconst_1
119: invokevirtual #29
122: ldc           #24
124: invokevirtual #25
127: invokevirtual #27
130: iload_2
131: iconst_1
132: if_icmpne     139
135: iconst_1
136: goto          140
139: iconst_0
140: invokestatic  #31
143: new           #22
146: dup
147: invokespecial #23
150: ldc           #24
152: invokevirtual #25
155: aload_3
156: invokevirtual #25
159: ldc           #48
161: invokevirtual #25
164: invokevirtual #27
167: aload_3
168: ldc           #49
170: invokestatic  #28
173: new           #22
176: dup
177: invokespecial #23
180: ldc           #24
182: invokevirtual #25
185: aload         4
187: invokevirtual #25
190: ldc           #26
192: invokevirtual #25
195: invokevirtual #27
198: aload         4
200: ldc           #11
202: invokestatic  #28
205: new           #22
208: dup
209: invokespecial #23
212: ldc           #24
214: invokevirtual #25
217: aload         5
219: invokevirtual #25
222: ldc           #79
224: invokevirtual #25
227: invokevirtual #27
230: aload         5
232: ldc           #78
234: invokestatic  #28
237: new           #22
240: dup
241: invokespecial #23
244: ldc           #24
246: invokevirtual #25
249: aload         6
251: invokevirtual #25
254: ldc           #104
256: invokevirtual #25
259: invokevirtual #27
262: aload         6
264: ldc           #46
266: invokestatic  #28
269: new           #22
272: dup
273: invokespecial #23
276: ldc           #24
278: invokevirtual #25
281: aload         7
283: invokevirtual #25
286: ldc           #104
288: invokevirtual #25
291: invokevirtual #27
294: aload         7
296: ldc           #46
298: invokestatic  #28
301: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0770
Start line: 6163
End line: 0
Method source code: 
    public void test0770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0770");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.getArgName();
        helpFormatter0.setSyntaxPrefix("usage: ");
        java.lang.String str5 = helpFormatter0.defaultSyntaxPrefix;
        java.lang.String str6 = helpFormatter0.defaultSyntaxPrefix;
        int int10 = helpFormatter0.findWrapPos("", 97, 0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "arg" + "'", str2, "arg");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "usage: " + "'", str5, "usage: ");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "usage: " + "'", str6, "usage: ");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #374
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: invokevirtual #83
42: astore_3
43: aload_1
44: ldc           #46
46: invokevirtual #39
49: aload_1
50: getfield      #45
53: astore        4
55: aload_1
56: getfield      #45
59: astore        5
61: aload_1
62: ldc           #11
64: bipush        97
66: iconst_0
67: invokevirtual #61
70: istore        6
72: new           #22
75: dup
76: invokespecial #23
79: ldc           #24
81: invokevirtual #25
84: iload_2
85: invokevirtual #29
88: ldc           #30
90: invokevirtual #25
93: iconst_1
94: invokevirtual #29
97: ldc           #24
99: invokevirtual #25
102: invokevirtual #27
105: iload_2
106: iconst_1
107: if_icmpne     114
110: iconst_1
111: goto          115
114: iconst_0
115: invokestatic  #31
118: new           #22
121: dup
122: invokespecial #23
125: ldc           #24
127: invokevirtual #25
130: aload_3
131: invokevirtual #25
134: ldc           #79
136: invokevirtual #25
139: invokevirtual #27
142: aload_3
143: ldc           #78
145: invokestatic  #28
148: new           #22
151: dup
152: invokespecial #23
155: ldc           #24
157: invokevirtual #25
160: aload         4
162: invokevirtual #25
165: ldc           #104
167: invokevirtual #25
170: invokevirtual #27
173: aload         4
175: ldc           #46
177: invokestatic  #28
180: new           #22
183: dup
184: invokespecial #23
187: ldc           #24
189: invokevirtual #25
192: aload         5
194: invokevirtual #25
197: ldc           #104
199: invokevirtual #25
202: invokevirtual #27
205: aload         5
207: ldc           #46
209: invokestatic  #28
212: new           #22
215: dup
216: invokespecial #23
219: ldc           #24
221: invokevirtual #25
224: iload         6
226: invokevirtual #29
229: ldc           #30
231: invokevirtual #25
234: iconst_m1
235: invokevirtual #29
238: ldc           #24
240: invokevirtual #25
243: invokevirtual #27
246: iload         6
248: iconst_m1
249: if_icmpne     256
252: iconst_1
253: goto          257
256: iconst_0
257: invokestatic  #31
260: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0771
Start line: 6181
End line: 0
Method source code: 
    public void test0771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0771");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        int int6 = helpFormatter0.getLeftPadding();
        helpFormatter0.setLongOptSeparator("\n");
        java.lang.String str9 = helpFormatter0.getLongOptPrefix();
        java.lang.String str10 = helpFormatter0.getLongOptPrefix();
        int int14 = helpFormatter0.findWrapPos("usage: ", (int) 'a', (int) (byte) 0);
        helpFormatter0.setWidth((int) (byte) 0);
        int int17 = helpFormatter0.getLeftPadding();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #375
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #11
36: invokevirtual #51
39: aload_1
40: ldc           #11
42: putfield      #52
45: aload_1
46: getfield      #52
49: astore_2
50: aload_1
51: invokevirtual #35
54: istore_3
55: aload_1
56: ldc           #33
58: invokevirtual #74
61: aload_1
62: invokevirtual #53
65: astore        4
67: aload_1
68: invokevirtual #53
71: astore        5
73: aload_1
74: ldc           #46
76: bipush        97
78: iconst_0
79: invokevirtual #61
82: istore        6
84: aload_1
85: iconst_0
86: invokevirtual #90
89: aload_1
90: invokevirtual #35
93: istore        7
95: new           #22
98: dup
99: invokespecial #23
102: ldc           #24
104: invokevirtual #25
107: aload_2
108: invokevirtual #25
111: ldc           #26
113: invokevirtual #25
116: invokevirtual #27
119: aload_2
120: ldc           #11
122: invokestatic  #28
125: new           #22
128: dup
129: invokespecial #23
132: ldc           #24
134: invokevirtual #25
137: iload_3
138: invokevirtual #29
141: ldc           #30
143: invokevirtual #25
146: iconst_1
147: invokevirtual #29
150: ldc           #24
152: invokevirtual #25
155: invokevirtual #27
158: iload_3
159: iconst_1
160: if_icmpne     167
163: iconst_1
164: goto          168
167: iconst_0
168: invokestatic  #31
171: new           #22
174: dup
175: invokespecial #23
178: ldc           #24
180: invokevirtual #25
183: aload         4
185: invokevirtual #25
188: ldc           #26
190: invokevirtual #25
193: invokevirtual #27
196: aload         4
198: ldc           #11
200: invokestatic  #28
203: new           #22
206: dup
207: invokespecial #23
210: ldc           #24
212: invokevirtual #25
215: aload         5
217: invokevirtual #25
220: ldc           #26
222: invokevirtual #25
225: invokevirtual #27
228: aload         5
230: ldc           #11
232: invokestatic  #28
235: new           #22
238: dup
239: invokespecial #23
242: ldc           #24
244: invokevirtual #25
247: iload         6
249: invokevirtual #29
252: ldc           #30
254: invokevirtual #25
257: iconst_m1
258: invokevirtual #29
261: ldc           #24
263: invokevirtual #25
266: invokevirtual #27
269: iload         6
271: iconst_m1
272: if_icmpne     279
275: iconst_1
276: goto          280
279: iconst_0
280: invokestatic  #31
283: new           #22
286: dup
287: invokespecial #23
290: ldc           #24
292: invokevirtual #25
295: iload         7
297: invokevirtual #29
300: ldc           #30
302: invokevirtual #25
305: iconst_1
306: invokevirtual #29
309: ldc           #24
311: invokevirtual #25
314: invokevirtual #27
317: iload         7
319: iconst_1
320: if_icmpne     327
323: iconst_1
324: goto          328
327: iconst_0
328: invokestatic  #31
331: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0772
Start line: 6204
End line: 0
Method source code: 
    public void test0772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0772");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str3 = helpFormatter0.getOptPrefix();
        int int4 = helpFormatter0.defaultDescPad;
        int int5 = helpFormatter0.defaultLeftPad;
        int int6 = helpFormatter0.defaultLeftPad;
        int int10 = helpFormatter0.findWrapPos("                                                                                                 ", (int) (byte) 100, (-2));
        int int14 = helpFormatter0.findWrapPos("", 100, 74);
        helpFormatter0.setLeftPadding((int) (byte) 10);
        java.lang.String str18 = helpFormatter0.rtrim("hi!");
        helpFormatter0.setDescPadding(3);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "--" + "'", str2, "--");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "-" + "'", str3, "-");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 3 + "'", int4 == 3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #376
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: getfield      #52
42: astore_3
43: aload_1
44: invokevirtual #73
47: astore        4
49: aload_1
50: getfield      #44
53: istore        5
55: aload_1
56: getfield      #40
59: istore        6
61: aload_1
62: getfield      #40
65: istore        7
67: aload_1
68: ldc           #14
70: bipush        100
72: bipush        -2
74: invokevirtual #61
77: istore        8
79: aload_1
80: ldc           #11
82: bipush        100
84: bipush        74
86: invokevirtual #61
89: istore        9
91: aload_1
92: bipush        10
94: invokevirtual #55
97: aload_1
98: ldc           #65
100: invokevirtual #12
103: astore        10
105: aload_1
106: iconst_3
107: invokevirtual #37
110: new           #22
113: dup
114: invokespecial #23
117: ldc           #24
119: invokevirtual #25
122: iload_2
123: invokevirtual #29
126: ldc           #30
128: invokevirtual #25
131: iconst_1
132: invokevirtual #29
135: ldc           #24
137: invokevirtual #25
140: invokevirtual #27
143: iload_2
144: iconst_1
145: if_icmpne     152
148: iconst_1
149: goto          153
152: iconst_0
153: invokestatic  #31
156: new           #22
159: dup
160: invokespecial #23
163: ldc           #24
165: invokevirtual #25
168: aload_3
169: invokevirtual #25
172: ldc           #62
174: invokevirtual #25
177: invokevirtual #27
180: aload_3
181: ldc           #63
183: invokestatic  #28
186: new           #22
189: dup
190: invokespecial #23
193: ldc           #24
195: invokevirtual #25
198: aload         4
200: invokevirtual #25
203: ldc           #48
205: invokevirtual #25
208: invokevirtual #27
211: aload         4
213: ldc           #49
215: invokestatic  #28
218: new           #22
221: dup
222: invokespecial #23
225: ldc           #24
227: invokevirtual #25
230: iload         5
232: invokevirtual #29
235: ldc           #30
237: invokevirtual #25
240: iconst_3
241: invokevirtual #29
244: ldc           #24
246: invokevirtual #25
249: invokevirtual #27
252: iload         5
254: iconst_3
255: if_icmpne     262
258: iconst_1
259: goto          263
262: iconst_0
263: invokestatic  #31
266: new           #22
269: dup
270: invokespecial #23
273: ldc           #24
275: invokevirtual #25
278: iload         6
280: invokevirtual #29
283: ldc           #30
285: invokevirtual #25
288: iconst_1
289: invokevirtual #29
292: ldc           #24
294: invokevirtual #25
297: invokevirtual #27
300: iload         6
302: iconst_1
303: if_icmpne     310
306: iconst_1
307: goto          311
310: iconst_0
311: invokestatic  #31
314: new           #22
317: dup
318: invokespecial #23
321: ldc           #24
323: invokevirtual #25
326: iload         7
328: invokevirtual #29
331: ldc           #30
333: invokevirtual #25
336: iconst_1
337: invokevirtual #29
340: ldc           #24
342: invokevirtual #25
345: invokevirtual #27
348: iload         7
350: iconst_1
351: if_icmpne     358
354: iconst_1
355: goto          359
358: iconst_0
359: invokestatic  #31
362: new           #22
365: dup
366: invokespecial #23
369: ldc           #24
371: invokevirtual #25
374: iload         8
376: invokevirtual #29
379: ldc           #30
381: invokevirtual #25
384: iconst_m1
385: invokevirtual #29
388: ldc           #24
390: invokevirtual #25
393: invokevirtual #27
396: iload         8
398: iconst_m1
399: if_icmpne     406
402: iconst_1
403: goto          407
406: iconst_0
407: invokestatic  #31
410: new           #22
413: dup
414: invokespecial #23
417: ldc           #24
419: invokevirtual #25
422: iload         9
424: invokevirtual #29
427: ldc           #30
429: invokevirtual #25
432: iconst_m1
433: invokevirtual #29
436: ldc           #24
438: invokevirtual #25
441: invokevirtual #27
444: iload         9
446: iconst_m1
447: if_icmpne     454
450: iconst_1
451: goto          455
454: iconst_0
455: invokestatic  #31
458: new           #22
461: dup
462: invokespecial #23
465: ldc           #24
467: invokevirtual #25
470: aload         10
472: invokevirtual #25
475: ldc           #97
477: invokevirtual #25
480: invokevirtual #27
483: aload         10
485: ldc           #65
487: invokestatic  #28
490: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0773
Start line: 6231
End line: 0
Method source code: 
    public void test0773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0773");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.util.Comparator comparator1 = helpFormatter0.optionComparator;
        int int2 = helpFormatter0.getLeftPadding();
        java.lang.String str4 = helpFormatter0.rtrim("-");
        int int5 = helpFormatter0.defaultLeftPad;
        java.lang.String str6 = helpFormatter0.getLongOptPrefix();
        java.lang.String str7 = helpFormatter0.getArgName();
        org.junit.Assert.assertNotNull(comparator1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "--" + "'", str6, "--");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "arg" + "'", str7, "arg");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #377
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: getfield      #10
37: astore_2
38: aload_1
39: invokevirtual #35
42: istore_3
43: aload_1
44: ldc           #49
46: invokevirtual #12
49: astore        4
51: aload_1
52: getfield      #40
55: istore        5
57: aload_1
58: invokevirtual #53
61: astore        6
63: aload_1
64: invokevirtual #83
67: astore        7
69: aload_2
70: invokestatic  #21
73: new           #22
76: dup
77: invokespecial #23
80: ldc           #24
82: invokevirtual #25
85: iload_3
86: invokevirtual #29
89: ldc           #30
91: invokevirtual #25
94: iconst_1
95: invokevirtual #29
98: ldc           #24
100: invokevirtual #25
103: invokevirtual #27
106: iload_3
107: iconst_1
108: if_icmpne     115
111: iconst_1
112: goto          116
115: iconst_0
116: invokestatic  #31
119: new           #22
122: dup
123: invokespecial #23
126: ldc           #24
128: invokevirtual #25
131: aload         4
133: invokevirtual #25
136: ldc           #48
138: invokevirtual #25
141: invokevirtual #27
144: aload         4
146: ldc           #49
148: invokestatic  #28
151: new           #22
154: dup
155: invokespecial #23
158: ldc           #24
160: invokevirtual #25
163: iload         5
165: invokevirtual #29
168: ldc           #30
170: invokevirtual #25
173: iconst_1
174: invokevirtual #29
177: ldc           #24
179: invokevirtual #25
182: invokevirtual #27
185: iload         5
187: iconst_1
188: if_icmpne     195
191: iconst_1
192: goto          196
195: iconst_0
196: invokestatic  #31
199: new           #22
202: dup
203: invokespecial #23
206: ldc           #24
208: invokevirtual #25
211: aload         6
213: invokevirtual #25
216: ldc           #62
218: invokevirtual #25
221: invokevirtual #27
224: aload         6
226: ldc           #63
228: invokestatic  #28
231: new           #22
234: dup
235: invokespecial #23
238: ldc           #24
240: invokevirtual #25
243: aload         7
245: invokevirtual #25
248: ldc           #79
250: invokevirtual #25
253: invokevirtual #27
256: aload         7
258: ldc           #78
260: invokestatic  #28
263: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0774
Start line: 6250
End line: 0
Method source code: 
    public void test0774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0774");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str6 = helpFormatter0.getNewLine();
        java.lang.String str7 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setDescPadding(74);
        java.util.Comparator comparator10 = helpFormatter0.getOptionComparator();
        java.lang.String str11 = helpFormatter0.getArgName();
        java.lang.String str12 = helpFormatter0.getSyntaxPrefix();
        helpFormatter0.setLongOptSeparator("                                                                                                 ");
        int int15 = helpFormatter0.defaultWidth;
        helpFormatter0.setWidth((int) '#');
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\n" + "'", str6, "\n");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(comparator10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "arg" + "'", str11, "arg");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "usage: " + "'", str12, "usage: ");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 74 + "'", int15 == 74);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #378
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #11
36: invokevirtual #51
39: aload_1
40: ldc           #11
42: putfield      #52
45: aload_1
46: getfield      #52
49: astore_2
50: aload_1
51: invokevirtual #16
54: astore_3
55: aload_1
56: getfield      #42
59: astore        4
61: aload_1
62: bipush        74
64: invokevirtual #37
67: aload_1
68: invokevirtual #58
71: astore        5
73: aload_1
74: invokevirtual #83
77: astore        6
79: aload_1
80: invokevirtual #89
83: astore        7
85: aload_1
86: ldc           #14
88: invokevirtual #74
91: aload_1
92: getfield      #57
95: istore        8
97: aload_1
98: bipush        35
100: invokevirtual #90
103: new           #22
106: dup
107: invokespecial #23
110: ldc           #24
112: invokevirtual #25
115: aload_2
116: invokevirtual #25
119: ldc           #26
121: invokevirtual #25
124: invokevirtual #27
127: aload_2
128: ldc           #11
130: invokestatic  #28
133: new           #22
136: dup
137: invokespecial #23
140: ldc           #24
142: invokevirtual #25
145: aload_3
146: invokevirtual #25
149: ldc           #32
151: invokevirtual #25
154: invokevirtual #27
157: aload_3
158: ldc           #33
160: invokestatic  #28
163: new           #22
166: dup
167: invokespecial #23
170: ldc           #24
172: invokevirtual #25
175: aload         4
177: invokevirtual #25
180: ldc           #26
182: invokevirtual #25
185: invokevirtual #27
188: aload         4
190: ldc           #11
192: invokestatic  #28
195: aload         5
197: invokestatic  #21
200: new           #22
203: dup
204: invokespecial #23
207: ldc           #24
209: invokevirtual #25
212: aload         6
214: invokevirtual #25
217: ldc           #79
219: invokevirtual #25
222: invokevirtual #27
225: aload         6
227: ldc           #78
229: invokestatic  #28
232: new           #22
235: dup
236: invokespecial #23
239: ldc           #24
241: invokevirtual #25
244: aload         7
246: invokevirtual #25
249: ldc           #104
251: invokevirtual #25
254: invokevirtual #27
257: aload         7
259: ldc           #46
261: invokestatic  #28
264: new           #22
267: dup
268: invokespecial #23
271: ldc           #24
273: invokevirtual #25
276: iload         8
278: invokevirtual #29
281: ldc           #30
283: invokevirtual #25
286: bipush        74
288: invokevirtual #29
291: ldc           #24
293: invokevirtual #25
296: invokevirtual #27
299: iload         8
301: bipush        74
303: if_icmpne     310
306: iconst_1
307: goto          311
310: iconst_0
311: invokestatic  #31
314: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0775
Start line: 6276
End line: 0
Method source code: 
    public void test0775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0775");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.util.Comparator comparator1 = helpFormatter0.optionComparator;
        int int2 = helpFormatter0.getLeftPadding();
        int int6 = helpFormatter0.findWrapPos("-", 100, (-1));
        helpFormatter0.defaultWidth = (short) 100;
        helpFormatter0.defaultArgName = "\n";
        helpFormatter0.setLongOptSeparator("          ");
        java.lang.String str13 = helpFormatter0.getOptPrefix();
        org.junit.Assert.assertNotNull(comparator1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "-" + "'", str13, "-");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #379
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: getfield      #10
37: astore_2
38: aload_1
39: invokevirtual #35
42: istore_3
43: aload_1
44: ldc           #49
46: bipush        100
48: iconst_m1
49: invokevirtual #61
52: istore        4
54: aload_1
55: bipush        100
57: putfield      #57
60: aload_1
61: ldc           #33
63: putfield      #15
66: aload_1
67: ldc           #67
69: invokevirtual #74
72: aload_1
73: invokevirtual #73
76: astore        5
78: aload_2
79: invokestatic  #21
82: new           #22
85: dup
86: invokespecial #23
89: ldc           #24
91: invokevirtual #25
94: iload_3
95: invokevirtual #29
98: ldc           #30
100: invokevirtual #25
103: iconst_1
104: invokevirtual #29
107: ldc           #24
109: invokevirtual #25
112: invokevirtual #27
115: iload_3
116: iconst_1
117: if_icmpne     124
120: iconst_1
121: goto          125
124: iconst_0
125: invokestatic  #31
128: new           #22
131: dup
132: invokespecial #23
135: ldc           #24
137: invokevirtual #25
140: iload         4
142: invokevirtual #29
145: ldc           #30
147: invokevirtual #25
150: iconst_m1
151: invokevirtual #29
154: ldc           #24
156: invokevirtual #25
159: invokevirtual #27
162: iload         4
164: iconst_m1
165: if_icmpne     172
168: iconst_1
169: goto          173
172: iconst_0
173: invokestatic  #31
176: new           #22
179: dup
180: invokespecial #23
183: ldc           #24
185: invokevirtual #25
188: aload         5
190: invokevirtual #25
193: ldc           #48
195: invokevirtual #25
198: invokevirtual #27
201: aload         5
203: ldc           #49
205: invokestatic  #28
208: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0776
Start line: 6294
End line: 0
Method source code: 
    public void test0776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0776");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        int int4 = helpFormatter0.defaultWidth;
        java.util.Comparator comparator5 = helpFormatter0.getOptionComparator();
        helpFormatter0.setArgName("\n");
        helpFormatter0.defaultDescPad = 0;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 74 + "'", int4 == 74);
        org.junit.Assert.assertNotNull(comparator5);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #380
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: getfield      #57
48: istore_3
49: aload_1
50: invokevirtual #58
53: astore        4
55: aload_1
56: ldc           #33
58: invokevirtual #59
61: aload_1
62: iconst_0
63: putfield      #44
66: new           #22
69: dup
70: invokespecial #23
73: ldc           #24
75: invokevirtual #25
78: iload_2
79: invokevirtual #29
82: ldc           #30
84: invokevirtual #25
87: iconst_1
88: invokevirtual #29
91: ldc           #24
93: invokevirtual #25
96: invokevirtual #27
99: iload_2
100: iconst_1
101: if_icmpne     108
104: iconst_1
105: goto          109
108: iconst_0
109: invokestatic  #31
112: new           #22
115: dup
116: invokespecial #23
119: ldc           #24
121: invokevirtual #25
124: iload_3
125: invokevirtual #29
128: ldc           #30
130: invokevirtual #25
133: bipush        74
135: invokevirtual #29
138: ldc           #24
140: invokevirtual #25
143: invokevirtual #27
146: iload_3
147: bipush        74
149: if_icmpne     156
152: iconst_1
153: goto          157
156: iconst_0
157: invokestatic  #31
160: aload         4
162: invokestatic  #21
165: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0777
Start line: 6310
End line: 0
Method source code: 
    public void test0777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0777");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setLongOptPrefix("                                                                                                 ");
        int int6 = helpFormatter0.getLeftPadding();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #381
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: ldc           #14
47: invokevirtual #43
50: aload_1
51: invokevirtual #35
54: istore_3
55: new           #22
58: dup
59: invokespecial #23
62: ldc           #24
64: invokevirtual #25
67: iload_2
68: invokevirtual #29
71: ldc           #30
73: invokevirtual #25
76: iconst_1
77: invokevirtual #29
80: ldc           #24
82: invokevirtual #25
85: invokevirtual #27
88: iload_2
89: iconst_1
90: if_icmpne     97
93: iconst_1
94: goto          98
97: iconst_0
98: invokestatic  #31
101: new           #22
104: dup
105: invokespecial #23
108: ldc           #24
110: invokevirtual #25
113: iload_3
114: invokevirtual #29
117: ldc           #30
119: invokevirtual #25
122: iconst_1
123: invokevirtual #29
126: ldc           #24
128: invokevirtual #25
131: invokevirtual #27
134: iload_3
135: iconst_1
136: if_icmpne     143
139: iconst_1
140: goto          144
143: iconst_0
144: invokestatic  #31
147: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0778
Start line: 6323
End line: 0
Method source code: 
    public void test0778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0778");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.lang.String str1 = helpFormatter0.getSyntaxPrefix();
        int int2 = helpFormatter0.getWidth();
        int int3 = helpFormatter0.defaultDescPad;
        helpFormatter0.defaultArgName = "usage: ";
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "usage: " + "'", str1, "usage: ");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 74 + "'", int2 == 74);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 3 + "'", int3 == 3);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #382
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #89
37: astore_2
38: aload_1
39: invokevirtual #66
42: istore_3
43: aload_1
44: getfield      #44
47: istore        4
49: aload_1
50: ldc           #46
52: putfield      #15
55: new           #22
58: dup
59: invokespecial #23
62: ldc           #24
64: invokevirtual #25
67: aload_2
68: invokevirtual #25
71: ldc           #104
73: invokevirtual #25
76: invokevirtual #27
79: aload_2
80: ldc           #46
82: invokestatic  #28
85: new           #22
88: dup
89: invokespecial #23
92: ldc           #24
94: invokevirtual #25
97: iload_3
98: invokevirtual #29
101: ldc           #30
103: invokevirtual #25
106: bipush        74
108: invokevirtual #29
111: ldc           #24
113: invokevirtual #25
116: invokevirtual #27
119: iload_3
120: bipush        74
122: if_icmpne     129
125: iconst_1
126: goto          130
129: iconst_0
130: invokestatic  #31
133: new           #22
136: dup
137: invokespecial #23
140: ldc           #24
142: invokevirtual #25
145: iload         4
147: invokevirtual #29
150: ldc           #30
152: invokevirtual #25
155: iconst_3
156: invokevirtual #29
159: ldc           #24
161: invokevirtual #25
164: invokevirtual #27
167: iload         4
169: iconst_3
170: if_icmpne     177
173: iconst_1
174: goto          178
177: iconst_0
178: invokestatic  #31
181: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0779
Start line: 6337
End line: 0
Method source code: 
    public void test0779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0779");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str3 = helpFormatter0.getOptPrefix();
        helpFormatter0.setArgName("-");
        helpFormatter0.setLongOptSeparator("                                                                                                 ");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "--" + "'", str2, "--");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "-" + "'", str3, "-");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #383
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: getfield      #52
42: astore_3
43: aload_1
44: invokevirtual #73
47: astore        4
49: aload_1
50: ldc           #49
52: invokevirtual #59
55: aload_1
56: ldc           #14
58: invokevirtual #74
61: new           #22
64: dup
65: invokespecial #23
68: ldc           #24
70: invokevirtual #25
73: iload_2
74: invokevirtual #29
77: ldc           #30
79: invokevirtual #25
82: iconst_1
83: invokevirtual #29
86: ldc           #24
88: invokevirtual #25
91: invokevirtual #27
94: iload_2
95: iconst_1
96: if_icmpne     103
99: iconst_1
100: goto          104
103: iconst_0
104: invokestatic  #31
107: new           #22
110: dup
111: invokespecial #23
114: ldc           #24
116: invokevirtual #25
119: aload_3
120: invokevirtual #25
123: ldc           #62
125: invokevirtual #25
128: invokevirtual #27
131: aload_3
132: ldc           #63
134: invokestatic  #28
137: new           #22
140: dup
141: invokespecial #23
144: ldc           #24
146: invokevirtual #25
149: aload         4
151: invokevirtual #25
154: ldc           #48
156: invokevirtual #25
159: invokevirtual #27
162: aload         4
164: ldc           #49
166: invokestatic  #28
169: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0780
Start line: 6352
End line: 0
Method source code: 
    public void test0780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0780");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        int int4 = helpFormatter0.defaultWidth;
        java.util.Comparator comparator5 = helpFormatter0.getOptionComparator();
        helpFormatter0.setArgName("\n");
        org.apache.commons.cli.Options options10 = null;
        try {
            helpFormatter0.printHelp("", "-", options10, " ", true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: cmdLineSyntax not provided");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 74 + "'", int4 == 74);
        org.junit.Assert.assertNotNull(comparator5);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #384
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: getfield      #57
48: istore_3
49: aload_1
50: invokevirtual #58
53: astore        4
55: aload_1
56: ldc           #33
58: invokevirtual #59
61: aconst_null
62: astore        5
64: aload_1
65: ldc           #11
67: ldc           #49
69: aload         5
71: ldc           #38
73: iconst_1
74: invokevirtual #109
77: ldc           #69
79: invokestatic  #19
82: goto          87
85: astore        6
87: new           #22
90: dup
91: invokespecial #23
94: ldc           #24
96: invokevirtual #25
99: iload_2
100: invokevirtual #29
103: ldc           #30
105: invokevirtual #25
108: iconst_1
109: invokevirtual #29
112: ldc           #24
114: invokevirtual #25
117: invokevirtual #27
120: iload_2
121: iconst_1
122: if_icmpne     129
125: iconst_1
126: goto          130
129: iconst_0
130: invokestatic  #31
133: new           #22
136: dup
137: invokespecial #23
140: ldc           #24
142: invokevirtual #25
145: iload_3
146: invokevirtual #29
149: ldc           #30
151: invokevirtual #25
154: bipush        74
156: invokevirtual #29
159: ldc           #24
161: invokevirtual #25
164: invokevirtual #27
167: iload_3
168: bipush        74
170: if_icmpne     177
173: iconst_1
174: goto          178
177: iconst_0
178: invokestatic  #31
181: aload         4
183: invokestatic  #21
186: return
Exception table:
from    to  target type
64    82    85   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0781
Start line: 6375
End line: 0
Method source code: 
    public void test0781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0781");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        helpFormatter0.setSyntaxPrefix(" ");
        java.lang.String str8 = helpFormatter0.defaultSyntaxPrefix;
        helpFormatter0.setLongOptSeparator("          ");
        helpFormatter0.defaultOptPrefix = "          ";
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + " " + "'", str8, " ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #385
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: bipush        10
47: invokevirtual #37
50: aload_1
51: ldc           #38
53: invokevirtual #39
56: aload_1
57: getfield      #45
60: astore_3
61: aload_1
62: ldc           #67
64: invokevirtual #74
67: aload_1
68: ldc           #67
70: putfield      #42
73: new           #22
76: dup
77: invokespecial #23
80: ldc           #24
82: invokevirtual #25
85: iload_2
86: invokevirtual #29
89: ldc           #30
91: invokevirtual #25
94: iconst_1
95: invokevirtual #29
98: ldc           #24
100: invokevirtual #25
103: invokevirtual #27
106: iload_2
107: iconst_1
108: if_icmpne     115
111: iconst_1
112: goto          116
115: iconst_0
116: invokestatic  #31
119: new           #22
122: dup
123: invokespecial #23
126: ldc           #24
128: invokevirtual #25
131: aload_3
132: invokevirtual #25
135: ldc           #75
137: invokevirtual #25
140: invokevirtual #27
143: aload_3
144: ldc           #38
146: invokestatic  #28
149: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0782
Start line: 6391
End line: 0
Method source code: 
    public void test0782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0782");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.lang.String str1 = helpFormatter0.defaultSyntaxPrefix;
        java.util.Comparator comparator2 = helpFormatter0.optionComparator;
        java.lang.String str3 = helpFormatter0.defaultArgName;
        java.util.Comparator comparator4 = helpFormatter0.optionComparator;
        helpFormatter0.defaultLeftPad = (byte) -1;
        helpFormatter0.defaultLeftPad = (short) 1;
        java.io.PrintWriter printWriter9 = null;
        org.apache.commons.cli.Options options11 = null;
        try {
            helpFormatter0.printOptions(printWriter9, (int) (short) 100, options11, (int) 'a', 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "usage: " + "'", str1, "usage: ");
        org.junit.Assert.assertNotNull(comparator2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "arg" + "'", str3, "arg");
        org.junit.Assert.assertNotNull(comparator4);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #386
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: getfield      #45
37: astore_2
38: aload_1
39: getfield      #10
42: astore_3
43: aload_1
44: getfield      #15
47: astore        4
49: aload_1
50: getfield      #10
53: astore        5
55: aload_1
56: iconst_m1
57: putfield      #40
60: aload_1
61: iconst_1
62: putfield      #40
65: aconst_null
66: astore        6
68: aconst_null
69: astore        7
71: aload_1
72: aload         6
74: bipush        100
76: aload         7
78: bipush        97
80: bipush        10
82: invokevirtual #17
85: ldc           #18
87: invokestatic  #19
90: goto          95
93: astore        8
95: new           #22
98: dup
99: invokespecial #23
102: ldc           #24
104: invokevirtual #25
107: aload_2
108: invokevirtual #25
111: ldc           #104
113: invokevirtual #25
116: invokevirtual #27
119: aload_2
120: ldc           #46
122: invokestatic  #28
125: aload_3
126: invokestatic  #21
129: new           #22
132: dup
133: invokespecial #23
136: ldc           #24
138: invokevirtual #25
141: aload         4
143: invokevirtual #25
146: ldc           #79
148: invokevirtual #25
151: invokevirtual #27
154: aload         4
156: ldc           #78
158: invokestatic  #28
161: aload         5
163: invokestatic  #21
166: return
Exception table:
from    to  target type
71    90    93   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0783
Start line: 6417
End line: 0
Method source code: 
    public void test0783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0783");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.setSyntaxPrefix("\n");
        int int5 = helpFormatter0.getWidth();
        helpFormatter0.setArgName("arg");
        java.lang.StringBuffer stringBuffer8 = null;
        try {
            java.lang.StringBuffer stringBuffer12 = helpFormatter0.renderWrappedText(stringBuffer8, (int) '#', 3, "--");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 74 + "'", int5 == 74);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #387
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #11
36: invokevirtual #51
39: aload_1
40: ldc           #33
42: invokevirtual #39
45: aload_1
46: invokevirtual #66
49: istore_2
50: aload_1
51: ldc           #78
53: invokevirtual #59
56: aconst_null
57: astore_3
58: aload_1
59: aload_3
60: bipush        35
62: iconst_3
63: ldc           #63
65: invokevirtual #123
68: astore        4
70: ldc           #18
72: invokestatic  #19
75: goto          80
78: astore        4
80: new           #22
83: dup
84: invokespecial #23
87: ldc           #24
89: invokevirtual #25
92: iload_2
93: invokevirtual #29
96: ldc           #30
98: invokevirtual #25
101: bipush        74
103: invokevirtual #29
106: ldc           #24
108: invokevirtual #25
111: invokevirtual #27
114: iload_2
115: bipush        74
117: if_icmpne     124
120: iconst_1
121: goto          125
124: iconst_0
125: invokestatic  #31
128: return
Exception table:
from    to  target type
58    75    78   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0784
Start line: 6437
End line: 0
Method source code: 
    public void test0784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0784");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        java.lang.String str6 = helpFormatter0.getOptPrefix();
        java.lang.String str7 = helpFormatter0.getNewLine();
        helpFormatter0.defaultOptPrefix = "";
        helpFormatter0.setNewLine("");
        java.lang.String str12 = helpFormatter0.getArgName();
        java.lang.String str13 = helpFormatter0.getSyntaxPrefix();
        helpFormatter0.setLongOptSeparator("                                                    ");
        java.lang.String str16 = helpFormatter0.getSyntaxPrefix();
        org.apache.commons.cli.Options options20 = null;
        try {
            helpFormatter0.printHelp((int) (short) 10, "                                                                                                    ", "                                                                                                    ", options20, "                                                                                                    ");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "-" + "'", str6, "-");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "arg" + "'", str12, "arg");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "usage: " + "'", str13, "usage: ");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "usage: " + "'", str16, "usage: ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #388
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: bipush        10
47: invokevirtual #37
50: aload_1
51: invokevirtual #73
54: astore_3
55: aload_1
56: invokevirtual #16
59: astore        4
61: aload_1
62: ldc           #11
64: putfield      #42
67: aload_1
68: ldc           #11
70: invokevirtual #88
73: aload_1
74: invokevirtual #83
77: astore        5
79: aload_1
80: invokevirtual #89
83: astore        6
85: aload_1
86: ldc           #77
88: invokevirtual #74
91: aload_1
92: invokevirtual #89
95: astore        7
97: aconst_null
98: astore        8
100: aload_1
101: bipush        10
103: ldc           #118
105: ldc           #118
107: aload         8
109: ldc           #118
111: invokevirtual #150
114: ldc           #18
116: invokestatic  #19
119: goto          124
122: astore        9
124: new           #22
127: dup
128: invokespecial #23
131: ldc           #24
133: invokevirtual #25
136: iload_2
137: invokevirtual #29
140: ldc           #30
142: invokevirtual #25
145: iconst_1
146: invokevirtual #29
149: ldc           #24
151: invokevirtual #25
154: invokevirtual #27
157: iload_2
158: iconst_1
159: if_icmpne     166
162: iconst_1
163: goto          167
166: iconst_0
167: invokestatic  #31
170: new           #22
173: dup
174: invokespecial #23
177: ldc           #24
179: invokevirtual #25
182: aload_3
183: invokevirtual #25
186: ldc           #48
188: invokevirtual #25
191: invokevirtual #27
194: aload_3
195: ldc           #49
197: invokestatic  #28
200: new           #22
203: dup
204: invokespecial #23
207: ldc           #24
209: invokevirtual #25
212: aload         4
214: invokevirtual #25
217: ldc           #26
219: invokevirtual #25
222: invokevirtual #27
225: aload         4
227: ldc           #11
229: invokestatic  #28
232: new           #22
235: dup
236: invokespecial #23
239: ldc           #24
241: invokevirtual #25
244: aload         5
246: invokevirtual #25
249: ldc           #79
251: invokevirtual #25
254: invokevirtual #27
257: aload         5
259: ldc           #78
261: invokestatic  #28
264: new           #22
267: dup
268: invokespecial #23
271: ldc           #24
273: invokevirtual #25
276: aload         6
278: invokevirtual #25
281: ldc           #104
283: invokevirtual #25
286: invokevirtual #27
289: aload         6
291: ldc           #46
293: invokestatic  #28
296: new           #22
299: dup
300: invokespecial #23
303: ldc           #24
305: invokevirtual #25
308: aload         7
310: invokevirtual #25
313: ldc           #104
315: invokevirtual #25
318: invokevirtual #27
321: aload         7
323: ldc           #46
325: invokestatic  #28
328: return
Exception table:
from    to  target type
100   119   122   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0785
Start line: 6469
End line: 0
Method source code: 
    public void test0785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0785");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setLongOptPrefix(" ");
        helpFormatter0.defaultDescPad = (short) 10;
        helpFormatter0.setLongOptSeparator("");
        helpFormatter0.defaultLeftPad = '4';
        java.lang.String str13 = helpFormatter0.getLongOptSeparator();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #389
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: getfield      #42
48: astore_3
49: aload_1
50: ldc           #38
52: invokevirtual #43
55: aload_1
56: bipush        10
58: putfield      #44
61: aload_1
62: ldc           #11
64: invokevirtual #74
67: aload_1
68: bipush        52
70: putfield      #40
73: aload_1
74: invokevirtual #72
77: astore        4
79: new           #22
82: dup
83: invokespecial #23
86: ldc           #24
88: invokevirtual #25
91: iload_2
92: invokevirtual #29
95: ldc           #30
97: invokevirtual #25
100: iconst_1
101: invokevirtual #29
104: ldc           #24
106: invokevirtual #25
109: invokevirtual #27
112: iload_2
113: iconst_1
114: if_icmpne     121
117: iconst_1
118: goto          122
121: iconst_0
122: invokestatic  #31
125: new           #22
128: dup
129: invokespecial #23
132: ldc           #24
134: invokevirtual #25
137: aload_3
138: invokevirtual #25
141: ldc           #48
143: invokevirtual #25
146: invokevirtual #27
149: aload_3
150: ldc           #49
152: invokestatic  #28
155: new           #22
158: dup
159: invokespecial #23
162: ldc           #24
164: invokevirtual #25
167: aload         4
169: invokevirtual #25
172: ldc           #26
174: invokevirtual #25
177: invokevirtual #27
180: aload         4
182: ldc           #11
184: invokestatic  #28
187: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0786
Start line: 6487
End line: 0
Method source code: 
    public void test0786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0786");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.getArgName();
        helpFormatter0.setArgName("arg");
        helpFormatter0.setDescPadding((int) '#');
        helpFormatter0.defaultNewLine = "                                ";
        helpFormatter0.defaultSyntaxPrefix = "arg";
        org.apache.commons.cli.Options options16 = null;
        try {
            helpFormatter0.printHelp((int) 'a', "\n", "                                                    ", options16, "usage: ", true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "arg" + "'", str4, "arg");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #390
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: invokevirtual #83
48: astore_3
49: aload_1
50: ldc           #78
52: invokevirtual #59
55: aload_1
56: bipush        35
58: invokevirtual #37
61: aload_1
62: ldc           #95
64: putfield      #36
67: aload_1
68: ldc           #78
70: putfield      #45
73: aconst_null
74: astore        4
76: aload_1
77: bipush        97
79: ldc           #33
81: ldc           #77
83: aload         4
85: ldc           #46
87: iconst_1
88: invokevirtual #274
91: ldc           #18
93: invokestatic  #19
96: goto          101
99: astore        5
101: new           #22
104: dup
105: invokespecial #23
108: ldc           #24
110: invokevirtual #25
113: iload_2
114: invokevirtual #29
117: ldc           #30
119: invokevirtual #25
122: iconst_1
123: invokevirtual #29
126: ldc           #24
128: invokevirtual #25
131: invokevirtual #27
134: iload_2
135: iconst_1
136: if_icmpne     143
139: iconst_1
140: goto          144
143: iconst_0
144: invokestatic  #31
147: new           #22
150: dup
151: invokespecial #23
154: ldc           #24
156: invokevirtual #25
159: aload_3
160: invokevirtual #25
163: ldc           #79
165: invokevirtual #25
168: invokevirtual #27
171: aload_3
172: ldc           #78
174: invokestatic  #28
177: return
Exception table:
from    to  target type
76    96    99   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0787
Start line: 6511
End line: 0
Method source code: 
    public void test0787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0787");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str6 = helpFormatter0.getNewLine();
        java.util.Comparator comparator7 = helpFormatter0.getOptionComparator();
        org.apache.commons.cli.HelpFormatter helpFormatter8 = new org.apache.commons.cli.HelpFormatter();
        int int9 = helpFormatter8.getLeftPadding();
        helpFormatter8.defaultNewLine = "";
        java.lang.String str12 = helpFormatter8.defaultOptPrefix;
        helpFormatter8.setLongOptPrefix(" ");
        helpFormatter8.defaultDescPad = (short) 10;
        java.lang.String str17 = helpFormatter8.defaultArgName;
        java.util.Comparator comparator18 = helpFormatter8.optionComparator;
        helpFormatter0.setOptionComparator(comparator18);
        helpFormatter0.defaultSyntaxPrefix = "                                                                                                 ";
        org.apache.commons.cli.HelpFormatter helpFormatter22 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter22.setOptPrefix("");
        helpFormatter22.defaultLongOptPrefix = "";
        java.lang.String str27 = helpFormatter22.defaultLongOptPrefix;
        helpFormatter22.defaultDescPad = 0;
        org.apache.commons.cli.HelpFormatter helpFormatter30 = new org.apache.commons.cli.HelpFormatter();
        java.util.Comparator comparator31 = helpFormatter30.optionComparator;
        int int32 = helpFormatter30.getLeftPadding();
        int int33 = helpFormatter30.defaultLeftPad;
        java.lang.String str35 = helpFormatter30.createPadding((int) 'a');
        org.apache.commons.cli.HelpFormatter helpFormatter36 = new org.apache.commons.cli.HelpFormatter();
        int int37 = helpFormatter36.getLeftPadding();
        helpFormatter36.defaultNewLine = "";
        helpFormatter36.defaultDescPad = '4';
        helpFormatter36.setNewLine("");
        int int47 = helpFormatter36.findWrapPos("\n", (int) ' ', 3);
        java.util.Comparator comparator48 = helpFormatter36.optionComparator;
        helpFormatter30.setOptionComparator(comparator48);
        helpFormatter22.setOptionComparator(comparator48);
        helpFormatter0.setOptionComparator(comparator48);
        java.lang.String str53 = helpFormatter0.createPadding(52);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\n" + "'", str6, "\n");
        org.junit.Assert.assertNotNull(comparator7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "-" + "'", str12, "-");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "arg" + "'", str17, "arg");
        org.junit.Assert.assertNotNull(comparator18);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(comparator31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "                                                                                                 " + "'", str35, "                                                                                                 ");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(comparator48);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "                                                    " + "'", str53, "                                                    ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #391
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #11
36: invokevirtual #51
39: aload_1
40: ldc           #11
42: putfield      #52
45: aload_1
46: getfield      #52
49: astore_2
50: aload_1
51: invokevirtual #16
54: astore_3
55: aload_1
56: invokevirtual #58
59: astore        4
61: new           #8
64: dup
65: invokespecial #9
68: astore        5
70: aload         5
72: invokevirtual #35
75: istore        6
77: aload         5
79: ldc           #11
81: putfield      #36
84: aload         5
86: getfield      #42
89: astore        7
91: aload         5
93: ldc           #38
95: invokevirtual #43
98: aload         5
100: bipush        10
102: putfield      #44
105: aload         5
107: getfield      #15
110: astore        8
112: aload         5
114: getfield      #10
117: astore        9
119: aload_1
120: aload         9
122: invokevirtual #99
125: aload_1
126: ldc           #14
128: putfield      #45
131: new           #8
134: dup
135: invokespecial #9
138: astore        10
140: aload         10
142: ldc           #11
144: invokevirtual #51
147: aload         10
149: ldc           #11
151: putfield      #52
154: aload         10
156: getfield      #52
159: astore        11
161: aload         10
163: iconst_0
164: putfield      #44
167: new           #8
170: dup
171: invokespecial #9
174: astore        12
176: aload         12
178: getfield      #10
181: astore        13
183: aload         12
185: invokevirtual #35
188: istore        14
190: aload         12
192: getfield      #40
195: istore        15
197: aload         12
199: bipush        97
201: invokevirtual #93
204: astore        16
206: new           #8
209: dup
210: invokespecial #9
213: astore        17
215: aload         17
217: invokevirtual #35
220: istore        18
222: aload         17
224: ldc           #11
226: putfield      #36
229: aload         17
231: bipush        52
233: putfield      #44
236: aload         17
238: ldc           #11
240: invokevirtual #88
243: aload         17
245: ldc           #33
247: bipush        32
249: iconst_3
250: invokevirtual #61
253: istore        19
255: aload         17
257: getfield      #10
260: astore        20
262: aload         12
264: aload         20
266: invokevirtual #99
269: aload         10
271: aload         20
273: invokevirtual #99
276: aload_1
277: aload         20
279: invokevirtual #99
282: aload_1
283: bipush        52
285: invokevirtual #93
288: astore        21
290: new           #22
293: dup
294: invokespecial #23
297: ldc           #24
299: invokevirtual #25
302: aload_2
303: invokevirtual #25
306: ldc           #26
308: invokevirtual #25
311: invokevirtual #27
314: aload_2
315: ldc           #11
317: invokestatic  #28
320: new           #22
323: dup
324: invokespecial #23
327: ldc           #24
329: invokevirtual #25
332: aload_3
333: invokevirtual #25
336: ldc           #32
338: invokevirtual #25
341: invokevirtual #27
344: aload_3
345: ldc           #33
347: invokestatic  #28
350: aload         4
352: invokestatic  #21
355: new           #22
358: dup
359: invokespecial #23
362: ldc           #24
364: invokevirtual #25
367: iload         6
369: invokevirtual #29
372: ldc           #30
374: invokevirtual #25
377: iconst_1
378: invokevirtual #29
381: ldc           #24
383: invokevirtual #25
386: invokevirtual #27
389: iload         6
391: iconst_1
392: if_icmpne     399
395: iconst_1
396: goto          400
399: iconst_0
400: invokestatic  #31
403: new           #22
406: dup
407: invokespecial #23
410: ldc           #24
412: invokevirtual #25
415: aload         7
417: invokevirtual #25
420: ldc           #48
422: invokevirtual #25
425: invokevirtual #27
428: aload         7
430: ldc           #49
432: invokestatic  #28
435: new           #22
438: dup
439: invokespecial #23
442: ldc           #24
444: invokevirtual #25
447: aload         8
449: invokevirtual #25
452: ldc           #79
454: invokevirtual #25
457: invokevirtual #27
460: aload         8
462: ldc           #78
464: invokestatic  #28
467: aload         9
469: invokestatic  #21
472: new           #22
475: dup
476: invokespecial #23
479: ldc           #24
481: invokevirtual #25
484: aload         11
486: invokevirtual #25
489: ldc           #26
491: invokevirtual #25
494: invokevirtual #27
497: aload         11
499: ldc           #11
501: invokestatic  #28
504: aload         13
506: invokestatic  #21
509: new           #22
512: dup
513: invokespecial #23
516: ldc           #24
518: invokevirtual #25
521: iload         14
523: invokevirtual #29
526: ldc           #30
528: invokevirtual #25
531: iconst_1
532: invokevirtual #29
535: ldc           #24
537: invokevirtual #25
540: invokevirtual #27
543: iload         14
545: iconst_1
546: if_icmpne     553
549: iconst_1
550: goto          554
553: iconst_0
554: invokestatic  #31
557: new           #22
560: dup
561: invokespecial #23
564: ldc           #24
566: invokevirtual #25
569: iload         15
571: invokevirtual #29
574: ldc           #30
576: invokevirtual #25
579: iconst_1
580: invokevirtual #29
583: ldc           #24
585: invokevirtual #25
588: invokevirtual #27
591: iload         15
593: iconst_1
594: if_icmpne     601
597: iconst_1
598: goto          602
601: iconst_0
602: invokestatic  #31
605: new           #22
608: dup
609: invokespecial #23
612: ldc           #24
614: invokevirtual #25
617: aload         16
619: invokevirtual #25
622: ldc           #142
624: invokevirtual #25
627: invokevirtual #27
630: aload         16
632: ldc           #14
634: invokestatic  #28
637: new           #22
640: dup
641: invokespecial #23
644: ldc           #24
646: invokevirtual #25
649: iload         18
651: invokevirtual #29
654: ldc           #30
656: invokevirtual #25
659: iconst_1
660: invokevirtual #29
663: ldc           #24
665: invokevirtual #25
668: invokevirtual #27
671: iload         18
673: iconst_1
674: if_icmpne     681
677: iconst_1
678: goto          682
681: iconst_0
682: invokestatic  #31
685: new           #22
688: dup
689: invokespecial #23
692: ldc           #24
694: invokevirtual #25
697: iload         19
699: invokevirtual #29
702: ldc           #30
704: invokevirtual #25
707: iconst_m1
708: invokevirtual #29
711: ldc           #24
713: invokevirtual #25
716: invokevirtual #27
719: iload         19
721: iconst_m1
722: if_icmpne     729
725: iconst_1
726: goto          730
729: iconst_0
730: invokestatic  #31
733: aload         20
735: invokestatic  #21
738: new           #22
741: dup
742: invokespecial #23
745: ldc           #24
747: invokevirtual #25
750: aload         21
752: invokevirtual #25
755: ldc           #161
757: invokevirtual #25
760: invokevirtual #27
763: aload         21
765: ldc           #77
767: invokestatic  #28
770: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0788
Start line: 6570
End line: 0
Method source code: 
    public void test0788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0788");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.defaultDescPad = '4';
        helpFormatter0.setNewLine("");
        helpFormatter0.setLongOptPrefix(" ");
        java.lang.String str10 = helpFormatter0.getSyntaxPrefix();
        java.util.Comparator comparator11 = helpFormatter0.optionComparator;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "usage: " + "'", str10, "usage: ");
        org.junit.Assert.assertNotNull(comparator11);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #392
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: bipush        52
47: putfield      #44
50: aload_1
51: ldc           #11
53: invokevirtual #88
56: aload_1
57: ldc           #38
59: invokevirtual #43
62: aload_1
63: invokevirtual #89
66: astore_3
67: aload_1
68: getfield      #10
71: astore        4
73: new           #22
76: dup
77: invokespecial #23
80: ldc           #24
82: invokevirtual #25
85: iload_2
86: invokevirtual #29
89: ldc           #30
91: invokevirtual #25
94: iconst_1
95: invokevirtual #29
98: ldc           #24
100: invokevirtual #25
103: invokevirtual #27
106: iload_2
107: iconst_1
108: if_icmpne     115
111: iconst_1
112: goto          116
115: iconst_0
116: invokestatic  #31
119: new           #22
122: dup
123: invokespecial #23
126: ldc           #24
128: invokevirtual #25
131: aload_3
132: invokevirtual #25
135: ldc           #104
137: invokevirtual #25
140: invokevirtual #27
143: aload_3
144: ldc           #46
146: invokestatic  #28
149: aload         4
151: invokestatic  #21
154: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0789
Start line: 6587
End line: 0
Method source code: 
    public void test0789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0789");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setLongOptPrefix(" ");
        helpFormatter0.defaultDescPad = (short) 10;
        java.lang.String str9 = helpFormatter0.defaultArgName;
        helpFormatter0.setSyntaxPrefix("");
        helpFormatter0.defaultOptPrefix = "                                                                                                 ";
        helpFormatter0.setLongOptPrefix("          ");
        int int16 = helpFormatter0.getLeftPadding();
        helpFormatter0.setLongOptPrefix("                                                                                                 ");
        java.lang.String str19 = helpFormatter0.defaultNewLine;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "arg" + "'", str9, "arg");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #393
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: getfield      #42
48: astore_3
49: aload_1
50: ldc           #38
52: invokevirtual #43
55: aload_1
56: bipush        10
58: putfield      #44
61: aload_1
62: getfield      #15
65: astore        4
67: aload_1
68: ldc           #11
70: invokevirtual #39
73: aload_1
74: ldc           #14
76: putfield      #42
79: aload_1
80: ldc           #67
82: invokevirtual #43
85: aload_1
86: invokevirtual #35
89: istore        5
91: aload_1
92: ldc           #14
94: invokevirtual #43
97: aload_1
98: getfield      #36
101: astore        6
103: new           #22
106: dup
107: invokespecial #23
110: ldc           #24
112: invokevirtual #25
115: iload_2
116: invokevirtual #29
119: ldc           #30
121: invokevirtual #25
124: iconst_1
125: invokevirtual #29
128: ldc           #24
130: invokevirtual #25
133: invokevirtual #27
136: iload_2
137: iconst_1
138: if_icmpne     145
141: iconst_1
142: goto          146
145: iconst_0
146: invokestatic  #31
149: new           #22
152: dup
153: invokespecial #23
156: ldc           #24
158: invokevirtual #25
161: aload_3
162: invokevirtual #25
165: ldc           #48
167: invokevirtual #25
170: invokevirtual #27
173: aload_3
174: ldc           #49
176: invokestatic  #28
179: new           #22
182: dup
183: invokespecial #23
186: ldc           #24
188: invokevirtual #25
191: aload         4
193: invokevirtual #25
196: ldc           #79
198: invokevirtual #25
201: invokevirtual #27
204: aload         4
206: ldc           #78
208: invokestatic  #28
211: new           #22
214: dup
215: invokespecial #23
218: ldc           #24
220: invokevirtual #25
223: iload         5
225: invokevirtual #29
228: ldc           #30
230: invokevirtual #25
233: iconst_1
234: invokevirtual #29
237: ldc           #24
239: invokevirtual #25
242: invokevirtual #27
245: iload         5
247: iconst_1
248: if_icmpne     255
251: iconst_1
252: goto          256
255: iconst_0
256: invokestatic  #31
259: new           #22
262: dup
263: invokespecial #23
266: ldc           #24
268: invokevirtual #25
271: aload         6
273: invokevirtual #25
276: ldc           #26
278: invokevirtual #25
281: invokevirtual #27
284: aload         6
286: ldc           #11
288: invokestatic  #28
291: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0790
Start line: 6611
End line: 0
Method source code: 
    public void test0790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0790");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        helpFormatter0.setSyntaxPrefix(" ");
        int int8 = helpFormatter0.defaultLeftPad;
        helpFormatter0.setLeftPadding(1);
        java.lang.String str11 = helpFormatter0.getOptPrefix();
        helpFormatter0.defaultLeftPad = 97;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "-" + "'", str11, "-");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #394
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: bipush        10
47: invokevirtual #37
50: aload_1
51: ldc           #38
53: invokevirtual #39
56: aload_1
57: getfield      #40
60: istore_3
61: aload_1
62: iconst_1
63: invokevirtual #55
66: aload_1
67: invokevirtual #73
70: astore        4
72: aload_1
73: bipush        97
75: putfield      #40
78: new           #22
81: dup
82: invokespecial #23
85: ldc           #24
87: invokevirtual #25
90: iload_2
91: invokevirtual #29
94: ldc           #30
96: invokevirtual #25
99: iconst_1
100: invokevirtual #29
103: ldc           #24
105: invokevirtual #25
108: invokevirtual #27
111: iload_2
112: iconst_1
113: if_icmpne     120
116: iconst_1
117: goto          121
120: iconst_0
121: invokestatic  #31
124: new           #22
127: dup
128: invokespecial #23
131: ldc           #24
133: invokevirtual #25
136: iload_3
137: invokevirtual #29
140: ldc           #30
142: invokevirtual #25
145: iconst_1
146: invokevirtual #29
149: ldc           #24
151: invokevirtual #25
154: invokevirtual #27
157: iload_3
158: iconst_1
159: if_icmpne     166
162: iconst_1
163: goto          167
166: iconst_0
167: invokestatic  #31
170: new           #22
173: dup
174: invokespecial #23
177: ldc           #24
179: invokevirtual #25
182: aload         4
184: invokevirtual #25
187: ldc           #48
189: invokevirtual #25
192: invokevirtual #27
195: aload         4
197: ldc           #49
199: invokestatic  #28
202: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0791
Start line: 6629
End line: 0
Method source code: 
    public void test0791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0791");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str3 = helpFormatter0.getOptPrefix();
        java.util.Comparator comparator4 = helpFormatter0.optionComparator;
        helpFormatter0.setArgName("--");
        helpFormatter0.setWidth((int) (byte) 0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "--" + "'", str2, "--");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "-" + "'", str3, "-");
        org.junit.Assert.assertNotNull(comparator4);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #395
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: getfield      #52
42: astore_3
43: aload_1
44: invokevirtual #73
47: astore        4
49: aload_1
50: getfield      #10
53: astore        5
55: aload_1
56: ldc           #63
58: invokevirtual #59
61: aload_1
62: iconst_0
63: invokevirtual #90
66: new           #22
69: dup
70: invokespecial #23
73: ldc           #24
75: invokevirtual #25
78: iload_2
79: invokevirtual #29
82: ldc           #30
84: invokevirtual #25
87: iconst_1
88: invokevirtual #29
91: ldc           #24
93: invokevirtual #25
96: invokevirtual #27
99: iload_2
100: iconst_1
101: if_icmpne     108
104: iconst_1
105: goto          109
108: iconst_0
109: invokestatic  #31
112: new           #22
115: dup
116: invokespecial #23
119: ldc           #24
121: invokevirtual #25
124: aload_3
125: invokevirtual #25
128: ldc           #62
130: invokevirtual #25
133: invokevirtual #27
136: aload_3
137: ldc           #63
139: invokestatic  #28
142: new           #22
145: dup
146: invokespecial #23
149: ldc           #24
151: invokevirtual #25
154: aload         4
156: invokevirtual #25
159: ldc           #48
161: invokevirtual #25
164: invokevirtual #27
167: aload         4
169: ldc           #49
171: invokestatic  #28
174: aload         5
176: invokestatic  #21
179: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0792
Start line: 6646
End line: 0
Method source code: 
    public void test0792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0792");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        java.lang.String str6 = helpFormatter0.getLongOptSeparator();
        java.lang.String str7 = helpFormatter0.getLongOptSeparator();
        int int8 = helpFormatter0.defaultWidth;
        helpFormatter0.setLongOptPrefix("                                                                                                 ");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + " " + "'", str6, " ");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + " " + "'", str7, " ");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 74 + "'", int8 == 74);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #396
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: bipush        10
47: invokevirtual #37
50: aload_1
51: invokevirtual #72
54: astore_3
55: aload_1
56: invokevirtual #72
59: astore        4
61: aload_1
62: getfield      #57
65: istore        5
67: aload_1
68: ldc           #14
70: invokevirtual #43
73: new           #22
76: dup
77: invokespecial #23
80: ldc           #24
82: invokevirtual #25
85: iload_2
86: invokevirtual #29
89: ldc           #30
91: invokevirtual #25
94: iconst_1
95: invokevirtual #29
98: ldc           #24
100: invokevirtual #25
103: invokevirtual #27
106: iload_2
107: iconst_1
108: if_icmpne     115
111: iconst_1
112: goto          116
115: iconst_0
116: invokestatic  #31
119: new           #22
122: dup
123: invokespecial #23
126: ldc           #24
128: invokevirtual #25
131: aload_3
132: invokevirtual #25
135: ldc           #75
137: invokevirtual #25
140: invokevirtual #27
143: aload_3
144: ldc           #38
146: invokestatic  #28
149: new           #22
152: dup
153: invokespecial #23
156: ldc           #24
158: invokevirtual #25
161: aload         4
163: invokevirtual #25
166: ldc           #75
168: invokevirtual #25
171: invokevirtual #27
174: aload         4
176: ldc           #38
178: invokestatic  #28
181: new           #22
184: dup
185: invokespecial #23
188: ldc           #24
190: invokevirtual #25
193: iload         5
195: invokevirtual #29
198: ldc           #30
200: invokevirtual #25
203: bipush        74
205: invokevirtual #29
208: ldc           #24
210: invokevirtual #25
213: invokevirtual #27
216: iload         5
218: bipush        74
220: if_icmpne     227
223: iconst_1
224: goto          228
227: iconst_0
228: invokestatic  #31
231: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0793
Start line: 6664
End line: 0
Method source code: 
    public void test0793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0793");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.getArgName();
        helpFormatter0.defaultNewLine = "\n";
        helpFormatter0.defaultLeftPad = (byte) -1;
        java.lang.String str7 = helpFormatter0.defaultLongOptPrefix;
        int int11 = helpFormatter0.findWrapPos("                                                                                                 ", 1, (int) 'a');
        java.io.PrintWriter printWriter12 = null;
        org.apache.commons.cli.Options options16 = null;
        try {
            helpFormatter0.printHelp(printWriter12, (int) ' ', "                                                                                                    ", "hi!", options16, (int) '#', (int) (byte) 10, "hi!", false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "arg" + "'", str2, "arg");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "--" + "'", str7, "--");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #397
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: invokevirtual #83
42: astore_3
43: aload_1
44: ldc           #33
46: putfield      #36
49: aload_1
50: iconst_m1
51: putfield      #40
54: aload_1
55: getfield      #52
58: astore        4
60: aload_1
61: ldc           #14
63: iconst_1
64: bipush        97
66: invokevirtual #61
69: istore        5
71: aconst_null
72: astore        6
74: aconst_null
75: astore        7
77: aload_1
78: aload         6
80: bipush        32
82: ldc           #118
84: ldc           #65
86: aload         7
88: bipush        35
90: bipush        10
92: ldc           #65
94: iconst_0
95: invokevirtual #138
98: ldc           #18
100: invokestatic  #19
103: goto          108
106: astore        8
108: new           #22
111: dup
112: invokespecial #23
115: ldc           #24
117: invokevirtual #25
120: iload_2
121: invokevirtual #29
124: ldc           #30
126: invokevirtual #25
129: iconst_1
130: invokevirtual #29
133: ldc           #24
135: invokevirtual #25
138: invokevirtual #27
141: iload_2
142: iconst_1
143: if_icmpne     150
146: iconst_1
147: goto          151
150: iconst_0
151: invokestatic  #31
154: new           #22
157: dup
158: invokespecial #23
161: ldc           #24
163: invokevirtual #25
166: aload_3
167: invokevirtual #25
170: ldc           #79
172: invokevirtual #25
175: invokevirtual #27
178: aload_3
179: ldc           #78
181: invokestatic  #28
184: new           #22
187: dup
188: invokespecial #23
191: ldc           #24
193: invokevirtual #25
196: aload         4
198: invokevirtual #25
201: ldc           #62
203: invokevirtual #25
206: invokevirtual #27
209: aload         4
211: ldc           #63
213: invokestatic  #28
216: new           #22
219: dup
220: invokespecial #23
223: ldc           #24
225: invokevirtual #25
228: iload         5
230: invokevirtual #29
233: ldc           #30
235: invokevirtual #25
238: iconst_m1
239: invokevirtual #29
242: ldc           #24
244: invokevirtual #25
247: invokevirtual #27
250: iload         5
252: iconst_m1
253: if_icmpne     260
256: iconst_1
257: goto          261
260: iconst_0
261: invokestatic  #31
264: return
Exception table:
from    to  target type
77   103   106   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0794
Start line: 6690
End line: 0
Method source code: 
    public void test0794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0794");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setNewLine(" ");
        helpFormatter0.setOptPrefix("usage: ");
        java.lang.String str9 = helpFormatter0.defaultOptPrefix;
        int int10 = helpFormatter0.defaultLeftPad;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "usage: " + "'", str9, "usage: ");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #398
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: getfield      #42
48: astore_3
49: aload_1
50: ldc           #38
52: invokevirtual #88
55: aload_1
56: ldc           #46
58: invokevirtual #51
61: aload_1
62: getfield      #42
65: astore        4
67: aload_1
68: getfield      #40
71: istore        5
73: new           #22
76: dup
77: invokespecial #23
80: ldc           #24
82: invokevirtual #25
85: iload_2
86: invokevirtual #29
89: ldc           #30
91: invokevirtual #25
94: iconst_1
95: invokevirtual #29
98: ldc           #24
100: invokevirtual #25
103: invokevirtual #27
106: iload_2
107: iconst_1
108: if_icmpne     115
111: iconst_1
112: goto          116
115: iconst_0
116: invokestatic  #31
119: new           #22
122: dup
123: invokespecial #23
126: ldc           #24
128: invokevirtual #25
131: aload_3
132: invokevirtual #25
135: ldc           #48
137: invokevirtual #25
140: invokevirtual #27
143: aload_3
144: ldc           #49
146: invokestatic  #28
149: new           #22
152: dup
153: invokespecial #23
156: ldc           #24
158: invokevirtual #25
161: aload         4
163: invokevirtual #25
166: ldc           #104
168: invokevirtual #25
171: invokevirtual #27
174: aload         4
176: ldc           #46
178: invokestatic  #28
181: new           #22
184: dup
185: invokespecial #23
188: ldc           #24
190: invokevirtual #25
193: iload         5
195: invokevirtual #29
198: ldc           #30
200: invokevirtual #25
203: iconst_1
204: invokevirtual #29
207: ldc           #24
209: invokevirtual #25
212: invokevirtual #27
215: iload         5
217: iconst_1
218: if_icmpne     225
221: iconst_1
222: goto          226
225: iconst_0
226: invokestatic  #31
229: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0795
Start line: 6708
End line: 0
Method source code: 
    public void test0795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0795");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str3 = helpFormatter0.getOptPrefix();
        helpFormatter0.setArgName("-");
        java.lang.String str6 = helpFormatter0.defaultNewLine;
        java.io.PrintWriter printWriter7 = null;
        try {
            helpFormatter0.printWrapped(printWriter7, 74, 97, "                                                                                                 ");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "--" + "'", str2, "--");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "-" + "'", str3, "-");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\n" + "'", str6, "\n");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #399
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: getfield      #52
42: astore_3
43: aload_1
44: invokevirtual #73
47: astore        4
49: aload_1
50: ldc           #49
52: invokevirtual #59
55: aload_1
56: getfield      #36
59: astore        5
61: aconst_null
62: astore        6
64: aload_1
65: aload         6
67: bipush        74
69: bipush        97
71: ldc           #14
73: invokevirtual #187
76: ldc           #18
78: invokestatic  #19
81: goto          86
84: astore        7
86: new           #22
89: dup
90: invokespecial #23
93: ldc           #24
95: invokevirtual #25
98: iload_2
99: invokevirtual #29
102: ldc           #30
104: invokevirtual #25
107: iconst_1
108: invokevirtual #29
111: ldc           #24
113: invokevirtual #25
116: invokevirtual #27
119: iload_2
120: iconst_1
121: if_icmpne     128
124: iconst_1
125: goto          129
128: iconst_0
129: invokestatic  #31
132: new           #22
135: dup
136: invokespecial #23
139: ldc           #24
141: invokevirtual #25
144: aload_3
145: invokevirtual #25
148: ldc           #62
150: invokevirtual #25
153: invokevirtual #27
156: aload_3
157: ldc           #63
159: invokestatic  #28
162: new           #22
165: dup
166: invokespecial #23
169: ldc           #24
171: invokevirtual #25
174: aload         4
176: invokevirtual #25
179: ldc           #48
181: invokevirtual #25
184: invokevirtual #27
187: aload         4
189: ldc           #49
191: invokestatic  #28
194: new           #22
197: dup
198: invokespecial #23
201: ldc           #24
203: invokevirtual #25
206: aload         5
208: invokevirtual #25
211: ldc           #32
213: invokevirtual #25
216: invokevirtual #27
219: aload         5
221: ldc           #33
223: invokestatic  #28
226: return
Exception table:
from    to  target type
64    81    84   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0796
Start line: 6732
End line: 0
Method source code: 
    public void test0796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0796");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.defaultDescPad = '4';
        helpFormatter0.setNewLine("");
        int int11 = helpFormatter0.findWrapPos("\n", (int) ' ', 3);
        java.util.Comparator comparator12 = helpFormatter0.optionComparator;
        helpFormatter0.setWidth((int) (short) 100);
        helpFormatter0.defaultOptPrefix = "                                                                                                 ";
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(comparator12);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #400
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: bipush        52
47: putfield      #44
50: aload_1
51: ldc           #11
53: invokevirtual #88
56: aload_1
57: ldc           #33
59: bipush        32
61: iconst_3
62: invokevirtual #61
65: istore_3
66: aload_1
67: getfield      #10
70: astore        4
72: aload_1
73: bipush        100
75: invokevirtual #90
78: aload_1
79: ldc           #14
81: putfield      #42
84: new           #22
87: dup
88: invokespecial #23
91: ldc           #24
93: invokevirtual #25
96: iload_2
97: invokevirtual #29
100: ldc           #30
102: invokevirtual #25
105: iconst_1
106: invokevirtual #29
109: ldc           #24
111: invokevirtual #25
114: invokevirtual #27
117: iload_2
118: iconst_1
119: if_icmpne     126
122: iconst_1
123: goto          127
126: iconst_0
127: invokestatic  #31
130: new           #22
133: dup
134: invokespecial #23
137: ldc           #24
139: invokevirtual #25
142: iload_3
143: invokevirtual #29
146: ldc           #30
148: invokevirtual #25
151: iconst_m1
152: invokevirtual #29
155: ldc           #24
157: invokevirtual #25
160: invokevirtual #27
163: iload_3
164: iconst_m1
165: if_icmpne     172
168: iconst_1
169: goto          173
172: iconst_0
173: invokestatic  #31
176: aload         4
178: invokestatic  #21
181: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0797
Start line: 6750
End line: 0
Method source code: 
    public void test0797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0797");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str6 = helpFormatter0.getNewLine();
        java.util.Comparator comparator7 = helpFormatter0.getOptionComparator();
        helpFormatter0.setLongOptSeparator("usage: ");
        helpFormatter0.defaultDescPad = (short) 10;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\n" + "'", str6, "\n");
        org.junit.Assert.assertNotNull(comparator7);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #401
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #11
36: invokevirtual #51
39: aload_1
40: ldc           #11
42: putfield      #52
45: aload_1
46: getfield      #52
49: astore_2
50: aload_1
51: invokevirtual #16
54: astore_3
55: aload_1
56: invokevirtual #58
59: astore        4
61: aload_1
62: ldc           #46
64: invokevirtual #74
67: aload_1
68: bipush        10
70: putfield      #44
73: new           #22
76: dup
77: invokespecial #23
80: ldc           #24
82: invokevirtual #25
85: aload_2
86: invokevirtual #25
89: ldc           #26
91: invokevirtual #25
94: invokevirtual #27
97: aload_2
98: ldc           #11
100: invokestatic  #28
103: new           #22
106: dup
107: invokespecial #23
110: ldc           #24
112: invokevirtual #25
115: aload_3
116: invokevirtual #25
119: ldc           #32
121: invokevirtual #25
124: invokevirtual #27
127: aload_3
128: ldc           #33
130: invokestatic  #28
133: aload         4
135: invokestatic  #21
138: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0798
Start line: 6767
End line: 0
Method source code: 
    public void test0798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0798");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.lang.String str1 = helpFormatter0.defaultSyntaxPrefix;
        java.lang.String str2 = helpFormatter0.getLongOptPrefix();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "usage: " + "'", str1, "usage: ");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "--" + "'", str2, "--");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #402
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: getfield      #45
37: astore_2
38: aload_1
39: invokevirtual #53
42: astore_3
43: new           #22
46: dup
47: invokespecial #23
50: ldc           #24
52: invokevirtual #25
55: aload_2
56: invokevirtual #25
59: ldc           #104
61: invokevirtual #25
64: invokevirtual #27
67: aload_2
68: ldc           #46
70: invokestatic  #28
73: new           #22
76: dup
77: invokespecial #23
80: ldc           #24
82: invokevirtual #25
85: aload_3
86: invokevirtual #25
89: ldc           #62
91: invokevirtual #25
94: invokevirtual #27
97: aload_3
98: ldc           #63
100: invokestatic  #28
103: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0799
Start line: 6778
End line: 0
Method source code: 
    public void test0799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0799");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.defaultLongOptPrefix = "hi!";
        int int3 = helpFormatter0.defaultLeftPad;
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #403
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #65
36: putfield      #52
39: aload_1
40: getfield      #40
43: istore_2
44: new           #22
47: dup
48: invokespecial #23
51: ldc           #24
53: invokevirtual #25
56: iload_2
57: invokevirtual #29
60: ldc           #30
62: invokevirtual #25
65: iconst_1
66: invokevirtual #29
69: ldc           #24
71: invokevirtual #25
74: invokevirtual #27
77: iload_2
78: iconst_1
79: if_icmpne     86
82: iconst_1
83: goto          87
86: iconst_0
87: invokestatic  #31
90: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0800
Start line: 6788
End line: 0
Method source code: 
    public void test0800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0800");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.setWidth(1);
        java.lang.String str5 = helpFormatter0.getNewLine();
        java.io.PrintWriter printWriter6 = null;
        org.apache.commons.cli.Options options10 = null;
        try {
            helpFormatter0.printHelp(printWriter6, 32, "", "          ", options10, (int) '4', (int) (short) 100, "usage: ", true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: cmdLineSyntax not provided");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\n" + "'", str5, "\n");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #404
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #11
36: invokevirtual #51
39: aload_1
40: iconst_1
41: invokevirtual #90
44: aload_1
45: invokevirtual #16
48: astore_2
49: aconst_null
50: astore_3
51: aconst_null
52: astore        4
54: aload_1
55: aload_3
56: bipush        32
58: ldc           #11
60: ldc           #67
62: aload         4
64: bipush        52
66: bipush        100
68: ldc           #46
70: iconst_1
71: invokevirtual #138
74: ldc           #69
76: invokestatic  #19
79: goto          84
82: astore        5
84: new           #22
87: dup
88: invokespecial #23
91: ldc           #24
93: invokevirtual #25
96: aload_2
97: invokevirtual #25
100: ldc           #32
102: invokevirtual #25
105: invokevirtual #27
108: aload_2
109: ldc           #33
111: invokestatic  #28
114: return
Exception table:
from    to  target type
54    79    82   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0801
Start line: 6808
End line: 0
Method source code: 
    public void test0801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0801");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.defaultDescPad = '4';
        helpFormatter0.setNewLine("");
        helpFormatter0.setLongOptPrefix(" ");
        java.lang.String str10 = helpFormatter0.getLongOptPrefix();
        helpFormatter0.setLongOptSeparator("hi!");
        java.lang.String str13 = helpFormatter0.defaultLongOptPrefix;
        int int14 = helpFormatter0.defaultWidth;
        int int15 = helpFormatter0.defaultWidth;
        java.lang.String str17 = helpFormatter0.createPadding((int) (short) 10);
        int int21 = helpFormatter0.findWrapPos("          ", (int) (short) 0, 32);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + " " + "'", str10, " ");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + " " + "'", str13, " ");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 74 + "'", int14 == 74);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 74 + "'", int15 == 74);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "          " + "'", str17, "          ");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #405
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: bipush        52
47: putfield      #44
50: aload_1
51: ldc           #11
53: invokevirtual #88
56: aload_1
57: ldc           #38
59: invokevirtual #43
62: aload_1
63: invokevirtual #53
66: astore_3
67: aload_1
68: ldc           #65
70: invokevirtual #74
73: aload_1
74: getfield      #52
77: astore        4
79: aload_1
80: getfield      #57
83: istore        5
85: aload_1
86: getfield      #57
89: istore        6
91: aload_1
92: bipush        10
94: invokevirtual #93
97: astore        7
99: aload_1
100: ldc           #67
102: iconst_0
103: bipush        32
105: invokevirtual #61
108: istore        8
110: new           #22
113: dup
114: invokespecial #23
117: ldc           #24
119: invokevirtual #25
122: iload_2
123: invokevirtual #29
126: ldc           #30
128: invokevirtual #25
131: iconst_1
132: invokevirtual #29
135: ldc           #24
137: invokevirtual #25
140: invokevirtual #27
143: iload_2
144: iconst_1
145: if_icmpne     152
148: iconst_1
149: goto          153
152: iconst_0
153: invokestatic  #31
156: new           #22
159: dup
160: invokespecial #23
163: ldc           #24
165: invokevirtual #25
168: aload_3
169: invokevirtual #25
172: ldc           #75
174: invokevirtual #25
177: invokevirtual #27
180: aload_3
181: ldc           #38
183: invokestatic  #28
186: new           #22
189: dup
190: invokespecial #23
193: ldc           #24
195: invokevirtual #25
198: aload         4
200: invokevirtual #25
203: ldc           #75
205: invokevirtual #25
208: invokevirtual #27
211: aload         4
213: ldc           #38
215: invokestatic  #28
218: new           #22
221: dup
222: invokespecial #23
225: ldc           #24
227: invokevirtual #25
230: iload         5
232: invokevirtual #29
235: ldc           #30
237: invokevirtual #25
240: bipush        74
242: invokevirtual #29
245: ldc           #24
247: invokevirtual #25
250: invokevirtual #27
253: iload         5
255: bipush        74
257: if_icmpne     264
260: iconst_1
261: goto          265
264: iconst_0
265: invokestatic  #31
268: new           #22
271: dup
272: invokespecial #23
275: ldc           #24
277: invokevirtual #25
280: iload         6
282: invokevirtual #29
285: ldc           #30
287: invokevirtual #25
290: bipush        74
292: invokevirtual #29
295: ldc           #24
297: invokevirtual #25
300: invokevirtual #27
303: iload         6
305: bipush        74
307: if_icmpne     314
310: iconst_1
311: goto          315
314: iconst_0
315: invokestatic  #31
318: new           #22
321: dup
322: invokespecial #23
325: ldc           #24
327: invokevirtual #25
330: aload         7
332: invokevirtual #25
335: ldc           #135
337: invokevirtual #25
340: invokevirtual #27
343: aload         7
345: ldc           #67
347: invokestatic  #28
350: new           #22
353: dup
354: invokespecial #23
357: ldc           #24
359: invokevirtual #25
362: iload         8
364: invokevirtual #29
367: ldc           #30
369: invokevirtual #25
372: iconst_m1
373: invokevirtual #29
376: ldc           #24
378: invokevirtual #25
381: invokevirtual #27
384: iload         8
386: iconst_m1
387: if_icmpne     394
390: iconst_1
391: goto          395
394: iconst_0
395: invokestatic  #31
398: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0802
Start line: 6834
End line: 0
Method source code: 
    public void test0802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0802");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultOptPrefix;
        java.lang.String str6 = helpFormatter0.getLongOptPrefix();
        helpFormatter0.defaultArgName = "                                                                                                 ";
        int int9 = helpFormatter0.defaultLeftPad;
        java.lang.String str10 = helpFormatter0.defaultSyntaxPrefix;
        java.lang.String str11 = helpFormatter0.defaultSyntaxPrefix;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "usage: " + "'", str10, "usage: ");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "usage: " + "'", str11, "usage: ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #406
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #11
36: invokevirtual #51
39: aload_1
40: ldc           #11
42: putfield      #52
45: aload_1
46: getfield      #42
49: astore_2
50: aload_1
51: invokevirtual #53
54: astore_3
55: aload_1
56: ldc           #14
58: putfield      #15
61: aload_1
62: getfield      #40
65: istore        4
67: aload_1
68: getfield      #45
71: astore        5
73: aload_1
74: getfield      #45
77: astore        6
79: new           #22
82: dup
83: invokespecial #23
86: ldc           #24
88: invokevirtual #25
91: aload_2
92: invokevirtual #25
95: ldc           #26
97: invokevirtual #25
100: invokevirtual #27
103: aload_2
104: ldc           #11
106: invokestatic  #28
109: new           #22
112: dup
113: invokespecial #23
116: ldc           #24
118: invokevirtual #25
121: aload_3
122: invokevirtual #25
125: ldc           #26
127: invokevirtual #25
130: invokevirtual #27
133: aload_3
134: ldc           #11
136: invokestatic  #28
139: new           #22
142: dup
143: invokespecial #23
146: ldc           #24
148: invokevirtual #25
151: iload         4
153: invokevirtual #29
156: ldc           #30
158: invokevirtual #25
161: iconst_1
162: invokevirtual #29
165: ldc           #24
167: invokevirtual #25
170: invokevirtual #27
173: iload         4
175: iconst_1
176: if_icmpne     183
179: iconst_1
180: goto          184
183: iconst_0
184: invokestatic  #31
187: new           #22
190: dup
191: invokespecial #23
194: ldc           #24
196: invokevirtual #25
199: aload         5
201: invokevirtual #25
204: ldc           #104
206: invokevirtual #25
209: invokevirtual #27
212: aload         5
214: ldc           #46
216: invokestatic  #28
219: new           #22
222: dup
223: invokespecial #23
226: ldc           #24
228: invokevirtual #25
231: aload         6
233: invokevirtual #25
236: ldc           #104
238: invokevirtual #25
241: invokevirtual #27
244: aload         6
246: ldc           #46
248: invokestatic  #28
251: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0803
Start line: 6854
End line: 0
Method source code: 
    public void test0803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0803");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        java.lang.StringBuffer stringBuffer5 = null;
        try {
            java.lang.StringBuffer stringBuffer9 = helpFormatter0.renderWrappedText(stringBuffer5, 52, (int) (short) 100, "                                                                                                 ");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #407
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: getfield      #42
48: astore_3
49: aconst_null
50: astore        4
52: aload_1
53: aload         4
55: bipush        52
57: bipush        100
59: ldc           #14
61: invokevirtual #123
64: astore        5
66: ldc           #18
68: invokestatic  #19
71: goto          76
74: astore        5
76: new           #22
79: dup
80: invokespecial #23
83: ldc           #24
85: invokevirtual #25
88: iload_2
89: invokevirtual #29
92: ldc           #30
94: invokevirtual #25
97: iconst_1
98: invokevirtual #29
101: ldc           #24
103: invokevirtual #25
106: invokevirtual #27
109: iload_2
110: iconst_1
111: if_icmpne     118
114: iconst_1
115: goto          119
118: iconst_0
119: invokestatic  #31
122: new           #22
125: dup
126: invokespecial #23
129: ldc           #24
131: invokevirtual #25
134: aload_3
135: invokevirtual #25
138: ldc           #48
140: invokevirtual #25
143: invokevirtual #27
146: aload_3
147: ldc           #49
149: invokestatic  #28
152: return
Exception table:
from    to  target type
52    71    74   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0804
Start line: 6874
End line: 0
Method source code: 
    public void test0804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0804");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        java.lang.String str6 = helpFormatter0.getLongOptSeparator();
        java.lang.String str7 = helpFormatter0.getLongOptSeparator();
        java.lang.String str9 = helpFormatter0.createPadding((int) (byte) 1);
        java.lang.String str10 = helpFormatter0.defaultOptPrefix;
        java.util.Comparator comparator11 = helpFormatter0.optionComparator;
        java.lang.String str12 = helpFormatter0.defaultLongOptPrefix;
        helpFormatter0.defaultNewLine = "                                ";
        java.lang.String str15 = helpFormatter0.defaultOptPrefix;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + " " + "'", str6, " ");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + " " + "'", str7, " ");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + " " + "'", str9, " ");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "-" + "'", str10, "-");
        org.junit.Assert.assertNotNull(comparator11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "--" + "'", str12, "--");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "-" + "'", str15, "-");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #408
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: bipush        10
47: invokevirtual #37
50: aload_1
51: invokevirtual #72
54: astore_3
55: aload_1
56: invokevirtual #72
59: astore        4
61: aload_1
62: iconst_1
63: invokevirtual #93
66: astore        5
68: aload_1
69: getfield      #42
72: astore        6
74: aload_1
75: getfield      #10
78: astore        7
80: aload_1
81: getfield      #52
84: astore        8
86: aload_1
87: ldc           #95
89: putfield      #36
92: aload_1
93: getfield      #42
96: astore        9
98: new           #22
101: dup
102: invokespecial #23
105: ldc           #24
107: invokevirtual #25
110: iload_2
111: invokevirtual #29
114: ldc           #30
116: invokevirtual #25
119: iconst_1
120: invokevirtual #29
123: ldc           #24
125: invokevirtual #25
128: invokevirtual #27
131: iload_2
132: iconst_1
133: if_icmpne     140
136: iconst_1
137: goto          141
140: iconst_0
141: invokestatic  #31
144: new           #22
147: dup
148: invokespecial #23
151: ldc           #24
153: invokevirtual #25
156: aload_3
157: invokevirtual #25
160: ldc           #75
162: invokevirtual #25
165: invokevirtual #27
168: aload_3
169: ldc           #38
171: invokestatic  #28
174: new           #22
177: dup
178: invokespecial #23
181: ldc           #24
183: invokevirtual #25
186: aload         4
188: invokevirtual #25
191: ldc           #75
193: invokevirtual #25
196: invokevirtual #27
199: aload         4
201: ldc           #38
203: invokestatic  #28
206: new           #22
209: dup
210: invokespecial #23
213: ldc           #24
215: invokevirtual #25
218: aload         5
220: invokevirtual #25
223: ldc           #75
225: invokevirtual #25
228: invokevirtual #27
231: aload         5
233: ldc           #38
235: invokestatic  #28
238: new           #22
241: dup
242: invokespecial #23
245: ldc           #24
247: invokevirtual #25
250: aload         6
252: invokevirtual #25
255: ldc           #48
257: invokevirtual #25
260: invokevirtual #27
263: aload         6
265: ldc           #49
267: invokestatic  #28
270: aload         7
272: invokestatic  #21
275: new           #22
278: dup
279: invokespecial #23
282: ldc           #24
284: invokevirtual #25
287: aload         8
289: invokevirtual #25
292: ldc           #62
294: invokevirtual #25
297: invokevirtual #27
300: aload         8
302: ldc           #63
304: invokestatic  #28
307: new           #22
310: dup
311: invokespecial #23
314: ldc           #24
316: invokevirtual #25
319: aload         9
321: invokevirtual #25
324: ldc           #48
326: invokevirtual #25
329: invokevirtual #27
332: aload         9
334: ldc           #49
336: invokestatic  #28
339: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0805
Start line: 6900
End line: 0
Method source code: 
    public void test0805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0805");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        int int9 = helpFormatter0.findWrapPos(" ", (int) (byte) 10, (int) '4');
        helpFormatter0.defaultOptPrefix = "arg";
        int int12 = helpFormatter0.defaultLeftPad;
        java.lang.String str14 = helpFormatter0.rtrim("\n");
        java.io.PrintWriter printWriter15 = null;
        try {
            helpFormatter0.printWrapped(printWriter15, (int) '4', "   ");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #409
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #11
36: invokevirtual #51
39: aload_1
40: ldc           #11
42: putfield      #52
45: aload_1
46: getfield      #52
49: astore_2
50: aload_1
51: ldc           #38
53: bipush        10
55: bipush        52
57: invokevirtual #61
60: istore_3
61: aload_1
62: ldc           #78
64: putfield      #42
67: aload_1
68: getfield      #40
71: istore        4
73: aload_1
74: ldc           #33
76: invokevirtual #12
79: astore        5
81: aconst_null
82: astore        6
84: aload_1
85: aload         6
87: bipush        52
89: ldc           #113
91: invokevirtual #180
94: ldc           #18
96: invokestatic  #19
99: goto          104
102: astore        7
104: new           #22
107: dup
108: invokespecial #23
111: ldc           #24
113: invokevirtual #25
116: aload_2
117: invokevirtual #25
120: ldc           #26
122: invokevirtual #25
125: invokevirtual #27
128: aload_2
129: ldc           #11
131: invokestatic  #28
134: new           #22
137: dup
138: invokespecial #23
141: ldc           #24
143: invokevirtual #25
146: iload_3
147: invokevirtual #29
150: ldc           #30
152: invokevirtual #25
155: iconst_m1
156: invokevirtual #29
159: ldc           #24
161: invokevirtual #25
164: invokevirtual #27
167: iload_3
168: iconst_m1
169: if_icmpne     176
172: iconst_1
173: goto          177
176: iconst_0
177: invokestatic  #31
180: new           #22
183: dup
184: invokespecial #23
187: ldc           #24
189: invokevirtual #25
192: iload         4
194: invokevirtual #29
197: ldc           #30
199: invokevirtual #25
202: iconst_1
203: invokevirtual #29
206: ldc           #24
208: invokevirtual #25
211: invokevirtual #27
214: iload         4
216: iconst_1
217: if_icmpne     224
220: iconst_1
221: goto          225
224: iconst_0
225: invokestatic  #31
228: new           #22
231: dup
232: invokespecial #23
235: ldc           #24
237: invokevirtual #25
240: aload         5
242: invokevirtual #25
245: ldc           #26
247: invokevirtual #25
250: invokevirtual #27
253: aload         5
255: ldc           #11
257: invokestatic  #28
260: return
Exception table:
from    to  target type
84    99   102   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0806
Start line: 6926
End line: 0
Method source code: 
    public void test0806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0806");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        helpFormatter0.defaultDescPad = 0;
        org.apache.commons.cli.HelpFormatter helpFormatter8 = new org.apache.commons.cli.HelpFormatter();
        java.util.Comparator comparator9 = helpFormatter8.optionComparator;
        int int10 = helpFormatter8.getLeftPadding();
        int int11 = helpFormatter8.defaultLeftPad;
        java.lang.String str13 = helpFormatter8.createPadding((int) 'a');
        org.apache.commons.cli.HelpFormatter helpFormatter14 = new org.apache.commons.cli.HelpFormatter();
        int int15 = helpFormatter14.getLeftPadding();
        helpFormatter14.defaultNewLine = "";
        helpFormatter14.defaultDescPad = '4';
        helpFormatter14.setNewLine("");
        int int25 = helpFormatter14.findWrapPos("\n", (int) ' ', 3);
        java.util.Comparator comparator26 = helpFormatter14.optionComparator;
        helpFormatter8.setOptionComparator(comparator26);
        helpFormatter0.setOptionComparator(comparator26);
        helpFormatter0.defaultDescPad = (byte) 10;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(comparator9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "                                                                                                 " + "'", str13, "                                                                                                 ");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(comparator26);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #410
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #11
36: invokevirtual #51
39: aload_1
40: ldc           #11
42: putfield      #52
45: aload_1
46: getfield      #52
49: astore_2
50: aload_1
51: iconst_0
52: putfield      #44
55: new           #8
58: dup
59: invokespecial #9
62: astore_3
63: aload_3
64: getfield      #10
67: astore        4
69: aload_3
70: invokevirtual #35
73: istore        5
75: aload_3
76: getfield      #40
79: istore        6
81: aload_3
82: bipush        97
84: invokevirtual #93
87: astore        7
89: new           #8
92: dup
93: invokespecial #9
96: astore        8
98: aload         8
100: invokevirtual #35
103: istore        9
105: aload         8
107: ldc           #11
109: putfield      #36
112: aload         8
114: bipush        52
116: putfield      #44
119: aload         8
121: ldc           #11
123: invokevirtual #88
126: aload         8
128: ldc           #33
130: bipush        32
132: iconst_3
133: invokevirtual #61
136: istore        10
138: aload         8
140: getfield      #10
143: astore        11
145: aload_3
146: aload         11
148: invokevirtual #99
151: aload_1
152: aload         11
154: invokevirtual #99
157: aload_1
158: bipush        10
160: putfield      #44
163: new           #22
166: dup
167: invokespecial #23
170: ldc           #24
172: invokevirtual #25
175: aload_2
176: invokevirtual #25
179: ldc           #26
181: invokevirtual #25
184: invokevirtual #27
187: aload_2
188: ldc           #11
190: invokestatic  #28
193: aload         4
195: invokestatic  #21
198: new           #22
201: dup
202: invokespecial #23
205: ldc           #24
207: invokevirtual #25
210: iload         5
212: invokevirtual #29
215: ldc           #30
217: invokevirtual #25
220: iconst_1
221: invokevirtual #29
224: ldc           #24
226: invokevirtual #25
229: invokevirtual #27
232: iload         5
234: iconst_1
235: if_icmpne     242
238: iconst_1
239: goto          243
242: iconst_0
243: invokestatic  #31
246: new           #22
249: dup
250: invokespecial #23
253: ldc           #24
255: invokevirtual #25
258: iload         6
260: invokevirtual #29
263: ldc           #30
265: invokevirtual #25
268: iconst_1
269: invokevirtual #29
272: ldc           #24
274: invokevirtual #25
277: invokevirtual #27
280: iload         6
282: iconst_1
283: if_icmpne     290
286: iconst_1
287: goto          291
290: iconst_0
291: invokestatic  #31
294: new           #22
297: dup
298: invokespecial #23
301: ldc           #24
303: invokevirtual #25
306: aload         7
308: invokevirtual #25
311: ldc           #142
313: invokevirtual #25
316: invokevirtual #27
319: aload         7
321: ldc           #14
323: invokestatic  #28
326: new           #22
329: dup
330: invokespecial #23
333: ldc           #24
335: invokevirtual #25
338: iload         9
340: invokevirtual #29
343: ldc           #30
345: invokevirtual #25
348: iconst_1
349: invokevirtual #29
352: ldc           #24
354: invokevirtual #25
357: invokevirtual #27
360: iload         9
362: iconst_1
363: if_icmpne     370
366: iconst_1
367: goto          371
370: iconst_0
371: invokestatic  #31
374: new           #22
377: dup
378: invokespecial #23
381: ldc           #24
383: invokevirtual #25
386: iload         10
388: invokevirtual #29
391: ldc           #30
393: invokevirtual #25
396: iconst_m1
397: invokevirtual #29
400: ldc           #24
402: invokevirtual #25
405: invokevirtual #27
408: iload         10
410: iconst_m1
411: if_icmpne     418
414: iconst_1
415: goto          419
418: iconst_0
419: invokestatic  #31
422: aload         11
424: invokestatic  #21
427: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0807
Start line: 6960
End line: 0
Method source code: 
    public void test0807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0807");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str6 = helpFormatter0.getNewLine();
        java.lang.String str7 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setDescPadding(74);
        helpFormatter0.setLeftPadding(52);
        java.util.Comparator comparator12 = helpFormatter0.optionComparator;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\n" + "'", str6, "\n");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(comparator12);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #411
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #11
36: invokevirtual #51
39: aload_1
40: ldc           #11
42: putfield      #52
45: aload_1
46: getfield      #52
49: astore_2
50: aload_1
51: invokevirtual #16
54: astore_3
55: aload_1
56: getfield      #42
59: astore        4
61: aload_1
62: bipush        74
64: invokevirtual #37
67: aload_1
68: bipush        52
70: invokevirtual #55
73: aload_1
74: getfield      #10
77: astore        5
79: new           #22
82: dup
83: invokespecial #23
86: ldc           #24
88: invokevirtual #25
91: aload_2
92: invokevirtual #25
95: ldc           #26
97: invokevirtual #25
100: invokevirtual #27
103: aload_2
104: ldc           #11
106: invokestatic  #28
109: new           #22
112: dup
113: invokespecial #23
116: ldc           #24
118: invokevirtual #25
121: aload_3
122: invokevirtual #25
125: ldc           #32
127: invokevirtual #25
130: invokevirtual #27
133: aload_3
134: ldc           #33
136: invokestatic  #28
139: new           #22
142: dup
143: invokespecial #23
146: ldc           #24
148: invokevirtual #25
151: aload         4
153: invokevirtual #25
156: ldc           #26
158: invokevirtual #25
161: invokevirtual #27
164: aload         4
166: ldc           #11
168: invokestatic  #28
171: aload         5
173: invokestatic  #21
176: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0808
Start line: 6979
End line: 0
Method source code: 
    public void test0808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0808");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setLongOptPrefix(" ");
        helpFormatter0.defaultDescPad = (short) 10;
        helpFormatter0.setLongOptSeparator("");
        java.lang.String str11 = helpFormatter0.getNewLine();
        java.util.Comparator comparator12 = helpFormatter0.optionComparator;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(comparator12);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #412
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: getfield      #42
48: astore_3
49: aload_1
50: ldc           #38
52: invokevirtual #43
55: aload_1
56: bipush        10
58: putfield      #44
61: aload_1
62: ldc           #11
64: invokevirtual #74
67: aload_1
68: invokevirtual #16
71: astore        4
73: aload_1
74: getfield      #10
77: astore        5
79: new           #22
82: dup
83: invokespecial #23
86: ldc           #24
88: invokevirtual #25
91: iload_2
92: invokevirtual #29
95: ldc           #30
97: invokevirtual #25
100: iconst_1
101: invokevirtual #29
104: ldc           #24
106: invokevirtual #25
109: invokevirtual #27
112: iload_2
113: iconst_1
114: if_icmpne     121
117: iconst_1
118: goto          122
121: iconst_0
122: invokestatic  #31
125: new           #22
128: dup
129: invokespecial #23
132: ldc           #24
134: invokevirtual #25
137: aload_3
138: invokevirtual #25
141: ldc           #48
143: invokevirtual #25
146: invokevirtual #27
149: aload_3
150: ldc           #49
152: invokestatic  #28
155: new           #22
158: dup
159: invokespecial #23
162: ldc           #24
164: invokevirtual #25
167: aload         4
169: invokevirtual #25
172: ldc           #26
174: invokevirtual #25
177: invokevirtual #27
180: aload         4
182: ldc           #11
184: invokestatic  #28
187: aload         5
189: invokestatic  #21
192: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0809
Start line: 6998
End line: 0
Method source code: 
    public void test0809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0809");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        int int9 = helpFormatter0.findWrapPos(" ", (int) (byte) 10, (int) '4');
        java.lang.Class<?> wildcardClass10 = helpFormatter0.getClass();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wildcardClass10);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #413
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #11
36: invokevirtual #51
39: aload_1
40: ldc           #11
42: putfield      #52
45: aload_1
46: getfield      #52
49: astore_2
50: aload_1
51: ldc           #38
53: bipush        10
55: bipush        52
57: invokevirtual #61
60: istore_3
61: aload_1
62: invokevirtual #154
65: astore        4
67: new           #22
70: dup
71: invokespecial #23
74: ldc           #24
76: invokevirtual #25
79: aload_2
80: invokevirtual #25
83: ldc           #26
85: invokevirtual #25
88: invokevirtual #27
91: aload_2
92: ldc           #11
94: invokestatic  #28
97: new           #22
100: dup
101: invokespecial #23
104: ldc           #24
106: invokevirtual #25
109: iload_3
110: invokevirtual #29
113: ldc           #30
115: invokevirtual #25
118: iconst_m1
119: invokevirtual #29
122: ldc           #24
124: invokevirtual #25
127: invokevirtual #27
130: iload_3
131: iconst_m1
132: if_icmpne     139
135: iconst_1
136: goto          140
139: iconst_0
140: invokestatic  #31
143: aload         4
145: invokestatic  #21
148: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0810
Start line: 7013
End line: 0
Method source code: 
    public void test0810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0810");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setLongOptPrefix(" ");
        helpFormatter0.defaultDescPad = (short) 10;
        helpFormatter0.setLongOptSeparator("");
        helpFormatter0.defaultOptPrefix = "                                                                                                 ";
        java.lang.Class<?> wildcardClass13 = helpFormatter0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertNotNull(wildcardClass13);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #414
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: getfield      #42
48: astore_3
49: aload_1
50: ldc           #38
52: invokevirtual #43
55: aload_1
56: bipush        10
58: putfield      #44
61: aload_1
62: ldc           #11
64: invokevirtual #74
67: aload_1
68: ldc           #14
70: putfield      #42
73: aload_1
74: invokevirtual #154
77: astore        4
79: new           #22
82: dup
83: invokespecial #23
86: ldc           #24
88: invokevirtual #25
91: iload_2
92: invokevirtual #29
95: ldc           #30
97: invokevirtual #25
100: iconst_1
101: invokevirtual #29
104: ldc           #24
106: invokevirtual #25
109: invokevirtual #27
112: iload_2
113: iconst_1
114: if_icmpne     121
117: iconst_1
118: goto          122
121: iconst_0
122: invokestatic  #31
125: new           #22
128: dup
129: invokespecial #23
132: ldc           #24
134: invokevirtual #25
137: aload_3
138: invokevirtual #25
141: ldc           #48
143: invokevirtual #25
146: invokevirtual #27
149: aload_3
150: ldc           #49
152: invokestatic  #28
155: aload         4
157: invokestatic  #21
160: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0811
Start line: 7031
End line: 0
Method source code: 
    public void test0811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0811");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        java.lang.String str6 = helpFormatter0.rtrim("");
        java.lang.String str7 = helpFormatter0.getSyntaxPrefix();
        java.io.PrintWriter printWriter8 = null;
        org.apache.commons.cli.Options options11 = null;
        try {
            helpFormatter0.printUsage(printWriter8, 3, "usage:", options11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "usage: " + "'", str7, "usage: ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #415
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: getfield      #42
48: astore_3
49: aload_1
50: ldc           #11
52: invokevirtual #12
55: astore        4
57: aload_1
58: invokevirtual #89
61: astore        5
63: aconst_null
64: astore        6
66: aconst_null
67: astore        7
69: aload_1
70: aload         6
72: iconst_3
73: ldc           #108
75: aload         7
77: invokevirtual #81
80: ldc           #18
82: invokestatic  #19
85: goto          90
88: astore        8
90: new           #22
93: dup
94: invokespecial #23
97: ldc           #24
99: invokevirtual #25
102: iload_2
103: invokevirtual #29
106: ldc           #30
108: invokevirtual #25
111: iconst_1
112: invokevirtual #29
115: ldc           #24
117: invokevirtual #25
120: invokevirtual #27
123: iload_2
124: iconst_1
125: if_icmpne     132
128: iconst_1
129: goto          133
132: iconst_0
133: invokestatic  #31
136: new           #22
139: dup
140: invokespecial #23
143: ldc           #24
145: invokevirtual #25
148: aload_3
149: invokevirtual #25
152: ldc           #48
154: invokevirtual #25
157: invokevirtual #27
160: aload_3
161: ldc           #49
163: invokestatic  #28
166: new           #22
169: dup
170: invokespecial #23
173: ldc           #24
175: invokevirtual #25
178: aload         4
180: invokevirtual #25
183: ldc           #26
185: invokevirtual #25
188: invokevirtual #27
191: aload         4
193: ldc           #11
195: invokestatic  #28
198: new           #22
201: dup
202: invokespecial #23
205: ldc           #24
207: invokevirtual #25
210: aload         5
212: invokevirtual #25
215: ldc           #104
217: invokevirtual #25
220: invokevirtual #27
223: aload         5
225: ldc           #46
227: invokestatic  #28
230: return
Exception table:
from    to  target type
69    85    88   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0812
Start line: 7056
End line: 0
Method source code: 
    public void test0812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0812");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        java.lang.String str6 = helpFormatter0.rtrim("");
        int int7 = helpFormatter0.getDescPadding();
        int int8 = helpFormatter0.getDescPadding();
        java.lang.String str9 = helpFormatter0.getArgName();
        helpFormatter0.setDescPadding(0);
        helpFormatter0.defaultDescPad = (short) 100;
        int int14 = helpFormatter0.defaultLeftPad;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 3 + "'", int7 == 3);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 3 + "'", int8 == 3);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "arg" + "'", str9, "arg");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #416
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: getfield      #42
48: astore_3
49: aload_1
50: ldc           #11
52: invokevirtual #12
55: astore        4
57: aload_1
58: invokevirtual #13
61: istore        5
63: aload_1
64: invokevirtual #13
67: istore        6
69: aload_1
70: invokevirtual #83
73: astore        7
75: aload_1
76: iconst_0
77: invokevirtual #37
80: aload_1
81: bipush        100
83: putfield      #44
86: aload_1
87: getfield      #40
90: istore        8
92: new           #22
95: dup
96: invokespecial #23
99: ldc           #24
101: invokevirtual #25
104: iload_2
105: invokevirtual #29
108: ldc           #30
110: invokevirtual #25
113: iconst_1
114: invokevirtual #29
117: ldc           #24
119: invokevirtual #25
122: invokevirtual #27
125: iload_2
126: iconst_1
127: if_icmpne     134
130: iconst_1
131: goto          135
134: iconst_0
135: invokestatic  #31
138: new           #22
141: dup
142: invokespecial #23
145: ldc           #24
147: invokevirtual #25
150: aload_3
151: invokevirtual #25
154: ldc           #48
156: invokevirtual #25
159: invokevirtual #27
162: aload_3
163: ldc           #49
165: invokestatic  #28
168: new           #22
171: dup
172: invokespecial #23
175: ldc           #24
177: invokevirtual #25
180: aload         4
182: invokevirtual #25
185: ldc           #26
187: invokevirtual #25
190: invokevirtual #27
193: aload         4
195: ldc           #11
197: invokestatic  #28
200: new           #22
203: dup
204: invokespecial #23
207: ldc           #24
209: invokevirtual #25
212: iload         5
214: invokevirtual #29
217: ldc           #30
219: invokevirtual #25
222: iconst_3
223: invokevirtual #29
226: ldc           #24
228: invokevirtual #25
231: invokevirtual #27
234: iload         5
236: iconst_3
237: if_icmpne     244
240: iconst_1
241: goto          245
244: iconst_0
245: invokestatic  #31
248: new           #22
251: dup
252: invokespecial #23
255: ldc           #24
257: invokevirtual #25
260: iload         6
262: invokevirtual #29
265: ldc           #30
267: invokevirtual #25
270: iconst_3
271: invokevirtual #29
274: ldc           #24
276: invokevirtual #25
279: invokevirtual #27
282: iload         6
284: iconst_3
285: if_icmpne     292
288: iconst_1
289: goto          293
292: iconst_0
293: invokestatic  #31
296: new           #22
299: dup
300: invokespecial #23
303: ldc           #24
305: invokevirtual #25
308: aload         7
310: invokevirtual #25
313: ldc           #79
315: invokevirtual #25
318: invokevirtual #27
321: aload         7
323: ldc           #78
325: invokestatic  #28
328: new           #22
331: dup
332: invokespecial #23
335: ldc           #24
337: invokevirtual #25
340: iload         8
342: invokevirtual #29
345: ldc           #30
347: invokevirtual #25
350: iconst_1
351: invokevirtual #29
354: ldc           #24
356: invokevirtual #25
359: invokevirtual #27
362: iload         8
364: iconst_1
365: if_icmpne     372
368: iconst_1
369: goto          373
372: iconst_0
373: invokestatic  #31
376: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0813
Start line: 7080
End line: 0
Method source code: 
    public void test0813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0813");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        java.lang.String str6 = helpFormatter0.rtrim("");
        java.lang.String str7 = helpFormatter0.getNewLine();
        java.lang.String str8 = helpFormatter0.defaultLongOptPrefix;
        java.io.PrintWriter printWriter9 = null;
        org.apache.commons.cli.Options options13 = null;
        try {
            helpFormatter0.printHelp(printWriter9, (int) (short) 1, "", "arg", options13, (int) (short) -1, (int) (short) 0, "usage: ");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: cmdLineSyntax not provided");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "--" + "'", str8, "--");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #417
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: getfield      #42
48: astore_3
49: aload_1
50: ldc           #11
52: invokevirtual #12
55: astore        4
57: aload_1
58: invokevirtual #16
61: astore        5
63: aload_1
64: getfield      #52
67: astore        6
69: aconst_null
70: astore        7
72: aconst_null
73: astore        8
75: aload_1
76: aload         7
78: iconst_1
79: ldc           #11
81: ldc           #78
83: aload         8
85: iconst_m1
86: iconst_0
87: ldc           #46
89: invokevirtual #68
92: ldc           #69
94: invokestatic  #19
97: goto          102
100: astore        9
102: new           #22
105: dup
106: invokespecial #23
109: ldc           #24
111: invokevirtual #25
114: iload_2
115: invokevirtual #29
118: ldc           #30
120: invokevirtual #25
123: iconst_1
124: invokevirtual #29
127: ldc           #24
129: invokevirtual #25
132: invokevirtual #27
135: iload_2
136: iconst_1
137: if_icmpne     144
140: iconst_1
141: goto          145
144: iconst_0
145: invokestatic  #31
148: new           #22
151: dup
152: invokespecial #23
155: ldc           #24
157: invokevirtual #25
160: aload_3
161: invokevirtual #25
164: ldc           #48
166: invokevirtual #25
169: invokevirtual #27
172: aload_3
173: ldc           #49
175: invokestatic  #28
178: new           #22
181: dup
182: invokespecial #23
185: ldc           #24
187: invokevirtual #25
190: aload         4
192: invokevirtual #25
195: ldc           #26
197: invokevirtual #25
200: invokevirtual #27
203: aload         4
205: ldc           #11
207: invokestatic  #28
210: new           #22
213: dup
214: invokespecial #23
217: ldc           #24
219: invokevirtual #25
222: aload         5
224: invokevirtual #25
227: ldc           #26
229: invokevirtual #25
232: invokevirtual #27
235: aload         5
237: ldc           #11
239: invokestatic  #28
242: new           #22
245: dup
246: invokespecial #23
249: ldc           #24
251: invokevirtual #25
254: aload         6
256: invokevirtual #25
259: ldc           #62
261: invokevirtual #25
264: invokevirtual #27
267: aload         6
269: ldc           #63
271: invokestatic  #28
274: return
Exception table:
from    to  target type
75    97   100   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0814
Start line: 7107
End line: 0
Method source code: 
    public void test0814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0814");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        int int6 = helpFormatter0.defaultWidth;
        java.lang.String str7 = helpFormatter0.getLongOptPrefix();
        helpFormatter0.setLongOptSeparator("                                                    ");
        helpFormatter0.defaultWidth = 0;
        helpFormatter0.defaultLongOptPrefix = "";
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "--" + "'", str5, "--");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 74 + "'", int6 == 74);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "--" + "'", str7, "--");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #418
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: getfield      #42
48: astore_3
49: aload_1
50: getfield      #52
53: astore        4
55: aload_1
56: getfield      #57
59: istore        5
61: aload_1
62: invokevirtual #53
65: astore        6
67: aload_1
68: ldc           #77
70: invokevirtual #74
73: aload_1
74: iconst_0
75: putfield      #57
78: aload_1
79: ldc           #11
81: putfield      #52
84: new           #22
87: dup
88: invokespecial #23
91: ldc           #24
93: invokevirtual #25
96: iload_2
97: invokevirtual #29
100: ldc           #30
102: invokevirtual #25
105: iconst_1
106: invokevirtual #29
109: ldc           #24
111: invokevirtual #25
114: invokevirtual #27
117: iload_2
118: iconst_1
119: if_icmpne     126
122: iconst_1
123: goto          127
126: iconst_0
127: invokestatic  #31
130: new           #22
133: dup
134: invokespecial #23
137: ldc           #24
139: invokevirtual #25
142: aload_3
143: invokevirtual #25
146: ldc           #48
148: invokevirtual #25
151: invokevirtual #27
154: aload_3
155: ldc           #49
157: invokestatic  #28
160: new           #22
163: dup
164: invokespecial #23
167: ldc           #24
169: invokevirtual #25
172: aload         4
174: invokevirtual #25
177: ldc           #62
179: invokevirtual #25
182: invokevirtual #27
185: aload         4
187: ldc           #63
189: invokestatic  #28
192: new           #22
195: dup
196: invokespecial #23
199: ldc           #24
201: invokevirtual #25
204: iload         5
206: invokevirtual #29
209: ldc           #30
211: invokevirtual #25
214: bipush        74
216: invokevirtual #29
219: ldc           #24
221: invokevirtual #25
224: invokevirtual #27
227: iload         5
229: bipush        74
231: if_icmpne     238
234: iconst_1
235: goto          239
238: iconst_0
239: invokestatic  #31
242: new           #22
245: dup
246: invokespecial #23
249: ldc           #24
251: invokevirtual #25
254: aload         6
256: invokevirtual #25
259: ldc           #62
261: invokevirtual #25
264: invokevirtual #27
267: aload         6
269: ldc           #63
271: invokestatic  #28
274: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0815
Start line: 7128
End line: 0
Method source code: 
    public void test0815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0815");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        java.lang.String str6 = helpFormatter0.defaultNewLine;
        helpFormatter0.setDescPadding(10);
        int int9 = helpFormatter0.defaultLeftPad;
        helpFormatter0.setWidth(74);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #419
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: bipush        10
47: invokevirtual #37
50: aload_1
51: getfield      #36
54: astore_3
55: aload_1
56: bipush        10
58: invokevirtual #37
61: aload_1
62: getfield      #40
65: istore        4
67: aload_1
68: bipush        74
70: invokevirtual #90
73: new           #22
76: dup
77: invokespecial #23
80: ldc           #24
82: invokevirtual #25
85: iload_2
86: invokevirtual #29
89: ldc           #30
91: invokevirtual #25
94: iconst_1
95: invokevirtual #29
98: ldc           #24
100: invokevirtual #25
103: invokevirtual #27
106: iload_2
107: iconst_1
108: if_icmpne     115
111: iconst_1
112: goto          116
115: iconst_0
116: invokestatic  #31
119: new           #22
122: dup
123: invokespecial #23
126: ldc           #24
128: invokevirtual #25
131: aload_3
132: invokevirtual #25
135: ldc           #26
137: invokevirtual #25
140: invokevirtual #27
143: aload_3
144: ldc           #11
146: invokestatic  #28
149: new           #22
152: dup
153: invokespecial #23
156: ldc           #24
158: invokevirtual #25
161: iload         4
163: invokevirtual #29
166: ldc           #30
168: invokevirtual #25
171: iconst_1
172: invokevirtual #29
175: ldc           #24
177: invokevirtual #25
180: invokevirtual #27
183: iload         4
185: iconst_1
186: if_icmpne     193
189: iconst_1
190: goto          194
193: iconst_0
194: invokestatic  #31
197: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0816
Start line: 7145
End line: 0
Method source code: 
    public void test0816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0816");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        java.lang.String str3 = helpFormatter0.defaultNewLine;
        helpFormatter0.defaultNewLine = "-";
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\n" + "'", str3, "\n");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #420
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #11
36: invokevirtual #51
39: aload_1
40: getfield      #36
43: astore_2
44: aload_1
45: ldc           #49
47: putfield      #36
50: new           #22
53: dup
54: invokespecial #23
57: ldc           #24
59: invokevirtual #25
62: aload_2
63: invokevirtual #25
66: ldc           #32
68: invokevirtual #25
71: invokevirtual #27
74: aload_2
75: ldc           #33
77: invokestatic  #28
80: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0817
Start line: 7156
End line: 0
Method source code: 
    public void test0817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0817");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setLongOptPrefix(" ");
        helpFormatter0.defaultDescPad = (short) 10;
        java.lang.String str9 = helpFormatter0.defaultArgName;
        helpFormatter0.setSyntaxPrefix("");
        helpFormatter0.defaultOptPrefix = "                                                                                                 ";
        helpFormatter0.setLongOptPrefix("          ");
        helpFormatter0.defaultArgName = "\n";
        helpFormatter0.defaultOptPrefix = " ";
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "arg" + "'", str9, "arg");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #421
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: getfield      #42
48: astore_3
49: aload_1
50: ldc           #38
52: invokevirtual #43
55: aload_1
56: bipush        10
58: putfield      #44
61: aload_1
62: getfield      #15
65: astore        4
67: aload_1
68: ldc           #11
70: invokevirtual #39
73: aload_1
74: ldc           #14
76: putfield      #42
79: aload_1
80: ldc           #67
82: invokevirtual #43
85: aload_1
86: ldc           #33
88: putfield      #15
91: aload_1
92: ldc           #38
94: putfield      #42
97: new           #22
100: dup
101: invokespecial #23
104: ldc           #24
106: invokevirtual #25
109: iload_2
110: invokevirtual #29
113: ldc           #30
115: invokevirtual #25
118: iconst_1
119: invokevirtual #29
122: ldc           #24
124: invokevirtual #25
127: invokevirtual #27
130: iload_2
131: iconst_1
132: if_icmpne     139
135: iconst_1
136: goto          140
139: iconst_0
140: invokestatic  #31
143: new           #22
146: dup
147: invokespecial #23
150: ldc           #24
152: invokevirtual #25
155: aload_3
156: invokevirtual #25
159: ldc           #48
161: invokevirtual #25
164: invokevirtual #27
167: aload_3
168: ldc           #49
170: invokestatic  #28
173: new           #22
176: dup
177: invokespecial #23
180: ldc           #24
182: invokevirtual #25
185: aload         4
187: invokevirtual #25
190: ldc           #79
192: invokevirtual #25
195: invokevirtual #27
198: aload         4
200: ldc           #78
202: invokestatic  #28
205: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0818
Start line: 7177
End line: 0
Method source code: 
    public void test0818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0818");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.setWidth(1);
        java.io.PrintWriter printWriter5 = null;
        try {
            helpFormatter0.printUsage(printWriter5, 52, "   ");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #422
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #11
36: invokevirtual #51
39: aload_1
40: iconst_1
41: invokevirtual #90
44: aconst_null
45: astore_2
46: aload_1
47: aload_2
48: bipush        52
50: ldc           #113
52: invokevirtual #248
55: ldc           #18
57: invokestatic  #19
60: goto          64
63: astore_3
64: return
Exception table:
from    to  target type
46    60    63   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0819
Start line: 7194
End line: 0
Method source code: 
    public void test0819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0819");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str6 = helpFormatter0.getNewLine();
        java.util.Comparator comparator7 = helpFormatter0.getOptionComparator();
        helpFormatter0.setDescPadding(3);
        int int10 = helpFormatter0.defaultLeftPad;
        java.lang.StringBuffer stringBuffer11 = null;
        org.apache.commons.cli.Options options13 = null;
        try {
            java.lang.StringBuffer stringBuffer16 = helpFormatter0.renderOptions(stringBuffer11, (int) (short) 0, options13, (int) '4', (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\n" + "'", str6, "\n");
        org.junit.Assert.assertNotNull(comparator7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #423
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #11
36: invokevirtual #51
39: aload_1
40: ldc           #11
42: putfield      #52
45: aload_1
46: getfield      #52
49: astore_2
50: aload_1
51: invokevirtual #16
54: astore_3
55: aload_1
56: invokevirtual #58
59: astore        4
61: aload_1
62: iconst_3
63: invokevirtual #37
66: aload_1
67: getfield      #40
70: istore        5
72: aconst_null
73: astore        6
75: aconst_null
76: astore        7
78: aload_1
79: aload         6
81: iconst_0
82: aload         7
84: bipush        52
86: bipush        10
88: invokevirtual #47
91: astore        8
93: ldc           #18
95: invokestatic  #19
98: goto          103
101: astore        8
103: new           #22
106: dup
107: invokespecial #23
110: ldc           #24
112: invokevirtual #25
115: aload_2
116: invokevirtual #25
119: ldc           #26
121: invokevirtual #25
124: invokevirtual #27
127: aload_2
128: ldc           #11
130: invokestatic  #28
133: new           #22
136: dup
137: invokespecial #23
140: ldc           #24
142: invokevirtual #25
145: aload_3
146: invokevirtual #25
149: ldc           #32
151: invokevirtual #25
154: invokevirtual #27
157: aload_3
158: ldc           #33
160: invokestatic  #28
163: aload         4
165: invokestatic  #21
168: new           #22
171: dup
172: invokespecial #23
175: ldc           #24
177: invokevirtual #25
180: iload         5
182: invokevirtual #29
185: ldc           #30
187: invokevirtual #25
190: iconst_1
191: invokevirtual #29
194: ldc           #24
196: invokevirtual #25
199: invokevirtual #27
202: iload         5
204: iconst_1
205: if_icmpne     212
208: iconst_1
209: goto          213
212: iconst_0
213: invokestatic  #31
216: return
Exception table:
from    to  target type
78    98   101   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0820
Start line: 7221
End line: 0
Method source code: 
    public void test0820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0820");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setLongOptPrefix(" ");
        helpFormatter0.defaultDescPad = (short) 10;
        helpFormatter0.setLongOptSeparator("");
        java.lang.String str11 = helpFormatter0.getLongOptPrefix();
        helpFormatter0.defaultWidth = 52;
        helpFormatter0.defaultNewLine = "arg";
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + " " + "'", str11, " ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #424
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: getfield      #42
48: astore_3
49: aload_1
50: ldc           #38
52: invokevirtual #43
55: aload_1
56: bipush        10
58: putfield      #44
61: aload_1
62: ldc           #11
64: invokevirtual #74
67: aload_1
68: invokevirtual #53
71: astore        4
73: aload_1
74: bipush        52
76: putfield      #57
79: aload_1
80: ldc           #78
82: putfield      #36
85: new           #22
88: dup
89: invokespecial #23
92: ldc           #24
94: invokevirtual #25
97: iload_2
98: invokevirtual #29
101: ldc           #30
103: invokevirtual #25
106: iconst_1
107: invokevirtual #29
110: ldc           #24
112: invokevirtual #25
115: invokevirtual #27
118: iload_2
119: iconst_1
120: if_icmpne     127
123: iconst_1
124: goto          128
127: iconst_0
128: invokestatic  #31
131: new           #22
134: dup
135: invokespecial #23
138: ldc           #24
140: invokevirtual #25
143: aload_3
144: invokevirtual #25
147: ldc           #48
149: invokevirtual #25
152: invokevirtual #27
155: aload_3
156: ldc           #49
158: invokestatic  #28
161: new           #22
164: dup
165: invokespecial #23
168: ldc           #24
170: invokevirtual #25
173: aload         4
175: invokevirtual #25
178: ldc           #75
180: invokevirtual #25
183: invokevirtual #27
186: aload         4
188: ldc           #38
190: invokestatic  #28
193: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0821
Start line: 7240
End line: 0
Method source code: 
    public void test0821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0821");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        java.lang.String str6 = helpFormatter0.rtrim("");
        java.lang.String str8 = helpFormatter0.rtrim("-");
        java.lang.String str9 = helpFormatter0.defaultNewLine;
        java.lang.String str10 = helpFormatter0.defaultOptPrefix;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "-" + "'", str8, "-");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "-" + "'", str10, "-");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #425
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: getfield      #42
48: astore_3
49: aload_1
50: ldc           #11
52: invokevirtual #12
55: astore        4
57: aload_1
58: ldc           #49
60: invokevirtual #12
63: astore        5
65: aload_1
66: getfield      #36
69: astore        6
71: aload_1
72: getfield      #42
75: astore        7
77: new           #22
80: dup
81: invokespecial #23
84: ldc           #24
86: invokevirtual #25
89: iload_2
90: invokevirtual #29
93: ldc           #30
95: invokevirtual #25
98: iconst_1
99: invokevirtual #29
102: ldc           #24
104: invokevirtual #25
107: invokevirtual #27
110: iload_2
111: iconst_1
112: if_icmpne     119
115: iconst_1
116: goto          120
119: iconst_0
120: invokestatic  #31
123: new           #22
126: dup
127: invokespecial #23
130: ldc           #24
132: invokevirtual #25
135: aload_3
136: invokevirtual #25
139: ldc           #48
141: invokevirtual #25
144: invokevirtual #27
147: aload_3
148: ldc           #49
150: invokestatic  #28
153: new           #22
156: dup
157: invokespecial #23
160: ldc           #24
162: invokevirtual #25
165: aload         4
167: invokevirtual #25
170: ldc           #26
172: invokevirtual #25
175: invokevirtual #27
178: aload         4
180: ldc           #11
182: invokestatic  #28
185: new           #22
188: dup
189: invokespecial #23
192: ldc           #24
194: invokevirtual #25
197: aload         5
199: invokevirtual #25
202: ldc           #48
204: invokevirtual #25
207: invokevirtual #27
210: aload         5
212: ldc           #49
214: invokestatic  #28
217: new           #22
220: dup
221: invokespecial #23
224: ldc           #24
226: invokevirtual #25
229: aload         6
231: invokevirtual #25
234: ldc           #26
236: invokevirtual #25
239: invokevirtual #27
242: aload         6
244: ldc           #11
246: invokestatic  #28
249: new           #22
252: dup
253: invokespecial #23
256: ldc           #24
258: invokevirtual #25
261: aload         7
263: invokevirtual #25
266: ldc           #48
268: invokevirtual #25
271: invokevirtual #27
274: aload         7
276: ldc           #49
278: invokestatic  #28
281: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0822
Start line: 7260
End line: 0
Method source code: 
    public void test0822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0822");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        java.lang.String str6 = helpFormatter0.rtrim("");
        java.lang.String str8 = helpFormatter0.rtrim("-");
        java.lang.String str9 = helpFormatter0.getLongOptSeparator();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setNewLine(" ");
        helpFormatter0.defaultSyntaxPrefix = "usage:";
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "-" + "'", str8, "-");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + " " + "'", str9, " ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #426
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: getfield      #42
48: astore_3
49: aload_1
50: ldc           #11
52: invokevirtual #12
55: astore        4
57: aload_1
58: ldc           #49
60: invokevirtual #12
63: astore        5
65: aload_1
66: invokevirtual #72
69: astore        6
71: aload_1
72: ldc           #11
74: putfield      #36
77: aload_1
78: ldc           #38
80: invokevirtual #88
83: aload_1
84: ldc           #108
86: putfield      #45
89: new           #22
92: dup
93: invokespecial #23
96: ldc           #24
98: invokevirtual #25
101: iload_2
102: invokevirtual #29
105: ldc           #30
107: invokevirtual #25
110: iconst_1
111: invokevirtual #29
114: ldc           #24
116: invokevirtual #25
119: invokevirtual #27
122: iload_2
123: iconst_1
124: if_icmpne     131
127: iconst_1
128: goto          132
131: iconst_0
132: invokestatic  #31
135: new           #22
138: dup
139: invokespecial #23
142: ldc           #24
144: invokevirtual #25
147: aload_3
148: invokevirtual #25
151: ldc           #48
153: invokevirtual #25
156: invokevirtual #27
159: aload_3
160: ldc           #49
162: invokestatic  #28
165: new           #22
168: dup
169: invokespecial #23
172: ldc           #24
174: invokevirtual #25
177: aload         4
179: invokevirtual #25
182: ldc           #26
184: invokevirtual #25
187: invokevirtual #27
190: aload         4
192: ldc           #11
194: invokestatic  #28
197: new           #22
200: dup
201: invokespecial #23
204: ldc           #24
206: invokevirtual #25
209: aload         5
211: invokevirtual #25
214: ldc           #48
216: invokevirtual #25
219: invokevirtual #27
222: aload         5
224: ldc           #49
226: invokestatic  #28
229: new           #22
232: dup
233: invokespecial #23
236: ldc           #24
238: invokevirtual #25
241: aload         6
243: invokevirtual #25
246: ldc           #75
248: invokevirtual #25
251: invokevirtual #27
254: aload         6
256: ldc           #38
258: invokestatic  #28
261: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0823
Start line: 7281
End line: 0
Method source code: 
    public void test0823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0823");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.defaultLongOptPrefix;
        helpFormatter0.defaultSyntaxPrefix = "--";
        java.lang.String str5 = helpFormatter0.defaultOptPrefix;
        java.lang.String str6 = helpFormatter0.getArgName();
        int int7 = helpFormatter0.defaultWidth;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "--" + "'", str2, "--");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "-" + "'", str5, "-");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "arg" + "'", str6, "arg");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 74 + "'", int7 == 74);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #427
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: getfield      #52
42: astore_3
43: aload_1
44: ldc           #63
46: putfield      #45
49: aload_1
50: getfield      #42
53: astore        4
55: aload_1
56: invokevirtual #83
59: astore        5
61: aload_1
62: getfield      #57
65: istore        6
67: new           #22
70: dup
71: invokespecial #23
74: ldc           #24
76: invokevirtual #25
79: iload_2
80: invokevirtual #29
83: ldc           #30
85: invokevirtual #25
88: iconst_1
89: invokevirtual #29
92: ldc           #24
94: invokevirtual #25
97: invokevirtual #27
100: iload_2
101: iconst_1
102: if_icmpne     109
105: iconst_1
106: goto          110
109: iconst_0
110: invokestatic  #31
113: new           #22
116: dup
117: invokespecial #23
120: ldc           #24
122: invokevirtual #25
125: aload_3
126: invokevirtual #25
129: ldc           #62
131: invokevirtual #25
134: invokevirtual #27
137: aload_3
138: ldc           #63
140: invokestatic  #28
143: new           #22
146: dup
147: invokespecial #23
150: ldc           #24
152: invokevirtual #25
155: aload         4
157: invokevirtual #25
160: ldc           #48
162: invokevirtual #25
165: invokevirtual #27
168: aload         4
170: ldc           #49
172: invokestatic  #28
175: new           #22
178: dup
179: invokespecial #23
182: ldc           #24
184: invokevirtual #25
187: aload         5
189: invokevirtual #25
192: ldc           #79
194: invokevirtual #25
197: invokevirtual #27
200: aload         5
202: ldc           #78
204: invokestatic  #28
207: new           #22
210: dup
211: invokespecial #23
214: ldc           #24
216: invokevirtual #25
219: iload         6
221: invokevirtual #29
224: ldc           #30
226: invokevirtual #25
229: bipush        74
231: invokevirtual #29
234: ldc           #24
236: invokevirtual #25
239: invokevirtual #27
242: iload         6
244: bipush        74
246: if_icmpne     253
249: iconst_1
250: goto          254
253: iconst_0
254: invokestatic  #31
257: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0824
Start line: 7299
End line: 0
Method source code: 
    public void test0824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0824");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str6 = helpFormatter0.getNewLine();
        java.lang.String str7 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setDescPadding(74);
        java.util.Comparator comparator10 = helpFormatter0.getOptionComparator();
        java.lang.String str11 = helpFormatter0.getArgName();
        java.io.PrintWriter printWriter12 = null;
        org.apache.commons.cli.Options options14 = null;
        try {
            helpFormatter0.printOptions(printWriter12, (int) (short) 0, options14, (int) (byte) -1, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: null");
        } catch (java.lang.NegativeArraySizeException e) {
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\n" + "'", str6, "\n");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(comparator10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "arg" + "'", str11, "arg");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #428
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #11
36: invokevirtual #51
39: aload_1
40: ldc           #11
42: putfield      #52
45: aload_1
46: getfield      #52
49: astore_2
50: aload_1
51: invokevirtual #16
54: astore_3
55: aload_1
56: getfield      #42
59: astore        4
61: aload_1
62: bipush        74
64: invokevirtual #37
67: aload_1
68: invokevirtual #58
71: astore        5
73: aload_1
74: invokevirtual #83
77: astore        6
79: aconst_null
80: astore        7
82: aconst_null
83: astore        8
85: aload_1
86: aload         7
88: iconst_0
89: aload         8
91: iconst_m1
92: iconst_0
93: invokevirtual #17
96: ldc           #84
98: invokestatic  #19
101: goto          106
104: astore        9
106: new           #22
109: dup
110: invokespecial #23
113: ldc           #24
115: invokevirtual #25
118: aload_2
119: invokevirtual #25
122: ldc           #26
124: invokevirtual #25
127: invokevirtual #27
130: aload_2
131: ldc           #11
133: invokestatic  #28
136: new           #22
139: dup
140: invokespecial #23
143: ldc           #24
145: invokevirtual #25
148: aload_3
149: invokevirtual #25
152: ldc           #32
154: invokevirtual #25
157: invokevirtual #27
160: aload_3
161: ldc           #33
163: invokestatic  #28
166: new           #22
169: dup
170: invokespecial #23
173: ldc           #24
175: invokevirtual #25
178: aload         4
180: invokevirtual #25
183: ldc           #26
185: invokevirtual #25
188: invokevirtual #27
191: aload         4
193: ldc           #11
195: invokestatic  #28
198: aload         5
200: invokestatic  #21
203: new           #22
206: dup
207: invokespecial #23
210: ldc           #24
212: invokevirtual #25
215: aload         6
217: invokevirtual #25
220: ldc           #79
222: invokevirtual #25
225: invokevirtual #27
228: aload         6
230: ldc           #78
232: invokestatic  #28
235: return
Exception table:
from    to  target type
85   101   104   Class java/lang/NegativeArraySizeException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0825
Start line: 7328
End line: 0
Method source code: 
    public void test0825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0825");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.getArgName();
        helpFormatter0.setSyntaxPrefix("usage: ");
        java.lang.String str5 = helpFormatter0.defaultSyntaxPrefix;
        helpFormatter0.setLeftPadding((int) '#');
        java.lang.String str8 = helpFormatter0.getLongOptPrefix();
        java.lang.String str9 = helpFormatter0.defaultArgName;
        int int13 = helpFormatter0.findWrapPos("hi!", (int) 'a', (int) ' ');
        helpFormatter0.setSyntaxPrefix("");
        java.lang.String str16 = helpFormatter0.defaultNewLine;
        int int17 = helpFormatter0.getWidth();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "arg" + "'", str2, "arg");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "usage: " + "'", str5, "usage: ");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "--" + "'", str8, "--");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "arg" + "'", str9, "arg");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\n" + "'", str16, "\n");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 74 + "'", int17 == 74);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #429
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: invokevirtual #83
42: astore_3
43: aload_1
44: ldc           #46
46: invokevirtual #39
49: aload_1
50: getfield      #45
53: astore        4
55: aload_1
56: bipush        35
58: invokevirtual #55
61: aload_1
62: invokevirtual #53
65: astore        5
67: aload_1
68: getfield      #15
71: astore        6
73: aload_1
74: ldc           #65
76: bipush        97
78: bipush        32
80: invokevirtual #61
83: istore        7
85: aload_1
86: ldc           #11
88: invokevirtual #39
91: aload_1
92: getfield      #36
95: astore        8
97: aload_1
98: invokevirtual #66
101: istore        9
103: new           #22
106: dup
107: invokespecial #23
110: ldc           #24
112: invokevirtual #25
115: iload_2
116: invokevirtual #29
119: ldc           #30
121: invokevirtual #25
124: iconst_1
125: invokevirtual #29
128: ldc           #24
130: invokevirtual #25
133: invokevirtual #27
136: iload_2
137: iconst_1
138: if_icmpne     145
141: iconst_1
142: goto          146
145: iconst_0
146: invokestatic  #31
149: new           #22
152: dup
153: invokespecial #23
156: ldc           #24
158: invokevirtual #25
161: aload_3
162: invokevirtual #25
165: ldc           #79
167: invokevirtual #25
170: invokevirtual #27
173: aload_3
174: ldc           #78
176: invokestatic  #28
179: new           #22
182: dup
183: invokespecial #23
186: ldc           #24
188: invokevirtual #25
191: aload         4
193: invokevirtual #25
196: ldc           #104
198: invokevirtual #25
201: invokevirtual #27
204: aload         4
206: ldc           #46
208: invokestatic  #28
211: new           #22
214: dup
215: invokespecial #23
218: ldc           #24
220: invokevirtual #25
223: aload         5
225: invokevirtual #25
228: ldc           #62
230: invokevirtual #25
233: invokevirtual #27
236: aload         5
238: ldc           #63
240: invokestatic  #28
243: new           #22
246: dup
247: invokespecial #23
250: ldc           #24
252: invokevirtual #25
255: aload         6
257: invokevirtual #25
260: ldc           #79
262: invokevirtual #25
265: invokevirtual #27
268: aload         6
270: ldc           #78
272: invokestatic  #28
275: new           #22
278: dup
279: invokespecial #23
282: ldc           #24
284: invokevirtual #25
287: iload         7
289: invokevirtual #29
292: ldc           #30
294: invokevirtual #25
297: iconst_m1
298: invokevirtual #29
301: ldc           #24
303: invokevirtual #25
306: invokevirtual #27
309: iload         7
311: iconst_m1
312: if_icmpne     319
315: iconst_1
316: goto          320
319: iconst_0
320: invokestatic  #31
323: new           #22
326: dup
327: invokespecial #23
330: ldc           #24
332: invokevirtual #25
335: aload         8
337: invokevirtual #25
340: ldc           #32
342: invokevirtual #25
345: invokevirtual #27
348: aload         8
350: ldc           #33
352: invokestatic  #28
355: new           #22
358: dup
359: invokespecial #23
362: ldc           #24
364: invokevirtual #25
367: iload         9
369: invokevirtual #29
372: ldc           #30
374: invokevirtual #25
377: bipush        74
379: invokevirtual #29
382: ldc           #24
384: invokevirtual #25
387: invokevirtual #27
390: iload         9
392: bipush        74
394: if_icmpne     401
397: iconst_1
398: goto          402
401: iconst_0
402: invokestatic  #31
405: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0826
Start line: 7354
End line: 0
Method source code: 
    public void test0826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0826");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        java.lang.String str6 = helpFormatter0.defaultNewLine;
        helpFormatter0.setDescPadding(10);
        org.apache.commons.cli.HelpFormatter helpFormatter9 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter9.setOptPrefix("");
        helpFormatter9.defaultLongOptPrefix = "";
        java.lang.String str14 = helpFormatter9.defaultLongOptPrefix;
        java.lang.String str15 = helpFormatter9.getNewLine();
        java.util.Comparator comparator16 = helpFormatter9.getOptionComparator();
        helpFormatter0.optionComparator = comparator16;
        int int18 = helpFormatter0.getDescPadding();
        org.apache.commons.cli.Options options21 = null;
        try {
            helpFormatter0.printHelp("-", "   ", options21, "          ", false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\n" + "'", str15, "\n");
        org.junit.Assert.assertNotNull(comparator16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 10 + "'", int18 == 10);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #430
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: bipush        10
47: invokevirtual #37
50: aload_1
51: getfield      #36
54: astore_3
55: aload_1
56: bipush        10
58: invokevirtual #37
61: new           #8
64: dup
65: invokespecial #9
68: astore        4
70: aload         4
72: ldc           #11
74: invokevirtual #51
77: aload         4
79: ldc           #11
81: putfield      #52
84: aload         4
86: getfield      #52
89: astore        5
91: aload         4
93: invokevirtual #16
96: astore        6
98: aload         4
100: invokevirtual #58
103: astore        7
105: aload_1
106: aload         7
108: putfield      #10
111: aload_1
112: invokevirtual #13
115: istore        8
117: aconst_null
118: astore        9
120: aload_1
121: ldc           #49
123: ldc           #113
125: aload         9
127: ldc           #67
129: iconst_0
130: invokevirtual #109
133: ldc           #18
135: invokestatic  #19
138: goto          143
141: astore        10
143: new           #22
146: dup
147: invokespecial #23
150: ldc           #24
152: invokevirtual #25
155: iload_2
156: invokevirtual #29
159: ldc           #30
161: invokevirtual #25
164: iconst_1
165: invokevirtual #29
168: ldc           #24
170: invokevirtual #25
173: invokevirtual #27
176: iload_2
177: iconst_1
178: if_icmpne     185
181: iconst_1
182: goto          186
185: iconst_0
186: invokestatic  #31
189: new           #22
192: dup
193: invokespecial #23
196: ldc           #24
198: invokevirtual #25
201: aload_3
202: invokevirtual #25
205: ldc           #26
207: invokevirtual #25
210: invokevirtual #27
213: aload_3
214: ldc           #11
216: invokestatic  #28
219: new           #22
222: dup
223: invokespecial #23
226: ldc           #24
228: invokevirtual #25
231: aload         5
233: invokevirtual #25
236: ldc           #26
238: invokevirtual #25
241: invokevirtual #27
244: aload         5
246: ldc           #11
248: invokestatic  #28
251: new           #22
254: dup
255: invokespecial #23
258: ldc           #24
260: invokevirtual #25
263: aload         6
265: invokevirtual #25
268: ldc           #32
270: invokevirtual #25
273: invokevirtual #27
276: aload         6
278: ldc           #33
280: invokestatic  #28
283: aload         7
285: invokestatic  #21
288: new           #22
291: dup
292: invokespecial #23
295: ldc           #24
297: invokevirtual #25
300: iload         8
302: invokevirtual #29
305: ldc           #30
307: invokevirtual #25
310: bipush        10
312: invokevirtual #29
315: ldc           #24
317: invokevirtual #25
320: invokevirtual #27
323: iload         8
325: bipush        10
327: if_icmpne     334
330: iconst_1
331: goto          335
334: iconst_0
335: invokestatic  #31
338: return
Exception table:
from    to  target type
120   138   141   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0827
Start line: 7388
End line: 0
Method source code: 
    public void test0827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0827");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        int int6 = helpFormatter0.getLeftPadding();
        helpFormatter0.setLongOptSeparator("\n");
        java.lang.String str9 = helpFormatter0.getLongOptPrefix();
        int int10 = helpFormatter0.getWidth();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 74 + "'", int10 == 74);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #431
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #11
36: invokevirtual #51
39: aload_1
40: ldc           #11
42: putfield      #52
45: aload_1
46: getfield      #52
49: astore_2
50: aload_1
51: invokevirtual #35
54: istore_3
55: aload_1
56: ldc           #33
58: invokevirtual #74
61: aload_1
62: invokevirtual #53
65: astore        4
67: aload_1
68: invokevirtual #66
71: istore        5
73: new           #22
76: dup
77: invokespecial #23
80: ldc           #24
82: invokevirtual #25
85: aload_2
86: invokevirtual #25
89: ldc           #26
91: invokevirtual #25
94: invokevirtual #27
97: aload_2
98: ldc           #11
100: invokestatic  #28
103: new           #22
106: dup
107: invokespecial #23
110: ldc           #24
112: invokevirtual #25
115: iload_3
116: invokevirtual #29
119: ldc           #30
121: invokevirtual #25
124: iconst_1
125: invokevirtual #29
128: ldc           #24
130: invokevirtual #25
133: invokevirtual #27
136: iload_3
137: iconst_1
138: if_icmpne     145
141: iconst_1
142: goto          146
145: iconst_0
146: invokestatic  #31
149: new           #22
152: dup
153: invokespecial #23
156: ldc           #24
158: invokevirtual #25
161: aload         4
163: invokevirtual #25
166: ldc           #26
168: invokevirtual #25
171: invokevirtual #27
174: aload         4
176: ldc           #11
178: invokestatic  #28
181: new           #22
184: dup
185: invokespecial #23
188: ldc           #24
190: invokevirtual #25
193: iload         5
195: invokevirtual #29
198: ldc           #30
200: invokevirtual #25
203: bipush        74
205: invokevirtual #29
208: ldc           #24
210: invokevirtual #25
213: invokevirtual #27
216: iload         5
218: bipush        74
220: if_icmpne     227
223: iconst_1
224: goto          228
227: iconst_0
228: invokestatic  #31
231: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0828
Start line: 7406
End line: 0
Method source code: 
    public void test0828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0828");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str3 = helpFormatter0.getOptPrefix();
        int int4 = helpFormatter0.defaultDescPad;
        int int5 = helpFormatter0.defaultLeftPad;
        int int6 = helpFormatter0.defaultLeftPad;
        java.lang.String str7 = helpFormatter0.getNewLine();
        java.lang.String str8 = helpFormatter0.getNewLine();
        org.apache.commons.cli.Options options12 = null;
        try {
            helpFormatter0.printHelp((int) (byte) 10, "usage: ", "                                                                                                 ", options12, "--", true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "--" + "'", str2, "--");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "-" + "'", str3, "-");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 3 + "'", int4 == 3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\n" + "'", str7, "\n");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\n" + "'", str8, "\n");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #432
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: getfield      #52
42: astore_3
43: aload_1
44: invokevirtual #73
47: astore        4
49: aload_1
50: getfield      #44
53: istore        5
55: aload_1
56: getfield      #40
59: istore        6
61: aload_1
62: getfield      #40
65: istore        7
67: aload_1
68: invokevirtual #16
71: astore        8
73: aload_1
74: invokevirtual #16
77: astore        9
79: aconst_null
80: astore        10
82: aload_1
83: bipush        10
85: ldc           #46
87: ldc           #14
89: aload         10
91: ldc           #63
93: iconst_1
94: invokevirtual #274
97: ldc           #18
99: invokestatic  #19
102: goto          107
105: astore        11
107: new           #22
110: dup
111: invokespecial #23
114: ldc           #24
116: invokevirtual #25
119: iload_2
120: invokevirtual #29
123: ldc           #30
125: invokevirtual #25
128: iconst_1
129: invokevirtual #29
132: ldc           #24
134: invokevirtual #25
137: invokevirtual #27
140: iload_2
141: iconst_1
142: if_icmpne     149
145: iconst_1
146: goto          150
149: iconst_0
150: invokestatic  #31
153: new           #22
156: dup
157: invokespecial #23
160: ldc           #24
162: invokevirtual #25
165: aload_3
166: invokevirtual #25
169: ldc           #62
171: invokevirtual #25
174: invokevirtual #27
177: aload_3
178: ldc           #63
180: invokestatic  #28
183: new           #22
186: dup
187: invokespecial #23
190: ldc           #24
192: invokevirtual #25
195: aload         4
197: invokevirtual #25
200: ldc           #48
202: invokevirtual #25
205: invokevirtual #27
208: aload         4
210: ldc           #49
212: invokestatic  #28
215: new           #22
218: dup
219: invokespecial #23
222: ldc           #24
224: invokevirtual #25
227: iload         5
229: invokevirtual #29
232: ldc           #30
234: invokevirtual #25
237: iconst_3
238: invokevirtual #29
241: ldc           #24
243: invokevirtual #25
246: invokevirtual #27
249: iload         5
251: iconst_3
252: if_icmpne     259
255: iconst_1
256: goto          260
259: iconst_0
260: invokestatic  #31
263: new           #22
266: dup
267: invokespecial #23
270: ldc           #24
272: invokevirtual #25
275: iload         6
277: invokevirtual #29
280: ldc           #30
282: invokevirtual #25
285: iconst_1
286: invokevirtual #29
289: ldc           #24
291: invokevirtual #25
294: invokevirtual #27
297: iload         6
299: iconst_1
300: if_icmpne     307
303: iconst_1
304: goto          308
307: iconst_0
308: invokestatic  #31
311: new           #22
314: dup
315: invokespecial #23
318: ldc           #24
320: invokevirtual #25
323: iload         7
325: invokevirtual #29
328: ldc           #30
330: invokevirtual #25
333: iconst_1
334: invokevirtual #29
337: ldc           #24
339: invokevirtual #25
342: invokevirtual #27
345: iload         7
347: iconst_1
348: if_icmpne     355
351: iconst_1
352: goto          356
355: iconst_0
356: invokestatic  #31
359: new           #22
362: dup
363: invokespecial #23
366: ldc           #24
368: invokevirtual #25
371: aload         8
373: invokevirtual #25
376: ldc           #32
378: invokevirtual #25
381: invokevirtual #27
384: aload         8
386: ldc           #33
388: invokestatic  #28
391: new           #22
394: dup
395: invokespecial #23
398: ldc           #24
400: invokevirtual #25
403: aload         9
405: invokevirtual #25
408: ldc           #32
410: invokevirtual #25
413: invokevirtual #27
416: aload         9
418: ldc           #33
420: invokestatic  #28
423: return
Exception table:
from    to  target type
82   102   105   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0829
Start line: 7437
End line: 0
Method source code: 
    public void test0829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0829");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.defaultDescPad = '4';
        helpFormatter0.setNewLine("");
        helpFormatter0.setLongOptPrefix(" ");
        java.lang.String str10 = helpFormatter0.defaultSyntaxPrefix;
        helpFormatter0.defaultWidth = 1;
        java.util.Comparator comparator13 = helpFormatter0.getOptionComparator();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "usage: " + "'", str10, "usage: ");
        org.junit.Assert.assertNotNull(comparator13);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #433
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: bipush        52
47: putfield      #44
50: aload_1
51: ldc           #11
53: invokevirtual #88
56: aload_1
57: ldc           #38
59: invokevirtual #43
62: aload_1
63: getfield      #45
66: astore_3
67: aload_1
68: iconst_1
69: putfield      #57
72: aload_1
73: invokevirtual #58
76: astore        4
78: new           #22
81: dup
82: invokespecial #23
85: ldc           #24
87: invokevirtual #25
90: iload_2
91: invokevirtual #29
94: ldc           #30
96: invokevirtual #25
99: iconst_1
100: invokevirtual #29
103: ldc           #24
105: invokevirtual #25
108: invokevirtual #27
111: iload_2
112: iconst_1
113: if_icmpne     120
116: iconst_1
117: goto          121
120: iconst_0
121: invokestatic  #31
124: new           #22
127: dup
128: invokespecial #23
131: ldc           #24
133: invokevirtual #25
136: aload_3
137: invokevirtual #25
140: ldc           #104
142: invokevirtual #25
145: invokevirtual #27
148: aload_3
149: ldc           #46
151: invokestatic  #28
154: aload         4
156: invokestatic  #21
159: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0830
Start line: 7455
End line: 0
Method source code: 
    public void test0830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0830");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        int int4 = helpFormatter0.defaultWidth;
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "hi!";
        org.apache.commons.cli.Options options10 = null;
        try {
            helpFormatter0.printHelp("hi!", options10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 74 + "'", int4 == 74);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #434
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: getfield      #57
48: istore_3
49: aload_1
50: ldc           #11
52: invokevirtual #51
55: aload_1
56: ldc           #65
58: putfield      #52
61: aconst_null
62: astore        4
64: aload_1
65: ldc           #65
67: aload         4
69: invokevirtual #240
72: ldc           #18
74: invokestatic  #19
77: goto          82
80: astore        5
82: new           #22
85: dup
86: invokespecial #23
89: ldc           #24
91: invokevirtual #25
94: iload_2
95: invokevirtual #29
98: ldc           #30
100: invokevirtual #25
103: iconst_1
104: invokevirtual #29
107: ldc           #24
109: invokevirtual #25
112: invokevirtual #27
115: iload_2
116: iconst_1
117: if_icmpne     124
120: iconst_1
121: goto          125
124: iconst_0
125: invokestatic  #31
128: new           #22
131: dup
132: invokespecial #23
135: ldc           #24
137: invokevirtual #25
140: iload_3
141: invokevirtual #29
144: ldc           #30
146: invokevirtual #25
149: bipush        74
151: invokevirtual #29
154: ldc           #24
156: invokevirtual #25
159: invokevirtual #27
162: iload_3
163: bipush        74
165: if_icmpne     172
168: iconst_1
169: goto          173
172: iconst_0
173: invokestatic  #31
176: return
Exception table:
from    to  target type
64    77    80   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0831
Start line: 7477
End line: 0
Method source code: 
    public void test0831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0831");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        int int6 = helpFormatter0.defaultWidth;
        java.lang.String str7 = helpFormatter0.defaultNewLine;
        java.lang.String str8 = helpFormatter0.defaultNewLine;
        helpFormatter0.defaultArgName = "usage: ";
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "--" + "'", str5, "--");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 74 + "'", int6 == 74);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #435
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: getfield      #42
48: astore_3
49: aload_1
50: getfield      #52
53: astore        4
55: aload_1
56: getfield      #57
59: istore        5
61: aload_1
62: getfield      #36
65: astore        6
67: aload_1
68: getfield      #36
71: astore        7
73: aload_1
74: ldc           #46
76: putfield      #15
79: new           #22
82: dup
83: invokespecial #23
86: ldc           #24
88: invokevirtual #25
91: iload_2
92: invokevirtual #29
95: ldc           #30
97: invokevirtual #25
100: iconst_1
101: invokevirtual #29
104: ldc           #24
106: invokevirtual #25
109: invokevirtual #27
112: iload_2
113: iconst_1
114: if_icmpne     121
117: iconst_1
118: goto          122
121: iconst_0
122: invokestatic  #31
125: new           #22
128: dup
129: invokespecial #23
132: ldc           #24
134: invokevirtual #25
137: aload_3
138: invokevirtual #25
141: ldc           #48
143: invokevirtual #25
146: invokevirtual #27
149: aload_3
150: ldc           #49
152: invokestatic  #28
155: new           #22
158: dup
159: invokespecial #23
162: ldc           #24
164: invokevirtual #25
167: aload         4
169: invokevirtual #25
172: ldc           #62
174: invokevirtual #25
177: invokevirtual #27
180: aload         4
182: ldc           #63
184: invokestatic  #28
187: new           #22
190: dup
191: invokespecial #23
194: ldc           #24
196: invokevirtual #25
199: iload         5
201: invokevirtual #29
204: ldc           #30
206: invokevirtual #25
209: bipush        74
211: invokevirtual #29
214: ldc           #24
216: invokevirtual #25
219: invokevirtual #27
222: iload         5
224: bipush        74
226: if_icmpne     233
229: iconst_1
230: goto          234
233: iconst_0
234: invokestatic  #31
237: new           #22
240: dup
241: invokespecial #23
244: ldc           #24
246: invokevirtual #25
249: aload         6
251: invokevirtual #25
254: ldc           #26
256: invokevirtual #25
259: invokevirtual #27
262: aload         6
264: ldc           #11
266: invokestatic  #28
269: new           #22
272: dup
273: invokespecial #23
276: ldc           #24
278: invokevirtual #25
281: aload         7
283: invokevirtual #25
286: ldc           #26
288: invokevirtual #25
291: invokevirtual #27
294: aload         7
296: ldc           #11
298: invokestatic  #28
301: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0832
Start line: 7498
End line: 0
Method source code: 
    public void test0832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0832");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.util.Comparator comparator1 = helpFormatter0.optionComparator;
        int int2 = helpFormatter0.defaultLeftPad;
        helpFormatter0.setSyntaxPrefix("");
        helpFormatter0.setNewLine("usage: ");
        helpFormatter0.setLongOptSeparator("\n");
        java.lang.String str9 = helpFormatter0.getOptPrefix();
        org.junit.Assert.assertNotNull(comparator1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-" + "'", str9, "-");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #436
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: getfield      #10
37: astore_2
38: aload_1
39: getfield      #40
42: istore_3
43: aload_1
44: ldc           #11
46: invokevirtual #39
49: aload_1
50: ldc           #46
52: invokevirtual #88
55: aload_1
56: ldc           #33
58: invokevirtual #74
61: aload_1
62: invokevirtual #73
65: astore        4
67: aload_2
68: invokestatic  #21
71: new           #22
74: dup
75: invokespecial #23
78: ldc           #24
80: invokevirtual #25
83: iload_3
84: invokevirtual #29
87: ldc           #30
89: invokevirtual #25
92: iconst_1
93: invokevirtual #29
96: ldc           #24
98: invokevirtual #25
101: invokevirtual #27
104: iload_3
105: iconst_1
106: if_icmpne     113
109: iconst_1
110: goto          114
113: iconst_0
114: invokestatic  #31
117: new           #22
120: dup
121: invokespecial #23
124: ldc           #24
126: invokevirtual #25
129: aload         4
131: invokevirtual #25
134: ldc           #48
136: invokevirtual #25
139: invokevirtual #27
142: aload         4
144: ldc           #49
146: invokestatic  #28
149: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0833
Start line: 7514
End line: 0
Method source code: 
    public void test0833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0833");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.lang.String str1 = helpFormatter0.defaultSyntaxPrefix;
        helpFormatter0.setOptPrefix(" ");
        helpFormatter0.setLeftPadding((int) '#');
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "usage: " + "'", str1, "usage: ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #437
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: getfield      #45
37: astore_2
38: aload_1
39: ldc           #38
41: invokevirtual #51
44: aload_1
45: bipush        35
47: invokevirtual #55
50: new           #22
53: dup
54: invokespecial #23
57: ldc           #24
59: invokevirtual #25
62: aload_2
63: invokevirtual #25
66: ldc           #104
68: invokevirtual #25
71: invokevirtual #27
74: aload_2
75: ldc           #46
77: invokestatic  #28
80: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0834
Start line: 7525
End line: 0
Method source code: 
    public void test0834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0834");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.getArgName();
        helpFormatter0.defaultNewLine = "\n";
        helpFormatter0.defaultLeftPad = (byte) -1;
        helpFormatter0.setLongOptSeparator("");
        helpFormatter0.setLongOptSeparator("-");
        java.lang.String str11 = helpFormatter0.getSyntaxPrefix();
        java.lang.String str13 = helpFormatter0.createPadding(100);
        helpFormatter0.defaultDescPad = (short) 10;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "arg" + "'", str2, "arg");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "usage: " + "'", str11, "usage: ");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "                                                                                                    " + "'", str13, "                                                                                                    ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #438
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: invokevirtual #83
42: astore_3
43: aload_1
44: ldc           #33
46: putfield      #36
49: aload_1
50: iconst_m1
51: putfield      #40
54: aload_1
55: ldc           #11
57: invokevirtual #74
60: aload_1
61: ldc           #49
63: invokevirtual #74
66: aload_1
67: invokevirtual #89
70: astore        4
72: aload_1
73: bipush        100
75: invokevirtual #93
78: astore        5
80: aload_1
81: bipush        10
83: putfield      #44
86: new           #22
89: dup
90: invokespecial #23
93: ldc           #24
95: invokevirtual #25
98: iload_2
99: invokevirtual #29
102: ldc           #30
104: invokevirtual #25
107: iconst_1
108: invokevirtual #29
111: ldc           #24
113: invokevirtual #25
116: invokevirtual #27
119: iload_2
120: iconst_1
121: if_icmpne     128
124: iconst_1
125: goto          129
128: iconst_0
129: invokestatic  #31
132: new           #22
135: dup
136: invokespecial #23
139: ldc           #24
141: invokevirtual #25
144: aload_3
145: invokevirtual #25
148: ldc           #79
150: invokevirtual #25
153: invokevirtual #27
156: aload_3
157: ldc           #78
159: invokestatic  #28
162: new           #22
165: dup
166: invokespecial #23
169: ldc           #24
171: invokevirtual #25
174: aload         4
176: invokevirtual #25
179: ldc           #104
181: invokevirtual #25
184: invokevirtual #27
187: aload         4
189: ldc           #46
191: invokestatic  #28
194: new           #22
197: dup
198: invokespecial #23
201: ldc           #24
203: invokevirtual #25
206: aload         5
208: invokevirtual #25
211: ldc           #222
213: invokevirtual #25
216: invokevirtual #27
219: aload         5
221: ldc           #118
223: invokestatic  #28
226: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0835
Start line: 7545
End line: 0
Method source code: 
    public void test0835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0835");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setOptPrefix("");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #439
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #11
36: invokevirtual #51
39: aload_1
40: ldc           #11
42: putfield      #52
45: aload_1
46: getfield      #42
49: astore_2
50: aload_1
51: ldc           #11
53: invokevirtual #51
56: new           #22
59: dup
60: invokespecial #23
63: ldc           #24
65: invokevirtual #25
68: aload_2
69: invokevirtual #25
72: ldc           #26
74: invokevirtual #25
77: invokevirtual #27
80: aload_2
81: ldc           #11
83: invokestatic  #28
86: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0836
Start line: 7557
End line: 0
Method source code: 
    public void test0836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0836");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        helpFormatter0.setSyntaxPrefix(" ");
        java.lang.String str8 = helpFormatter0.defaultSyntaxPrefix;
        helpFormatter0.setLongOptSeparator("          ");
        java.util.Comparator comparator11 = helpFormatter0.getOptionComparator();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + " " + "'", str8, " ");
        org.junit.Assert.assertNotNull(comparator11);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #440
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: bipush        10
47: invokevirtual #37
50: aload_1
51: ldc           #38
53: invokevirtual #39
56: aload_1
57: getfield      #45
60: astore_3
61: aload_1
62: ldc           #67
64: invokevirtual #74
67: aload_1
68: invokevirtual #58
71: astore        4
73: new           #22
76: dup
77: invokespecial #23
80: ldc           #24
82: invokevirtual #25
85: iload_2
86: invokevirtual #29
89: ldc           #30
91: invokevirtual #25
94: iconst_1
95: invokevirtual #29
98: ldc           #24
100: invokevirtual #25
103: invokevirtual #27
106: iload_2
107: iconst_1
108: if_icmpne     115
111: iconst_1
112: goto          116
115: iconst_0
116: invokestatic  #31
119: new           #22
122: dup
123: invokespecial #23
126: ldc           #24
128: invokevirtual #25
131: aload_3
132: invokevirtual #25
135: ldc           #75
137: invokevirtual #25
140: invokevirtual #27
143: aload_3
144: ldc           #38
146: invokestatic  #28
149: aload         4
151: invokestatic  #21
154: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0837
Start line: 7574
End line: 0
Method source code: 
    public void test0837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0837");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        java.lang.String str3 = helpFormatter0.getLongOptSeparator();
        helpFormatter0.defaultDescPad = 0;
        java.lang.String str6 = helpFormatter0.getOptPrefix();
        int int7 = helpFormatter0.getDescPadding();
        org.apache.commons.cli.Options options9 = null;
        try {
            helpFormatter0.printHelp("-", options9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + " " + "'", str3, " ");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #441
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #11
36: invokevirtual #51
39: aload_1
40: invokevirtual #72
43: astore_2
44: aload_1
45: iconst_0
46: putfield      #44
49: aload_1
50: invokevirtual #73
53: astore_3
54: aload_1
55: invokevirtual #13
58: istore        4
60: aconst_null
61: astore        5
63: aload_1
64: ldc           #49
66: aload         5
68: invokevirtual #240
71: ldc           #18
73: invokestatic  #19
76: goto          81
79: astore        6
81: new           #22
84: dup
85: invokespecial #23
88: ldc           #24
90: invokevirtual #25
93: aload_2
94: invokevirtual #25
97: ldc           #75
99: invokevirtual #25
102: invokevirtual #27
105: aload_2
106: ldc           #38
108: invokestatic  #28
111: new           #22
114: dup
115: invokespecial #23
118: ldc           #24
120: invokevirtual #25
123: aload_3
124: invokevirtual #25
127: ldc           #26
129: invokevirtual #25
132: invokevirtual #27
135: aload_3
136: ldc           #11
138: invokestatic  #28
141: new           #22
144: dup
145: invokespecial #23
148: ldc           #24
150: invokevirtual #25
153: iload         4
155: invokevirtual #29
158: ldc           #30
160: invokevirtual #25
163: iconst_0
164: invokevirtual #29
167: ldc           #24
169: invokevirtual #25
172: invokevirtual #27
175: iload         4
177: ifne          184
180: iconst_1
181: goto          185
184: iconst_0
185: invokestatic  #31
188: return
Exception table:
from    to  target type
63    76    79   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0838
Start line: 7597
End line: 0
Method source code: 
    public void test0838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0838");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.getArgName();
        helpFormatter0.defaultNewLine = "\n";
        helpFormatter0.defaultLeftPad = (byte) -1;
        helpFormatter0.setLongOptSeparator("");
        org.apache.commons.cli.HelpFormatter helpFormatter9 = new org.apache.commons.cli.HelpFormatter();
        int int10 = helpFormatter9.getLeftPadding();
        helpFormatter9.defaultNewLine = "";
        helpFormatter9.setDescPadding(10);
        helpFormatter9.setSyntaxPrefix(" ");
        java.util.Comparator comparator17 = helpFormatter9.getOptionComparator();
        helpFormatter0.setOptionComparator(comparator17);
        java.lang.String str19 = helpFormatter0.getLongOptPrefix();
        java.lang.String str20 = helpFormatter0.getOptPrefix();
        helpFormatter0.setLongOptPrefix("-");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "arg" + "'", str2, "arg");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(comparator17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "--" + "'", str19, "--");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "-" + "'", str20, "-");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #442
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: invokevirtual #83
42: astore_3
43: aload_1
44: ldc           #33
46: putfield      #36
49: aload_1
50: iconst_m1
51: putfield      #40
54: aload_1
55: ldc           #11
57: invokevirtual #74
60: new           #8
63: dup
64: invokespecial #9
67: astore        4
69: aload         4
71: invokevirtual #35
74: istore        5
76: aload         4
78: ldc           #11
80: putfield      #36
83: aload         4
85: bipush        10
87: invokevirtual #37
90: aload         4
92: ldc           #38
94: invokevirtual #39
97: aload         4
99: invokevirtual #58
102: astore        6
104: aload_1
105: aload         6
107: invokevirtual #99
110: aload_1
111: invokevirtual #53
114: astore        7
116: aload_1
117: invokevirtual #73
120: astore        8
122: aload_1
123: ldc           #49
125: invokevirtual #43
128: new           #22
131: dup
132: invokespecial #23
135: ldc           #24
137: invokevirtual #25
140: iload_2
141: invokevirtual #29
144: ldc           #30
146: invokevirtual #25
149: iconst_1
150: invokevirtual #29
153: ldc           #24
155: invokevirtual #25
158: invokevirtual #27
161: iload_2
162: iconst_1
163: if_icmpne     170
166: iconst_1
167: goto          171
170: iconst_0
171: invokestatic  #31
174: new           #22
177: dup
178: invokespecial #23
181: ldc           #24
183: invokevirtual #25
186: aload_3
187: invokevirtual #25
190: ldc           #79
192: invokevirtual #25
195: invokevirtual #27
198: aload_3
199: ldc           #78
201: invokestatic  #28
204: new           #22
207: dup
208: invokespecial #23
211: ldc           #24
213: invokevirtual #25
216: iload         5
218: invokevirtual #29
221: ldc           #30
223: invokevirtual #25
226: iconst_1
227: invokevirtual #29
230: ldc           #24
232: invokevirtual #25
235: invokevirtual #27
238: iload         5
240: iconst_1
241: if_icmpne     248
244: iconst_1
245: goto          249
248: iconst_0
249: invokestatic  #31
252: aload         6
254: invokestatic  #21
257: new           #22
260: dup
261: invokespecial #23
264: ldc           #24
266: invokevirtual #25
269: aload         7
271: invokevirtual #25
274: ldc           #62
276: invokevirtual #25
279: invokevirtual #27
282: aload         7
284: ldc           #63
286: invokestatic  #28
289: new           #22
292: dup
293: invokespecial #23
296: ldc           #24
298: invokevirtual #25
301: aload         8
303: invokevirtual #25
306: ldc           #48
308: invokevirtual #25
311: invokevirtual #27
314: aload         8
316: ldc           #49
318: invokestatic  #28
321: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0839
Start line: 7625
End line: 0
Method source code: 
    public void test0839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0839");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.getArgName();
        helpFormatter0.setLongOptPrefix("                                                                                                 ");
        int int8 = helpFormatter0.findWrapPos("--", (int) (short) -1, (int) (byte) 100);
        helpFormatter0.defaultOptPrefix = "usage: ";
        java.lang.String str11 = helpFormatter0.getArgName();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "arg" + "'", str2, "arg");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "arg" + "'", str11, "arg");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #443
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: invokevirtual #83
42: astore_3
43: aload_1
44: ldc           #14
46: invokevirtual #43
49: aload_1
50: ldc           #63
52: iconst_m1
53: bipush        100
55: invokevirtual #61
58: istore        4
60: aload_1
61: ldc           #46
63: putfield      #42
66: aload_1
67: invokevirtual #83
70: astore        5
72: new           #22
75: dup
76: invokespecial #23
79: ldc           #24
81: invokevirtual #25
84: iload_2
85: invokevirtual #29
88: ldc           #30
90: invokevirtual #25
93: iconst_1
94: invokevirtual #29
97: ldc           #24
99: invokevirtual #25
102: invokevirtual #27
105: iload_2
106: iconst_1
107: if_icmpne     114
110: iconst_1
111: goto          115
114: iconst_0
115: invokestatic  #31
118: new           #22
121: dup
122: invokespecial #23
125: ldc           #24
127: invokevirtual #25
130: aload_3
131: invokevirtual #25
134: ldc           #79
136: invokevirtual #25
139: invokevirtual #27
142: aload_3
143: ldc           #78
145: invokestatic  #28
148: new           #22
151: dup
152: invokespecial #23
155: ldc           #24
157: invokevirtual #25
160: iload         4
162: invokevirtual #29
165: ldc           #30
167: invokevirtual #25
170: iconst_m1
171: invokevirtual #29
174: ldc           #24
176: invokevirtual #25
179: invokevirtual #27
182: iload         4
184: iconst_m1
185: if_icmpne     192
188: iconst_1
189: goto          193
192: iconst_0
193: invokestatic  #31
196: new           #22
199: dup
200: invokespecial #23
203: ldc           #24
205: invokevirtual #25
208: aload         5
210: invokevirtual #25
213: ldc           #79
215: invokevirtual #25
218: invokevirtual #27
221: aload         5
223: ldc           #78
225: invokestatic  #28
228: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0840
Start line: 7642
End line: 0
Method source code: 
    public void test0840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0840");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultOptPrefix;
        java.lang.String str6 = helpFormatter0.getLongOptPrefix();
        java.util.Comparator comparator7 = helpFormatter0.getOptionComparator();
        java.lang.StringBuffer stringBuffer8 = null;
        try {
            java.lang.StringBuffer stringBuffer12 = helpFormatter0.renderWrappedText(stringBuffer8, 3, (int) (byte) 10, "                                                                                                 ");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(comparator7);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #444
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #11
36: invokevirtual #51
39: aload_1
40: ldc           #11
42: putfield      #52
45: aload_1
46: getfield      #42
49: astore_2
50: aload_1
51: invokevirtual #53
54: astore_3
55: aload_1
56: invokevirtual #58
59: astore        4
61: aconst_null
62: astore        5
64: aload_1
65: aload         5
67: iconst_3
68: bipush        10
70: ldc           #14
72: invokevirtual #123
75: astore        6
77: ldc           #18
79: invokestatic  #19
82: goto          87
85: astore        6
87: new           #22
90: dup
91: invokespecial #23
94: ldc           #24
96: invokevirtual #25
99: aload_2
100: invokevirtual #25
103: ldc           #26
105: invokevirtual #25
108: invokevirtual #27
111: aload_2
112: ldc           #11
114: invokestatic  #28
117: new           #22
120: dup
121: invokespecial #23
124: ldc           #24
126: invokevirtual #25
129: aload_3
130: invokevirtual #25
133: ldc           #26
135: invokevirtual #25
138: invokevirtual #27
141: aload_3
142: ldc           #11
144: invokestatic  #28
147: aload         4
149: invokestatic  #21
152: return
Exception table:
from    to  target type
64    82    85   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0841
Start line: 7665
End line: 0
Method source code: 
    public void test0841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0841");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        java.lang.String str6 = helpFormatter0.getOptPrefix();
        java.lang.String str7 = helpFormatter0.getNewLine();
        helpFormatter0.defaultOptPrefix = "";
        helpFormatter0.setNewLine("");
        helpFormatter0.defaultSyntaxPrefix = "usage: ";
        java.lang.String str14 = helpFormatter0.getArgName();
        java.util.Comparator comparator15 = helpFormatter0.optionComparator;
        helpFormatter0.defaultLeftPad = 97;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "-" + "'", str6, "-");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "arg" + "'", str14, "arg");
        org.junit.Assert.assertNotNull(comparator15);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #445
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: bipush        10
47: invokevirtual #37
50: aload_1
51: invokevirtual #73
54: astore_3
55: aload_1
56: invokevirtual #16
59: astore        4
61: aload_1
62: ldc           #11
64: putfield      #42
67: aload_1
68: ldc           #11
70: invokevirtual #88
73: aload_1
74: ldc           #46
76: putfield      #45
79: aload_1
80: invokevirtual #83
83: astore        5
85: aload_1
86: getfield      #10
89: astore        6
91: aload_1
92: bipush        97
94: putfield      #40
97: new           #22
100: dup
101: invokespecial #23
104: ldc           #24
106: invokevirtual #25
109: iload_2
110: invokevirtual #29
113: ldc           #30
115: invokevirtual #25
118: iconst_1
119: invokevirtual #29
122: ldc           #24
124: invokevirtual #25
127: invokevirtual #27
130: iload_2
131: iconst_1
132: if_icmpne     139
135: iconst_1
136: goto          140
139: iconst_0
140: invokestatic  #31
143: new           #22
146: dup
147: invokespecial #23
150: ldc           #24
152: invokevirtual #25
155: aload_3
156: invokevirtual #25
159: ldc           #48
161: invokevirtual #25
164: invokevirtual #27
167: aload_3
168: ldc           #49
170: invokestatic  #28
173: new           #22
176: dup
177: invokespecial #23
180: ldc           #24
182: invokevirtual #25
185: aload         4
187: invokevirtual #25
190: ldc           #26
192: invokevirtual #25
195: invokevirtual #27
198: aload         4
200: ldc           #11
202: invokestatic  #28
205: new           #22
208: dup
209: invokespecial #23
212: ldc           #24
214: invokevirtual #25
217: aload         5
219: invokevirtual #25
222: ldc           #79
224: invokevirtual #25
227: invokevirtual #27
230: aload         5
232: ldc           #78
234: invokestatic  #28
237: aload         6
239: invokestatic  #21
242: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0842
Start line: 7688
End line: 0
Method source code: 
    public void test0842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0842");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        java.util.Comparator comparator6 = helpFormatter0.optionComparator;
        helpFormatter0.setLongOptPrefix("hi!");
        java.lang.String str9 = helpFormatter0.getLongOptSeparator();
        org.apache.commons.cli.HelpFormatter helpFormatter10 = new org.apache.commons.cli.HelpFormatter();
        int int11 = helpFormatter10.getLeftPadding();
        java.lang.String str12 = helpFormatter10.getArgName();
        helpFormatter10.setSyntaxPrefix("usage: ");
        org.apache.commons.cli.HelpFormatter helpFormatter15 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter15.setOptPrefix("");
        helpFormatter15.defaultLongOptPrefix = "";
        java.lang.String str20 = helpFormatter15.defaultLongOptPrefix;
        java.lang.String str21 = helpFormatter15.getNewLine();
        java.lang.String str22 = helpFormatter15.defaultOptPrefix;
        helpFormatter15.setDescPadding(74);
        java.util.Comparator comparator25 = helpFormatter15.getOptionComparator();
        helpFormatter10.optionComparator = comparator25;
        helpFormatter0.optionComparator = comparator25;
        helpFormatter0.setDescPadding((int) ' ');
        helpFormatter0.setLongOptPrefix("usage:");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(comparator6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + " " + "'", str9, " ");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "arg" + "'", str12, "arg");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "\n" + "'", str21, "\n");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(comparator25);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #446
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: bipush        10
47: invokevirtual #37
50: aload_1
51: getfield      #10
54: astore_3
55: aload_1
56: ldc           #65
58: invokevirtual #43
61: aload_1
62: invokevirtual #72
65: astore        4
67: new           #8
70: dup
71: invokespecial #9
74: astore        5
76: aload         5
78: invokevirtual #35
81: istore        6
83: aload         5
85: invokevirtual #83
88: astore        7
90: aload         5
92: ldc           #46
94: invokevirtual #39
97: new           #8
100: dup
101: invokespecial #9
104: astore        8
106: aload         8
108: ldc           #11
110: invokevirtual #51
113: aload         8
115: ldc           #11
117: putfield      #52
120: aload         8
122: getfield      #52
125: astore        9
127: aload         8
129: invokevirtual #16
132: astore        10
134: aload         8
136: getfield      #42
139: astore        11
141: aload         8
143: bipush        74
145: invokevirtual #37
148: aload         8
150: invokevirtual #58
153: astore        12
155: aload         5
157: aload         12
159: putfield      #10
162: aload_1
163: aload         12
165: putfield      #10
168: aload_1
169: bipush        32
171: invokevirtual #37
174: aload_1
175: ldc           #108
177: invokevirtual #43
180: new           #22
183: dup
184: invokespecial #23
187: ldc           #24
189: invokevirtual #25
192: iload_2
193: invokevirtual #29
196: ldc           #30
198: invokevirtual #25
201: iconst_1
202: invokevirtual #29
205: ldc           #24
207: invokevirtual #25
210: invokevirtual #27
213: iload_2
214: iconst_1
215: if_icmpne     222
218: iconst_1
219: goto          223
222: iconst_0
223: invokestatic  #31
226: aload_3
227: invokestatic  #21
230: new           #22
233: dup
234: invokespecial #23
237: ldc           #24
239: invokevirtual #25
242: aload         4
244: invokevirtual #25
247: ldc           #75
249: invokevirtual #25
252: invokevirtual #27
255: aload         4
257: ldc           #38
259: invokestatic  #28
262: new           #22
265: dup
266: invokespecial #23
269: ldc           #24
271: invokevirtual #25
274: iload         6
276: invokevirtual #29
279: ldc           #30
281: invokevirtual #25
284: iconst_1
285: invokevirtual #29
288: ldc           #24
290: invokevirtual #25
293: invokevirtual #27
296: iload         6
298: iconst_1
299: if_icmpne     306
302: iconst_1
303: goto          307
306: iconst_0
307: invokestatic  #31
310: new           #22
313: dup
314: invokespecial #23
317: ldc           #24
319: invokevirtual #25
322: aload         7
324: invokevirtual #25
327: ldc           #79
329: invokevirtual #25
332: invokevirtual #27
335: aload         7
337: ldc           #78
339: invokestatic  #28
342: new           #22
345: dup
346: invokespecial #23
349: ldc           #24
351: invokevirtual #25
354: aload         9
356: invokevirtual #25
359: ldc           #26
361: invokevirtual #25
364: invokevirtual #27
367: aload         9
369: ldc           #11
371: invokestatic  #28
374: new           #22
377: dup
378: invokespecial #23
381: ldc           #24
383: invokevirtual #25
386: aload         10
388: invokevirtual #25
391: ldc           #32
393: invokevirtual #25
396: invokevirtual #27
399: aload         10
401: ldc           #33
403: invokestatic  #28
406: new           #22
409: dup
410: invokespecial #23
413: ldc           #24
415: invokevirtual #25
418: aload         11
420: invokevirtual #25
423: ldc           #26
425: invokevirtual #25
428: invokevirtual #27
431: aload         11
433: ldc           #11
435: invokestatic  #28
438: aload         12
440: invokestatic  #21
443: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0843
Start line: 7726
End line: 0
Method source code: 
    public void test0843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0843");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str3 = helpFormatter0.getOptPrefix();
        helpFormatter0.defaultLeftPad = 0;
        java.lang.String str6 = helpFormatter0.getLongOptPrefix();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "--" + "'", str2, "--");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "-" + "'", str3, "-");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "--" + "'", str6, "--");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #447
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: getfield      #52
42: astore_3
43: aload_1
44: invokevirtual #73
47: astore        4
49: aload_1
50: iconst_0
51: putfield      #40
54: aload_1
55: invokevirtual #53
58: astore        5
60: new           #22
63: dup
64: invokespecial #23
67: ldc           #24
69: invokevirtual #25
72: iload_2
73: invokevirtual #29
76: ldc           #30
78: invokevirtual #25
81: iconst_1
82: invokevirtual #29
85: ldc           #24
87: invokevirtual #25
90: invokevirtual #27
93: iload_2
94: iconst_1
95: if_icmpne     102
98: iconst_1
99: goto          103
102: iconst_0
103: invokestatic  #31
106: new           #22
109: dup
110: invokespecial #23
113: ldc           #24
115: invokevirtual #25
118: aload_3
119: invokevirtual #25
122: ldc           #62
124: invokevirtual #25
127: invokevirtual #27
130: aload_3
131: ldc           #63
133: invokestatic  #28
136: new           #22
139: dup
140: invokespecial #23
143: ldc           #24
145: invokevirtual #25
148: aload         4
150: invokevirtual #25
153: ldc           #48
155: invokevirtual #25
158: invokevirtual #27
161: aload         4
163: ldc           #49
165: invokestatic  #28
168: new           #22
171: dup
172: invokespecial #23
175: ldc           #24
177: invokevirtual #25
180: aload         5
182: invokevirtual #25
185: ldc           #62
187: invokevirtual #25
190: invokevirtual #27
193: aload         5
195: ldc           #63
197: invokestatic  #28
200: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0844
Start line: 7742
End line: 0
Method source code: 
    public void test0844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0844");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        java.lang.String str3 = helpFormatter0.getLongOptSeparator();
        helpFormatter0.setWidth(0);
        helpFormatter0.defaultNewLine = "          ";
        java.lang.String str9 = helpFormatter0.createPadding(0);
        java.lang.String str10 = helpFormatter0.defaultArgName;
        org.apache.commons.cli.HelpFormatter helpFormatter11 = new org.apache.commons.cli.HelpFormatter();
        int int12 = helpFormatter11.getLeftPadding();
        helpFormatter11.defaultNewLine = "";
        helpFormatter11.setDescPadding(10);
        helpFormatter11.setSyntaxPrefix(" ");
        int int19 = helpFormatter11.defaultLeftPad;
        helpFormatter11.setLeftPadding(1);
        java.util.Comparator comparator22 = helpFormatter11.optionComparator;
        helpFormatter0.optionComparator = comparator22;
        helpFormatter0.defaultLongOptPrefix = "usage: ";
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + " " + "'", str3, " ");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "arg" + "'", str10, "arg");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(comparator22);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #448
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #11
36: invokevirtual #51
39: aload_1
40: invokevirtual #72
43: astore_2
44: aload_1
45: iconst_0
46: invokevirtual #90
49: aload_1
50: ldc           #67
52: putfield      #36
55: aload_1
56: iconst_0
57: invokevirtual #93
60: astore_3
61: aload_1
62: getfield      #15
65: astore        4
67: new           #8
70: dup
71: invokespecial #9
74: astore        5
76: aload         5
78: invokevirtual #35
81: istore        6
83: aload         5
85: ldc           #11
87: putfield      #36
90: aload         5
92: bipush        10
94: invokevirtual #37
97: aload         5
99: ldc           #38
101: invokevirtual #39
104: aload         5
106: getfield      #40
109: istore        7
111: aload         5
113: iconst_1
114: invokevirtual #55
117: aload         5
119: getfield      #10
122: astore        8
124: aload_1
125: aload         8
127: putfield      #10
130: aload_1
131: ldc           #46
133: putfield      #52
136: new           #22
139: dup
140: invokespecial #23
143: ldc           #24
145: invokevirtual #25
148: aload_2
149: invokevirtual #25
152: ldc           #75
154: invokevirtual #25
157: invokevirtual #27
160: aload_2
161: ldc           #38
163: invokestatic  #28
166: new           #22
169: dup
170: invokespecial #23
173: ldc           #24
175: invokevirtual #25
178: aload_3
179: invokevirtual #25
182: ldc           #26
184: invokevirtual #25
187: invokevirtual #27
190: aload_3
191: ldc           #11
193: invokestatic  #28
196: new           #22
199: dup
200: invokespecial #23
203: ldc           #24
205: invokevirtual #25
208: aload         4
210: invokevirtual #25
213: ldc           #79
215: invokevirtual #25
218: invokevirtual #27
221: aload         4
223: ldc           #78
225: invokestatic  #28
228: new           #22
231: dup
232: invokespecial #23
235: ldc           #24
237: invokevirtual #25
240: iload         6
242: invokevirtual #29
245: ldc           #30
247: invokevirtual #25
250: iconst_1
251: invokevirtual #29
254: ldc           #24
256: invokevirtual #25
259: invokevirtual #27
262: iload         6
264: iconst_1
265: if_icmpne     272
268: iconst_1
269: goto          273
272: iconst_0
273: invokestatic  #31
276: new           #22
279: dup
280: invokespecial #23
283: ldc           #24
285: invokevirtual #25
288: iload         7
290: invokevirtual #29
293: ldc           #30
295: invokevirtual #25
298: iconst_1
299: invokevirtual #29
302: ldc           #24
304: invokevirtual #25
307: invokevirtual #27
310: iload         7
312: iconst_1
313: if_icmpne     320
316: iconst_1
317: goto          321
320: iconst_0
321: invokestatic  #31
324: aload         8
326: invokestatic  #21
329: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0845
Start line: 7771
End line: 0
Method source code: 
    public void test0845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0845");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setLongOptPrefix(" ");
        helpFormatter0.defaultDescPad = (short) 10;
        helpFormatter0.defaultSyntaxPrefix = "";
        helpFormatter0.setLongOptPrefix("");
        java.lang.String str13 = helpFormatter0.defaultNewLine;
        helpFormatter0.defaultArgName = "usage: ";
        org.apache.commons.cli.HelpFormatter helpFormatter16 = new org.apache.commons.cli.HelpFormatter();
        java.lang.String str17 = helpFormatter16.defaultSyntaxPrefix;
        java.util.Comparator comparator18 = helpFormatter16.optionComparator;
        helpFormatter0.setOptionComparator(comparator18);
        helpFormatter0.setLongOptSeparator("");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "usage: " + "'", str17, "usage: ");
        org.junit.Assert.assertNotNull(comparator18);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #449
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: getfield      #42
48: astore_3
49: aload_1
50: ldc           #38
52: invokevirtual #43
55: aload_1
56: bipush        10
58: putfield      #44
61: aload_1
62: ldc           #11
64: putfield      #45
67: aload_1
68: ldc           #11
70: invokevirtual #43
73: aload_1
74: getfield      #36
77: astore        4
79: aload_1
80: ldc           #46
82: putfield      #15
85: new           #8
88: dup
89: invokespecial #9
92: astore        5
94: aload         5
96: getfield      #45
99: astore        6
101: aload         5
103: getfield      #10
106: astore        7
108: aload_1
109: aload         7
111: invokevirtual #99
114: aload_1
115: ldc           #11
117: invokevirtual #74
120: new           #22
123: dup
124: invokespecial #23
127: ldc           #24
129: invokevirtual #25
132: iload_2
133: invokevirtual #29
136: ldc           #30
138: invokevirtual #25
141: iconst_1
142: invokevirtual #29
145: ldc           #24
147: invokevirtual #25
150: invokevirtual #27
153: iload_2
154: iconst_1
155: if_icmpne     162
158: iconst_1
159: goto          163
162: iconst_0
163: invokestatic  #31
166: new           #22
169: dup
170: invokespecial #23
173: ldc           #24
175: invokevirtual #25
178: aload_3
179: invokevirtual #25
182: ldc           #48
184: invokevirtual #25
187: invokevirtual #27
190: aload_3
191: ldc           #49
193: invokestatic  #28
196: new           #22
199: dup
200: invokespecial #23
203: ldc           #24
205: invokevirtual #25
208: aload         4
210: invokevirtual #25
213: ldc           #26
215: invokevirtual #25
218: invokevirtual #27
221: aload         4
223: ldc           #11
225: invokestatic  #28
228: new           #22
231: dup
232: invokespecial #23
235: ldc           #24
237: invokevirtual #25
240: aload         6
242: invokevirtual #25
245: ldc           #104
247: invokevirtual #25
250: invokevirtual #27
253: aload         6
255: ldc           #46
257: invokestatic  #28
260: aload         7
262: invokestatic  #21
265: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0846
Start line: 7797
End line: 0
Method source code: 
    public void test0846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0846");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        java.lang.String str6 = helpFormatter0.rtrim("");
        java.lang.String str8 = helpFormatter0.rtrim("-");
        java.lang.String str9 = helpFormatter0.getLongOptSeparator();
        helpFormatter0.defaultLeftPad = (byte) -1;
        int int12 = helpFormatter0.getWidth();
        java.io.PrintWriter printWriter13 = null;
        org.apache.commons.cli.Options options15 = null;
        try {
            helpFormatter0.printOptions(printWriter13, (-1), options15, 0, 32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "-" + "'", str8, "-");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + " " + "'", str9, " ");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 74 + "'", int12 == 74);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #450
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: getfield      #42
48: astore_3
49: aload_1
50: ldc           #11
52: invokevirtual #12
55: astore        4
57: aload_1
58: ldc           #49
60: invokevirtual #12
63: astore        5
65: aload_1
66: invokevirtual #72
69: astore        6
71: aload_1
72: iconst_m1
73: putfield      #40
76: aload_1
77: invokevirtual #66
80: istore        7
82: aconst_null
83: astore        8
85: aconst_null
86: astore        9
88: aload_1
89: aload         8
91: iconst_m1
92: aload         9
94: iconst_0
95: bipush        32
97: invokevirtual #17
100: ldc           #18
102: invokestatic  #19
105: goto          110
108: astore        10
110: new           #22
113: dup
114: invokespecial #23
117: ldc           #24
119: invokevirtual #25
122: iload_2
123: invokevirtual #29
126: ldc           #30
128: invokevirtual #25
131: iconst_1
132: invokevirtual #29
135: ldc           #24
137: invokevirtual #25
140: invokevirtual #27
143: iload_2
144: iconst_1
145: if_icmpne     152
148: iconst_1
149: goto          153
152: iconst_0
153: invokestatic  #31
156: new           #22
159: dup
160: invokespecial #23
163: ldc           #24
165: invokevirtual #25
168: aload_3
169: invokevirtual #25
172: ldc           #48
174: invokevirtual #25
177: invokevirtual #27
180: aload_3
181: ldc           #49
183: invokestatic  #28
186: new           #22
189: dup
190: invokespecial #23
193: ldc           #24
195: invokevirtual #25
198: aload         4
200: invokevirtual #25
203: ldc           #26
205: invokevirtual #25
208: invokevirtual #27
211: aload         4
213: ldc           #11
215: invokestatic  #28
218: new           #22
221: dup
222: invokespecial #23
225: ldc           #24
227: invokevirtual #25
230: aload         5
232: invokevirtual #25
235: ldc           #48
237: invokevirtual #25
240: invokevirtual #27
243: aload         5
245: ldc           #49
247: invokestatic  #28
250: new           #22
253: dup
254: invokespecial #23
257: ldc           #24
259: invokevirtual #25
262: aload         6
264: invokevirtual #25
267: ldc           #75
269: invokevirtual #25
272: invokevirtual #27
275: aload         6
277: ldc           #38
279: invokestatic  #28
282: new           #22
285: dup
286: invokespecial #23
289: ldc           #24
291: invokevirtual #25
294: iload         7
296: invokevirtual #29
299: ldc           #30
301: invokevirtual #25
304: bipush        74
306: invokevirtual #29
309: ldc           #24
311: invokevirtual #25
314: invokevirtual #27
317: iload         7
319: bipush        74
321: if_icmpne     328
324: iconst_1
325: goto          329
328: iconst_0
329: invokestatic  #31
332: return
Exception table:
from    to  target type
88   105   108   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0847
Start line: 7827
End line: 0
Method source code: 
    public void test0847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0847");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        java.lang.String str6 = helpFormatter0.defaultNewLine;
        helpFormatter0.setDescPadding(10);
        int int9 = helpFormatter0.defaultLeftPad;
        int int10 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultSyntaxPrefix = "                                                    ";
        org.apache.commons.cli.HelpFormatter helpFormatter13 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter13.setOptPrefix("");
        helpFormatter13.defaultLongOptPrefix = "";
        java.lang.String str18 = helpFormatter13.defaultLongOptPrefix;
        helpFormatter13.defaultDescPad = 0;
        org.apache.commons.cli.HelpFormatter helpFormatter21 = new org.apache.commons.cli.HelpFormatter();
        java.util.Comparator comparator22 = helpFormatter21.optionComparator;
        int int23 = helpFormatter21.getLeftPadding();
        int int24 = helpFormatter21.defaultLeftPad;
        java.lang.String str26 = helpFormatter21.createPadding((int) 'a');
        org.apache.commons.cli.HelpFormatter helpFormatter27 = new org.apache.commons.cli.HelpFormatter();
        int int28 = helpFormatter27.getLeftPadding();
        helpFormatter27.defaultNewLine = "";
        helpFormatter27.defaultDescPad = '4';
        helpFormatter27.setNewLine("");
        int int38 = helpFormatter27.findWrapPos("\n", (int) ' ', 3);
        java.util.Comparator comparator39 = helpFormatter27.optionComparator;
        helpFormatter21.setOptionComparator(comparator39);
        helpFormatter13.setOptionComparator(comparator39);
        helpFormatter0.optionComparator = comparator39;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(comparator22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "                                                                                                 " + "'", str26, "                                                                                                 ");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(comparator39);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #451
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: bipush        10
47: invokevirtual #37
50: aload_1
51: getfield      #36
54: astore_3
55: aload_1
56: bipush        10
58: invokevirtual #37
61: aload_1
62: getfield      #40
65: istore        4
67: aload_1
68: invokevirtual #35
71: istore        5
73: aload_1
74: ldc           #77
76: putfield      #45
79: new           #8
82: dup
83: invokespecial #9
86: astore        6
88: aload         6
90: ldc           #11
92: invokevirtual #51
95: aload         6
97: ldc           #11
99: putfield      #52
102: aload         6
104: getfield      #52
107: astore        7
109: aload         6
111: iconst_0
112: putfield      #44
115: new           #8
118: dup
119: invokespecial #9
122: astore        8
124: aload         8
126: getfield      #10
129: astore        9
131: aload         8
133: invokevirtual #35
136: istore        10
138: aload         8
140: getfield      #40
143: istore        11
145: aload         8
147: bipush        97
149: invokevirtual #93
152: astore        12
154: new           #8
157: dup
158: invokespecial #9
161: astore        13
163: aload         13
165: invokevirtual #35
168: istore        14
170: aload         13
172: ldc           #11
174: putfield      #36
177: aload         13
179: bipush        52
181: putfield      #44
184: aload         13
186: ldc           #11
188: invokevirtual #88
191: aload         13
193: ldc           #33
195: bipush        32
197: iconst_3
198: invokevirtual #61
201: istore        15
203: aload         13
205: getfield      #10
208: astore        16
210: aload         8
212: aload         16
214: invokevirtual #99
217: aload         6
219: aload         16
221: invokevirtual #99
224: aload_1
225: aload         16
227: putfield      #10
230: new           #22
233: dup
234: invokespecial #23
237: ldc           #24
239: invokevirtual #25
242: iload_2
243: invokevirtual #29
246: ldc           #30
248: invokevirtual #25
251: iconst_1
252: invokevirtual #29
255: ldc           #24
257: invokevirtual #25
260: invokevirtual #27
263: iload_2
264: iconst_1
265: if_icmpne     272
268: iconst_1
269: goto          273
272: iconst_0
273: invokestatic  #31
276: new           #22
279: dup
280: invokespecial #23
283: ldc           #24
285: invokevirtual #25
288: aload_3
289: invokevirtual #25
292: ldc           #26
294: invokevirtual #25
297: invokevirtual #27
300: aload_3
301: ldc           #11
303: invokestatic  #28
306: new           #22
309: dup
310: invokespecial #23
313: ldc           #24
315: invokevirtual #25
318: iload         4
320: invokevirtual #29
323: ldc           #30
325: invokevirtual #25
328: iconst_1
329: invokevirtual #29
332: ldc           #24
334: invokevirtual #25
337: invokevirtual #27
340: iload         4
342: iconst_1
343: if_icmpne     350
346: iconst_1
347: goto          351
350: iconst_0
351: invokestatic  #31
354: new           #22
357: dup
358: invokespecial #23
361: ldc           #24
363: invokevirtual #25
366: iload         5
368: invokevirtual #29
371: ldc           #30
373: invokevirtual #25
376: iconst_1
377: invokevirtual #29
380: ldc           #24
382: invokevirtual #25
385: invokevirtual #27
388: iload         5
390: iconst_1
391: if_icmpne     398
394: iconst_1
395: goto          399
398: iconst_0
399: invokestatic  #31
402: new           #22
405: dup
406: invokespecial #23
409: ldc           #24
411: invokevirtual #25
414: aload         7
416: invokevirtual #25
419: ldc           #26
421: invokevirtual #25
424: invokevirtual #27
427: aload         7
429: ldc           #11
431: invokestatic  #28
434: aload         9
436: invokestatic  #21
439: new           #22
442: dup
443: invokespecial #23
446: ldc           #24
448: invokevirtual #25
451: iload         10
453: invokevirtual #29
456: ldc           #30
458: invokevirtual #25
461: iconst_1
462: invokevirtual #29
465: ldc           #24
467: invokevirtual #25
470: invokevirtual #27
473: iload         10
475: iconst_1
476: if_icmpne     483
479: iconst_1
480: goto          484
483: iconst_0
484: invokestatic  #31
487: new           #22
490: dup
491: invokespecial #23
494: ldc           #24
496: invokevirtual #25
499: iload         11
501: invokevirtual #29
504: ldc           #30
506: invokevirtual #25
509: iconst_1
510: invokevirtual #29
513: ldc           #24
515: invokevirtual #25
518: invokevirtual #27
521: iload         11
523: iconst_1
524: if_icmpne     531
527: iconst_1
528: goto          532
531: iconst_0
532: invokestatic  #31
535: new           #22
538: dup
539: invokespecial #23
542: ldc           #24
544: invokevirtual #25
547: aload         12
549: invokevirtual #25
552: ldc           #142
554: invokevirtual #25
557: invokevirtual #27
560: aload         12
562: ldc           #14
564: invokestatic  #28
567: new           #22
570: dup
571: invokespecial #23
574: ldc           #24
576: invokevirtual #25
579: iload         14
581: invokevirtual #29
584: ldc           #30
586: invokevirtual #25
589: iconst_1
590: invokevirtual #29
593: ldc           #24
595: invokevirtual #25
598: invokevirtual #27
601: iload         14
603: iconst_1
604: if_icmpne     611
607: iconst_1
608: goto          612
611: iconst_0
612: invokestatic  #31
615: new           #22
618: dup
619: invokespecial #23
622: ldc           #24
624: invokevirtual #25
627: iload         15
629: invokevirtual #29
632: ldc           #30
634: invokevirtual #25
637: iconst_m1
638: invokevirtual #29
641: ldc           #24
643: invokevirtual #25
646: invokevirtual #27
649: iload         15
651: iconst_m1
652: if_icmpne     659
655: iconst_1
656: goto          660
659: iconst_0
660: invokestatic  #31
663: aload         16
665: invokestatic  #21
668: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0848
Start line: 7874
End line: 0
Method source code: 
    public void test0848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0848");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        java.lang.String str6 = helpFormatter0.rtrim("");
        java.lang.String str8 = helpFormatter0.rtrim("-");
        helpFormatter0.defaultOptPrefix = "--";
        helpFormatter0.defaultDescPad = 0;
        int int16 = helpFormatter0.findWrapPos("", (-1), (int) (short) 0);
        java.lang.String str17 = helpFormatter0.defaultArgName;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "-" + "'", str8, "-");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "arg" + "'", str17, "arg");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #452
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: getfield      #42
48: astore_3
49: aload_1
50: ldc           #11
52: invokevirtual #12
55: astore        4
57: aload_1
58: ldc           #49
60: invokevirtual #12
63: astore        5
65: aload_1
66: ldc           #63
68: putfield      #42
71: aload_1
72: iconst_0
73: putfield      #44
76: aload_1
77: ldc           #11
79: iconst_m1
80: iconst_0
81: invokevirtual #61
84: istore        6
86: aload_1
87: getfield      #15
90: astore        7
92: new           #22
95: dup
96: invokespecial #23
99: ldc           #24
101: invokevirtual #25
104: iload_2
105: invokevirtual #29
108: ldc           #30
110: invokevirtual #25
113: iconst_1
114: invokevirtual #29
117: ldc           #24
119: invokevirtual #25
122: invokevirtual #27
125: iload_2
126: iconst_1
127: if_icmpne     134
130: iconst_1
131: goto          135
134: iconst_0
135: invokestatic  #31
138: new           #22
141: dup
142: invokespecial #23
145: ldc           #24
147: invokevirtual #25
150: aload_3
151: invokevirtual #25
154: ldc           #48
156: invokevirtual #25
159: invokevirtual #27
162: aload_3
163: ldc           #49
165: invokestatic  #28
168: new           #22
171: dup
172: invokespecial #23
175: ldc           #24
177: invokevirtual #25
180: aload         4
182: invokevirtual #25
185: ldc           #26
187: invokevirtual #25
190: invokevirtual #27
193: aload         4
195: ldc           #11
197: invokestatic  #28
200: new           #22
203: dup
204: invokespecial #23
207: ldc           #24
209: invokevirtual #25
212: aload         5
214: invokevirtual #25
217: ldc           #48
219: invokevirtual #25
222: invokevirtual #27
225: aload         5
227: ldc           #49
229: invokestatic  #28
232: new           #22
235: dup
236: invokespecial #23
239: ldc           #24
241: invokevirtual #25
244: iload         6
246: invokevirtual #29
249: ldc           #30
251: invokevirtual #25
254: iconst_m1
255: invokevirtual #29
258: ldc           #24
260: invokevirtual #25
263: invokevirtual #27
266: iload         6
268: iconst_m1
269: if_icmpne     276
272: iconst_1
273: goto          277
276: iconst_0
277: invokestatic  #31
280: new           #22
283: dup
284: invokespecial #23
287: ldc           #24
289: invokevirtual #25
292: aload         7
294: invokevirtual #25
297: ldc           #79
299: invokevirtual #25
302: invokevirtual #27
305: aload         7
307: ldc           #78
309: invokestatic  #28
312: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0849
Start line: 7896
End line: 0
Method source code: 
    public void test0849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0849");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        java.lang.String str6 = helpFormatter0.rtrim("");
        int int7 = helpFormatter0.getDescPadding();
        java.lang.String str8 = helpFormatter0.getArgName();
        java.io.PrintWriter printWriter9 = null;
        try {
            helpFormatter0.printWrapped(printWriter9, 74, "                                                    ");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 3 + "'", int7 == 3);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "arg" + "'", str8, "arg");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #453
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: getfield      #42
48: astore_3
49: aload_1
50: ldc           #11
52: invokevirtual #12
55: astore        4
57: aload_1
58: invokevirtual #13
61: istore        5
63: aload_1
64: invokevirtual #83
67: astore        6
69: aconst_null
70: astore        7
72: aload_1
73: aload         7
75: bipush        74
77: ldc           #77
79: invokevirtual #180
82: ldc           #18
84: invokestatic  #19
87: goto          92
90: astore        8
92: new           #22
95: dup
96: invokespecial #23
99: ldc           #24
101: invokevirtual #25
104: iload_2
105: invokevirtual #29
108: ldc           #30
110: invokevirtual #25
113: iconst_1
114: invokevirtual #29
117: ldc           #24
119: invokevirtual #25
122: invokevirtual #27
125: iload_2
126: iconst_1
127: if_icmpne     134
130: iconst_1
131: goto          135
134: iconst_0
135: invokestatic  #31
138: new           #22
141: dup
142: invokespecial #23
145: ldc           #24
147: invokevirtual #25
150: aload_3
151: invokevirtual #25
154: ldc           #48
156: invokevirtual #25
159: invokevirtual #27
162: aload_3
163: ldc           #49
165: invokestatic  #28
168: new           #22
171: dup
172: invokespecial #23
175: ldc           #24
177: invokevirtual #25
180: aload         4
182: invokevirtual #25
185: ldc           #26
187: invokevirtual #25
190: invokevirtual #27
193: aload         4
195: ldc           #11
197: invokestatic  #28
200: new           #22
203: dup
204: invokespecial #23
207: ldc           #24
209: invokevirtual #25
212: iload         5
214: invokevirtual #29
217: ldc           #30
219: invokevirtual #25
222: iconst_3
223: invokevirtual #29
226: ldc           #24
228: invokevirtual #25
231: invokevirtual #27
234: iload         5
236: iconst_3
237: if_icmpne     244
240: iconst_1
241: goto          245
244: iconst_0
245: invokestatic  #31
248: new           #22
251: dup
252: invokespecial #23
255: ldc           #24
257: invokevirtual #25
260: aload         6
262: invokevirtual #25
265: ldc           #79
267: invokevirtual #25
270: invokevirtual #27
273: aload         6
275: ldc           #78
277: invokestatic  #28
280: return
Exception table:
from    to  target type
72    87    90   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0850
Start line: 7922
End line: 0
Method source code: 
    public void test0850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0850");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setLeftPadding((int) (byte) 0);
        helpFormatter0.setLeftPadding(0);
        helpFormatter0.defaultLeftPad = (byte) 0;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #454
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: getfield      #42
48: astore_3
49: aload_1
50: iconst_0
51: invokevirtual #55
54: aload_1
55: iconst_0
56: invokevirtual #55
59: aload_1
60: iconst_0
61: putfield      #40
64: new           #22
67: dup
68: invokespecial #23
71: ldc           #24
73: invokevirtual #25
76: iload_2
77: invokevirtual #29
80: ldc           #30
82: invokevirtual #25
85: iconst_1
86: invokevirtual #29
89: ldc           #24
91: invokevirtual #25
94: invokevirtual #27
97: iload_2
98: iconst_1
99: if_icmpne     106
102: iconst_1
103: goto          107
106: iconst_0
107: invokestatic  #31
110: new           #22
113: dup
114: invokespecial #23
117: ldc           #24
119: invokevirtual #25
122: aload_3
123: invokevirtual #25
126: ldc           #48
128: invokevirtual #25
131: invokevirtual #27
134: aload_3
135: ldc           #49
137: invokestatic  #28
140: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0851
Start line: 7937
End line: 0
Method source code: 
    public void test0851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0851");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        java.lang.String str6 = helpFormatter0.rtrim("");
        int int7 = helpFormatter0.getDescPadding();
        helpFormatter0.defaultWidth = 0;
        java.util.Comparator comparator10 = helpFormatter0.optionComparator;
        java.lang.Class<?> wildcardClass11 = comparator10.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 3 + "'", int7 == 3);
        org.junit.Assert.assertNotNull(comparator10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #455
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: getfield      #42
48: astore_3
49: aload_1
50: ldc           #11
52: invokevirtual #12
55: astore        4
57: aload_1
58: invokevirtual #13
61: istore        5
63: aload_1
64: iconst_0
65: putfield      #57
68: aload_1
69: getfield      #10
72: astore        6
74: aload         6
76: invokevirtual #154
79: astore        7
81: new           #22
84: dup
85: invokespecial #23
88: ldc           #24
90: invokevirtual #25
93: iload_2
94: invokevirtual #29
97: ldc           #30
99: invokevirtual #25
102: iconst_1
103: invokevirtual #29
106: ldc           #24
108: invokevirtual #25
111: invokevirtual #27
114: iload_2
115: iconst_1
116: if_icmpne     123
119: iconst_1
120: goto          124
123: iconst_0
124: invokestatic  #31
127: new           #22
130: dup
131: invokespecial #23
134: ldc           #24
136: invokevirtual #25
139: aload_3
140: invokevirtual #25
143: ldc           #48
145: invokevirtual #25
148: invokevirtual #27
151: aload_3
152: ldc           #49
154: invokestatic  #28
157: new           #22
160: dup
161: invokespecial #23
164: ldc           #24
166: invokevirtual #25
169: aload         4
171: invokevirtual #25
174: ldc           #26
176: invokevirtual #25
179: invokevirtual #27
182: aload         4
184: ldc           #11
186: invokestatic  #28
189: new           #22
192: dup
193: invokespecial #23
196: ldc           #24
198: invokevirtual #25
201: iload         5
203: invokevirtual #29
206: ldc           #30
208: invokevirtual #25
211: iconst_3
212: invokevirtual #29
215: ldc           #24
217: invokevirtual #25
220: invokevirtual #27
223: iload         5
225: iconst_3
226: if_icmpne     233
229: iconst_1
230: goto          234
233: iconst_0
234: invokestatic  #31
237: aload         6
239: invokestatic  #21
242: aload         7
244: invokestatic  #21
247: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0852
Start line: 7958
End line: 0
Method source code: 
    public void test0852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0852");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.util.Comparator comparator1 = helpFormatter0.optionComparator;
        java.lang.String str2 = helpFormatter0.getLongOptPrefix();
        int int3 = helpFormatter0.defaultDescPad;
        int int4 = helpFormatter0.getLeftPadding();
        org.apache.commons.cli.Options options6 = null;
        try {
            helpFormatter0.printHelp("\n", options6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(comparator1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "--" + "'", str2, "--");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 3 + "'", int3 == 3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #456
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: getfield      #10
37: astore_2
38: aload_1
39: invokevirtual #53
42: astore_3
43: aload_1
44: getfield      #44
47: istore        4
49: aload_1
50: invokevirtual #35
53: istore        5
55: aconst_null
56: astore        6
58: aload_1
59: ldc           #33
61: aload         6
63: invokevirtual #240
66: ldc           #18
68: invokestatic  #19
71: goto          76
74: astore        7
76: aload_2
77: invokestatic  #21
80: new           #22
83: dup
84: invokespecial #23
87: ldc           #24
89: invokevirtual #25
92: aload_3
93: invokevirtual #25
96: ldc           #62
98: invokevirtual #25
101: invokevirtual #27
104: aload_3
105: ldc           #63
107: invokestatic  #28
110: new           #22
113: dup
114: invokespecial #23
117: ldc           #24
119: invokevirtual #25
122: iload         4
124: invokevirtual #29
127: ldc           #30
129: invokevirtual #25
132: iconst_3
133: invokevirtual #29
136: ldc           #24
138: invokevirtual #25
141: invokevirtual #27
144: iload         4
146: iconst_3
147: if_icmpne     154
150: iconst_1
151: goto          155
154: iconst_0
155: invokestatic  #31
158: new           #22
161: dup
162: invokespecial #23
165: ldc           #24
167: invokevirtual #25
170: iload         5
172: invokevirtual #29
175: ldc           #30
177: invokevirtual #25
180: iconst_1
181: invokevirtual #29
184: ldc           #24
186: invokevirtual #25
189: invokevirtual #27
192: iload         5
194: iconst_1
195: if_icmpne     202
198: iconst_1
199: goto          203
202: iconst_0
203: invokestatic  #31
206: return
Exception table:
from    to  target type
58    71    74   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0853
Start line: 7981
End line: 0
Method source code: 
    public void test0853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0853");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        java.lang.String str6 = helpFormatter0.defaultNewLine;
        java.lang.String str7 = helpFormatter0.defaultNewLine;
        helpFormatter0.defaultWidth = 0;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #457
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: bipush        10
47: invokevirtual #37
50: aload_1
51: getfield      #36
54: astore_3
55: aload_1
56: getfield      #36
59: astore        4
61: aload_1
62: iconst_0
63: putfield      #57
66: new           #22
69: dup
70: invokespecial #23
73: ldc           #24
75: invokevirtual #25
78: iload_2
79: invokevirtual #29
82: ldc           #30
84: invokevirtual #25
87: iconst_1
88: invokevirtual #29
91: ldc           #24
93: invokevirtual #25
96: invokevirtual #27
99: iload_2
100: iconst_1
101: if_icmpne     108
104: iconst_1
105: goto          109
108: iconst_0
109: invokestatic  #31
112: new           #22
115: dup
116: invokespecial #23
119: ldc           #24
121: invokevirtual #25
124: aload_3
125: invokevirtual #25
128: ldc           #26
130: invokevirtual #25
133: invokevirtual #27
136: aload_3
137: ldc           #11
139: invokestatic  #28
142: new           #22
145: dup
146: invokespecial #23
149: ldc           #24
151: invokevirtual #25
154: aload         4
156: invokevirtual #25
159: ldc           #26
161: invokevirtual #25
164: invokevirtual #27
167: aload         4
169: ldc           #11
171: invokestatic  #28
174: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0854
Start line: 7997
End line: 0
Method source code: 
    public void test0854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0854");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.defaultDescPad = '4';
        helpFormatter0.setNewLine("");
        helpFormatter0.defaultWidth = '4';
        org.apache.commons.cli.HelpFormatter helpFormatter10 = new org.apache.commons.cli.HelpFormatter();
        int int11 = helpFormatter10.getLeftPadding();
        java.lang.String str12 = helpFormatter10.defaultLongOptPrefix;
        java.lang.String str13 = helpFormatter10.getOptPrefix();
        java.util.Comparator comparator14 = helpFormatter10.optionComparator;
        java.util.Comparator comparator15 = helpFormatter10.optionComparator;
        helpFormatter0.optionComparator = comparator15;
        helpFormatter0.defaultNewLine = "                                                                                                 ";
        helpFormatter0.setLongOptPrefix(" ");
        org.apache.commons.cli.Options options23 = null;
        try {
            helpFormatter0.printHelp("", "usage:", options23, "   ");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: cmdLineSyntax not provided");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "--" + "'", str12, "--");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "-" + "'", str13, "-");
        org.junit.Assert.assertNotNull(comparator14);
        org.junit.Assert.assertNotNull(comparator15);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #458
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: bipush        52
47: putfield      #44
50: aload_1
51: ldc           #11
53: invokevirtual #88
56: aload_1
57: bipush        52
59: putfield      #57
62: new           #8
65: dup
66: invokespecial #9
69: astore_3
70: aload_3
71: invokevirtual #35
74: istore        4
76: aload_3
77: getfield      #52
80: astore        5
82: aload_3
83: invokevirtual #73
86: astore        6
88: aload_3
89: getfield      #10
92: astore        7
94: aload_3
95: getfield      #10
98: astore        8
100: aload_1
101: aload         8
103: putfield      #10
106: aload_1
107: ldc           #14
109: putfield      #36
112: aload_1
113: ldc           #38
115: invokevirtual #43
118: aconst_null
119: astore        9
121: aload_1
122: ldc           #11
124: ldc           #108
126: aload         9
128: ldc           #113
130: invokevirtual #128
133: ldc           #69
135: invokestatic  #19
138: goto          143
141: astore        10
143: new           #22
146: dup
147: invokespecial #23
150: ldc           #24
152: invokevirtual #25
155: iload_2
156: invokevirtual #29
159: ldc           #30
161: invokevirtual #25
164: iconst_1
165: invokevirtual #29
168: ldc           #24
170: invokevirtual #25
173: invokevirtual #27
176: iload_2
177: iconst_1
178: if_icmpne     185
181: iconst_1
182: goto          186
185: iconst_0
186: invokestatic  #31
189: new           #22
192: dup
193: invokespecial #23
196: ldc           #24
198: invokevirtual #25
201: iload         4
203: invokevirtual #29
206: ldc           #30
208: invokevirtual #25
211: iconst_1
212: invokevirtual #29
215: ldc           #24
217: invokevirtual #25
220: invokevirtual #27
223: iload         4
225: iconst_1
226: if_icmpne     233
229: iconst_1
230: goto          234
233: iconst_0
234: invokestatic  #31
237: new           #22
240: dup
241: invokespecial #23
244: ldc           #24
246: invokevirtual #25
249: aload         5
251: invokevirtual #25
254: ldc           #62
256: invokevirtual #25
259: invokevirtual #27
262: aload         5
264: ldc           #63
266: invokestatic  #28
269: new           #22
272: dup
273: invokespecial #23
276: ldc           #24
278: invokevirtual #25
281: aload         6
283: invokevirtual #25
286: ldc           #48
288: invokevirtual #25
291: invokevirtual #27
294: aload         6
296: ldc           #49
298: invokestatic  #28
301: aload         7
303: invokestatic  #21
306: aload         8
308: invokestatic  #21
311: return
Exception table:
from    to  target type
121   138   141   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0855
Start line: 8032
End line: 0
Method source code: 
    public void test0855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0855");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        int int6 = helpFormatter0.defaultWidth;
        helpFormatter0.setLeftPadding(0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "--" + "'", str5, "--");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 74 + "'", int6 == 74);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #459
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: getfield      #42
48: astore_3
49: aload_1
50: getfield      #52
53: astore        4
55: aload_1
56: getfield      #57
59: istore        5
61: aload_1
62: iconst_0
63: invokevirtual #55
66: new           #22
69: dup
70: invokespecial #23
73: ldc           #24
75: invokevirtual #25
78: iload_2
79: invokevirtual #29
82: ldc           #30
84: invokevirtual #25
87: iconst_1
88: invokevirtual #29
91: ldc           #24
93: invokevirtual #25
96: invokevirtual #27
99: iload_2
100: iconst_1
101: if_icmpne     108
104: iconst_1
105: goto          109
108: iconst_0
109: invokestatic  #31
112: new           #22
115: dup
116: invokespecial #23
119: ldc           #24
121: invokevirtual #25
124: aload_3
125: invokevirtual #25
128: ldc           #48
130: invokevirtual #25
133: invokevirtual #27
136: aload_3
137: ldc           #49
139: invokestatic  #28
142: new           #22
145: dup
146: invokespecial #23
149: ldc           #24
151: invokevirtual #25
154: aload         4
156: invokevirtual #25
159: ldc           #62
161: invokevirtual #25
164: invokevirtual #27
167: aload         4
169: ldc           #63
171: invokestatic  #28
174: new           #22
177: dup
178: invokespecial #23
181: ldc           #24
183: invokevirtual #25
186: iload         5
188: invokevirtual #29
191: ldc           #30
193: invokevirtual #25
196: bipush        74
198: invokevirtual #29
201: ldc           #24
203: invokevirtual #25
206: invokevirtual #27
209: iload         5
211: bipush        74
213: if_icmpne     220
216: iconst_1
217: goto          221
220: iconst_0
221: invokestatic  #31
224: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0856
Start line: 8049
End line: 0
Method source code: 
    public void test0856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0856");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        helpFormatter0.setSyntaxPrefix(" ");
        java.util.Comparator comparator8 = helpFormatter0.getOptionComparator();
        helpFormatter0.defaultOptPrefix = "                                                                                                 ";
        java.lang.String str11 = helpFormatter0.getNewLine();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(comparator8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #460
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: bipush        10
47: invokevirtual #37
50: aload_1
51: ldc           #38
53: invokevirtual #39
56: aload_1
57: invokevirtual #58
60: astore_3
61: aload_1
62: ldc           #14
64: putfield      #42
67: aload_1
68: invokevirtual #16
71: astore        4
73: new           #22
76: dup
77: invokespecial #23
80: ldc           #24
82: invokevirtual #25
85: iload_2
86: invokevirtual #29
89: ldc           #30
91: invokevirtual #25
94: iconst_1
95: invokevirtual #29
98: ldc           #24
100: invokevirtual #25
103: invokevirtual #27
106: iload_2
107: iconst_1
108: if_icmpne     115
111: iconst_1
112: goto          116
115: iconst_0
116: invokestatic  #31
119: aload_3
120: invokestatic  #21
123: new           #22
126: dup
127: invokespecial #23
130: ldc           #24
132: invokevirtual #25
135: aload         4
137: invokevirtual #25
140: ldc           #26
142: invokevirtual #25
145: invokevirtual #27
148: aload         4
150: ldc           #11
152: invokestatic  #28
155: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0857
Start line: 8066
End line: 0
Method source code: 
    public void test0857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0857");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.defaultDescPad = '4';
        helpFormatter0.setNewLine("");
        helpFormatter0.defaultWidth = '4';
        java.lang.String str10 = helpFormatter0.getLongOptSeparator();
        java.lang.String str11 = helpFormatter0.defaultOptPrefix;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + " " + "'", str10, " ");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "-" + "'", str11, "-");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #461
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: bipush        52
47: putfield      #44
50: aload_1
51: ldc           #11
53: invokevirtual #88
56: aload_1
57: bipush        52
59: putfield      #57
62: aload_1
63: invokevirtual #72
66: astore_3
67: aload_1
68: getfield      #42
71: astore        4
73: new           #22
76: dup
77: invokespecial #23
80: ldc           #24
82: invokevirtual #25
85: iload_2
86: invokevirtual #29
89: ldc           #30
91: invokevirtual #25
94: iconst_1
95: invokevirtual #29
98: ldc           #24
100: invokevirtual #25
103: invokevirtual #27
106: iload_2
107: iconst_1
108: if_icmpne     115
111: iconst_1
112: goto          116
115: iconst_0
116: invokestatic  #31
119: new           #22
122: dup
123: invokespecial #23
126: ldc           #24
128: invokevirtual #25
131: aload_3
132: invokevirtual #25
135: ldc           #75
137: invokevirtual #25
140: invokevirtual #27
143: aload_3
144: ldc           #38
146: invokestatic  #28
149: new           #22
152: dup
153: invokespecial #23
156: ldc           #24
158: invokevirtual #25
161: aload         4
163: invokevirtual #25
166: ldc           #48
168: invokevirtual #25
171: invokevirtual #27
174: aload         4
176: ldc           #49
178: invokestatic  #28
181: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0858
Start line: 8083
End line: 0
Method source code: 
    public void test0858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0858");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultOptPrefix;
        java.lang.String str6 = helpFormatter0.getLongOptPrefix();
        helpFormatter0.defaultArgName = "                                                                                                 ";
        int int9 = helpFormatter0.defaultLeftPad;
        helpFormatter0.setDescPadding(10);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #462
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #11
36: invokevirtual #51
39: aload_1
40: ldc           #11
42: putfield      #52
45: aload_1
46: getfield      #42
49: astore_2
50: aload_1
51: invokevirtual #53
54: astore_3
55: aload_1
56: ldc           #14
58: putfield      #15
61: aload_1
62: getfield      #40
65: istore        4
67: aload_1
68: bipush        10
70: invokevirtual #37
73: new           #22
76: dup
77: invokespecial #23
80: ldc           #24
82: invokevirtual #25
85: aload_2
86: invokevirtual #25
89: ldc           #26
91: invokevirtual #25
94: invokevirtual #27
97: aload_2
98: ldc           #11
100: invokestatic  #28
103: new           #22
106: dup
107: invokespecial #23
110: ldc           #24
112: invokevirtual #25
115: aload_3
116: invokevirtual #25
119: ldc           #26
121: invokevirtual #25
124: invokevirtual #27
127: aload_3
128: ldc           #11
130: invokestatic  #28
133: new           #22
136: dup
137: invokespecial #23
140: ldc           #24
142: invokevirtual #25
145: iload         4
147: invokevirtual #29
150: ldc           #30
152: invokevirtual #25
155: iconst_1
156: invokevirtual #29
159: ldc           #24
161: invokevirtual #25
164: invokevirtual #27
167: iload         4
169: iconst_1
170: if_icmpne     177
173: iconst_1
174: goto          178
177: iconst_0
178: invokestatic  #31
181: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0859
Start line: 8100
End line: 0
Method source code: 
    public void test0859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0859");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        java.lang.String str6 = helpFormatter0.rtrim("");
        int int10 = helpFormatter0.findWrapPos(" ", (int) (byte) 10, (int) (short) 10);
        java.io.PrintWriter printWriter11 = null;
        org.apache.commons.cli.Options options14 = null;
        try {
            helpFormatter0.printUsage(printWriter11, 100, "   ", options14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #463
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: getfield      #42
48: astore_3
49: aload_1
50: ldc           #11
52: invokevirtual #12
55: astore        4
57: aload_1
58: ldc           #38
60: bipush        10
62: bipush        10
64: invokevirtual #61
67: istore        5
69: aconst_null
70: astore        6
72: aconst_null
73: astore        7
75: aload_1
76: aload         6
78: bipush        100
80: ldc           #113
82: aload         7
84: invokevirtual #81
87: ldc           #18
89: invokestatic  #19
92: goto          97
95: astore        8
97: new           #22
100: dup
101: invokespecial #23
104: ldc           #24
106: invokevirtual #25
109: iload_2
110: invokevirtual #29
113: ldc           #30
115: invokevirtual #25
118: iconst_1
119: invokevirtual #29
122: ldc           #24
124: invokevirtual #25
127: invokevirtual #27
130: iload_2
131: iconst_1
132: if_icmpne     139
135: iconst_1
136: goto          140
139: iconst_0
140: invokestatic  #31
143: new           #22
146: dup
147: invokespecial #23
150: ldc           #24
152: invokevirtual #25
155: aload_3
156: invokevirtual #25
159: ldc           #48
161: invokevirtual #25
164: invokevirtual #27
167: aload_3
168: ldc           #49
170: invokestatic  #28
173: new           #22
176: dup
177: invokespecial #23
180: ldc           #24
182: invokevirtual #25
185: aload         4
187: invokevirtual #25
190: ldc           #26
192: invokevirtual #25
195: invokevirtual #27
198: aload         4
200: ldc           #11
202: invokestatic  #28
205: new           #22
208: dup
209: invokespecial #23
212: ldc           #24
214: invokevirtual #25
217: iload         5
219: invokevirtual #29
222: ldc           #30
224: invokevirtual #25
227: iconst_m1
228: invokevirtual #29
231: ldc           #24
233: invokevirtual #25
236: invokevirtual #27
239: iload         5
241: iconst_m1
242: if_icmpne     249
245: iconst_1
246: goto          250
249: iconst_0
250: invokestatic  #31
253: return
Exception table:
from    to  target type
75    92    95   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0860
Start line: 8125
End line: 0
Method source code: 
    public void test0860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0860");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        helpFormatter0.defaultDescPad = 0;
        org.apache.commons.cli.HelpFormatter helpFormatter8 = new org.apache.commons.cli.HelpFormatter();
        java.util.Comparator comparator9 = helpFormatter8.optionComparator;
        int int10 = helpFormatter8.getLeftPadding();
        int int11 = helpFormatter8.defaultLeftPad;
        java.lang.String str13 = helpFormatter8.createPadding((int) 'a');
        org.apache.commons.cli.HelpFormatter helpFormatter14 = new org.apache.commons.cli.HelpFormatter();
        int int15 = helpFormatter14.getLeftPadding();
        helpFormatter14.defaultNewLine = "";
        helpFormatter14.defaultDescPad = '4';
        helpFormatter14.setNewLine("");
        int int25 = helpFormatter14.findWrapPos("\n", (int) ' ', 3);
        java.util.Comparator comparator26 = helpFormatter14.optionComparator;
        helpFormatter8.setOptionComparator(comparator26);
        helpFormatter0.setOptionComparator(comparator26);
        java.util.Comparator comparator29 = helpFormatter0.optionComparator;
        helpFormatter0.setNewLine("usage:");
        helpFormatter0.defaultWidth = 52;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(comparator9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "                                                                                                 " + "'", str13, "                                                                                                 ");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(comparator26);
        org.junit.Assert.assertNotNull(comparator29);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #464
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #11
36: invokevirtual #51
39: aload_1
40: ldc           #11
42: putfield      #52
45: aload_1
46: getfield      #52
49: astore_2
50: aload_1
51: iconst_0
52: putfield      #44
55: new           #8
58: dup
59: invokespecial #9
62: astore_3
63: aload_3
64: getfield      #10
67: astore        4
69: aload_3
70: invokevirtual #35
73: istore        5
75: aload_3
76: getfield      #40
79: istore        6
81: aload_3
82: bipush        97
84: invokevirtual #93
87: astore        7
89: new           #8
92: dup
93: invokespecial #9
96: astore        8
98: aload         8
100: invokevirtual #35
103: istore        9
105: aload         8
107: ldc           #11
109: putfield      #36
112: aload         8
114: bipush        52
116: putfield      #44
119: aload         8
121: ldc           #11
123: invokevirtual #88
126: aload         8
128: ldc           #33
130: bipush        32
132: iconst_3
133: invokevirtual #61
136: istore        10
138: aload         8
140: getfield      #10
143: astore        11
145: aload_3
146: aload         11
148: invokevirtual #99
151: aload_1
152: aload         11
154: invokevirtual #99
157: aload_1
158: getfield      #10
161: astore        12
163: aload_1
164: ldc           #108
166: invokevirtual #88
169: aload_1
170: bipush        52
172: putfield      #57
175: new           #22
178: dup
179: invokespecial #23
182: ldc           #24
184: invokevirtual #25
187: aload_2
188: invokevirtual #25
191: ldc           #26
193: invokevirtual #25
196: invokevirtual #27
199: aload_2
200: ldc           #11
202: invokestatic  #28
205: aload         4
207: invokestatic  #21
210: new           #22
213: dup
214: invokespecial #23
217: ldc           #24
219: invokevirtual #25
222: iload         5
224: invokevirtual #29
227: ldc           #30
229: invokevirtual #25
232: iconst_1
233: invokevirtual #29
236: ldc           #24
238: invokevirtual #25
241: invokevirtual #27
244: iload         5
246: iconst_1
247: if_icmpne     254
250: iconst_1
251: goto          255
254: iconst_0
255: invokestatic  #31
258: new           #22
261: dup
262: invokespecial #23
265: ldc           #24
267: invokevirtual #25
270: iload         6
272: invokevirtual #29
275: ldc           #30
277: invokevirtual #25
280: iconst_1
281: invokevirtual #29
284: ldc           #24
286: invokevirtual #25
289: invokevirtual #27
292: iload         6
294: iconst_1
295: if_icmpne     302
298: iconst_1
299: goto          303
302: iconst_0
303: invokestatic  #31
306: new           #22
309: dup
310: invokespecial #23
313: ldc           #24
315: invokevirtual #25
318: aload         7
320: invokevirtual #25
323: ldc           #142
325: invokevirtual #25
328: invokevirtual #27
331: aload         7
333: ldc           #14
335: invokestatic  #28
338: new           #22
341: dup
342: invokespecial #23
345: ldc           #24
347: invokevirtual #25
350: iload         9
352: invokevirtual #29
355: ldc           #30
357: invokevirtual #25
360: iconst_1
361: invokevirtual #29
364: ldc           #24
366: invokevirtual #25
369: invokevirtual #27
372: iload         9
374: iconst_1
375: if_icmpne     382
378: iconst_1
379: goto          383
382: iconst_0
383: invokestatic  #31
386: new           #22
389: dup
390: invokespecial #23
393: ldc           #24
395: invokevirtual #25
398: iload         10
400: invokevirtual #29
403: ldc           #30
405: invokevirtual #25
408: iconst_m1
409: invokevirtual #29
412: ldc           #24
414: invokevirtual #25
417: invokevirtual #27
420: iload         10
422: iconst_m1
423: if_icmpne     430
426: iconst_1
427: goto          431
430: iconst_0
431: invokestatic  #31
434: aload         11
436: invokestatic  #21
439: aload         12
441: invokestatic  #21
444: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0861
Start line: 8162
End line: 0
Method source code: 
    public void test0861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0861");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.lang.String str1 = helpFormatter0.getArgName();
        org.apache.commons.cli.Options options3 = null;
        try {
            helpFormatter0.printHelp("", options3);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: cmdLineSyntax not provided");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "arg" + "'", str1, "arg");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #465
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #83
37: astore_2
38: aconst_null
39: astore_3
40: aload_1
41: ldc           #11
43: aload_3
44: invokevirtual #240
47: ldc           #69
49: invokestatic  #19
52: goto          57
55: astore        4
57: new           #22
60: dup
61: invokespecial #23
64: ldc           #24
66: invokevirtual #25
69: aload_2
70: invokevirtual #25
73: ldc           #79
75: invokevirtual #25
78: invokevirtual #27
81: aload_2
82: ldc           #78
84: invokestatic  #28
87: return
Exception table:
from    to  target type
40    52    55   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0862
Start line: 8179
End line: 0
Method source code: 
    public void test0862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0862");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        int int5 = helpFormatter0.getWidth();
        java.lang.StringBuffer stringBuffer6 = null;
        try {
            java.lang.StringBuffer stringBuffer10 = helpFormatter0.renderWrappedText(stringBuffer6, 74, (int) (short) 0, "-");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 74 + "'", int5 == 74);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #466
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #11
36: invokevirtual #51
39: aload_1
40: ldc           #11
42: putfield      #52
45: aload_1
46: invokevirtual #66
49: istore_2
50: aconst_null
51: astore_3
52: aload_1
53: aload_3
54: bipush        74
56: iconst_0
57: ldc           #49
59: invokevirtual #123
62: astore        4
64: ldc           #18
66: invokestatic  #19
69: goto          74
72: astore        4
74: new           #22
77: dup
78: invokespecial #23
81: ldc           #24
83: invokevirtual #25
86: iload_2
87: invokevirtual #29
90: ldc           #30
92: invokevirtual #25
95: bipush        74
97: invokevirtual #29
100: ldc           #24
102: invokevirtual #25
105: invokevirtual #27
108: iload_2
109: bipush        74
111: if_icmpne     118
114: iconst_1
115: goto          119
118: iconst_0
119: invokestatic  #31
122: return
Exception table:
from    to  target type
52    69    72   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0863
Start line: 8198
End line: 0
Method source code: 
    public void test0863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0863");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.util.Comparator comparator1 = helpFormatter0.optionComparator;
        int int2 = helpFormatter0.getLeftPadding();
        int int3 = helpFormatter0.defaultLeftPad;
        java.lang.String str5 = helpFormatter0.createPadding((int) 'a');
        org.apache.commons.cli.HelpFormatter helpFormatter6 = new org.apache.commons.cli.HelpFormatter();
        int int7 = helpFormatter6.getLeftPadding();
        helpFormatter6.defaultNewLine = "";
        helpFormatter6.defaultDescPad = '4';
        helpFormatter6.setNewLine("");
        int int17 = helpFormatter6.findWrapPos("\n", (int) ' ', 3);
        java.util.Comparator comparator18 = helpFormatter6.optionComparator;
        helpFormatter0.setOptionComparator(comparator18);
        java.lang.String str20 = helpFormatter0.defaultNewLine;
        java.lang.String str21 = helpFormatter0.defaultSyntaxPrefix;
        org.junit.Assert.assertNotNull(comparator1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "                                                                                                 " + "'", str5, "                                                                                                 ");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(comparator18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "\n" + "'", str20, "\n");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "usage: " + "'", str21, "usage: ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #467
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: getfield      #10
37: astore_2
38: aload_1
39: invokevirtual #35
42: istore_3
43: aload_1
44: getfield      #40
47: istore        4
49: aload_1
50: bipush        97
52: invokevirtual #93
55: astore        5
57: new           #8
60: dup
61: invokespecial #9
64: astore        6
66: aload         6
68: invokevirtual #35
71: istore        7
73: aload         6
75: ldc           #11
77: putfield      #36
80: aload         6
82: bipush        52
84: putfield      #44
87: aload         6
89: ldc           #11
91: invokevirtual #88
94: aload         6
96: ldc           #33
98: bipush        32
100: iconst_3
101: invokevirtual #61
104: istore        8
106: aload         6
108: getfield      #10
111: astore        9
113: aload_1
114: aload         9
116: invokevirtual #99
119: aload_1
120: getfield      #36
123: astore        10
125: aload_1
126: getfield      #45
129: astore        11
131: aload_2
132: invokestatic  #21
135: new           #22
138: dup
139: invokespecial #23
142: ldc           #24
144: invokevirtual #25
147: iload_3
148: invokevirtual #29
151: ldc           #30
153: invokevirtual #25
156: iconst_1
157: invokevirtual #29
160: ldc           #24
162: invokevirtual #25
165: invokevirtual #27
168: iload_3
169: iconst_1
170: if_icmpne     177
173: iconst_1
174: goto          178
177: iconst_0
178: invokestatic  #31
181: new           #22
184: dup
185: invokespecial #23
188: ldc           #24
190: invokevirtual #25
193: iload         4
195: invokevirtual #29
198: ldc           #30
200: invokevirtual #25
203: iconst_1
204: invokevirtual #29
207: ldc           #24
209: invokevirtual #25
212: invokevirtual #27
215: iload         4
217: iconst_1
218: if_icmpne     225
221: iconst_1
222: goto          226
225: iconst_0
226: invokestatic  #31
229: new           #22
232: dup
233: invokespecial #23
236: ldc           #24
238: invokevirtual #25
241: aload         5
243: invokevirtual #25
246: ldc           #142
248: invokevirtual #25
251: invokevirtual #27
254: aload         5
256: ldc           #14
258: invokestatic  #28
261: new           #22
264: dup
265: invokespecial #23
268: ldc           #24
270: invokevirtual #25
273: iload         7
275: invokevirtual #29
278: ldc           #30
280: invokevirtual #25
283: iconst_1
284: invokevirtual #29
287: ldc           #24
289: invokevirtual #25
292: invokevirtual #27
295: iload         7
297: iconst_1
298: if_icmpne     305
301: iconst_1
302: goto          306
305: iconst_0
306: invokestatic  #31
309: new           #22
312: dup
313: invokespecial #23
316: ldc           #24
318: invokevirtual #25
321: iload         8
323: invokevirtual #29
326: ldc           #30
328: invokevirtual #25
331: iconst_m1
332: invokevirtual #29
335: ldc           #24
337: invokevirtual #25
340: invokevirtual #27
343: iload         8
345: iconst_m1
346: if_icmpne     353
349: iconst_1
350: goto          354
353: iconst_0
354: invokestatic  #31
357: aload         9
359: invokestatic  #21
362: new           #22
365: dup
366: invokespecial #23
369: ldc           #24
371: invokevirtual #25
374: aload         10
376: invokevirtual #25
379: ldc           #32
381: invokevirtual #25
384: invokevirtual #27
387: aload         10
389: ldc           #33
391: invokestatic  #28
394: new           #22
397: dup
398: invokespecial #23
401: ldc           #24
403: invokevirtual #25
406: aload         11
408: invokevirtual #25
411: ldc           #104
413: invokevirtual #25
416: invokevirtual #27
419: aload         11
421: ldc           #46
423: invokestatic  #28
426: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0864
Start line: 8228
End line: 0
Method source code: 
    public void test0864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0864");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        org.apache.commons.cli.HelpFormatter helpFormatter5 = new org.apache.commons.cli.HelpFormatter();
        int int6 = helpFormatter5.getLeftPadding();
        helpFormatter5.defaultNewLine = "";
        java.lang.String str9 = helpFormatter5.defaultOptPrefix;
        java.lang.String str11 = helpFormatter5.rtrim("");
        int int12 = helpFormatter5.getDescPadding();
        helpFormatter5.defaultWidth = 0;
        java.util.Comparator comparator15 = helpFormatter5.optionComparator;
        helpFormatter0.setOptionComparator(comparator15);
        int int17 = helpFormatter0.getLeftPadding();
        helpFormatter0.setLongOptPrefix("                                                                                                 ");
        java.lang.String str20 = helpFormatter0.getOptPrefix();
        helpFormatter0.defaultSyntaxPrefix = " ";
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-" + "'", str9, "-");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 3 + "'", int12 == 3);
        org.junit.Assert.assertNotNull(comparator15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "-" + "'", str20, "-");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #468
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: getfield      #42
48: astore_3
49: new           #8
52: dup
53: invokespecial #9
56: astore        4
58: aload         4
60: invokevirtual #35
63: istore        5
65: aload         4
67: ldc           #11
69: putfield      #36
72: aload         4
74: getfield      #42
77: astore        6
79: aload         4
81: ldc           #11
83: invokevirtual #12
86: astore        7
88: aload         4
90: invokevirtual #13
93: istore        8
95: aload         4
97: iconst_0
98: putfield      #57
101: aload         4
103: getfield      #10
106: astore        9
108: aload_1
109: aload         9
111: invokevirtual #99
114: aload_1
115: invokevirtual #35
118: istore        10
120: aload_1
121: ldc           #14
123: invokevirtual #43
126: aload_1
127: invokevirtual #73
130: astore        11
132: aload_1
133: ldc           #38
135: putfield      #45
138: new           #22
141: dup
142: invokespecial #23
145: ldc           #24
147: invokevirtual #25
150: iload_2
151: invokevirtual #29
154: ldc           #30
156: invokevirtual #25
159: iconst_1
160: invokevirtual #29
163: ldc           #24
165: invokevirtual #25
168: invokevirtual #27
171: iload_2
172: iconst_1
173: if_icmpne     180
176: iconst_1
177: goto          181
180: iconst_0
181: invokestatic  #31
184: new           #22
187: dup
188: invokespecial #23
191: ldc           #24
193: invokevirtual #25
196: aload_3
197: invokevirtual #25
200: ldc           #48
202: invokevirtual #25
205: invokevirtual #27
208: aload_3
209: ldc           #49
211: invokestatic  #28
214: new           #22
217: dup
218: invokespecial #23
221: ldc           #24
223: invokevirtual #25
226: iload         5
228: invokevirtual #29
231: ldc           #30
233: invokevirtual #25
236: iconst_1
237: invokevirtual #29
240: ldc           #24
242: invokevirtual #25
245: invokevirtual #27
248: iload         5
250: iconst_1
251: if_icmpne     258
254: iconst_1
255: goto          259
258: iconst_0
259: invokestatic  #31
262: new           #22
265: dup
266: invokespecial #23
269: ldc           #24
271: invokevirtual #25
274: aload         6
276: invokevirtual #25
279: ldc           #48
281: invokevirtual #25
284: invokevirtual #27
287: aload         6
289: ldc           #49
291: invokestatic  #28
294: new           #22
297: dup
298: invokespecial #23
301: ldc           #24
303: invokevirtual #25
306: aload         7
308: invokevirtual #25
311: ldc           #26
313: invokevirtual #25
316: invokevirtual #27
319: aload         7
321: ldc           #11
323: invokestatic  #28
326: new           #22
329: dup
330: invokespecial #23
333: ldc           #24
335: invokevirtual #25
338: iload         8
340: invokevirtual #29
343: ldc           #30
345: invokevirtual #25
348: iconst_3
349: invokevirtual #29
352: ldc           #24
354: invokevirtual #25
357: invokevirtual #27
360: iload         8
362: iconst_3
363: if_icmpne     370
366: iconst_1
367: goto          371
370: iconst_0
371: invokestatic  #31
374: aload         9
376: invokestatic  #21
379: new           #22
382: dup
383: invokespecial #23
386: ldc           #24
388: invokevirtual #25
391: iload         10
393: invokevirtual #29
396: ldc           #30
398: invokevirtual #25
401: iconst_1
402: invokevirtual #29
405: ldc           #24
407: invokevirtual #25
410: invokevirtual #27
413: iload         10
415: iconst_1
416: if_icmpne     423
419: iconst_1
420: goto          424
423: iconst_0
424: invokestatic  #31
427: new           #22
430: dup
431: invokespecial #23
434: ldc           #24
436: invokevirtual #25
439: aload         11
441: invokevirtual #25
444: ldc           #48
446: invokevirtual #25
449: invokevirtual #27
452: aload         11
454: ldc           #49
456: invokestatic  #28
459: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0865
Start line: 8260
End line: 0
Method source code: 
    public void test0865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0865");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.defaultDescPad = '4';
        helpFormatter0.setNewLine("");
        helpFormatter0.setLongOptPrefix(" ");
        java.lang.String str10 = helpFormatter0.defaultSyntaxPrefix;
        helpFormatter0.setArgName("");
        java.lang.String str13 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setNewLine("usage:");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "usage: " + "'", str10, "usage: ");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "-" + "'", str13, "-");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #469
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: bipush        52
47: putfield      #44
50: aload_1
51: ldc           #11
53: invokevirtual #88
56: aload_1
57: ldc           #38
59: invokevirtual #43
62: aload_1
63: getfield      #45
66: astore_3
67: aload_1
68: ldc           #11
70: invokevirtual #59
73: aload_1
74: getfield      #42
77: astore        4
79: aload_1
80: ldc           #108
82: invokevirtual #88
85: new           #22
88: dup
89: invokespecial #23
92: ldc           #24
94: invokevirtual #25
97: iload_2
98: invokevirtual #29
101: ldc           #30
103: invokevirtual #25
106: iconst_1
107: invokevirtual #29
110: ldc           #24
112: invokevirtual #25
115: invokevirtual #27
118: iload_2
119: iconst_1
120: if_icmpne     127
123: iconst_1
124: goto          128
127: iconst_0
128: invokestatic  #31
131: new           #22
134: dup
135: invokespecial #23
138: ldc           #24
140: invokevirtual #25
143: aload_3
144: invokevirtual #25
147: ldc           #104
149: invokevirtual #25
152: invokevirtual #27
155: aload_3
156: ldc           #46
158: invokestatic  #28
161: new           #22
164: dup
165: invokespecial #23
168: ldc           #24
170: invokevirtual #25
173: aload         4
175: invokevirtual #25
178: ldc           #48
180: invokevirtual #25
183: invokevirtual #27
186: aload         4
188: ldc           #49
190: invokestatic  #28
193: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0866
Start line: 8279
End line: 0
Method source code: 
    public void test0866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0866");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.defaultDescPad = '4';
        helpFormatter0.setNewLine("");
        helpFormatter0.defaultWidth = 0;
        java.lang.String str10 = helpFormatter0.defaultNewLine;
        java.io.PrintWriter printWriter11 = null;
        try {
            helpFormatter0.printWrapped(printWriter11, 1, "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #470
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: bipush        52
47: putfield      #44
50: aload_1
51: ldc           #11
53: invokevirtual #88
56: aload_1
57: iconst_0
58: putfield      #57
61: aload_1
62: getfield      #36
65: astore_3
66: aconst_null
67: astore        4
69: aload_1
70: aload         4
72: iconst_1
73: ldc           #65
75: invokevirtual #180
78: ldc           #18
80: invokestatic  #19
83: goto          88
86: astore        5
88: new           #22
91: dup
92: invokespecial #23
95: ldc           #24
97: invokevirtual #25
100: iload_2
101: invokevirtual #29
104: ldc           #30
106: invokevirtual #25
109: iconst_1
110: invokevirtual #29
113: ldc           #24
115: invokevirtual #25
118: invokevirtual #27
121: iload_2
122: iconst_1
123: if_icmpne     130
126: iconst_1
127: goto          131
130: iconst_0
131: invokestatic  #31
134: new           #22
137: dup
138: invokespecial #23
141: ldc           #24
143: invokevirtual #25
146: aload_3
147: invokevirtual #25
150: ldc           #26
152: invokevirtual #25
155: invokevirtual #27
158: aload_3
159: ldc           #11
161: invokestatic  #28
164: return
Exception table:
from    to  target type
69    83    86   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0867
Start line: 8302
End line: 0
Method source code: 
    public void test0867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0867");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setLongOptPrefix(" ");
        helpFormatter0.defaultDescPad = (short) 10;
        helpFormatter0.setLongOptPrefix("--");
        java.lang.String str11 = helpFormatter0.getLongOptSeparator();
        helpFormatter0.setNewLine("usage: ");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + " " + "'", str11, " ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #471
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: getfield      #42
48: astore_3
49: aload_1
50: ldc           #38
52: invokevirtual #43
55: aload_1
56: bipush        10
58: putfield      #44
61: aload_1
62: ldc           #63
64: invokevirtual #43
67: aload_1
68: invokevirtual #72
71: astore        4
73: aload_1
74: ldc           #46
76: invokevirtual #88
79: new           #22
82: dup
83: invokespecial #23
86: ldc           #24
88: invokevirtual #25
91: iload_2
92: invokevirtual #29
95: ldc           #30
97: invokevirtual #25
100: iconst_1
101: invokevirtual #29
104: ldc           #24
106: invokevirtual #25
109: invokevirtual #27
112: iload_2
113: iconst_1
114: if_icmpne     121
117: iconst_1
118: goto          122
121: iconst_0
122: invokestatic  #31
125: new           #22
128: dup
129: invokespecial #23
132: ldc           #24
134: invokevirtual #25
137: aload_3
138: invokevirtual #25
141: ldc           #48
143: invokevirtual #25
146: invokevirtual #27
149: aload_3
150: ldc           #49
152: invokestatic  #28
155: new           #22
158: dup
159: invokespecial #23
162: ldc           #24
164: invokevirtual #25
167: aload         4
169: invokevirtual #25
172: ldc           #75
174: invokevirtual #25
177: invokevirtual #27
180: aload         4
182: ldc           #38
184: invokestatic  #28
187: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0868
Start line: 8320
End line: 0
Method source code: 
    public void test0868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0868");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.getLongOptPrefix();
        helpFormatter0.defaultLeftPad = 3;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #472
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #11
36: invokevirtual #51
39: aload_1
40: ldc           #11
42: putfield      #52
45: aload_1
46: invokevirtual #53
49: astore_2
50: aload_1
51: iconst_3
52: putfield      #40
55: new           #22
58: dup
59: invokespecial #23
62: ldc           #24
64: invokevirtual #25
67: aload_2
68: invokevirtual #25
71: ldc           #26
73: invokevirtual #25
76: invokevirtual #27
79: aload_2
80: ldc           #11
82: invokestatic  #28
85: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0869
Start line: 8332
End line: 0
Method source code: 
    public void test0869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0869");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.getArgName();
        helpFormatter0.defaultNewLine = "\n";
        helpFormatter0.defaultLeftPad = (byte) -1;
        helpFormatter0.setLongOptSeparator("");
        org.apache.commons.cli.HelpFormatter helpFormatter9 = new org.apache.commons.cli.HelpFormatter();
        int int10 = helpFormatter9.getLeftPadding();
        helpFormatter9.defaultNewLine = "";
        helpFormatter9.setDescPadding(10);
        helpFormatter9.setSyntaxPrefix(" ");
        java.util.Comparator comparator17 = helpFormatter9.getOptionComparator();
        helpFormatter0.setOptionComparator(comparator17);
        java.lang.String str19 = helpFormatter0.getLongOptPrefix();
        java.lang.String str20 = helpFormatter0.getOptPrefix();
        java.lang.Class<?> wildcardClass21 = helpFormatter0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "arg" + "'", str2, "arg");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(comparator17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "--" + "'", str19, "--");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "-" + "'", str20, "-");
        org.junit.Assert.assertNotNull(wildcardClass21);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #473
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: invokevirtual #83
42: astore_3
43: aload_1
44: ldc           #33
46: putfield      #36
49: aload_1
50: iconst_m1
51: putfield      #40
54: aload_1
55: ldc           #11
57: invokevirtual #74
60: new           #8
63: dup
64: invokespecial #9
67: astore        4
69: aload         4
71: invokevirtual #35
74: istore        5
76: aload         4
78: ldc           #11
80: putfield      #36
83: aload         4
85: bipush        10
87: invokevirtual #37
90: aload         4
92: ldc           #38
94: invokevirtual #39
97: aload         4
99: invokevirtual #58
102: astore        6
104: aload_1
105: aload         6
107: invokevirtual #99
110: aload_1
111: invokevirtual #53
114: astore        7
116: aload_1
117: invokevirtual #73
120: astore        8
122: aload_1
123: invokevirtual #154
126: astore        9
128: new           #22
131: dup
132: invokespecial #23
135: ldc           #24
137: invokevirtual #25
140: iload_2
141: invokevirtual #29
144: ldc           #30
146: invokevirtual #25
149: iconst_1
150: invokevirtual #29
153: ldc           #24
155: invokevirtual #25
158: invokevirtual #27
161: iload_2
162: iconst_1
163: if_icmpne     170
166: iconst_1
167: goto          171
170: iconst_0
171: invokestatic  #31
174: new           #22
177: dup
178: invokespecial #23
181: ldc           #24
183: invokevirtual #25
186: aload_3
187: invokevirtual #25
190: ldc           #79
192: invokevirtual #25
195: invokevirtual #27
198: aload_3
199: ldc           #78
201: invokestatic  #28
204: new           #22
207: dup
208: invokespecial #23
211: ldc           #24
213: invokevirtual #25
216: iload         5
218: invokevirtual #29
221: ldc           #30
223: invokevirtual #25
226: iconst_1
227: invokevirtual #29
230: ldc           #24
232: invokevirtual #25
235: invokevirtual #27
238: iload         5
240: iconst_1
241: if_icmpne     248
244: iconst_1
245: goto          249
248: iconst_0
249: invokestatic  #31
252: aload         6
254: invokestatic  #21
257: new           #22
260: dup
261: invokespecial #23
264: ldc           #24
266: invokevirtual #25
269: aload         7
271: invokevirtual #25
274: ldc           #62
276: invokevirtual #25
279: invokevirtual #27
282: aload         7
284: ldc           #63
286: invokestatic  #28
289: new           #22
292: dup
293: invokespecial #23
296: ldc           #24
298: invokevirtual #25
301: aload         8
303: invokevirtual #25
306: ldc           #48
308: invokevirtual #25
311: invokevirtual #27
314: aload         8
316: ldc           #49
318: invokestatic  #28
321: aload         9
323: invokestatic  #21
326: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0870
Start line: 8361
End line: 0
Method source code: 
    public void test0870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0870");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        java.lang.String str6 = helpFormatter0.defaultNewLine;
        helpFormatter0.setDescPadding(10);
        java.lang.String str9 = helpFormatter0.defaultLongOptPrefix;
        java.io.PrintWriter printWriter10 = null;
        org.apache.commons.cli.Options options12 = null;
        try {
            helpFormatter0.printOptions(printWriter10, 0, options12, (int) '4', 3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "--" + "'", str9, "--");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #474
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: bipush        10
47: invokevirtual #37
50: aload_1
51: getfield      #36
54: astore_3
55: aload_1
56: bipush        10
58: invokevirtual #37
61: aload_1
62: getfield      #52
65: astore        4
67: aconst_null
68: astore        5
70: aconst_null
71: astore        6
73: aload_1
74: aload         5
76: iconst_0
77: aload         6
79: bipush        52
81: iconst_3
82: invokevirtual #17
85: ldc           #18
87: invokestatic  #19
90: goto          95
93: astore        7
95: new           #22
98: dup
99: invokespecial #23
102: ldc           #24
104: invokevirtual #25
107: iload_2
108: invokevirtual #29
111: ldc           #30
113: invokevirtual #25
116: iconst_1
117: invokevirtual #29
120: ldc           #24
122: invokevirtual #25
125: invokevirtual #27
128: iload_2
129: iconst_1
130: if_icmpne     137
133: iconst_1
134: goto          138
137: iconst_0
138: invokestatic  #31
141: new           #22
144: dup
145: invokespecial #23
148: ldc           #24
150: invokevirtual #25
153: aload_3
154: invokevirtual #25
157: ldc           #26
159: invokevirtual #25
162: invokevirtual #27
165: aload_3
166: ldc           #11
168: invokestatic  #28
171: new           #22
174: dup
175: invokespecial #23
178: ldc           #24
180: invokevirtual #25
183: aload         4
185: invokevirtual #25
188: ldc           #62
190: invokevirtual #25
193: invokevirtual #27
196: aload         4
198: ldc           #63
200: invokestatic  #28
203: return
Exception table:
from    to  target type
73    90    93   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0871
Start line: 8386
End line: 0
Method source code: 
    public void test0871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0871");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        java.lang.String str6 = helpFormatter0.rtrim("");
        java.lang.String str8 = helpFormatter0.rtrim("-");
        helpFormatter0.defaultWidth = (short) -1;
        java.lang.String str11 = helpFormatter0.getSyntaxPrefix();
        java.lang.String str12 = helpFormatter0.getLongOptPrefix();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "-" + "'", str8, "-");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "usage: " + "'", str11, "usage: ");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "--" + "'", str12, "--");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #475
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: getfield      #42
48: astore_3
49: aload_1
50: ldc           #11
52: invokevirtual #12
55: astore        4
57: aload_1
58: ldc           #49
60: invokevirtual #12
63: astore        5
65: aload_1
66: iconst_m1
67: putfield      #57
70: aload_1
71: invokevirtual #89
74: astore        6
76: aload_1
77: invokevirtual #53
80: astore        7
82: new           #22
85: dup
86: invokespecial #23
89: ldc           #24
91: invokevirtual #25
94: iload_2
95: invokevirtual #29
98: ldc           #30
100: invokevirtual #25
103: iconst_1
104: invokevirtual #29
107: ldc           #24
109: invokevirtual #25
112: invokevirtual #27
115: iload_2
116: iconst_1
117: if_icmpne     124
120: iconst_1
121: goto          125
124: iconst_0
125: invokestatic  #31
128: new           #22
131: dup
132: invokespecial #23
135: ldc           #24
137: invokevirtual #25
140: aload_3
141: invokevirtual #25
144: ldc           #48
146: invokevirtual #25
149: invokevirtual #27
152: aload_3
153: ldc           #49
155: invokestatic  #28
158: new           #22
161: dup
162: invokespecial #23
165: ldc           #24
167: invokevirtual #25
170: aload         4
172: invokevirtual #25
175: ldc           #26
177: invokevirtual #25
180: invokevirtual #27
183: aload         4
185: ldc           #11
187: invokestatic  #28
190: new           #22
193: dup
194: invokespecial #23
197: ldc           #24
199: invokevirtual #25
202: aload         5
204: invokevirtual #25
207: ldc           #48
209: invokevirtual #25
212: invokevirtual #27
215: aload         5
217: ldc           #49
219: invokestatic  #28
222: new           #22
225: dup
226: invokespecial #23
229: ldc           #24
231: invokevirtual #25
234: aload         6
236: invokevirtual #25
239: ldc           #104
241: invokevirtual #25
244: invokevirtual #27
247: aload         6
249: ldc           #46
251: invokestatic  #28
254: new           #22
257: dup
258: invokespecial #23
261: ldc           #24
263: invokevirtual #25
266: aload         7
268: invokevirtual #25
271: ldc           #62
273: invokevirtual #25
276: invokevirtual #27
279: aload         7
281: ldc           #63
283: invokestatic  #28
286: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0872
Start line: 8407
End line: 0
Method source code: 
    public void test0872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0872");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setLongOptPrefix(" ");
        java.lang.String str7 = helpFormatter0.getLongOptPrefix();
        helpFormatter0.setNewLine("usage: ");
        helpFormatter0.setOptPrefix(" ");
        helpFormatter0.defaultArgName = "                                ";
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + " " + "'", str7, " ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #476
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: getfield      #42
48: astore_3
49: aload_1
50: ldc           #38
52: invokevirtual #43
55: aload_1
56: invokevirtual #53
59: astore        4
61: aload_1
62: ldc           #46
64: invokevirtual #88
67: aload_1
68: ldc           #38
70: invokevirtual #51
73: aload_1
74: ldc           #95
76: putfield      #15
79: new           #22
82: dup
83: invokespecial #23
86: ldc           #24
88: invokevirtual #25
91: iload_2
92: invokevirtual #29
95: ldc           #30
97: invokevirtual #25
100: iconst_1
101: invokevirtual #29
104: ldc           #24
106: invokevirtual #25
109: invokevirtual #27
112: iload_2
113: iconst_1
114: if_icmpne     121
117: iconst_1
118: goto          122
121: iconst_0
122: invokestatic  #31
125: new           #22
128: dup
129: invokespecial #23
132: ldc           #24
134: invokevirtual #25
137: aload_3
138: invokevirtual #25
141: ldc           #48
143: invokevirtual #25
146: invokevirtual #27
149: aload_3
150: ldc           #49
152: invokestatic  #28
155: new           #22
158: dup
159: invokespecial #23
162: ldc           #24
164: invokevirtual #25
167: aload         4
169: invokevirtual #25
172: ldc           #75
174: invokevirtual #25
177: invokevirtual #27
180: aload         4
182: ldc           #38
184: invokestatic  #28
187: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0873
Start line: 8425
End line: 0
Method source code: 
    public void test0873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0873");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.getArgName();
        helpFormatter0.setArgName("arg");
        helpFormatter0.setDescPadding((int) '#');
        helpFormatter0.defaultNewLine = "                                ";
        helpFormatter0.defaultSyntaxPrefix = "arg";
        java.lang.String str13 = helpFormatter0.getLongOptSeparator();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "arg" + "'", str4, "arg");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + " " + "'", str13, " ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #477
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: invokevirtual #83
48: astore_3
49: aload_1
50: ldc           #78
52: invokevirtual #59
55: aload_1
56: bipush        35
58: invokevirtual #37
61: aload_1
62: ldc           #95
64: putfield      #36
67: aload_1
68: ldc           #78
70: putfield      #45
73: aload_1
74: invokevirtual #72
77: astore        4
79: new           #22
82: dup
83: invokespecial #23
86: ldc           #24
88: invokevirtual #25
91: iload_2
92: invokevirtual #29
95: ldc           #30
97: invokevirtual #25
100: iconst_1
101: invokevirtual #29
104: ldc           #24
106: invokevirtual #25
109: invokevirtual #27
112: iload_2
113: iconst_1
114: if_icmpne     121
117: iconst_1
118: goto          122
121: iconst_0
122: invokestatic  #31
125: new           #22
128: dup
129: invokespecial #23
132: ldc           #24
134: invokevirtual #25
137: aload_3
138: invokevirtual #25
141: ldc           #79
143: invokevirtual #25
146: invokevirtual #27
149: aload_3
150: ldc           #78
152: invokestatic  #28
155: new           #22
158: dup
159: invokespecial #23
162: ldc           #24
164: invokevirtual #25
167: aload         4
169: invokevirtual #25
172: ldc           #75
174: invokevirtual #25
177: invokevirtual #27
180: aload         4
182: ldc           #38
184: invokestatic  #28
187: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0874
Start line: 8443
End line: 0
Method source code: 
    public void test0874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0874");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        java.lang.String str3 = helpFormatter0.defaultNewLine;
        helpFormatter0.setArgName("   ");
        helpFormatter0.setLeftPadding((int) (byte) 1);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\n" + "'", str3, "\n");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #478
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #11
36: invokevirtual #51
39: aload_1
40: getfield      #36
43: astore_2
44: aload_1
45: ldc           #113
47: invokevirtual #59
50: aload_1
51: iconst_1
52: invokevirtual #55
55: new           #22
58: dup
59: invokespecial #23
62: ldc           #24
64: invokevirtual #25
67: aload_2
68: invokevirtual #25
71: ldc           #32
73: invokevirtual #25
76: invokevirtual #27
79: aload_2
80: ldc           #33
82: invokestatic  #28
85: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0875
Start line: 8455
End line: 0
Method source code: 
    public void test0875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0875");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.getArgName();
        helpFormatter0.setArgName("arg");
        helpFormatter0.setDescPadding((int) '#');
        java.lang.String str9 = helpFormatter0.getSyntaxPrefix();
        java.util.Comparator comparator10 = helpFormatter0.getOptionComparator();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "arg" + "'", str4, "arg");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "usage: " + "'", str9, "usage: ");
        org.junit.Assert.assertNotNull(comparator10);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #479
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: invokevirtual #83
48: astore_3
49: aload_1
50: ldc           #78
52: invokevirtual #59
55: aload_1
56: bipush        35
58: invokevirtual #37
61: aload_1
62: invokevirtual #89
65: astore        4
67: aload_1
68: invokevirtual #58
71: astore        5
73: new           #22
76: dup
77: invokespecial #23
80: ldc           #24
82: invokevirtual #25
85: iload_2
86: invokevirtual #29
89: ldc           #30
91: invokevirtual #25
94: iconst_1
95: invokevirtual #29
98: ldc           #24
100: invokevirtual #25
103: invokevirtual #27
106: iload_2
107: iconst_1
108: if_icmpne     115
111: iconst_1
112: goto          116
115: iconst_0
116: invokestatic  #31
119: new           #22
122: dup
123: invokespecial #23
126: ldc           #24
128: invokevirtual #25
131: aload_3
132: invokevirtual #25
135: ldc           #79
137: invokevirtual #25
140: invokevirtual #27
143: aload_3
144: ldc           #78
146: invokestatic  #28
149: new           #22
152: dup
153: invokespecial #23
156: ldc           #24
158: invokevirtual #25
161: aload         4
163: invokevirtual #25
166: ldc           #104
168: invokevirtual #25
171: invokevirtual #27
174: aload         4
176: ldc           #46
178: invokestatic  #28
181: aload         5
183: invokestatic  #21
186: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0876
Start line: 8473
End line: 0
Method source code: 
    public void test0876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0876");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.defaultDescPad = '4';
        helpFormatter0.setNewLine("");
        helpFormatter0.setLongOptPrefix(" ");
        java.lang.String str10 = helpFormatter0.defaultSyntaxPrefix;
        helpFormatter0.setArgName("");
        helpFormatter0.setLongOptSeparator("--");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "usage: " + "'", str10, "usage: ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #480
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: bipush        52
47: putfield      #44
50: aload_1
51: ldc           #11
53: invokevirtual #88
56: aload_1
57: ldc           #38
59: invokevirtual #43
62: aload_1
63: getfield      #45
66: astore_3
67: aload_1
68: ldc           #11
70: invokevirtual #59
73: aload_1
74: ldc           #63
76: invokevirtual #74
79: new           #22
82: dup
83: invokespecial #23
86: ldc           #24
88: invokevirtual #25
91: iload_2
92: invokevirtual #29
95: ldc           #30
97: invokevirtual #25
100: iconst_1
101: invokevirtual #29
104: ldc           #24
106: invokevirtual #25
109: invokevirtual #27
112: iload_2
113: iconst_1
114: if_icmpne     121
117: iconst_1
118: goto          122
121: iconst_0
122: invokestatic  #31
125: new           #22
128: dup
129: invokespecial #23
132: ldc           #24
134: invokevirtual #25
137: aload_3
138: invokevirtual #25
141: ldc           #104
143: invokevirtual #25
146: invokevirtual #27
149: aload_3
150: ldc           #46
152: invokestatic  #28
155: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0877
Start line: 8490
End line: 0
Method source code: 
    public void test0877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0877");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.lang.String str1 = helpFormatter0.defaultSyntaxPrefix;
        helpFormatter0.defaultLongOptPrefix = "";
        int int4 = helpFormatter0.defaultLeftPad;
        helpFormatter0.setNewLine("arg");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "usage: " + "'", str1, "usage: ");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #481
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: getfield      #45
37: astore_2
38: aload_1
39: ldc           #11
41: putfield      #52
44: aload_1
45: getfield      #40
48: istore_3
49: aload_1
50: ldc           #78
52: invokevirtual #88
55: new           #22
58: dup
59: invokespecial #23
62: ldc           #24
64: invokevirtual #25
67: aload_2
68: invokevirtual #25
71: ldc           #104
73: invokevirtual #25
76: invokevirtual #27
79: aload_2
80: ldc           #46
82: invokestatic  #28
85: new           #22
88: dup
89: invokespecial #23
92: ldc           #24
94: invokevirtual #25
97: iload_3
98: invokevirtual #29
101: ldc           #30
103: invokevirtual #25
106: iconst_1
107: invokevirtual #29
110: ldc           #24
112: invokevirtual #25
115: invokevirtual #27
118: iload_3
119: iconst_1
120: if_icmpne     127
123: iconst_1
124: goto          128
127: iconst_0
128: invokestatic  #31
131: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0878
Start line: 8503
End line: 0
Method source code: 
    public void test0878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0878");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.util.Comparator comparator1 = helpFormatter0.optionComparator;
        int int2 = helpFormatter0.getLeftPadding();
        int int3 = helpFormatter0.defaultLeftPad;
        helpFormatter0.defaultOptPrefix = "";
        java.lang.String str6 = helpFormatter0.defaultSyntaxPrefix;
        helpFormatter0.setLongOptPrefix("                                                                                                    ");
        org.junit.Assert.assertNotNull(comparator1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "usage: " + "'", str6, "usage: ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #482
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: getfield      #10
37: astore_2
38: aload_1
39: invokevirtual #35
42: istore_3
43: aload_1
44: getfield      #40
47: istore        4
49: aload_1
50: ldc           #11
52: putfield      #42
55: aload_1
56: getfield      #45
59: astore        5
61: aload_1
62: ldc           #118
64: invokevirtual #43
67: aload_2
68: invokestatic  #21
71: new           #22
74: dup
75: invokespecial #23
78: ldc           #24
80: invokevirtual #25
83: iload_3
84: invokevirtual #29
87: ldc           #30
89: invokevirtual #25
92: iconst_1
93: invokevirtual #29
96: ldc           #24
98: invokevirtual #25
101: invokevirtual #27
104: iload_3
105: iconst_1
106: if_icmpne     113
109: iconst_1
110: goto          114
113: iconst_0
114: invokestatic  #31
117: new           #22
120: dup
121: invokespecial #23
124: ldc           #24
126: invokevirtual #25
129: iload         4
131: invokevirtual #29
134: ldc           #30
136: invokevirtual #25
139: iconst_1
140: invokevirtual #29
143: ldc           #24
145: invokevirtual #25
148: invokevirtual #27
151: iload         4
153: iconst_1
154: if_icmpne     161
157: iconst_1
158: goto          162
161: iconst_0
162: invokestatic  #31
165: new           #22
168: dup
169: invokespecial #23
172: ldc           #24
174: invokevirtual #25
177: aload         5
179: invokevirtual #25
182: ldc           #104
184: invokevirtual #25
187: invokevirtual #27
190: aload         5
192: ldc           #46
194: invokestatic  #28
197: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0879
Start line: 8520
End line: 0
Method source code: 
    public void test0879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0879");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultOptPrefix;
        java.lang.String str6 = helpFormatter0.defaultNewLine;
        java.lang.String str7 = helpFormatter0.getLongOptSeparator();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\n" + "'", str6, "\n");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + " " + "'", str7, " ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #483
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #11
36: invokevirtual #51
39: aload_1
40: ldc           #11
42: putfield      #52
45: aload_1
46: getfield      #42
49: astore_2
50: aload_1
51: getfield      #36
54: astore_3
55: aload_1
56: invokevirtual #72
59: astore        4
61: new           #22
64: dup
65: invokespecial #23
68: ldc           #24
70: invokevirtual #25
73: aload_2
74: invokevirtual #25
77: ldc           #26
79: invokevirtual #25
82: invokevirtual #27
85: aload_2
86: ldc           #11
88: invokestatic  #28
91: new           #22
94: dup
95: invokespecial #23
98: ldc           #24
100: invokevirtual #25
103: aload_3
104: invokevirtual #25
107: ldc           #32
109: invokevirtual #25
112: invokevirtual #27
115: aload_3
116: ldc           #33
118: invokestatic  #28
121: new           #22
124: dup
125: invokespecial #23
128: ldc           #24
130: invokevirtual #25
133: aload         4
135: invokevirtual #25
138: ldc           #75
140: invokevirtual #25
143: invokevirtual #27
146: aload         4
148: ldc           #38
150: invokestatic  #28
153: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0880
Start line: 8535
End line: 0
Method source code: 
    public void test0880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0880");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.util.Comparator comparator1 = helpFormatter0.optionComparator;
        int int2 = helpFormatter0.defaultWidth;
        helpFormatter0.defaultOptPrefix = "--";
        helpFormatter0.setLongOptSeparator(" ");
        org.junit.Assert.assertNotNull(comparator1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 74 + "'", int2 == 74);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #484
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: getfield      #10
37: astore_2
38: aload_1
39: getfield      #57
42: istore_3
43: aload_1
44: ldc           #63
46: putfield      #42
49: aload_1
50: ldc           #38
52: invokevirtual #74
55: aload_2
56: invokestatic  #21
59: new           #22
62: dup
63: invokespecial #23
66: ldc           #24
68: invokevirtual #25
71: iload_3
72: invokevirtual #29
75: ldc           #30
77: invokevirtual #25
80: bipush        74
82: invokevirtual #29
85: ldc           #24
87: invokevirtual #25
90: invokevirtual #27
93: iload_3
94: bipush        74
96: if_icmpne     103
99: iconst_1
100: goto          104
103: iconst_0
104: invokestatic  #31
107: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0881
Start line: 8548
End line: 0
Method source code: 
    public void test0881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0881");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        int int4 = helpFormatter0.defaultWidth;
        java.lang.String str5 = helpFormatter0.getNewLine();
        java.lang.String str6 = helpFormatter0.getLongOptSeparator();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 74 + "'", int4 == 74);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + " " + "'", str6, " ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #485
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: getfield      #57
48: istore_3
49: aload_1
50: invokevirtual #16
53: astore        4
55: aload_1
56: invokevirtual #72
59: astore        5
61: new           #22
64: dup
65: invokespecial #23
68: ldc           #24
70: invokevirtual #25
73: iload_2
74: invokevirtual #29
77: ldc           #30
79: invokevirtual #25
82: iconst_1
83: invokevirtual #29
86: ldc           #24
88: invokevirtual #25
91: invokevirtual #27
94: iload_2
95: iconst_1
96: if_icmpne     103
99: iconst_1
100: goto          104
103: iconst_0
104: invokestatic  #31
107: new           #22
110: dup
111: invokespecial #23
114: ldc           #24
116: invokevirtual #25
119: iload_3
120: invokevirtual #29
123: ldc           #30
125: invokevirtual #25
128: bipush        74
130: invokevirtual #29
133: ldc           #24
135: invokevirtual #25
138: invokevirtual #27
141: iload_3
142: bipush        74
144: if_icmpne     151
147: iconst_1
148: goto          152
151: iconst_0
152: invokestatic  #31
155: new           #22
158: dup
159: invokespecial #23
162: ldc           #24
164: invokevirtual #25
167: aload         4
169: invokevirtual #25
172: ldc           #26
174: invokevirtual #25
177: invokevirtual #27
180: aload         4
182: ldc           #11
184: invokestatic  #28
187: new           #22
190: dup
191: invokespecial #23
194: ldc           #24
196: invokevirtual #25
199: aload         5
201: invokevirtual #25
204: ldc           #75
206: invokevirtual #25
209: invokevirtual #27
212: aload         5
214: ldc           #38
216: invokestatic  #28
219: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0882
Start line: 8564
End line: 0
Method source code: 
    public void test0882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0882");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.getArgName();
        helpFormatter0.defaultNewLine = "\n";
        helpFormatter0.defaultLeftPad = (byte) -1;
        helpFormatter0.setLongOptSeparator("");
        helpFormatter0.setLongOptSeparator("-");
        java.lang.String str11 = helpFormatter0.getSyntaxPrefix();
        java.io.PrintWriter printWriter12 = null;
        org.apache.commons.cli.Options options14 = null;
        try {
            helpFormatter0.printOptions(printWriter12, 0, options14, (int) 'a', (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "arg" + "'", str2, "arg");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "usage: " + "'", str11, "usage: ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #486
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: invokevirtual #83
42: astore_3
43: aload_1
44: ldc           #33
46: putfield      #36
49: aload_1
50: iconst_m1
51: putfield      #40
54: aload_1
55: ldc           #11
57: invokevirtual #74
60: aload_1
61: ldc           #49
63: invokevirtual #74
66: aload_1
67: invokevirtual #89
70: astore        4
72: aconst_null
73: astore        5
75: aconst_null
76: astore        6
78: aload_1
79: aload         5
81: iconst_0
82: aload         6
84: bipush        97
86: bipush        100
88: invokevirtual #17
91: ldc           #18
93: invokestatic  #19
96: goto          101
99: astore        7
101: new           #22
104: dup
105: invokespecial #23
108: ldc           #24
110: invokevirtual #25
113: iload_2
114: invokevirtual #29
117: ldc           #30
119: invokevirtual #25
122: iconst_1
123: invokevirtual #29
126: ldc           #24
128: invokevirtual #25
131: invokevirtual #27
134: iload_2
135: iconst_1
136: if_icmpne     143
139: iconst_1
140: goto          144
143: iconst_0
144: invokestatic  #31
147: new           #22
150: dup
151: invokespecial #23
154: ldc           #24
156: invokevirtual #25
159: aload_3
160: invokevirtual #25
163: ldc           #79
165: invokevirtual #25
168: invokevirtual #27
171: aload_3
172: ldc           #78
174: invokestatic  #28
177: new           #22
180: dup
181: invokespecial #23
184: ldc           #24
186: invokevirtual #25
189: aload         4
191: invokevirtual #25
194: ldc           #104
196: invokevirtual #25
199: invokevirtual #27
202: aload         4
204: ldc           #46
206: invokestatic  #28
209: return
Exception table:
from    to  target type
78    96    99   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0883
Start line: 8590
End line: 0
Method source code: 
    public void test0883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0883");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.getArgName();
        helpFormatter0.setLongOptPrefix("                                                                                                 ");
        int int8 = helpFormatter0.findWrapPos("--", (int) (short) -1, (int) (byte) 100);
        int int9 = helpFormatter0.getDescPadding();
        java.lang.StringBuffer stringBuffer10 = null;
        org.apache.commons.cli.Options options12 = null;
        try {
            java.lang.StringBuffer stringBuffer15 = helpFormatter0.renderOptions(stringBuffer10, (int) (short) 0, options12, 32, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "arg" + "'", str2, "arg");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 3 + "'", int9 == 3);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #487
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: invokevirtual #83
42: astore_3
43: aload_1
44: ldc           #14
46: invokevirtual #43
49: aload_1
50: ldc           #63
52: iconst_m1
53: bipush        100
55: invokevirtual #61
58: istore        4
60: aload_1
61: invokevirtual #13
64: istore        5
66: aconst_null
67: astore        6
69: aconst_null
70: astore        7
72: aload_1
73: aload         6
75: iconst_0
76: aload         7
78: bipush        32
80: bipush        100
82: invokevirtual #47
85: astore        8
87: ldc           #18
89: invokestatic  #19
92: goto          97
95: astore        8
97: new           #22
100: dup
101: invokespecial #23
104: ldc           #24
106: invokevirtual #25
109: iload_2
110: invokevirtual #29
113: ldc           #30
115: invokevirtual #25
118: iconst_1
119: invokevirtual #29
122: ldc           #24
124: invokevirtual #25
127: invokevirtual #27
130: iload_2
131: iconst_1
132: if_icmpne     139
135: iconst_1
136: goto          140
139: iconst_0
140: invokestatic  #31
143: new           #22
146: dup
147: invokespecial #23
150: ldc           #24
152: invokevirtual #25
155: aload_3
156: invokevirtual #25
159: ldc           #79
161: invokevirtual #25
164: invokevirtual #27
167: aload_3
168: ldc           #78
170: invokestatic  #28
173: new           #22
176: dup
177: invokespecial #23
180: ldc           #24
182: invokevirtual #25
185: iload         4
187: invokevirtual #29
190: ldc           #30
192: invokevirtual #25
195: iconst_m1
196: invokevirtual #29
199: ldc           #24
201: invokevirtual #25
204: invokevirtual #27
207: iload         4
209: iconst_m1
210: if_icmpne     217
213: iconst_1
214: goto          218
217: iconst_0
218: invokestatic  #31
221: new           #22
224: dup
225: invokespecial #23
228: ldc           #24
230: invokevirtual #25
233: iload         5
235: invokevirtual #29
238: ldc           #30
240: invokevirtual #25
243: iconst_3
244: invokevirtual #29
247: ldc           #24
249: invokevirtual #25
252: invokevirtual #27
255: iload         5
257: iconst_3
258: if_icmpne     265
261: iconst_1
262: goto          266
265: iconst_0
266: invokestatic  #31
269: return
Exception table:
from    to  target type
72    92    95   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0884
Start line: 8615
End line: 0
Method source code: 
    public void test0884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0884");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setLeftPadding((int) (byte) 0);
        helpFormatter0.setLongOptPrefix("                                                                                                 ");
        helpFormatter0.setSyntaxPrefix("                                                                                                 ");
        int int11 = helpFormatter0.defaultDescPad;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 3 + "'", int11 == 3);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #488
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: getfield      #42
48: astore_3
49: aload_1
50: iconst_0
51: invokevirtual #55
54: aload_1
55: ldc           #14
57: invokevirtual #43
60: aload_1
61: ldc           #14
63: invokevirtual #39
66: aload_1
67: getfield      #44
70: istore        4
72: new           #22
75: dup
76: invokespecial #23
79: ldc           #24
81: invokevirtual #25
84: iload_2
85: invokevirtual #29
88: ldc           #30
90: invokevirtual #25
93: iconst_1
94: invokevirtual #29
97: ldc           #24
99: invokevirtual #25
102: invokevirtual #27
105: iload_2
106: iconst_1
107: if_icmpne     114
110: iconst_1
111: goto          115
114: iconst_0
115: invokestatic  #31
118: new           #22
121: dup
122: invokespecial #23
125: ldc           #24
127: invokevirtual #25
130: aload_3
131: invokevirtual #25
134: ldc           #48
136: invokevirtual #25
139: invokevirtual #27
142: aload_3
143: ldc           #49
145: invokestatic  #28
148: new           #22
151: dup
152: invokespecial #23
155: ldc           #24
157: invokevirtual #25
160: iload         4
162: invokevirtual #29
165: ldc           #30
167: invokevirtual #25
170: iconst_3
171: invokevirtual #29
174: ldc           #24
176: invokevirtual #25
179: invokevirtual #27
182: iload         4
184: iconst_3
185: if_icmpne     192
188: iconst_1
189: goto          193
192: iconst_0
193: invokestatic  #31
196: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0885
Start line: 8632
End line: 0
Method source code: 
    public void test0885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0885");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        java.lang.String str6 = helpFormatter0.getOptPrefix();
        java.lang.String str7 = helpFormatter0.getNewLine();
        helpFormatter0.defaultOptPrefix = "";
        helpFormatter0.setNewLine("");
        helpFormatter0.defaultSyntaxPrefix = "usage: ";
        java.lang.String str14 = helpFormatter0.getArgName();
        java.util.Comparator comparator15 = helpFormatter0.optionComparator;
        helpFormatter0.setLongOptSeparator("                                                                                                 ");
        java.lang.String str18 = helpFormatter0.getLongOptPrefix();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "-" + "'", str6, "-");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "arg" + "'", str14, "arg");
        org.junit.Assert.assertNotNull(comparator15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "--" + "'", str18, "--");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #489
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: bipush        10
47: invokevirtual #37
50: aload_1
51: invokevirtual #73
54: astore_3
55: aload_1
56: invokevirtual #16
59: astore        4
61: aload_1
62: ldc           #11
64: putfield      #42
67: aload_1
68: ldc           #11
70: invokevirtual #88
73: aload_1
74: ldc           #46
76: putfield      #45
79: aload_1
80: invokevirtual #83
83: astore        5
85: aload_1
86: getfield      #10
89: astore        6
91: aload_1
92: ldc           #14
94: invokevirtual #74
97: aload_1
98: invokevirtual #53
101: astore        7
103: new           #22
106: dup
107: invokespecial #23
110: ldc           #24
112: invokevirtual #25
115: iload_2
116: invokevirtual #29
119: ldc           #30
121: invokevirtual #25
124: iconst_1
125: invokevirtual #29
128: ldc           #24
130: invokevirtual #25
133: invokevirtual #27
136: iload_2
137: iconst_1
138: if_icmpne     145
141: iconst_1
142: goto          146
145: iconst_0
146: invokestatic  #31
149: new           #22
152: dup
153: invokespecial #23
156: ldc           #24
158: invokevirtual #25
161: aload_3
162: invokevirtual #25
165: ldc           #48
167: invokevirtual #25
170: invokevirtual #27
173: aload_3
174: ldc           #49
176: invokestatic  #28
179: new           #22
182: dup
183: invokespecial #23
186: ldc           #24
188: invokevirtual #25
191: aload         4
193: invokevirtual #25
196: ldc           #26
198: invokevirtual #25
201: invokevirtual #27
204: aload         4
206: ldc           #11
208: invokestatic  #28
211: new           #22
214: dup
215: invokespecial #23
218: ldc           #24
220: invokevirtual #25
223: aload         5
225: invokevirtual #25
228: ldc           #79
230: invokevirtual #25
233: invokevirtual #27
236: aload         5
238: ldc           #78
240: invokestatic  #28
243: aload         6
245: invokestatic  #21
248: new           #22
251: dup
252: invokespecial #23
255: ldc           #24
257: invokevirtual #25
260: aload         7
262: invokevirtual #25
265: ldc           #62
267: invokevirtual #25
270: invokevirtual #27
273: aload         7
275: ldc           #63
277: invokestatic  #28
280: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0886
Start line: 8657
End line: 0
Method source code: 
    public void test0886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0886");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setArgName("arg");
        int int8 = helpFormatter0.defaultWidth;
        helpFormatter0.defaultDescPad = (short) 0;
        int int11 = helpFormatter0.defaultWidth;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 74 + "'", int8 == 74);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 74 + "'", int11 == 74);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #490
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #11
36: invokevirtual #51
39: aload_1
40: ldc           #11
42: putfield      #52
45: aload_1
46: getfield      #42
49: astore_2
50: aload_1
51: ldc           #78
53: invokevirtual #59
56: aload_1
57: getfield      #57
60: istore_3
61: aload_1
62: iconst_0
63: putfield      #44
66: aload_1
67: getfield      #57
70: istore        4
72: new           #22
75: dup
76: invokespecial #23
79: ldc           #24
81: invokevirtual #25
84: aload_2
85: invokevirtual #25
88: ldc           #26
90: invokevirtual #25
93: invokevirtual #27
96: aload_2
97: ldc           #11
99: invokestatic  #28
102: new           #22
105: dup
106: invokespecial #23
109: ldc           #24
111: invokevirtual #25
114: iload_3
115: invokevirtual #29
118: ldc           #30
120: invokevirtual #25
123: bipush        74
125: invokevirtual #29
128: ldc           #24
130: invokevirtual #25
133: invokevirtual #27
136: iload_3
137: bipush        74
139: if_icmpne     146
142: iconst_1
143: goto          147
146: iconst_0
147: invokestatic  #31
150: new           #22
153: dup
154: invokespecial #23
157: ldc           #24
159: invokevirtual #25
162: iload         4
164: invokevirtual #29
167: ldc           #30
169: invokevirtual #25
172: bipush        74
174: invokevirtual #29
177: ldc           #24
179: invokevirtual #25
182: invokevirtual #27
185: iload         4
187: bipush        74
189: if_icmpne     196
192: iconst_1
193: goto          197
196: iconst_0
197: invokestatic  #31
200: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0887
Start line: 8674
End line: 0
Method source code: 
    public void test0887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0887");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.defaultArgName;
        java.lang.String str3 = helpFormatter0.defaultNewLine;
        helpFormatter0.defaultLeftPad = 10;
        java.lang.String str6 = helpFormatter0.defaultSyntaxPrefix;
        java.lang.String str7 = helpFormatter0.getOptPrefix();
        java.lang.String str8 = helpFormatter0.getSyntaxPrefix();
        helpFormatter0.defaultDescPad = (byte) -1;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "arg" + "'", str2, "arg");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\n" + "'", str3, "\n");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "usage: " + "'", str6, "usage: ");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "-" + "'", str7, "-");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "usage: " + "'", str8, "usage: ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #491
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: getfield      #15
42: astore_3
43: aload_1
44: getfield      #36
47: astore        4
49: aload_1
50: bipush        10
52: putfield      #40
55: aload_1
56: getfield      #45
59: astore        5
61: aload_1
62: invokevirtual #73
65: astore        6
67: aload_1
68: invokevirtual #89
71: astore        7
73: aload_1
74: iconst_m1
75: putfield      #44
78: new           #22
81: dup
82: invokespecial #23
85: ldc           #24
87: invokevirtual #25
90: iload_2
91: invokevirtual #29
94: ldc           #30
96: invokevirtual #25
99: iconst_1
100: invokevirtual #29
103: ldc           #24
105: invokevirtual #25
108: invokevirtual #27
111: iload_2
112: iconst_1
113: if_icmpne     120
116: iconst_1
117: goto          121
120: iconst_0
121: invokestatic  #31
124: new           #22
127: dup
128: invokespecial #23
131: ldc           #24
133: invokevirtual #25
136: aload_3
137: invokevirtual #25
140: ldc           #79
142: invokevirtual #25
145: invokevirtual #27
148: aload_3
149: ldc           #78
151: invokestatic  #28
154: new           #22
157: dup
158: invokespecial #23
161: ldc           #24
163: invokevirtual #25
166: aload         4
168: invokevirtual #25
171: ldc           #32
173: invokevirtual #25
176: invokevirtual #27
179: aload         4
181: ldc           #33
183: invokestatic  #28
186: new           #22
189: dup
190: invokespecial #23
193: ldc           #24
195: invokevirtual #25
198: aload         5
200: invokevirtual #25
203: ldc           #104
205: invokevirtual #25
208: invokevirtual #27
211: aload         5
213: ldc           #46
215: invokestatic  #28
218: new           #22
221: dup
222: invokespecial #23
225: ldc           #24
227: invokevirtual #25
230: aload         6
232: invokevirtual #25
235: ldc           #48
237: invokevirtual #25
240: invokevirtual #27
243: aload         6
245: ldc           #49
247: invokestatic  #28
250: new           #22
253: dup
254: invokespecial #23
257: ldc           #24
259: invokevirtual #25
262: aload         7
264: invokevirtual #25
267: ldc           #104
269: invokevirtual #25
272: invokevirtual #27
275: aload         7
277: ldc           #46
279: invokestatic  #28
282: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0888
Start line: 8695
End line: 0
Method source code: 
    public void test0888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0888");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str6 = helpFormatter0.getNewLine();
        java.util.Comparator comparator7 = helpFormatter0.getOptionComparator();
        org.apache.commons.cli.HelpFormatter helpFormatter8 = new org.apache.commons.cli.HelpFormatter();
        int int9 = helpFormatter8.getLeftPadding();
        helpFormatter8.defaultNewLine = "";
        java.lang.String str12 = helpFormatter8.defaultOptPrefix;
        helpFormatter8.setLongOptPrefix(" ");
        helpFormatter8.defaultDescPad = (short) 10;
        java.lang.String str17 = helpFormatter8.defaultArgName;
        java.util.Comparator comparator18 = helpFormatter8.optionComparator;
        helpFormatter0.setOptionComparator(comparator18);
        helpFormatter0.setLongOptSeparator("          ");
        helpFormatter0.setWidth((int) (byte) 1);
        helpFormatter0.setWidth((int) (short) 100);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\n" + "'", str6, "\n");
        org.junit.Assert.assertNotNull(comparator7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "-" + "'", str12, "-");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "arg" + "'", str17, "arg");
        org.junit.Assert.assertNotNull(comparator18);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #492
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #11
36: invokevirtual #51
39: aload_1
40: ldc           #11
42: putfield      #52
45: aload_1
46: getfield      #52
49: astore_2
50: aload_1
51: invokevirtual #16
54: astore_3
55: aload_1
56: invokevirtual #58
59: astore        4
61: new           #8
64: dup
65: invokespecial #9
68: astore        5
70: aload         5
72: invokevirtual #35
75: istore        6
77: aload         5
79: ldc           #11
81: putfield      #36
84: aload         5
86: getfield      #42
89: astore        7
91: aload         5
93: ldc           #38
95: invokevirtual #43
98: aload         5
100: bipush        10
102: putfield      #44
105: aload         5
107: getfield      #15
110: astore        8
112: aload         5
114: getfield      #10
117: astore        9
119: aload_1
120: aload         9
122: invokevirtual #99
125: aload_1
126: ldc           #67
128: invokevirtual #74
131: aload_1
132: iconst_1
133: invokevirtual #90
136: aload_1
137: bipush        100
139: invokevirtual #90
142: new           #22
145: dup
146: invokespecial #23
149: ldc           #24
151: invokevirtual #25
154: aload_2
155: invokevirtual #25
158: ldc           #26
160: invokevirtual #25
163: invokevirtual #27
166: aload_2
167: ldc           #11
169: invokestatic  #28
172: new           #22
175: dup
176: invokespecial #23
179: ldc           #24
181: invokevirtual #25
184: aload_3
185: invokevirtual #25
188: ldc           #32
190: invokevirtual #25
193: invokevirtual #27
196: aload_3
197: ldc           #33
199: invokestatic  #28
202: aload         4
204: invokestatic  #21
207: new           #22
210: dup
211: invokespecial #23
214: ldc           #24
216: invokevirtual #25
219: iload         6
221: invokevirtual #29
224: ldc           #30
226: invokevirtual #25
229: iconst_1
230: invokevirtual #29
233: ldc           #24
235: invokevirtual #25
238: invokevirtual #27
241: iload         6
243: iconst_1
244: if_icmpne     251
247: iconst_1
248: goto          252
251: iconst_0
252: invokestatic  #31
255: new           #22
258: dup
259: invokespecial #23
262: ldc           #24
264: invokevirtual #25
267: aload         7
269: invokevirtual #25
272: ldc           #48
274: invokevirtual #25
277: invokevirtual #27
280: aload         7
282: ldc           #49
284: invokestatic  #28
287: new           #22
290: dup
291: invokespecial #23
294: ldc           #24
296: invokevirtual #25
299: aload         8
301: invokevirtual #25
304: ldc           #79
306: invokevirtual #25
309: invokevirtual #27
312: aload         8
314: ldc           #78
316: invokestatic  #28
319: aload         9
321: invokestatic  #21
324: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0889
Start line: 8726
End line: 0
Method source code: 
    public void test0889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0889");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        helpFormatter0.defaultArgName = "hi!";
        java.util.Comparator comparator8 = helpFormatter0.getOptionComparator();
        helpFormatter0.setDescPadding(0);
        java.lang.String str11 = helpFormatter0.getArgName();
        int int12 = helpFormatter0.defaultWidth;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(comparator8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 74 + "'", int12 == 74);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #493
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: bipush        10
47: invokevirtual #37
50: aload_1
51: ldc           #65
53: putfield      #15
56: aload_1
57: invokevirtual #58
60: astore_3
61: aload_1
62: iconst_0
63: invokevirtual #37
66: aload_1
67: invokevirtual #83
70: astore        4
72: aload_1
73: getfield      #57
76: istore        5
78: new           #22
81: dup
82: invokespecial #23
85: ldc           #24
87: invokevirtual #25
90: iload_2
91: invokevirtual #29
94: ldc           #30
96: invokevirtual #25
99: iconst_1
100: invokevirtual #29
103: ldc           #24
105: invokevirtual #25
108: invokevirtual #27
111: iload_2
112: iconst_1
113: if_icmpne     120
116: iconst_1
117: goto          121
120: iconst_0
121: invokestatic  #31
124: aload_3
125: invokestatic  #21
128: new           #22
131: dup
132: invokespecial #23
135: ldc           #24
137: invokevirtual #25
140: aload         4
142: invokevirtual #25
145: ldc           #97
147: invokevirtual #25
150: invokevirtual #27
153: aload         4
155: ldc           #65
157: invokestatic  #28
160: new           #22
163: dup
164: invokespecial #23
167: ldc           #24
169: invokevirtual #25
172: iload         5
174: invokevirtual #29
177: ldc           #30
179: invokevirtual #25
182: bipush        74
184: invokevirtual #29
187: ldc           #24
189: invokevirtual #25
192: invokevirtual #27
195: iload         5
197: bipush        74
199: if_icmpne     206
202: iconst_1
203: goto          207
206: iconst_0
207: invokestatic  #31
210: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0890
Start line: 8745
End line: 0
Method source code: 
    public void test0890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0890");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.util.Comparator comparator1 = helpFormatter0.optionComparator;
        java.lang.String str2 = helpFormatter0.getLongOptPrefix();
        helpFormatter0.defaultSyntaxPrefix = "                                ";
        java.lang.StringBuffer stringBuffer5 = null;
        try {
            java.lang.StringBuffer stringBuffer9 = helpFormatter0.renderWrappedText(stringBuffer5, (int) 'a', 32, "   ");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(comparator1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "--" + "'", str2, "--");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #494
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: getfield      #10
37: astore_2
38: aload_1
39: invokevirtual #53
42: astore_3
43: aload_1
44: ldc           #95
46: putfield      #45
49: aconst_null
50: astore        4
52: aload_1
53: aload         4
55: bipush        97
57: bipush        32
59: ldc           #113
61: invokevirtual #123
64: astore        5
66: ldc           #18
68: invokestatic  #19
71: goto          76
74: astore        5
76: aload_2
77: invokestatic  #21
80: new           #22
83: dup
84: invokespecial #23
87: ldc           #24
89: invokevirtual #25
92: aload_3
93: invokevirtual #25
96: ldc           #62
98: invokevirtual #25
101: invokevirtual #27
104: aload_3
105: ldc           #63
107: invokestatic  #28
110: return
Exception table:
from    to  target type
52    71    74   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0891
Start line: 8765
End line: 0
Method source code: 
    public void test0891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0891");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.util.Comparator comparator1 = helpFormatter0.optionComparator;
        int int2 = helpFormatter0.getLeftPadding();
        java.lang.String str4 = helpFormatter0.rtrim("-");
        int int5 = helpFormatter0.defaultLeftPad;
        java.lang.String str6 = helpFormatter0.getLongOptPrefix();
        org.apache.commons.cli.Options options10 = null;
        try {
            helpFormatter0.printHelp((int) (byte) 100, "usage: ", "usage: ", options10, "arg");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(comparator1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "--" + "'", str6, "--");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #495
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: getfield      #10
37: astore_2
38: aload_1
39: invokevirtual #35
42: istore_3
43: aload_1
44: ldc           #49
46: invokevirtual #12
49: astore        4
51: aload_1
52: getfield      #40
55: istore        5
57: aload_1
58: invokevirtual #53
61: astore        6
63: aconst_null
64: astore        7
66: aload_1
67: bipush        100
69: ldc           #46
71: ldc           #46
73: aload         7
75: ldc           #78
77: invokevirtual #150
80: ldc           #18
82: invokestatic  #19
85: goto          90
88: astore        8
90: aload_2
91: invokestatic  #21
94: new           #22
97: dup
98: invokespecial #23
101: ldc           #24
103: invokevirtual #25
106: iload_3
107: invokevirtual #29
110: ldc           #30
112: invokevirtual #25
115: iconst_1
116: invokevirtual #29
119: ldc           #24
121: invokevirtual #25
124: invokevirtual #27
127: iload_3
128: iconst_1
129: if_icmpne     136
132: iconst_1
133: goto          137
136: iconst_0
137: invokestatic  #31
140: new           #22
143: dup
144: invokespecial #23
147: ldc           #24
149: invokevirtual #25
152: aload         4
154: invokevirtual #25
157: ldc           #48
159: invokevirtual #25
162: invokevirtual #27
165: aload         4
167: ldc           #49
169: invokestatic  #28
172: new           #22
175: dup
176: invokespecial #23
179: ldc           #24
181: invokevirtual #25
184: iload         5
186: invokevirtual #29
189: ldc           #30
191: invokevirtual #25
194: iconst_1
195: invokevirtual #29
198: ldc           #24
200: invokevirtual #25
203: invokevirtual #27
206: iload         5
208: iconst_1
209: if_icmpne     216
212: iconst_1
213: goto          217
216: iconst_0
217: invokestatic  #31
220: new           #22
223: dup
224: invokespecial #23
227: ldc           #24
229: invokevirtual #25
232: aload         6
234: invokevirtual #25
237: ldc           #62
239: invokevirtual #25
242: invokevirtual #27
245: aload         6
247: ldc           #63
249: invokestatic  #28
252: return
Exception table:
from    to  target type
66    85    88   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0892
Start line: 8790
End line: 0
Method source code: 
    public void test0892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0892");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        java.lang.String str6 = helpFormatter0.getOptPrefix();
        java.lang.String str7 = helpFormatter0.getNewLine();
        helpFormatter0.defaultOptPrefix = "";
        helpFormatter0.setNewLine("");
        java.lang.String str12 = helpFormatter0.getArgName();
        org.apache.commons.cli.HelpFormatter helpFormatter13 = new org.apache.commons.cli.HelpFormatter();
        int int14 = helpFormatter13.getLeftPadding();
        helpFormatter13.defaultNewLine = "";
        helpFormatter13.setDescPadding(10);
        java.lang.String str19 = helpFormatter13.defaultNewLine;
        helpFormatter13.setDescPadding(10);
        org.apache.commons.cli.HelpFormatter helpFormatter22 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter22.setOptPrefix("");
        helpFormatter22.defaultLongOptPrefix = "";
        java.lang.String str27 = helpFormatter22.defaultLongOptPrefix;
        java.lang.String str28 = helpFormatter22.getNewLine();
        java.util.Comparator comparator29 = helpFormatter22.getOptionComparator();
        helpFormatter13.optionComparator = comparator29;
        helpFormatter0.optionComparator = comparator29;
        helpFormatter0.defaultSyntaxPrefix = "                                                                                                 ";
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "-" + "'", str6, "-");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "arg" + "'", str12, "arg");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "\n" + "'", str28, "\n");
        org.junit.Assert.assertNotNull(comparator29);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #496
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: bipush        10
47: invokevirtual #37
50: aload_1
51: invokevirtual #73
54: astore_3
55: aload_1
56: invokevirtual #16
59: astore        4
61: aload_1
62: ldc           #11
64: putfield      #42
67: aload_1
68: ldc           #11
70: invokevirtual #88
73: aload_1
74: invokevirtual #83
77: astore        5
79: new           #8
82: dup
83: invokespecial #9
86: astore        6
88: aload         6
90: invokevirtual #35
93: istore        7
95: aload         6
97: ldc           #11
99: putfield      #36
102: aload         6
104: bipush        10
106: invokevirtual #37
109: aload         6
111: getfield      #36
114: astore        8
116: aload         6
118: bipush        10
120: invokevirtual #37
123: new           #8
126: dup
127: invokespecial #9
130: astore        9
132: aload         9
134: ldc           #11
136: invokevirtual #51
139: aload         9
141: ldc           #11
143: putfield      #52
146: aload         9
148: getfield      #52
151: astore        10
153: aload         9
155: invokevirtual #16
158: astore        11
160: aload         9
162: invokevirtual #58
165: astore        12
167: aload         6
169: aload         12
171: putfield      #10
174: aload_1
175: aload         12
177: putfield      #10
180: aload_1
181: ldc           #14
183: putfield      #45
186: new           #22
189: dup
190: invokespecial #23
193: ldc           #24
195: invokevirtual #25
198: iload_2
199: invokevirtual #29
202: ldc           #30
204: invokevirtual #25
207: iconst_1
208: invokevirtual #29
211: ldc           #24
213: invokevirtual #25
216: invokevirtual #27
219: iload_2
220: iconst_1
221: if_icmpne     228
224: iconst_1
225: goto          229
228: iconst_0
229: invokestatic  #31
232: new           #22
235: dup
236: invokespecial #23
239: ldc           #24
241: invokevirtual #25
244: aload_3
245: invokevirtual #25
248: ldc           #48
250: invokevirtual #25
253: invokevirtual #27
256: aload_3
257: ldc           #49
259: invokestatic  #28
262: new           #22
265: dup
266: invokespecial #23
269: ldc           #24
271: invokevirtual #25
274: aload         4
276: invokevirtual #25
279: ldc           #26
281: invokevirtual #25
284: invokevirtual #27
287: aload         4
289: ldc           #11
291: invokestatic  #28
294: new           #22
297: dup
298: invokespecial #23
301: ldc           #24
303: invokevirtual #25
306: aload         5
308: invokevirtual #25
311: ldc           #79
313: invokevirtual #25
316: invokevirtual #27
319: aload         5
321: ldc           #78
323: invokestatic  #28
326: new           #22
329: dup
330: invokespecial #23
333: ldc           #24
335: invokevirtual #25
338: iload         7
340: invokevirtual #29
343: ldc           #30
345: invokevirtual #25
348: iconst_1
349: invokevirtual #29
352: ldc           #24
354: invokevirtual #25
357: invokevirtual #27
360: iload         7
362: iconst_1
363: if_icmpne     370
366: iconst_1
367: goto          371
370: iconst_0
371: invokestatic  #31
374: new           #22
377: dup
378: invokespecial #23
381: ldc           #24
383: invokevirtual #25
386: aload         8
388: invokevirtual #25
391: ldc           #26
393: invokevirtual #25
396: invokevirtual #27
399: aload         8
401: ldc           #11
403: invokestatic  #28
406: new           #22
409: dup
410: invokespecial #23
413: ldc           #24
415: invokevirtual #25
418: aload         10
420: invokevirtual #25
423: ldc           #26
425: invokevirtual #25
428: invokevirtual #27
431: aload         10
433: ldc           #11
435: invokestatic  #28
438: new           #22
441: dup
442: invokespecial #23
445: ldc           #24
447: invokevirtual #25
450: aload         11
452: invokevirtual #25
455: ldc           #32
457: invokevirtual #25
460: invokevirtual #27
463: aload         11
465: ldc           #33
467: invokestatic  #28
470: aload         12
472: invokestatic  #21
475: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0893
Start line: 8829
End line: 0
Method source code: 
    public void test0893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0893");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        int int6 = helpFormatter0.defaultWidth;
        java.lang.String str7 = helpFormatter0.getLongOptPrefix();
        java.lang.String str8 = helpFormatter0.getLongOptPrefix();
        helpFormatter0.defaultArgName = " ";
        java.lang.String str11 = helpFormatter0.defaultSyntaxPrefix;
        helpFormatter0.defaultSyntaxPrefix = "                                                                                                 ";
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "--" + "'", str5, "--");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 74 + "'", int6 == 74);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "--" + "'", str7, "--");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "--" + "'", str8, "--");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "usage: " + "'", str11, "usage: ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #497
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: getfield      #42
48: astore_3
49: aload_1
50: getfield      #52
53: astore        4
55: aload_1
56: getfield      #57
59: istore        5
61: aload_1
62: invokevirtual #53
65: astore        6
67: aload_1
68: invokevirtual #53
71: astore        7
73: aload_1
74: ldc           #38
76: putfield      #15
79: aload_1
80: getfield      #45
83: astore        8
85: aload_1
86: ldc           #14
88: putfield      #45
91: new           #22
94: dup
95: invokespecial #23
98: ldc           #24
100: invokevirtual #25
103: iload_2
104: invokevirtual #29
107: ldc           #30
109: invokevirtual #25
112: iconst_1
113: invokevirtual #29
116: ldc           #24
118: invokevirtual #25
121: invokevirtual #27
124: iload_2
125: iconst_1
126: if_icmpne     133
129: iconst_1
130: goto          134
133: iconst_0
134: invokestatic  #31
137: new           #22
140: dup
141: invokespecial #23
144: ldc           #24
146: invokevirtual #25
149: aload_3
150: invokevirtual #25
153: ldc           #48
155: invokevirtual #25
158: invokevirtual #27
161: aload_3
162: ldc           #49
164: invokestatic  #28
167: new           #22
170: dup
171: invokespecial #23
174: ldc           #24
176: invokevirtual #25
179: aload         4
181: invokevirtual #25
184: ldc           #62
186: invokevirtual #25
189: invokevirtual #27
192: aload         4
194: ldc           #63
196: invokestatic  #28
199: new           #22
202: dup
203: invokespecial #23
206: ldc           #24
208: invokevirtual #25
211: iload         5
213: invokevirtual #29
216: ldc           #30
218: invokevirtual #25
221: bipush        74
223: invokevirtual #29
226: ldc           #24
228: invokevirtual #25
231: invokevirtual #27
234: iload         5
236: bipush        74
238: if_icmpne     245
241: iconst_1
242: goto          246
245: iconst_0
246: invokestatic  #31
249: new           #22
252: dup
253: invokespecial #23
256: ldc           #24
258: invokevirtual #25
261: aload         6
263: invokevirtual #25
266: ldc           #62
268: invokevirtual #25
271: invokevirtual #27
274: aload         6
276: ldc           #63
278: invokestatic  #28
281: new           #22
284: dup
285: invokespecial #23
288: ldc           #24
290: invokevirtual #25
293: aload         7
295: invokevirtual #25
298: ldc           #62
300: invokevirtual #25
303: invokevirtual #27
306: aload         7
308: ldc           #63
310: invokestatic  #28
313: new           #22
316: dup
317: invokespecial #23
320: ldc           #24
322: invokevirtual #25
325: aload         8
327: invokevirtual #25
330: ldc           #104
332: invokevirtual #25
335: invokevirtual #27
338: aload         8
340: ldc           #46
342: invokestatic  #28
345: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0894
Start line: 8853
End line: 0
Method source code: 
    public void test0894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0894");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setLongOptPrefix(" ");
        int int7 = helpFormatter0.getDescPadding();
        int int8 = helpFormatter0.defaultLeftPad;
        java.lang.String str10 = helpFormatter0.createPadding(100);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 3 + "'", int7 == 3);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "                                                                                                    " + "'", str10, "                                                                                                    ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #498
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: getfield      #42
48: astore_3
49: aload_1
50: ldc           #38
52: invokevirtual #43
55: aload_1
56: invokevirtual #13
59: istore        4
61: aload_1
62: getfield      #40
65: istore        5
67: aload_1
68: bipush        100
70: invokevirtual #93
73: astore        6
75: new           #22
78: dup
79: invokespecial #23
82: ldc           #24
84: invokevirtual #25
87: iload_2
88: invokevirtual #29
91: ldc           #30
93: invokevirtual #25
96: iconst_1
97: invokevirtual #29
100: ldc           #24
102: invokevirtual #25
105: invokevirtual #27
108: iload_2
109: iconst_1
110: if_icmpne     117
113: iconst_1
114: goto          118
117: iconst_0
118: invokestatic  #31
121: new           #22
124: dup
125: invokespecial #23
128: ldc           #24
130: invokevirtual #25
133: aload_3
134: invokevirtual #25
137: ldc           #48
139: invokevirtual #25
142: invokevirtual #27
145: aload_3
146: ldc           #49
148: invokestatic  #28
151: new           #22
154: dup
155: invokespecial #23
158: ldc           #24
160: invokevirtual #25
163: iload         4
165: invokevirtual #29
168: ldc           #30
170: invokevirtual #25
173: iconst_3
174: invokevirtual #29
177: ldc           #24
179: invokevirtual #25
182: invokevirtual #27
185: iload         4
187: iconst_3
188: if_icmpne     195
191: iconst_1
192: goto          196
195: iconst_0
196: invokestatic  #31
199: new           #22
202: dup
203: invokespecial #23
206: ldc           #24
208: invokevirtual #25
211: iload         5
213: invokevirtual #29
216: ldc           #30
218: invokevirtual #25
221: iconst_1
222: invokevirtual #29
225: ldc           #24
227: invokevirtual #25
230: invokevirtual #27
233: iload         5
235: iconst_1
236: if_icmpne     243
239: iconst_1
240: goto          244
243: iconst_0
244: invokestatic  #31
247: new           #22
250: dup
251: invokespecial #23
254: ldc           #24
256: invokevirtual #25
259: aload         6
261: invokevirtual #25
264: ldc           #222
266: invokevirtual #25
269: invokevirtual #27
272: aload         6
274: ldc           #118
276: invokestatic  #28
279: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0895
Start line: 8872
End line: 0
Method source code: 
    public void test0895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0895");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setLongOptPrefix(" ");
        helpFormatter0.defaultDescPad = 0;
        java.lang.String str9 = helpFormatter0.getSyntaxPrefix();
        helpFormatter0.defaultOptPrefix = "hi!";
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "usage: " + "'", str9, "usage: ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #499
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: getfield      #42
48: astore_3
49: aload_1
50: ldc           #38
52: invokevirtual #43
55: aload_1
56: iconst_0
57: putfield      #44
60: aload_1
61: invokevirtual #89
64: astore        4
66: aload_1
67: ldc           #65
69: putfield      #42
72: new           #22
75: dup
76: invokespecial #23
79: ldc           #24
81: invokevirtual #25
84: iload_2
85: invokevirtual #29
88: ldc           #30
90: invokevirtual #25
93: iconst_1
94: invokevirtual #29
97: ldc           #24
99: invokevirtual #25
102: invokevirtual #27
105: iload_2
106: iconst_1
107: if_icmpne     114
110: iconst_1
111: goto          115
114: iconst_0
115: invokestatic  #31
118: new           #22
121: dup
122: invokespecial #23
125: ldc           #24
127: invokevirtual #25
130: aload_3
131: invokevirtual #25
134: ldc           #48
136: invokevirtual #25
139: invokevirtual #27
142: aload_3
143: ldc           #49
145: invokestatic  #28
148: new           #22
151: dup
152: invokespecial #23
155: ldc           #24
157: invokevirtual #25
160: aload         4
162: invokevirtual #25
165: ldc           #104
167: invokevirtual #25
170: invokevirtual #27
173: aload         4
175: ldc           #46
177: invokestatic  #28
180: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0896
Start line: 8889
End line: 0
Method source code: 
    public void test0896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0896");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.util.Comparator comparator1 = helpFormatter0.optionComparator;
        java.lang.String str3 = helpFormatter0.rtrim("");
        int int4 = helpFormatter0.getDescPadding();
        helpFormatter0.setLongOptSeparator("-");
        helpFormatter0.defaultWidth = 97;
        org.junit.Assert.assertNotNull(comparator1);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 3 + "'", int4 == 3);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #500
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: getfield      #10
37: astore_2
38: aload_1
39: ldc           #11
41: invokevirtual #12
44: astore_3
45: aload_1
46: invokevirtual #13
49: istore        4
51: aload_1
52: ldc           #49
54: invokevirtual #74
57: aload_1
58: bipush        97
60: putfield      #57
63: aload_2
64: invokestatic  #21
67: new           #22
70: dup
71: invokespecial #23
74: ldc           #24
76: invokevirtual #25
79: aload_3
80: invokevirtual #25
83: ldc           #26
85: invokevirtual #25
88: invokevirtual #27
91: aload_3
92: ldc           #11
94: invokestatic  #28
97: new           #22
100: dup
101: invokespecial #23
104: ldc           #24
106: invokevirtual #25
109: iload         4
111: invokevirtual #29
114: ldc           #30
116: invokevirtual #25
119: iconst_3
120: invokevirtual #29
123: ldc           #24
125: invokevirtual #25
128: invokevirtual #27
131: iload         4
133: iconst_3
134: if_icmpne     141
137: iconst_1
138: goto          142
141: iconst_0
142: invokestatic  #31
145: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0897
Start line: 8904
End line: 0
Method source code: 
    public void test0897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0897");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        java.lang.String str6 = helpFormatter0.getLongOptSeparator();
        java.lang.String str7 = helpFormatter0.getNewLine();
        org.apache.commons.cli.HelpFormatter helpFormatter8 = new org.apache.commons.cli.HelpFormatter();
        int int9 = helpFormatter8.getLeftPadding();
        helpFormatter8.defaultNewLine = "";
        helpFormatter8.setDescPadding(10);
        java.lang.String str14 = helpFormatter8.getLongOptSeparator();
        java.lang.String str15 = helpFormatter8.getLongOptSeparator();
        java.lang.String str17 = helpFormatter8.createPadding((int) (byte) 1);
        java.lang.String str18 = helpFormatter8.defaultOptPrefix;
        java.util.Comparator comparator19 = helpFormatter8.optionComparator;
        helpFormatter0.optionComparator = comparator19;
        helpFormatter0.setArgName("          ");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + " " + "'", str6, " ");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + " " + "'", str14, " ");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + " " + "'", str15, " ");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + " " + "'", str17, " ");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "-" + "'", str18, "-");
        org.junit.Assert.assertNotNull(comparator19);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #501
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: bipush        10
47: invokevirtual #37
50: aload_1
51: invokevirtual #72
54: astore_3
55: aload_1
56: invokevirtual #16
59: astore        4
61: new           #8
64: dup
65: invokespecial #9
68: astore        5
70: aload         5
72: invokevirtual #35
75: istore        6
77: aload         5
79: ldc           #11
81: putfield      #36
84: aload         5
86: bipush        10
88: invokevirtual #37
91: aload         5
93: invokevirtual #72
96: astore        7
98: aload         5
100: invokevirtual #72
103: astore        8
105: aload         5
107: iconst_1
108: invokevirtual #93
111: astore        9
113: aload         5
115: getfield      #42
118: astore        10
120: aload         5
122: getfield      #10
125: astore        11
127: aload_1
128: aload         11
130: putfield      #10
133: aload_1
134: ldc           #67
136: invokevirtual #59
139: new           #22
142: dup
143: invokespecial #23
146: ldc           #24
148: invokevirtual #25
151: iload_2
152: invokevirtual #29
155: ldc           #30
157: invokevirtual #25
160: iconst_1
161: invokevirtual #29
164: ldc           #24
166: invokevirtual #25
169: invokevirtual #27
172: iload_2
173: iconst_1
174: if_icmpne     181
177: iconst_1
178: goto          182
181: iconst_0
182: invokestatic  #31
185: new           #22
188: dup
189: invokespecial #23
192: ldc           #24
194: invokevirtual #25
197: aload_3
198: invokevirtual #25
201: ldc           #75
203: invokevirtual #25
206: invokevirtual #27
209: aload_3
210: ldc           #38
212: invokestatic  #28
215: new           #22
218: dup
219: invokespecial #23
222: ldc           #24
224: invokevirtual #25
227: aload         4
229: invokevirtual #25
232: ldc           #26
234: invokevirtual #25
237: invokevirtual #27
240: aload         4
242: ldc           #11
244: invokestatic  #28
247: new           #22
250: dup
251: invokespecial #23
254: ldc           #24
256: invokevirtual #25
259: iload         6
261: invokevirtual #29
264: ldc           #30
266: invokevirtual #25
269: iconst_1
270: invokevirtual #29
273: ldc           #24
275: invokevirtual #25
278: invokevirtual #27
281: iload         6
283: iconst_1
284: if_icmpne     291
287: iconst_1
288: goto          292
291: iconst_0
292: invokestatic  #31
295: new           #22
298: dup
299: invokespecial #23
302: ldc           #24
304: invokevirtual #25
307: aload         7
309: invokevirtual #25
312: ldc           #75
314: invokevirtual #25
317: invokevirtual #27
320: aload         7
322: ldc           #38
324: invokestatic  #28
327: new           #22
330: dup
331: invokespecial #23
334: ldc           #24
336: invokevirtual #25
339: aload         8
341: invokevirtual #25
344: ldc           #75
346: invokevirtual #25
349: invokevirtual #27
352: aload         8
354: ldc           #38
356: invokestatic  #28
359: new           #22
362: dup
363: invokespecial #23
366: ldc           #24
368: invokevirtual #25
371: aload         9
373: invokevirtual #25
376: ldc           #75
378: invokevirtual #25
381: invokevirtual #27
384: aload         9
386: ldc           #38
388: invokestatic  #28
391: new           #22
394: dup
395: invokespecial #23
398: ldc           #24
400: invokevirtual #25
403: aload         10
405: invokevirtual #25
408: ldc           #48
410: invokevirtual #25
413: invokevirtual #27
416: aload         10
418: ldc           #49
420: invokestatic  #28
423: aload         11
425: invokestatic  #21
428: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0898
Start line: 8936
End line: 0
Method source code: 
    public void test0898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0898");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.defaultLongOptPrefix;
        int int6 = helpFormatter0.findWrapPos("--", (int) (byte) -1, 0);
        java.lang.String str7 = helpFormatter0.getNewLine();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "--" + "'", str2, "--");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\n" + "'", str7, "\n");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #502
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: getfield      #52
42: astore_3
43: aload_1
44: ldc           #63
46: iconst_m1
47: iconst_0
48: invokevirtual #61
51: istore        4
53: aload_1
54: invokevirtual #16
57: astore        5
59: new           #22
62: dup
63: invokespecial #23
66: ldc           #24
68: invokevirtual #25
71: iload_2
72: invokevirtual #29
75: ldc           #30
77: invokevirtual #25
80: iconst_1
81: invokevirtual #29
84: ldc           #24
86: invokevirtual #25
89: invokevirtual #27
92: iload_2
93: iconst_1
94: if_icmpne     101
97: iconst_1
98: goto          102
101: iconst_0
102: invokestatic  #31
105: new           #22
108: dup
109: invokespecial #23
112: ldc           #24
114: invokevirtual #25
117: aload_3
118: invokevirtual #25
121: ldc           #62
123: invokevirtual #25
126: invokevirtual #27
129: aload_3
130: ldc           #63
132: invokestatic  #28
135: new           #22
138: dup
139: invokespecial #23
142: ldc           #24
144: invokevirtual #25
147: iload         4
149: invokevirtual #29
152: ldc           #30
154: invokevirtual #25
157: iconst_m1
158: invokevirtual #29
161: ldc           #24
163: invokevirtual #25
166: invokevirtual #27
169: iload         4
171: iconst_m1
172: if_icmpne     179
175: iconst_1
176: goto          180
179: iconst_0
180: invokestatic  #31
183: new           #22
186: dup
187: invokespecial #23
190: ldc           #24
192: invokevirtual #25
195: aload         5
197: invokevirtual #25
200: ldc           #32
202: invokevirtual #25
205: invokevirtual #27
208: aload         5
210: ldc           #33
212: invokestatic  #28
215: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0899
Start line: 8951
End line: 0
Method source code: 
    public void test0899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0899");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.defaultDescPad = '4';
        helpFormatter0.setNewLine("");
        helpFormatter0.setLongOptPrefix(" ");
        java.lang.String str10 = helpFormatter0.getLongOptPrefix();
        java.lang.String str12 = helpFormatter0.createPadding(100);
        java.lang.String str13 = helpFormatter0.getLongOptPrefix();
        java.util.Comparator comparator14 = helpFormatter0.optionComparator;
        org.apache.commons.cli.Options options16 = null;
        try {
            helpFormatter0.printHelp("arg", options16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + " " + "'", str10, " ");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "                                                                                                    " + "'", str12, "                                                                                                    ");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + " " + "'", str13, " ");
        org.junit.Assert.assertNotNull(comparator14);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #503
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: bipush        52
47: putfield      #44
50: aload_1
51: ldc           #11
53: invokevirtual #88
56: aload_1
57: ldc           #38
59: invokevirtual #43
62: aload_1
63: invokevirtual #53
66: astore_3
67: aload_1
68: bipush        100
70: invokevirtual #93
73: astore        4
75: aload_1
76: invokevirtual #53
79: astore        5
81: aload_1
82: getfield      #10
85: astore        6
87: aconst_null
88: astore        7
90: aload_1
91: ldc           #78
93: aload         7
95: invokevirtual #240
98: ldc           #18
100: invokestatic  #19
103: goto          108
106: astore        8
108: new           #22
111: dup
112: invokespecial #23
115: ldc           #24
117: invokevirtual #25
120: iload_2
121: invokevirtual #29
124: ldc           #30
126: invokevirtual #25
129: iconst_1
130: invokevirtual #29
133: ldc           #24
135: invokevirtual #25
138: invokevirtual #27
141: iload_2
142: iconst_1
143: if_icmpne     150
146: iconst_1
147: goto          151
150: iconst_0
151: invokestatic  #31
154: new           #22
157: dup
158: invokespecial #23
161: ldc           #24
163: invokevirtual #25
166: aload_3
167: invokevirtual #25
170: ldc           #75
172: invokevirtual #25
175: invokevirtual #27
178: aload_3
179: ldc           #38
181: invokestatic  #28
184: new           #22
187: dup
188: invokespecial #23
191: ldc           #24
193: invokevirtual #25
196: aload         4
198: invokevirtual #25
201: ldc           #222
203: invokevirtual #25
206: invokevirtual #27
209: aload         4
211: ldc           #118
213: invokestatic  #28
216: new           #22
219: dup
220: invokespecial #23
223: ldc           #24
225: invokevirtual #25
228: aload         5
230: invokevirtual #25
233: ldc           #75
235: invokevirtual #25
238: invokevirtual #27
241: aload         5
243: ldc           #38
245: invokestatic  #28
248: aload         6
250: invokestatic  #21
253: return
Exception table:
from    to  target type
90   103   106   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0900
Start line: 8980
End line: 0
Method source code: 
    public void test0900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0900");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.defaultDescPad = '4';
        helpFormatter0.setNewLine("");
        int int11 = helpFormatter0.findWrapPos("\n", (int) ' ', 3);
        int int12 = helpFormatter0.getLeftPadding();
        helpFormatter0.setWidth(100);
        java.lang.StringBuffer stringBuffer15 = null;
        org.apache.commons.cli.Options options17 = null;
        try {
            java.lang.StringBuffer stringBuffer20 = helpFormatter0.renderOptions(stringBuffer15, 97, options17, (int) (byte) -1, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: null");
        } catch (java.lang.NegativeArraySizeException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #504
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: bipush        52
47: putfield      #44
50: aload_1
51: ldc           #11
53: invokevirtual #88
56: aload_1
57: ldc           #33
59: bipush        32
61: iconst_3
62: invokevirtual #61
65: istore_3
66: aload_1
67: invokevirtual #35
70: istore        4
72: aload_1
73: bipush        100
75: invokevirtual #90
78: aconst_null
79: astore        5
81: aconst_null
82: astore        6
84: aload_1
85: aload         5
87: bipush        97
89: aload         6
91: iconst_m1
92: bipush        10
94: invokevirtual #47
97: astore        7
99: ldc           #84
101: invokestatic  #19
104: goto          109
107: astore        7
109: new           #22
112: dup
113: invokespecial #23
116: ldc           #24
118: invokevirtual #25
121: iload_2
122: invokevirtual #29
125: ldc           #30
127: invokevirtual #25
130: iconst_1
131: invokevirtual #29
134: ldc           #24
136: invokevirtual #25
139: invokevirtual #27
142: iload_2
143: iconst_1
144: if_icmpne     151
147: iconst_1
148: goto          152
151: iconst_0
152: invokestatic  #31
155: new           #22
158: dup
159: invokespecial #23
162: ldc           #24
164: invokevirtual #25
167: iload_3
168: invokevirtual #29
171: ldc           #30
173: invokevirtual #25
176: iconst_m1
177: invokevirtual #29
180: ldc           #24
182: invokevirtual #25
185: invokevirtual #27
188: iload_3
189: iconst_m1
190: if_icmpne     197
193: iconst_1
194: goto          198
197: iconst_0
198: invokestatic  #31
201: new           #22
204: dup
205: invokespecial #23
208: ldc           #24
210: invokevirtual #25
213: iload         4
215: invokevirtual #29
218: ldc           #30
220: invokevirtual #25
223: iconst_1
224: invokevirtual #29
227: ldc           #24
229: invokevirtual #25
232: invokevirtual #27
235: iload         4
237: iconst_1
238: if_icmpne     245
241: iconst_1
242: goto          246
245: iconst_0
246: invokestatic  #31
249: return
Exception table:
from    to  target type
84   104   107   Class java/lang/NegativeArraySizeException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0901
Start line: 9006
End line: 0
Method source code: 
    public void test0901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0901");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str6 = helpFormatter0.getNewLine();
        java.lang.String str7 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setDescPadding(74);
        java.util.Comparator comparator10 = helpFormatter0.getOptionComparator();
        java.lang.String str11 = helpFormatter0.getArgName();
        java.lang.String str12 = helpFormatter0.getSyntaxPrefix();
        helpFormatter0.setLongOptPrefix("");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\n" + "'", str6, "\n");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(comparator10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "arg" + "'", str11, "arg");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "usage: " + "'", str12, "usage: ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #505
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #11
36: invokevirtual #51
39: aload_1
40: ldc           #11
42: putfield      #52
45: aload_1
46: getfield      #52
49: astore_2
50: aload_1
51: invokevirtual #16
54: astore_3
55: aload_1
56: getfield      #42
59: astore        4
61: aload_1
62: bipush        74
64: invokevirtual #37
67: aload_1
68: invokevirtual #58
71: astore        5
73: aload_1
74: invokevirtual #83
77: astore        6
79: aload_1
80: invokevirtual #89
83: astore        7
85: aload_1
86: ldc           #11
88: invokevirtual #43
91: new           #22
94: dup
95: invokespecial #23
98: ldc           #24
100: invokevirtual #25
103: aload_2
104: invokevirtual #25
107: ldc           #26
109: invokevirtual #25
112: invokevirtual #27
115: aload_2
116: ldc           #11
118: invokestatic  #28
121: new           #22
124: dup
125: invokespecial #23
128: ldc           #24
130: invokevirtual #25
133: aload_3
134: invokevirtual #25
137: ldc           #32
139: invokevirtual #25
142: invokevirtual #27
145: aload_3
146: ldc           #33
148: invokestatic  #28
151: new           #22
154: dup
155: invokespecial #23
158: ldc           #24
160: invokevirtual #25
163: aload         4
165: invokevirtual #25
168: ldc           #26
170: invokevirtual #25
173: invokevirtual #27
176: aload         4
178: ldc           #11
180: invokestatic  #28
183: aload         5
185: invokestatic  #21
188: new           #22
191: dup
192: invokespecial #23
195: ldc           #24
197: invokevirtual #25
200: aload         6
202: invokevirtual #25
205: ldc           #79
207: invokevirtual #25
210: invokevirtual #27
213: aload         6
215: ldc           #78
217: invokestatic  #28
220: new           #22
223: dup
224: invokespecial #23
227: ldc           #24
229: invokevirtual #25
232: aload         7
234: invokevirtual #25
237: ldc           #104
239: invokevirtual #25
242: invokevirtual #27
245: aload         7
247: ldc           #46
249: invokestatic  #28
252: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0902
Start line: 9029
End line: 0
Method source code: 
    public void test0902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0902");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        java.lang.String str6 = helpFormatter0.getOptPrefix();
        java.lang.String str7 = helpFormatter0.getNewLine();
        helpFormatter0.defaultOptPrefix = "";
        helpFormatter0.setNewLine("");
        java.lang.String str12 = helpFormatter0.getArgName();
        java.lang.String str13 = helpFormatter0.getSyntaxPrefix();
        java.lang.String str14 = helpFormatter0.getSyntaxPrefix();
        java.lang.String str16 = helpFormatter0.createPadding((int) (short) 10);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "-" + "'", str6, "-");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "arg" + "'", str12, "arg");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "usage: " + "'", str13, "usage: ");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "usage: " + "'", str14, "usage: ");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "          " + "'", str16, "          ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #506
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: bipush        10
47: invokevirtual #37
50: aload_1
51: invokevirtual #73
54: astore_3
55: aload_1
56: invokevirtual #16
59: astore        4
61: aload_1
62: ldc           #11
64: putfield      #42
67: aload_1
68: ldc           #11
70: invokevirtual #88
73: aload_1
74: invokevirtual #83
77: astore        5
79: aload_1
80: invokevirtual #89
83: astore        6
85: aload_1
86: invokevirtual #89
89: astore        7
91: aload_1
92: bipush        10
94: invokevirtual #93
97: astore        8
99: new           #22
102: dup
103: invokespecial #23
106: ldc           #24
108: invokevirtual #25
111: iload_2
112: invokevirtual #29
115: ldc           #30
117: invokevirtual #25
120: iconst_1
121: invokevirtual #29
124: ldc           #24
126: invokevirtual #25
129: invokevirtual #27
132: iload_2
133: iconst_1
134: if_icmpne     141
137: iconst_1
138: goto          142
141: iconst_0
142: invokestatic  #31
145: new           #22
148: dup
149: invokespecial #23
152: ldc           #24
154: invokevirtual #25
157: aload_3
158: invokevirtual #25
161: ldc           #48
163: invokevirtual #25
166: invokevirtual #27
169: aload_3
170: ldc           #49
172: invokestatic  #28
175: new           #22
178: dup
179: invokespecial #23
182: ldc           #24
184: invokevirtual #25
187: aload         4
189: invokevirtual #25
192: ldc           #26
194: invokevirtual #25
197: invokevirtual #27
200: aload         4
202: ldc           #11
204: invokestatic  #28
207: new           #22
210: dup
211: invokespecial #23
214: ldc           #24
216: invokevirtual #25
219: aload         5
221: invokevirtual #25
224: ldc           #79
226: invokevirtual #25
229: invokevirtual #27
232: aload         5
234: ldc           #78
236: invokestatic  #28
239: new           #22
242: dup
243: invokespecial #23
246: ldc           #24
248: invokevirtual #25
251: aload         6
253: invokevirtual #25
256: ldc           #104
258: invokevirtual #25
261: invokevirtual #27
264: aload         6
266: ldc           #46
268: invokestatic  #28
271: new           #22
274: dup
275: invokespecial #23
278: ldc           #24
280: invokevirtual #25
283: aload         7
285: invokevirtual #25
288: ldc           #104
290: invokevirtual #25
293: invokevirtual #27
296: aload         7
298: ldc           #46
300: invokestatic  #28
303: new           #22
306: dup
307: invokespecial #23
310: ldc           #24
312: invokevirtual #25
315: aload         8
317: invokevirtual #25
320: ldc           #135
322: invokevirtual #25
325: invokevirtual #27
328: aload         8
330: ldc           #67
332: invokestatic  #28
335: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0903
Start line: 9054
End line: 0
Method source code: 
    public void test0903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0903");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        java.lang.String str6 = helpFormatter0.getOptPrefix();
        java.lang.String str7 = helpFormatter0.getNewLine();
        helpFormatter0.defaultOptPrefix = "";
        helpFormatter0.defaultLeftPad = (short) 10;
        int int12 = helpFormatter0.getWidth();
        helpFormatter0.setNewLine("arg");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "-" + "'", str6, "-");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 74 + "'", int12 == 74);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #507
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: bipush        10
47: invokevirtual #37
50: aload_1
51: invokevirtual #73
54: astore_3
55: aload_1
56: invokevirtual #16
59: astore        4
61: aload_1
62: ldc           #11
64: putfield      #42
67: aload_1
68: bipush        10
70: putfield      #40
73: aload_1
74: invokevirtual #66
77: istore        5
79: aload_1
80: ldc           #78
82: invokevirtual #88
85: new           #22
88: dup
89: invokespecial #23
92: ldc           #24
94: invokevirtual #25
97: iload_2
98: invokevirtual #29
101: ldc           #30
103: invokevirtual #25
106: iconst_1
107: invokevirtual #29
110: ldc           #24
112: invokevirtual #25
115: invokevirtual #27
118: iload_2
119: iconst_1
120: if_icmpne     127
123: iconst_1
124: goto          128
127: iconst_0
128: invokestatic  #31
131: new           #22
134: dup
135: invokespecial #23
138: ldc           #24
140: invokevirtual #25
143: aload_3
144: invokevirtual #25
147: ldc           #48
149: invokevirtual #25
152: invokevirtual #27
155: aload_3
156: ldc           #49
158: invokestatic  #28
161: new           #22
164: dup
165: invokespecial #23
168: ldc           #24
170: invokevirtual #25
173: aload         4
175: invokevirtual #25
178: ldc           #26
180: invokevirtual #25
183: invokevirtual #27
186: aload         4
188: ldc           #11
190: invokestatic  #28
193: new           #22
196: dup
197: invokespecial #23
200: ldc           #24
202: invokevirtual #25
205: iload         5
207: invokevirtual #29
210: ldc           #30
212: invokevirtual #25
215: bipush        74
217: invokevirtual #29
220: ldc           #24
222: invokevirtual #25
225: invokevirtual #27
228: iload         5
230: bipush        74
232: if_icmpne     239
235: iconst_1
236: goto          240
239: iconst_0
240: invokestatic  #31
243: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0904
Start line: 9074
End line: 0
Method source code: 
    public void test0904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0904");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.defaultDescPad = '4';
        helpFormatter0.setNewLine("");
        helpFormatter0.setLongOptPrefix(" ");
        java.lang.String str10 = helpFormatter0.defaultSyntaxPrefix;
        java.lang.String str11 = helpFormatter0.getArgName();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "usage: " + "'", str10, "usage: ");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "arg" + "'", str11, "arg");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #508
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: bipush        52
47: putfield      #44
50: aload_1
51: ldc           #11
53: invokevirtual #88
56: aload_1
57: ldc           #38
59: invokevirtual #43
62: aload_1
63: getfield      #45
66: astore_3
67: aload_1
68: invokevirtual #83
71: astore        4
73: new           #22
76: dup
77: invokespecial #23
80: ldc           #24
82: invokevirtual #25
85: iload_2
86: invokevirtual #29
89: ldc           #30
91: invokevirtual #25
94: iconst_1
95: invokevirtual #29
98: ldc           #24
100: invokevirtual #25
103: invokevirtual #27
106: iload_2
107: iconst_1
108: if_icmpne     115
111: iconst_1
112: goto          116
115: iconst_0
116: invokestatic  #31
119: new           #22
122: dup
123: invokespecial #23
126: ldc           #24
128: invokevirtual #25
131: aload_3
132: invokevirtual #25
135: ldc           #104
137: invokevirtual #25
140: invokevirtual #27
143: aload_3
144: ldc           #46
146: invokestatic  #28
149: new           #22
152: dup
153: invokespecial #23
156: ldc           #24
158: invokevirtual #25
161: aload         4
163: invokevirtual #25
166: ldc           #79
168: invokevirtual #25
171: invokevirtual #27
174: aload         4
176: ldc           #78
178: invokestatic  #28
181: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0905
Start line: 9091
End line: 0
Method source code: 
    public void test0905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0905");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        java.lang.String str6 = helpFormatter0.rtrim("");
        java.util.Comparator comparator7 = helpFormatter0.optionComparator;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(comparator7);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #509
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: getfield      #42
48: astore_3
49: aload_1
50: ldc           #11
52: invokevirtual #12
55: astore        4
57: aload_1
58: getfield      #10
61: astore        5
63: new           #22
66: dup
67: invokespecial #23
70: ldc           #24
72: invokevirtual #25
75: iload_2
76: invokevirtual #29
79: ldc           #30
81: invokevirtual #25
84: iconst_1
85: invokevirtual #29
88: ldc           #24
90: invokevirtual #25
93: invokevirtual #27
96: iload_2
97: iconst_1
98: if_icmpne     105
101: iconst_1
102: goto          106
105: iconst_0
106: invokestatic  #31
109: new           #22
112: dup
113: invokespecial #23
116: ldc           #24
118: invokevirtual #25
121: aload_3
122: invokevirtual #25
125: ldc           #48
127: invokevirtual #25
130: invokevirtual #27
133: aload_3
134: ldc           #49
136: invokestatic  #28
139: new           #22
142: dup
143: invokespecial #23
146: ldc           #24
148: invokevirtual #25
151: aload         4
153: invokevirtual #25
156: ldc           #26
158: invokevirtual #25
161: invokevirtual #27
164: aload         4
166: ldc           #11
168: invokestatic  #28
171: aload         5
173: invokestatic  #21
176: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0906
Start line: 9107
End line: 0
Method source code: 
    public void test0906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0906");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        int int2 = helpFormatter0.getWidth();
        helpFormatter0.defaultOptPrefix = "   ";
        helpFormatter0.defaultSyntaxPrefix = "usage: ";
        java.io.PrintWriter printWriter7 = null;
        try {
            helpFormatter0.printWrapped(printWriter7, 52, "usage: ");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 74 + "'", int2 == 74);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #510
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: invokevirtual #66
42: istore_3
43: aload_1
44: ldc           #113
46: putfield      #42
49: aload_1
50: ldc           #46
52: putfield      #45
55: aconst_null
56: astore        4
58: aload_1
59: aload         4
61: bipush        52
63: ldc           #46
65: invokevirtual #180
68: ldc           #18
70: invokestatic  #19
73: goto          78
76: astore        5
78: new           #22
81: dup
82: invokespecial #23
85: ldc           #24
87: invokevirtual #25
90: iload_2
91: invokevirtual #29
94: ldc           #30
96: invokevirtual #25
99: iconst_1
100: invokevirtual #29
103: ldc           #24
105: invokevirtual #25
108: invokevirtual #27
111: iload_2
112: iconst_1
113: if_icmpne     120
116: iconst_1
117: goto          121
120: iconst_0
121: invokestatic  #31
124: new           #22
127: dup
128: invokespecial #23
131: ldc           #24
133: invokevirtual #25
136: iload_3
137: invokevirtual #29
140: ldc           #30
142: invokevirtual #25
145: bipush        74
147: invokevirtual #29
150: ldc           #24
152: invokevirtual #25
155: invokevirtual #27
158: iload_3
159: bipush        74
161: if_icmpne     168
164: iconst_1
165: goto          169
168: iconst_0
169: invokestatic  #31
172: return
Exception table:
from    to  target type
58    73    76   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0907
Start line: 9128
End line: 0
Method source code: 
    public void test0907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0907");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.util.Comparator comparator1 = helpFormatter0.optionComparator;
        int int2 = helpFormatter0.getLeftPadding();
        int int6 = helpFormatter0.findWrapPos("-", 100, (-1));
        helpFormatter0.defaultWidth = (short) 100;
        java.lang.StringBuffer stringBuffer9 = null;
        org.apache.commons.cli.Options options11 = null;
        try {
            java.lang.StringBuffer stringBuffer14 = helpFormatter0.renderOptions(stringBuffer9, (int) (byte) 10, options11, (int) (byte) 0, 3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(comparator1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #511
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: getfield      #10
37: astore_2
38: aload_1
39: invokevirtual #35
42: istore_3
43: aload_1
44: ldc           #49
46: bipush        100
48: iconst_m1
49: invokevirtual #61
52: istore        4
54: aload_1
55: bipush        100
57: putfield      #57
60: aconst_null
61: astore        5
63: aconst_null
64: astore        6
66: aload_1
67: aload         5
69: bipush        10
71: aload         6
73: iconst_0
74: iconst_3
75: invokevirtual #47
78: astore        7
80: ldc           #18
82: invokestatic  #19
85: goto          90
88: astore        7
90: aload_2
91: invokestatic  #21
94: new           #22
97: dup
98: invokespecial #23
101: ldc           #24
103: invokevirtual #25
106: iload_3
107: invokevirtual #29
110: ldc           #30
112: invokevirtual #25
115: iconst_1
116: invokevirtual #29
119: ldc           #24
121: invokevirtual #25
124: invokevirtual #27
127: iload_3
128: iconst_1
129: if_icmpne     136
132: iconst_1
133: goto          137
136: iconst_0
137: invokestatic  #31
140: new           #22
143: dup
144: invokespecial #23
147: ldc           #24
149: invokevirtual #25
152: iload         4
154: invokevirtual #29
157: ldc           #30
159: invokevirtual #25
162: iconst_m1
163: invokevirtual #29
166: ldc           #24
168: invokevirtual #25
171: invokevirtual #27
174: iload         4
176: iconst_m1
177: if_icmpne     184
180: iconst_1
181: goto          185
184: iconst_0
185: invokestatic  #31
188: return
Exception table:
from    to  target type
66    85    88   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0908
Start line: 9151
End line: 0
Method source code: 
    public void test0908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0908");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        org.apache.commons.cli.HelpFormatter helpFormatter4 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter4.setOptPrefix("");
        helpFormatter4.defaultLongOptPrefix = "";
        java.lang.String str9 = helpFormatter4.defaultLongOptPrefix;
        helpFormatter4.defaultDescPad = 0;
        org.apache.commons.cli.HelpFormatter helpFormatter12 = new org.apache.commons.cli.HelpFormatter();
        java.util.Comparator comparator13 = helpFormatter12.optionComparator;
        int int14 = helpFormatter12.getLeftPadding();
        int int15 = helpFormatter12.defaultLeftPad;
        java.lang.String str17 = helpFormatter12.createPadding((int) 'a');
        org.apache.commons.cli.HelpFormatter helpFormatter18 = new org.apache.commons.cli.HelpFormatter();
        int int19 = helpFormatter18.getLeftPadding();
        helpFormatter18.defaultNewLine = "";
        helpFormatter18.defaultDescPad = '4';
        helpFormatter18.setNewLine("");
        int int29 = helpFormatter18.findWrapPos("\n", (int) ' ', 3);
        java.util.Comparator comparator30 = helpFormatter18.optionComparator;
        helpFormatter12.setOptionComparator(comparator30);
        helpFormatter4.setOptionComparator(comparator30);
        helpFormatter0.optionComparator = comparator30;
        int int37 = helpFormatter0.findWrapPos("-", 0, (int) (byte) 1);
        java.lang.Class<?> wildcardClass38 = helpFormatter0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(comparator13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "                                                                                                 " + "'", str17, "                                                                                                 ");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(comparator30);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(wildcardClass38);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #512
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: new           #8
47: dup
48: invokespecial #9
51: astore_3
52: aload_3
53: ldc           #11
55: invokevirtual #51
58: aload_3
59: ldc           #11
61: putfield      #52
64: aload_3
65: getfield      #52
68: astore        4
70: aload_3
71: iconst_0
72: putfield      #44
75: new           #8
78: dup
79: invokespecial #9
82: astore        5
84: aload         5
86: getfield      #10
89: astore        6
91: aload         5
93: invokevirtual #35
96: istore        7
98: aload         5
100: getfield      #40
103: istore        8
105: aload         5
107: bipush        97
109: invokevirtual #93
112: astore        9
114: new           #8
117: dup
118: invokespecial #9
121: astore        10
123: aload         10
125: invokevirtual #35
128: istore        11
130: aload         10
132: ldc           #11
134: putfield      #36
137: aload         10
139: bipush        52
141: putfield      #44
144: aload         10
146: ldc           #11
148: invokevirtual #88
151: aload         10
153: ldc           #33
155: bipush        32
157: iconst_3
158: invokevirtual #61
161: istore        12
163: aload         10
165: getfield      #10
168: astore        13
170: aload         5
172: aload         13
174: invokevirtual #99
177: aload_3
178: aload         13
180: invokevirtual #99
183: aload_1
184: aload         13
186: putfield      #10
189: aload_1
190: ldc           #49
192: iconst_0
193: iconst_1
194: invokevirtual #61
197: istore        14
199: aload_1
200: invokevirtual #154
203: astore        15
205: new           #22
208: dup
209: invokespecial #23
212: ldc           #24
214: invokevirtual #25
217: iload_2
218: invokevirtual #29
221: ldc           #30
223: invokevirtual #25
226: iconst_1
227: invokevirtual #29
230: ldc           #24
232: invokevirtual #25
235: invokevirtual #27
238: iload_2
239: iconst_1
240: if_icmpne     247
243: iconst_1
244: goto          248
247: iconst_0
248: invokestatic  #31
251: new           #22
254: dup
255: invokespecial #23
258: ldc           #24
260: invokevirtual #25
263: aload         4
265: invokevirtual #25
268: ldc           #26
270: invokevirtual #25
273: invokevirtual #27
276: aload         4
278: ldc           #11
280: invokestatic  #28
283: aload         6
285: invokestatic  #21
288: new           #22
291: dup
292: invokespecial #23
295: ldc           #24
297: invokevirtual #25
300: iload         7
302: invokevirtual #29
305: ldc           #30
307: invokevirtual #25
310: iconst_1
311: invokevirtual #29
314: ldc           #24
316: invokevirtual #25
319: invokevirtual #27
322: iload         7
324: iconst_1
325: if_icmpne     332
328: iconst_1
329: goto          333
332: iconst_0
333: invokestatic  #31
336: new           #22
339: dup
340: invokespecial #23
343: ldc           #24
345: invokevirtual #25
348: iload         8
350: invokevirtual #29
353: ldc           #30
355: invokevirtual #25
358: iconst_1
359: invokevirtual #29
362: ldc           #24
364: invokevirtual #25
367: invokevirtual #27
370: iload         8
372: iconst_1
373: if_icmpne     380
376: iconst_1
377: goto          381
380: iconst_0
381: invokestatic  #31
384: new           #22
387: dup
388: invokespecial #23
391: ldc           #24
393: invokevirtual #25
396: aload         9
398: invokevirtual #25
401: ldc           #142
403: invokevirtual #25
406: invokevirtual #27
409: aload         9
411: ldc           #14
413: invokestatic  #28
416: new           #22
419: dup
420: invokespecial #23
423: ldc           #24
425: invokevirtual #25
428: iload         11
430: invokevirtual #29
433: ldc           #30
435: invokevirtual #25
438: iconst_1
439: invokevirtual #29
442: ldc           #24
444: invokevirtual #25
447: invokevirtual #27
450: iload         11
452: iconst_1
453: if_icmpne     460
456: iconst_1
457: goto          461
460: iconst_0
461: invokestatic  #31
464: new           #22
467: dup
468: invokespecial #23
471: ldc           #24
473: invokevirtual #25
476: iload         12
478: invokevirtual #29
481: ldc           #30
483: invokevirtual #25
486: iconst_m1
487: invokevirtual #29
490: ldc           #24
492: invokevirtual #25
495: invokevirtual #27
498: iload         12
500: iconst_m1
501: if_icmpne     508
504: iconst_1
505: goto          509
508: iconst_0
509: invokestatic  #31
512: aload         13
514: invokestatic  #21
517: new           #22
520: dup
521: invokespecial #23
524: ldc           #24
526: invokevirtual #25
529: iload         14
531: invokevirtual #29
534: ldc           #30
536: invokevirtual #25
539: iconst_m1
540: invokevirtual #29
543: ldc           #24
545: invokevirtual #25
548: invokevirtual #27
551: iload         14
553: iconst_m1
554: if_icmpne     561
557: iconst_1
558: goto          562
561: iconst_0
562: invokestatic  #31
565: aload         15
567: invokestatic  #21
570: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0909
Start line: 9193
End line: 0
Method source code: 
    public void test0909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0909");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setLongOptPrefix(" ");
        java.lang.String str7 = helpFormatter0.getLongOptPrefix();
        java.lang.String str8 = helpFormatter0.defaultNewLine;
        helpFormatter0.defaultOptPrefix = "                                                                                                 ";
        helpFormatter0.defaultNewLine = "                                                                                                 ";
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + " " + "'", str7, " ");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #513
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: getfield      #42
48: astore_3
49: aload_1
50: ldc           #38
52: invokevirtual #43
55: aload_1
56: invokevirtual #53
59: astore        4
61: aload_1
62: getfield      #36
65: astore        5
67: aload_1
68: ldc           #14
70: putfield      #42
73: aload_1
74: ldc           #14
76: putfield      #36
79: new           #22
82: dup
83: invokespecial #23
86: ldc           #24
88: invokevirtual #25
91: iload_2
92: invokevirtual #29
95: ldc           #30
97: invokevirtual #25
100: iconst_1
101: invokevirtual #29
104: ldc           #24
106: invokevirtual #25
109: invokevirtual #27
112: iload_2
113: iconst_1
114: if_icmpne     121
117: iconst_1
118: goto          122
121: iconst_0
122: invokestatic  #31
125: new           #22
128: dup
129: invokespecial #23
132: ldc           #24
134: invokevirtual #25
137: aload_3
138: invokevirtual #25
141: ldc           #48
143: invokevirtual #25
146: invokevirtual #27
149: aload_3
150: ldc           #49
152: invokestatic  #28
155: new           #22
158: dup
159: invokespecial #23
162: ldc           #24
164: invokevirtual #25
167: aload         4
169: invokevirtual #25
172: ldc           #75
174: invokevirtual #25
177: invokevirtual #27
180: aload         4
182: ldc           #38
184: invokestatic  #28
187: new           #22
190: dup
191: invokespecial #23
194: ldc           #24
196: invokevirtual #25
199: aload         5
201: invokevirtual #25
204: ldc           #26
206: invokevirtual #25
209: invokevirtual #27
212: aload         5
214: ldc           #11
216: invokestatic  #28
219: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0910
Start line: 9212
End line: 0
Method source code: 
    public void test0910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0910");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        int int4 = helpFormatter0.defaultWidth;
        java.lang.String str5 = helpFormatter0.getNewLine();
        java.lang.String str6 = helpFormatter0.defaultNewLine;
        org.apache.commons.cli.Options options8 = null;
        try {
            helpFormatter0.printHelp("usage: ", options8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 74 + "'", int4 == 74);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #514
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: getfield      #57
48: istore_3
49: aload_1
50: invokevirtual #16
53: astore        4
55: aload_1
56: getfield      #36
59: astore        5
61: aconst_null
62: astore        6
64: aload_1
65: ldc           #46
67: aload         6
69: invokevirtual #240
72: ldc           #18
74: invokestatic  #19
77: goto          82
80: astore        7
82: new           #22
85: dup
86: invokespecial #23
89: ldc           #24
91: invokevirtual #25
94: iload_2
95: invokevirtual #29
98: ldc           #30
100: invokevirtual #25
103: iconst_1
104: invokevirtual #29
107: ldc           #24
109: invokevirtual #25
112: invokevirtual #27
115: iload_2
116: iconst_1
117: if_icmpne     124
120: iconst_1
121: goto          125
124: iconst_0
125: invokestatic  #31
128: new           #22
131: dup
132: invokespecial #23
135: ldc           #24
137: invokevirtual #25
140: iload_3
141: invokevirtual #29
144: ldc           #30
146: invokevirtual #25
149: bipush        74
151: invokevirtual #29
154: ldc           #24
156: invokevirtual #25
159: invokevirtual #27
162: iload_3
163: bipush        74
165: if_icmpne     172
168: iconst_1
169: goto          173
172: iconst_0
173: invokestatic  #31
176: new           #22
179: dup
180: invokespecial #23
183: ldc           #24
185: invokevirtual #25
188: aload         4
190: invokevirtual #25
193: ldc           #26
195: invokevirtual #25
198: invokevirtual #27
201: aload         4
203: ldc           #11
205: invokestatic  #28
208: new           #22
211: dup
212: invokespecial #23
215: ldc           #24
217: invokevirtual #25
220: aload         5
222: invokevirtual #25
225: ldc           #26
227: invokevirtual #25
230: invokevirtual #27
233: aload         5
235: ldc           #11
237: invokestatic  #28
240: return
Exception table:
from    to  target type
64    77    80   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0911
Start line: 9236
End line: 0
Method source code: 
    public void test0911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0911");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.util.Comparator comparator1 = helpFormatter0.optionComparator;
        java.lang.String str2 = helpFormatter0.defaultNewLine;
        org.apache.commons.cli.Options options5 = null;
        try {
            helpFormatter0.printHelp("arg", "                                                    ", options5, "\n");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(comparator1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "\n" + "'", str2, "\n");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #515
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: getfield      #10
37: astore_2
38: aload_1
39: getfield      #36
42: astore_3
43: aconst_null
44: astore        4
46: aload_1
47: ldc           #78
49: ldc           #77
51: aload         4
53: ldc           #33
55: invokevirtual #128
58: ldc           #18
60: invokestatic  #19
63: goto          68
66: astore        5
68: aload_2
69: invokestatic  #21
72: new           #22
75: dup
76: invokespecial #23
79: ldc           #24
81: invokevirtual #25
84: aload_3
85: invokevirtual #25
88: ldc           #32
90: invokevirtual #25
93: invokevirtual #27
96: aload_3
97: ldc           #33
99: invokestatic  #28
102: return
Exception table:
from    to  target type
46    63    66   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0912
Start line: 9255
End line: 0
Method source code: 
    public void test0912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0912");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.defaultLongOptPrefix = "hi!";
        java.lang.String str3 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str4 = helpFormatter0.defaultNewLine;
        helpFormatter0.defaultWidth = (short) 100;
        helpFormatter0.setLongOptPrefix("                                                                                                    ");
        org.apache.commons.cli.Options options11 = null;
        try {
            helpFormatter0.printHelp("arg", "                                ", options11, "          ");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!" + "'", str3, "hi!");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\n" + "'", str4, "\n");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #516
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #65
36: putfield      #52
39: aload_1
40: getfield      #52
43: astore_2
44: aload_1
45: getfield      #36
48: astore_3
49: aload_1
50: bipush        100
52: putfield      #57
55: aload_1
56: ldc           #118
58: invokevirtual #43
61: aconst_null
62: astore        4
64: aload_1
65: ldc           #78
67: ldc           #95
69: aload         4
71: ldc           #67
73: invokevirtual #128
76: ldc           #18
78: invokestatic  #19
81: goto          86
84: astore        5
86: new           #22
89: dup
90: invokespecial #23
93: ldc           #24
95: invokevirtual #25
98: aload_2
99: invokevirtual #25
102: ldc           #97
104: invokevirtual #25
107: invokevirtual #27
110: aload_2
111: ldc           #65
113: invokestatic  #28
116: new           #22
119: dup
120: invokespecial #23
123: ldc           #24
125: invokevirtual #25
128: aload_3
129: invokevirtual #25
132: ldc           #32
134: invokevirtual #25
137: invokevirtual #27
140: aload_3
141: ldc           #33
143: invokestatic  #28
146: return
Exception table:
from    to  target type
64    81    84   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0913
Start line: 9277
End line: 0
Method source code: 
    public void test0913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0913");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        helpFormatter0.defaultArgName = "hi!";
        java.lang.String str9 = helpFormatter0.createPadding((int) (byte) 10);
        helpFormatter0.defaultWidth = ' ';
        java.util.Comparator comparator12 = null;
        helpFormatter0.optionComparator = comparator12;
        helpFormatter0.defaultDescPad = (-2);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "          " + "'", str9, "          ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #517
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: bipush        10
47: invokevirtual #37
50: aload_1
51: ldc           #65
53: putfield      #15
56: aload_1
57: bipush        10
59: invokevirtual #93
62: astore_3
63: aload_1
64: bipush        32
66: putfield      #57
69: aconst_null
70: astore        4
72: aload_1
73: aload         4
75: putfield      #10
78: aload_1
79: bipush        -2
81: putfield      #44
84: new           #22
87: dup
88: invokespecial #23
91: ldc           #24
93: invokevirtual #25
96: iload_2
97: invokevirtual #29
100: ldc           #30
102: invokevirtual #25
105: iconst_1
106: invokevirtual #29
109: ldc           #24
111: invokevirtual #25
114: invokevirtual #27
117: iload_2
118: iconst_1
119: if_icmpne     126
122: iconst_1
123: goto          127
126: iconst_0
127: invokestatic  #31
130: new           #22
133: dup
134: invokespecial #23
137: ldc           #24
139: invokevirtual #25
142: aload_3
143: invokevirtual #25
146: ldc           #135
148: invokevirtual #25
151: invokevirtual #27
154: aload_3
155: ldc           #67
157: invokestatic  #28
160: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0914
Start line: 9295
End line: 0
Method source code: 
    public void test0914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0914");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        java.lang.String str6 = helpFormatter0.rtrim("");
        java.lang.String str7 = helpFormatter0.getNewLine();
        org.apache.commons.cli.Options options9 = null;
        try {
            helpFormatter0.printHelp("                                                                                                 ", options9, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #518
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: getfield      #42
48: astore_3
49: aload_1
50: ldc           #11
52: invokevirtual #12
55: astore        4
57: aload_1
58: invokevirtual #16
61: astore        5
63: aconst_null
64: astore        6
66: aload_1
67: ldc           #14
69: aload         6
71: iconst_0
72: invokevirtual #103
75: ldc           #18
77: invokestatic  #19
80: goto          85
83: astore        7
85: new           #22
88: dup
89: invokespecial #23
92: ldc           #24
94: invokevirtual #25
97: iload_2
98: invokevirtual #29
101: ldc           #30
103: invokevirtual #25
106: iconst_1
107: invokevirtual #29
110: ldc           #24
112: invokevirtual #25
115: invokevirtual #27
118: iload_2
119: iconst_1
120: if_icmpne     127
123: iconst_1
124: goto          128
127: iconst_0
128: invokestatic  #31
131: new           #22
134: dup
135: invokespecial #23
138: ldc           #24
140: invokevirtual #25
143: aload_3
144: invokevirtual #25
147: ldc           #48
149: invokevirtual #25
152: invokevirtual #27
155: aload_3
156: ldc           #49
158: invokestatic  #28
161: new           #22
164: dup
165: invokespecial #23
168: ldc           #24
170: invokevirtual #25
173: aload         4
175: invokevirtual #25
178: ldc           #26
180: invokevirtual #25
183: invokevirtual #27
186: aload         4
188: ldc           #11
190: invokestatic  #28
193: new           #22
196: dup
197: invokespecial #23
200: ldc           #24
202: invokevirtual #25
205: aload         5
207: invokevirtual #25
210: ldc           #26
212: invokevirtual #25
215: invokevirtual #27
218: aload         5
220: ldc           #11
222: invokestatic  #28
225: return
Exception table:
from    to  target type
66    80    83   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0915
Start line: 9319
End line: 0
Method source code: 
    public void test0915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0915");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        int int6 = helpFormatter0.defaultWidth;
        java.lang.String str7 = helpFormatter0.getLongOptPrefix();
        java.lang.String str8 = helpFormatter0.getLongOptPrefix();
        helpFormatter0.setLongOptSeparator("hi!");
        int int11 = helpFormatter0.getWidth();
        java.lang.String str12 = helpFormatter0.defaultSyntaxPrefix;
        java.lang.String str13 = helpFormatter0.defaultSyntaxPrefix;
        helpFormatter0.setNewLine("                                                                                                 ");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "--" + "'", str5, "--");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 74 + "'", int6 == 74);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "--" + "'", str7, "--");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "--" + "'", str8, "--");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 74 + "'", int11 == 74);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "usage: " + "'", str12, "usage: ");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "usage: " + "'", str13, "usage: ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #519
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: getfield      #42
48: astore_3
49: aload_1
50: getfield      #52
53: astore        4
55: aload_1
56: getfield      #57
59: istore        5
61: aload_1
62: invokevirtual #53
65: astore        6
67: aload_1
68: invokevirtual #53
71: astore        7
73: aload_1
74: ldc           #65
76: invokevirtual #74
79: aload_1
80: invokevirtual #66
83: istore        8
85: aload_1
86: getfield      #45
89: astore        9
91: aload_1
92: getfield      #45
95: astore        10
97: aload_1
98: ldc           #14
100: invokevirtual #88
103: new           #22
106: dup
107: invokespecial #23
110: ldc           #24
112: invokevirtual #25
115: iload_2
116: invokevirtual #29
119: ldc           #30
121: invokevirtual #25
124: iconst_1
125: invokevirtual #29
128: ldc           #24
130: invokevirtual #25
133: invokevirtual #27
136: iload_2
137: iconst_1
138: if_icmpne     145
141: iconst_1
142: goto          146
145: iconst_0
146: invokestatic  #31
149: new           #22
152: dup
153: invokespecial #23
156: ldc           #24
158: invokevirtual #25
161: aload_3
162: invokevirtual #25
165: ldc           #48
167: invokevirtual #25
170: invokevirtual #27
173: aload_3
174: ldc           #49
176: invokestatic  #28
179: new           #22
182: dup
183: invokespecial #23
186: ldc           #24
188: invokevirtual #25
191: aload         4
193: invokevirtual #25
196: ldc           #62
198: invokevirtual #25
201: invokevirtual #27
204: aload         4
206: ldc           #63
208: invokestatic  #28
211: new           #22
214: dup
215: invokespecial #23
218: ldc           #24
220: invokevirtual #25
223: iload         5
225: invokevirtual #29
228: ldc           #30
230: invokevirtual #25
233: bipush        74
235: invokevirtual #29
238: ldc           #24
240: invokevirtual #25
243: invokevirtual #27
246: iload         5
248: bipush        74
250: if_icmpne     257
253: iconst_1
254: goto          258
257: iconst_0
258: invokestatic  #31
261: new           #22
264: dup
265: invokespecial #23
268: ldc           #24
270: invokevirtual #25
273: aload         6
275: invokevirtual #25
278: ldc           #62
280: invokevirtual #25
283: invokevirtual #27
286: aload         6
288: ldc           #63
290: invokestatic  #28
293: new           #22
296: dup
297: invokespecial #23
300: ldc           #24
302: invokevirtual #25
305: aload         7
307: invokevirtual #25
310: ldc           #62
312: invokevirtual #25
315: invokevirtual #27
318: aload         7
320: ldc           #63
322: invokestatic  #28
325: new           #22
328: dup
329: invokespecial #23
332: ldc           #24
334: invokevirtual #25
337: iload         8
339: invokevirtual #29
342: ldc           #30
344: invokevirtual #25
347: bipush        74
349: invokevirtual #29
352: ldc           #24
354: invokevirtual #25
357: invokevirtual #27
360: iload         8
362: bipush        74
364: if_icmpne     371
367: iconst_1
368: goto          372
371: iconst_0
372: invokestatic  #31
375: new           #22
378: dup
379: invokespecial #23
382: ldc           #24
384: invokevirtual #25
387: aload         9
389: invokevirtual #25
392: ldc           #104
394: invokevirtual #25
397: invokevirtual #27
400: aload         9
402: ldc           #46
404: invokestatic  #28
407: new           #22
410: dup
411: invokespecial #23
414: ldc           #24
416: invokevirtual #25
419: aload         10
421: invokevirtual #25
424: ldc           #104
426: invokevirtual #25
429: invokevirtual #27
432: aload         10
434: ldc           #46
436: invokestatic  #28
439: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0916
Start line: 9347
End line: 0
Method source code: 
    public void test0916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0916");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str6 = helpFormatter0.getNewLine();
        java.lang.String str7 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setDescPadding(74);
        java.lang.String str10 = helpFormatter0.getLongOptSeparator();
        java.lang.String str11 = helpFormatter0.defaultNewLine;
        java.lang.StringBuffer stringBuffer12 = null;
        org.apache.commons.cli.Options options14 = null;
        try {
            java.lang.StringBuffer stringBuffer17 = helpFormatter0.renderOptions(stringBuffer12, (-2), options14, (int) '4', 32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\n" + "'", str6, "\n");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + " " + "'", str10, " ");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\n" + "'", str11, "\n");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #520
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #11
36: invokevirtual #51
39: aload_1
40: ldc           #11
42: putfield      #52
45: aload_1
46: getfield      #52
49: astore_2
50: aload_1
51: invokevirtual #16
54: astore_3
55: aload_1
56: getfield      #42
59: astore        4
61: aload_1
62: bipush        74
64: invokevirtual #37
67: aload_1
68: invokevirtual #72
71: astore        5
73: aload_1
74: getfield      #36
77: astore        6
79: aconst_null
80: astore        7
82: aconst_null
83: astore        8
85: aload_1
86: aload         7
88: bipush        -2
90: aload         8
92: bipush        52
94: bipush        32
96: invokevirtual #47
99: astore        9
101: ldc           #18
103: invokestatic  #19
106: goto          111
109: astore        9
111: new           #22
114: dup
115: invokespecial #23
118: ldc           #24
120: invokevirtual #25
123: aload_2
124: invokevirtual #25
127: ldc           #26
129: invokevirtual #25
132: invokevirtual #27
135: aload_2
136: ldc           #11
138: invokestatic  #28
141: new           #22
144: dup
145: invokespecial #23
148: ldc           #24
150: invokevirtual #25
153: aload_3
154: invokevirtual #25
157: ldc           #32
159: invokevirtual #25
162: invokevirtual #27
165: aload_3
166: ldc           #33
168: invokestatic  #28
171: new           #22
174: dup
175: invokespecial #23
178: ldc           #24
180: invokevirtual #25
183: aload         4
185: invokevirtual #25
188: ldc           #26
190: invokevirtual #25
193: invokevirtual #27
196: aload         4
198: ldc           #11
200: invokestatic  #28
203: new           #22
206: dup
207: invokespecial #23
210: ldc           #24
212: invokevirtual #25
215: aload         5
217: invokevirtual #25
220: ldc           #75
222: invokevirtual #25
225: invokevirtual #27
228: aload         5
230: ldc           #38
232: invokestatic  #28
235: new           #22
238: dup
239: invokespecial #23
242: ldc           #24
244: invokevirtual #25
247: aload         6
249: invokevirtual #25
252: ldc           #32
254: invokevirtual #25
257: invokevirtual #27
260: aload         6
262: ldc           #33
264: invokestatic  #28
267: return
Exception table:
from    to  target type
85   106   109   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0917
Start line: 9376
End line: 0
Method source code: 
    public void test0917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0917");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        int int6 = helpFormatter0.defaultWidth;
        java.lang.String str7 = helpFormatter0.getLongOptPrefix();
        java.lang.String str8 = helpFormatter0.getLongOptPrefix();
        helpFormatter0.setLongOptSeparator("hi!");
        helpFormatter0.defaultWidth = (byte) 1;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "--" + "'", str5, "--");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 74 + "'", int6 == 74);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "--" + "'", str7, "--");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "--" + "'", str8, "--");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #521
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: getfield      #42
48: astore_3
49: aload_1
50: getfield      #52
53: astore        4
55: aload_1
56: getfield      #57
59: istore        5
61: aload_1
62: invokevirtual #53
65: astore        6
67: aload_1
68: invokevirtual #53
71: astore        7
73: aload_1
74: ldc           #65
76: invokevirtual #74
79: aload_1
80: iconst_1
81: putfield      #57
84: new           #22
87: dup
88: invokespecial #23
91: ldc           #24
93: invokevirtual #25
96: iload_2
97: invokevirtual #29
100: ldc           #30
102: invokevirtual #25
105: iconst_1
106: invokevirtual #29
109: ldc           #24
111: invokevirtual #25
114: invokevirtual #27
117: iload_2
118: iconst_1
119: if_icmpne     126
122: iconst_1
123: goto          127
126: iconst_0
127: invokestatic  #31
130: new           #22
133: dup
134: invokespecial #23
137: ldc           #24
139: invokevirtual #25
142: aload_3
143: invokevirtual #25
146: ldc           #48
148: invokevirtual #25
151: invokevirtual #27
154: aload_3
155: ldc           #49
157: invokestatic  #28
160: new           #22
163: dup
164: invokespecial #23
167: ldc           #24
169: invokevirtual #25
172: aload         4
174: invokevirtual #25
177: ldc           #62
179: invokevirtual #25
182: invokevirtual #27
185: aload         4
187: ldc           #63
189: invokestatic  #28
192: new           #22
195: dup
196: invokespecial #23
199: ldc           #24
201: invokevirtual #25
204: iload         5
206: invokevirtual #29
209: ldc           #30
211: invokevirtual #25
214: bipush        74
216: invokevirtual #29
219: ldc           #24
221: invokevirtual #25
224: invokevirtual #27
227: iload         5
229: bipush        74
231: if_icmpne     238
234: iconst_1
235: goto          239
238: iconst_0
239: invokestatic  #31
242: new           #22
245: dup
246: invokespecial #23
249: ldc           #24
251: invokevirtual #25
254: aload         6
256: invokevirtual #25
259: ldc           #62
261: invokevirtual #25
264: invokevirtual #27
267: aload         6
269: ldc           #63
271: invokestatic  #28
274: new           #22
277: dup
278: invokespecial #23
281: ldc           #24
283: invokevirtual #25
286: aload         7
288: invokevirtual #25
291: ldc           #62
293: invokevirtual #25
296: invokevirtual #27
299: aload         7
301: ldc           #63
303: invokestatic  #28
306: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0918
Start line: 9398
End line: 0
Method source code: 
    public void test0918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0918");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str6 = helpFormatter0.getNewLine();
        java.util.Comparator comparator7 = helpFormatter0.getOptionComparator();
        org.apache.commons.cli.HelpFormatter helpFormatter8 = new org.apache.commons.cli.HelpFormatter();
        int int9 = helpFormatter8.getLeftPadding();
        helpFormatter8.defaultNewLine = "";
        java.lang.String str12 = helpFormatter8.defaultOptPrefix;
        helpFormatter8.setLongOptPrefix(" ");
        helpFormatter8.defaultDescPad = (short) 10;
        java.lang.String str17 = helpFormatter8.defaultArgName;
        java.util.Comparator comparator18 = helpFormatter8.optionComparator;
        helpFormatter0.setOptionComparator(comparator18);
        java.lang.Class<?> wildcardClass20 = helpFormatter0.getClass();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\n" + "'", str6, "\n");
        org.junit.Assert.assertNotNull(comparator7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "-" + "'", str12, "-");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "arg" + "'", str17, "arg");
        org.junit.Assert.assertNotNull(comparator18);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #522
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #11
36: invokevirtual #51
39: aload_1
40: ldc           #11
42: putfield      #52
45: aload_1
46: getfield      #52
49: astore_2
50: aload_1
51: invokevirtual #16
54: astore_3
55: aload_1
56: invokevirtual #58
59: astore        4
61: new           #8
64: dup
65: invokespecial #9
68: astore        5
70: aload         5
72: invokevirtual #35
75: istore        6
77: aload         5
79: ldc           #11
81: putfield      #36
84: aload         5
86: getfield      #42
89: astore        7
91: aload         5
93: ldc           #38
95: invokevirtual #43
98: aload         5
100: bipush        10
102: putfield      #44
105: aload         5
107: getfield      #15
110: astore        8
112: aload         5
114: getfield      #10
117: astore        9
119: aload_1
120: aload         9
122: invokevirtual #99
125: aload_1
126: invokevirtual #154
129: astore        10
131: new           #22
134: dup
135: invokespecial #23
138: ldc           #24
140: invokevirtual #25
143: aload_2
144: invokevirtual #25
147: ldc           #26
149: invokevirtual #25
152: invokevirtual #27
155: aload_2
156: ldc           #11
158: invokestatic  #28
161: new           #22
164: dup
165: invokespecial #23
168: ldc           #24
170: invokevirtual #25
173: aload_3
174: invokevirtual #25
177: ldc           #32
179: invokevirtual #25
182: invokevirtual #27
185: aload_3
186: ldc           #33
188: invokestatic  #28
191: aload         4
193: invokestatic  #21
196: new           #22
199: dup
200: invokespecial #23
203: ldc           #24
205: invokevirtual #25
208: iload         6
210: invokevirtual #29
213: ldc           #30
215: invokevirtual #25
218: iconst_1
219: invokevirtual #29
222: ldc           #24
224: invokevirtual #25
227: invokevirtual #27
230: iload         6
232: iconst_1
233: if_icmpne     240
236: iconst_1
237: goto          241
240: iconst_0
241: invokestatic  #31
244: new           #22
247: dup
248: invokespecial #23
251: ldc           #24
253: invokevirtual #25
256: aload         7
258: invokevirtual #25
261: ldc           #48
263: invokevirtual #25
266: invokevirtual #27
269: aload         7
271: ldc           #49
273: invokestatic  #28
276: new           #22
279: dup
280: invokespecial #23
283: ldc           #24
285: invokevirtual #25
288: aload         8
290: invokevirtual #25
293: ldc           #79
295: invokevirtual #25
298: invokevirtual #27
301: aload         8
303: ldc           #78
305: invokestatic  #28
308: aload         9
310: invokestatic  #21
313: aload         10
315: invokestatic  #21
318: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0919
Start line: 9428
End line: 0
Method source code: 
    public void test0919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0919");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultOptPrefix;
        java.lang.String str6 = helpFormatter0.getLongOptPrefix();
        java.lang.String str7 = helpFormatter0.defaultOptPrefix;
        java.util.Comparator comparator8 = helpFormatter0.getOptionComparator();
        helpFormatter0.setArgName("                                                                                                 ");
        java.lang.String str11 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str12 = helpFormatter0.defaultArgName;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(comparator8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "                                                                                                 " + "'", str12, "                                                                                                 ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #523
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #11
36: invokevirtual #51
39: aload_1
40: ldc           #11
42: putfield      #52
45: aload_1
46: getfield      #42
49: astore_2
50: aload_1
51: invokevirtual #53
54: astore_3
55: aload_1
56: getfield      #42
59: astore        4
61: aload_1
62: invokevirtual #58
65: astore        5
67: aload_1
68: ldc           #14
70: invokevirtual #59
73: aload_1
74: getfield      #52
77: astore        6
79: aload_1
80: getfield      #15
83: astore        7
85: new           #22
88: dup
89: invokespecial #23
92: ldc           #24
94: invokevirtual #25
97: aload_2
98: invokevirtual #25
101: ldc           #26
103: invokevirtual #25
106: invokevirtual #27
109: aload_2
110: ldc           #11
112: invokestatic  #28
115: new           #22
118: dup
119: invokespecial #23
122: ldc           #24
124: invokevirtual #25
127: aload_3
128: invokevirtual #25
131: ldc           #26
133: invokevirtual #25
136: invokevirtual #27
139: aload_3
140: ldc           #11
142: invokestatic  #28
145: new           #22
148: dup
149: invokespecial #23
152: ldc           #24
154: invokevirtual #25
157: aload         4
159: invokevirtual #25
162: ldc           #26
164: invokevirtual #25
167: invokevirtual #27
170: aload         4
172: ldc           #11
174: invokestatic  #28
177: aload         5
179: invokestatic  #21
182: new           #22
185: dup
186: invokespecial #23
189: ldc           #24
191: invokevirtual #25
194: aload         6
196: invokevirtual #25
199: ldc           #26
201: invokevirtual #25
204: invokevirtual #27
207: aload         6
209: ldc           #11
211: invokestatic  #28
214: new           #22
217: dup
218: invokespecial #23
221: ldc           #24
223: invokevirtual #25
226: aload         7
228: invokevirtual #25
231: ldc           #142
233: invokevirtual #25
236: invokevirtual #27
239: aload         7
241: ldc           #14
243: invokestatic  #28
246: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0920
Start line: 9450
End line: 0
Method source code: 
    public void test0920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0920");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.defaultLongOptPrefix = "hi!";
        int int3 = helpFormatter0.getWidth();
        helpFormatter0.setLongOptPrefix("          ");
        int int6 = helpFormatter0.defaultLeftPad;
        helpFormatter0.setLeftPadding(1);
        helpFormatter0.setWidth(10);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 74 + "'", int3 == 74);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #524
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #65
36: putfield      #52
39: aload_1
40: invokevirtual #66
43: istore_2
44: aload_1
45: ldc           #67
47: invokevirtual #43
50: aload_1
51: getfield      #40
54: istore_3
55: aload_1
56: iconst_1
57: invokevirtual #55
60: aload_1
61: bipush        10
63: invokevirtual #90
66: new           #22
69: dup
70: invokespecial #23
73: ldc           #24
75: invokevirtual #25
78: iload_2
79: invokevirtual #29
82: ldc           #30
84: invokevirtual #25
87: bipush        74
89: invokevirtual #29
92: ldc           #24
94: invokevirtual #25
97: invokevirtual #27
100: iload_2
101: bipush        74
103: if_icmpne     110
106: iconst_1
107: goto          111
110: iconst_0
111: invokestatic  #31
114: new           #22
117: dup
118: invokespecial #23
121: ldc           #24
123: invokevirtual #25
126: iload_3
127: invokevirtual #29
130: ldc           #30
132: invokevirtual #25
135: iconst_1
136: invokevirtual #29
139: ldc           #24
141: invokevirtual #25
144: invokevirtual #27
147: iload_3
148: iconst_1
149: if_icmpne     156
152: iconst_1
153: goto          157
156: iconst_0
157: invokestatic  #31
160: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0921
Start line: 9465
End line: 0
Method source code: 
    public void test0921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0921");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str3 = helpFormatter0.getOptPrefix();
        helpFormatter0.setNewLine("");
        java.lang.String str6 = helpFormatter0.defaultArgName;
        helpFormatter0.defaultLeftPad = 74;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "--" + "'", str2, "--");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "-" + "'", str3, "-");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "arg" + "'", str6, "arg");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #525
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: getfield      #52
42: astore_3
43: aload_1
44: invokevirtual #73
47: astore        4
49: aload_1
50: ldc           #11
52: invokevirtual #88
55: aload_1
56: getfield      #15
59: astore        5
61: aload_1
62: bipush        74
64: putfield      #40
67: new           #22
70: dup
71: invokespecial #23
74: ldc           #24
76: invokevirtual #25
79: iload_2
80: invokevirtual #29
83: ldc           #30
85: invokevirtual #25
88: iconst_1
89: invokevirtual #29
92: ldc           #24
94: invokevirtual #25
97: invokevirtual #27
100: iload_2
101: iconst_1
102: if_icmpne     109
105: iconst_1
106: goto          110
109: iconst_0
110: invokestatic  #31
113: new           #22
116: dup
117: invokespecial #23
120: ldc           #24
122: invokevirtual #25
125: aload_3
126: invokevirtual #25
129: ldc           #62
131: invokevirtual #25
134: invokevirtual #27
137: aload_3
138: ldc           #63
140: invokestatic  #28
143: new           #22
146: dup
147: invokespecial #23
150: ldc           #24
152: invokevirtual #25
155: aload         4
157: invokevirtual #25
160: ldc           #48
162: invokevirtual #25
165: invokevirtual #27
168: aload         4
170: ldc           #49
172: invokestatic  #28
175: new           #22
178: dup
179: invokespecial #23
182: ldc           #24
184: invokevirtual #25
187: aload         5
189: invokevirtual #25
192: ldc           #79
194: invokevirtual #25
197: invokevirtual #27
200: aload         5
202: ldc           #78
204: invokestatic  #28
207: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0922
Start line: 9482
End line: 0
Method source code: 
    public void test0922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0922");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str3 = helpFormatter0.getOptPrefix();
        java.util.Comparator comparator4 = helpFormatter0.getOptionComparator();
        java.lang.String str5 = helpFormatter0.defaultSyntaxPrefix;
        int int6 = helpFormatter0.getWidth();
        java.lang.String str8 = helpFormatter0.rtrim("                                                                                                 ");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "--" + "'", str2, "--");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "-" + "'", str3, "-");
        org.junit.Assert.assertNotNull(comparator4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "usage: " + "'", str5, "usage: ");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 74 + "'", int6 == 74);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #526
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: getfield      #52
42: astore_3
43: aload_1
44: invokevirtual #73
47: astore        4
49: aload_1
50: invokevirtual #58
53: astore        5
55: aload_1
56: getfield      #45
59: astore        6
61: aload_1
62: invokevirtual #66
65: istore        7
67: aload_1
68: ldc           #14
70: invokevirtual #12
73: astore        8
75: new           #22
78: dup
79: invokespecial #23
82: ldc           #24
84: invokevirtual #25
87: iload_2
88: invokevirtual #29
91: ldc           #30
93: invokevirtual #25
96: iconst_1
97: invokevirtual #29
100: ldc           #24
102: invokevirtual #25
105: invokevirtual #27
108: iload_2
109: iconst_1
110: if_icmpne     117
113: iconst_1
114: goto          118
117: iconst_0
118: invokestatic  #31
121: new           #22
124: dup
125: invokespecial #23
128: ldc           #24
130: invokevirtual #25
133: aload_3
134: invokevirtual #25
137: ldc           #62
139: invokevirtual #25
142: invokevirtual #27
145: aload_3
146: ldc           #63
148: invokestatic  #28
151: new           #22
154: dup
155: invokespecial #23
158: ldc           #24
160: invokevirtual #25
163: aload         4
165: invokevirtual #25
168: ldc           #48
170: invokevirtual #25
173: invokevirtual #27
176: aload         4
178: ldc           #49
180: invokestatic  #28
183: aload         5
185: invokestatic  #21
188: new           #22
191: dup
192: invokespecial #23
195: ldc           #24
197: invokevirtual #25
200: aload         6
202: invokevirtual #25
205: ldc           #104
207: invokevirtual #25
210: invokevirtual #27
213: aload         6
215: ldc           #46
217: invokestatic  #28
220: new           #22
223: dup
224: invokespecial #23
227: ldc           #24
229: invokevirtual #25
232: iload         7
234: invokevirtual #29
237: ldc           #30
239: invokevirtual #25
242: bipush        74
244: invokevirtual #29
247: ldc           #24
249: invokevirtual #25
252: invokevirtual #27
255: iload         7
257: bipush        74
259: if_icmpne     266
262: iconst_1
263: goto          267
266: iconst_0
267: invokestatic  #31
270: new           #22
273: dup
274: invokespecial #23
277: ldc           #24
279: invokevirtual #25
282: aload         8
284: invokevirtual #25
287: ldc           #26
289: invokevirtual #25
292: invokevirtual #27
295: aload         8
297: ldc           #11
299: invokestatic  #28
302: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0923
Start line: 9503
End line: 0
Method source code: 
    public void test0923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0923");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        helpFormatter0.setSyntaxPrefix(" ");
        int int8 = helpFormatter0.defaultLeftPad;
        helpFormatter0.setLeftPadding(1);
        helpFormatter0.defaultSyntaxPrefix = "arg";
        java.lang.String str13 = helpFormatter0.defaultNewLine;
        int int14 = helpFormatter0.defaultDescPad;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 10 + "'", int14 == 10);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #527
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: bipush        10
47: invokevirtual #37
50: aload_1
51: ldc           #38
53: invokevirtual #39
56: aload_1
57: getfield      #40
60: istore_3
61: aload_1
62: iconst_1
63: invokevirtual #55
66: aload_1
67: ldc           #78
69: putfield      #45
72: aload_1
73: getfield      #36
76: astore        4
78: aload_1
79: getfield      #44
82: istore        5
84: new           #22
87: dup
88: invokespecial #23
91: ldc           #24
93: invokevirtual #25
96: iload_2
97: invokevirtual #29
100: ldc           #30
102: invokevirtual #25
105: iconst_1
106: invokevirtual #29
109: ldc           #24
111: invokevirtual #25
114: invokevirtual #27
117: iload_2
118: iconst_1
119: if_icmpne     126
122: iconst_1
123: goto          127
126: iconst_0
127: invokestatic  #31
130: new           #22
133: dup
134: invokespecial #23
137: ldc           #24
139: invokevirtual #25
142: iload_3
143: invokevirtual #29
146: ldc           #30
148: invokevirtual #25
151: iconst_1
152: invokevirtual #29
155: ldc           #24
157: invokevirtual #25
160: invokevirtual #27
163: iload_3
164: iconst_1
165: if_icmpne     172
168: iconst_1
169: goto          173
172: iconst_0
173: invokestatic  #31
176: new           #22
179: dup
180: invokespecial #23
183: ldc           #24
185: invokevirtual #25
188: aload         4
190: invokevirtual #25
193: ldc           #26
195: invokevirtual #25
198: invokevirtual #27
201: aload         4
203: ldc           #11
205: invokestatic  #28
208: new           #22
211: dup
212: invokespecial #23
215: ldc           #24
217: invokevirtual #25
220: iload         5
222: invokevirtual #29
225: ldc           #30
227: invokevirtual #25
230: bipush        10
232: invokevirtual #29
235: ldc           #24
237: invokevirtual #25
240: invokevirtual #27
243: iload         5
245: bipush        10
247: if_icmpne     254
250: iconst_1
251: goto          255
254: iconst_0
255: invokestatic  #31
258: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0924
Start line: 9523
End line: 0
Method source code: 
    public void test0924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0924");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.defaultDescPad = '4';
        helpFormatter0.setNewLine("");
        helpFormatter0.setLongOptPrefix(" ");
        java.lang.String str10 = helpFormatter0.defaultSyntaxPrefix;
        java.lang.String str11 = helpFormatter0.defaultNewLine;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "usage: " + "'", str10, "usage: ");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #528
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: bipush        52
47: putfield      #44
50: aload_1
51: ldc           #11
53: invokevirtual #88
56: aload_1
57: ldc           #38
59: invokevirtual #43
62: aload_1
63: getfield      #45
66: astore_3
67: aload_1
68: getfield      #36
71: astore        4
73: new           #22
76: dup
77: invokespecial #23
80: ldc           #24
82: invokevirtual #25
85: iload_2
86: invokevirtual #29
89: ldc           #30
91: invokevirtual #25
94: iconst_1
95: invokevirtual #29
98: ldc           #24
100: invokevirtual #25
103: invokevirtual #27
106: iload_2
107: iconst_1
108: if_icmpne     115
111: iconst_1
112: goto          116
115: iconst_0
116: invokestatic  #31
119: new           #22
122: dup
123: invokespecial #23
126: ldc           #24
128: invokevirtual #25
131: aload_3
132: invokevirtual #25
135: ldc           #104
137: invokevirtual #25
140: invokevirtual #27
143: aload_3
144: ldc           #46
146: invokestatic  #28
149: new           #22
152: dup
153: invokespecial #23
156: ldc           #24
158: invokevirtual #25
161: aload         4
163: invokevirtual #25
166: ldc           #26
168: invokevirtual #25
171: invokevirtual #27
174: aload         4
176: ldc           #11
178: invokestatic  #28
181: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0925
Start line: 9540
End line: 0
Method source code: 
    public void test0925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0925");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        org.apache.commons.cli.HelpFormatter helpFormatter6 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter6.setOptPrefix("");
        helpFormatter6.defaultLongOptPrefix = "";
        java.lang.String str11 = helpFormatter6.defaultLongOptPrefix;
        java.lang.String str12 = helpFormatter6.getNewLine();
        java.lang.String str13 = helpFormatter6.defaultOptPrefix;
        helpFormatter6.setDescPadding(74);
        java.util.Comparator comparator16 = helpFormatter6.getOptionComparator();
        helpFormatter0.optionComparator = comparator16;
        int int21 = helpFormatter0.findWrapPos("                                                                                                 ", 0, (int) '4');
        helpFormatter0.setLongOptSeparator("\n");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\n" + "'", str12, "\n");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(comparator16);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #529
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: bipush        10
47: invokevirtual #37
50: new           #8
53: dup
54: invokespecial #9
57: astore_3
58: aload_3
59: ldc           #11
61: invokevirtual #51
64: aload_3
65: ldc           #11
67: putfield      #52
70: aload_3
71: getfield      #52
74: astore        4
76: aload_3
77: invokevirtual #16
80: astore        5
82: aload_3
83: getfield      #42
86: astore        6
88: aload_3
89: bipush        74
91: invokevirtual #37
94: aload_3
95: invokevirtual #58
98: astore        7
100: aload_1
101: aload         7
103: putfield      #10
106: aload_1
107: ldc           #14
109: iconst_0
110: bipush        52
112: invokevirtual #61
115: istore        8
117: aload_1
118: ldc           #33
120: invokevirtual #74
123: new           #22
126: dup
127: invokespecial #23
130: ldc           #24
132: invokevirtual #25
135: iload_2
136: invokevirtual #29
139: ldc           #30
141: invokevirtual #25
144: iconst_1
145: invokevirtual #29
148: ldc           #24
150: invokevirtual #25
153: invokevirtual #27
156: iload_2
157: iconst_1
158: if_icmpne     165
161: iconst_1
162: goto          166
165: iconst_0
166: invokestatic  #31
169: new           #22
172: dup
173: invokespecial #23
176: ldc           #24
178: invokevirtual #25
181: aload         4
183: invokevirtual #25
186: ldc           #26
188: invokevirtual #25
191: invokevirtual #27
194: aload         4
196: ldc           #11
198: invokestatic  #28
201: new           #22
204: dup
205: invokespecial #23
208: ldc           #24
210: invokevirtual #25
213: aload         5
215: invokevirtual #25
218: ldc           #32
220: invokevirtual #25
223: invokevirtual #27
226: aload         5
228: ldc           #33
230: invokestatic  #28
233: new           #22
236: dup
237: invokespecial #23
240: ldc           #24
242: invokevirtual #25
245: aload         6
247: invokevirtual #25
250: ldc           #26
252: invokevirtual #25
255: invokevirtual #27
258: aload         6
260: ldc           #11
262: invokestatic  #28
265: aload         7
267: invokestatic  #21
270: new           #22
273: dup
274: invokespecial #23
277: ldc           #24
279: invokevirtual #25
282: iload         8
284: invokevirtual #29
287: ldc           #30
289: invokevirtual #25
292: bipush        52
294: invokevirtual #29
297: ldc           #24
299: invokevirtual #25
302: invokevirtual #27
305: iload         8
307: bipush        52
309: if_icmpne     316
312: iconst_1
313: goto          317
316: iconst_0
317: invokestatic  #31
320: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0926
Start line: 9567
End line: 0
Method source code: 
    public void test0926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0926");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.defaultDescPad = '4';
        helpFormatter0.setNewLine("");
        helpFormatter0.setSyntaxPrefix("");
        java.lang.String str10 = helpFormatter0.getSyntaxPrefix();
        helpFormatter0.setWidth((-2));
        java.lang.String str13 = helpFormatter0.defaultNewLine;
        int int14 = helpFormatter0.defaultDescPad;
        java.lang.String str15 = helpFormatter0.defaultOptPrefix;
        int int16 = helpFormatter0.getLeftPadding();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "-" + "'", str15, "-");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #530
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: bipush        52
47: putfield      #44
50: aload_1
51: ldc           #11
53: invokevirtual #88
56: aload_1
57: ldc           #11
59: invokevirtual #39
62: aload_1
63: invokevirtual #89
66: astore_3
67: aload_1
68: bipush        -2
70: invokevirtual #90
73: aload_1
74: getfield      #36
77: astore        4
79: aload_1
80: getfield      #44
83: istore        5
85: aload_1
86: getfield      #42
89: astore        6
91: aload_1
92: invokevirtual #35
95: istore        7
97: new           #22
100: dup
101: invokespecial #23
104: ldc           #24
106: invokevirtual #25
109: iload_2
110: invokevirtual #29
113: ldc           #30
115: invokevirtual #25
118: iconst_1
119: invokevirtual #29
122: ldc           #24
124: invokevirtual #25
127: invokevirtual #27
130: iload_2
131: iconst_1
132: if_icmpne     139
135: iconst_1
136: goto          140
139: iconst_0
140: invokestatic  #31
143: new           #22
146: dup
147: invokespecial #23
150: ldc           #24
152: invokevirtual #25
155: aload_3
156: invokevirtual #25
159: ldc           #26
161: invokevirtual #25
164: invokevirtual #27
167: aload_3
168: ldc           #11
170: invokestatic  #28
173: new           #22
176: dup
177: invokespecial #23
180: ldc           #24
182: invokevirtual #25
185: aload         4
187: invokevirtual #25
190: ldc           #26
192: invokevirtual #25
195: invokevirtual #27
198: aload         4
200: ldc           #11
202: invokestatic  #28
205: new           #22
208: dup
209: invokespecial #23
212: ldc           #24
214: invokevirtual #25
217: iload         5
219: invokevirtual #29
222: ldc           #30
224: invokevirtual #25
227: bipush        52
229: invokevirtual #29
232: ldc           #24
234: invokevirtual #25
237: invokevirtual #27
240: iload         5
242: bipush        52
244: if_icmpne     251
247: iconst_1
248: goto          252
251: iconst_0
252: invokestatic  #31
255: new           #22
258: dup
259: invokespecial #23
262: ldc           #24
264: invokevirtual #25
267: aload         6
269: invokevirtual #25
272: ldc           #48
274: invokevirtual #25
277: invokevirtual #27
280: aload         6
282: ldc           #49
284: invokestatic  #28
287: new           #22
290: dup
291: invokespecial #23
294: ldc           #24
296: invokevirtual #25
299: iload         7
301: invokevirtual #29
304: ldc           #30
306: invokevirtual #25
309: iconst_1
310: invokevirtual #29
313: ldc           #24
315: invokevirtual #25
318: invokevirtual #27
321: iload         7
323: iconst_1
324: if_icmpne     331
327: iconst_1
328: goto          332
331: iconst_0
332: invokestatic  #31
335: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0927
Start line: 9591
End line: 0
Method source code: 
    public void test0927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0927");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        java.lang.String str6 = helpFormatter0.getOptPrefix();
        java.lang.String str7 = helpFormatter0.getNewLine();
        helpFormatter0.defaultOptPrefix = "";
        helpFormatter0.setNewLine("");
        java.lang.String str12 = helpFormatter0.getArgName();
        java.lang.String str13 = helpFormatter0.getSyntaxPrefix();
        java.util.Comparator comparator14 = helpFormatter0.optionComparator;
        java.lang.String str15 = helpFormatter0.getArgName();
        helpFormatter0.defaultOptPrefix = "                                                    ";
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "-" + "'", str6, "-");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "arg" + "'", str12, "arg");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "usage: " + "'", str13, "usage: ");
        org.junit.Assert.assertNotNull(comparator14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "arg" + "'", str15, "arg");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #531
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: bipush        10
47: invokevirtual #37
50: aload_1
51: invokevirtual #73
54: astore_3
55: aload_1
56: invokevirtual #16
59: astore        4
61: aload_1
62: ldc           #11
64: putfield      #42
67: aload_1
68: ldc           #11
70: invokevirtual #88
73: aload_1
74: invokevirtual #83
77: astore        5
79: aload_1
80: invokevirtual #89
83: astore        6
85: aload_1
86: getfield      #10
89: astore        7
91: aload_1
92: invokevirtual #83
95: astore        8
97: aload_1
98: ldc           #77
100: putfield      #42
103: new           #22
106: dup
107: invokespecial #23
110: ldc           #24
112: invokevirtual #25
115: iload_2
116: invokevirtual #29
119: ldc           #30
121: invokevirtual #25
124: iconst_1
125: invokevirtual #29
128: ldc           #24
130: invokevirtual #25
133: invokevirtual #27
136: iload_2
137: iconst_1
138: if_icmpne     145
141: iconst_1
142: goto          146
145: iconst_0
146: invokestatic  #31
149: new           #22
152: dup
153: invokespecial #23
156: ldc           #24
158: invokevirtual #25
161: aload_3
162: invokevirtual #25
165: ldc           #48
167: invokevirtual #25
170: invokevirtual #27
173: aload_3
174: ldc           #49
176: invokestatic  #28
179: new           #22
182: dup
183: invokespecial #23
186: ldc           #24
188: invokevirtual #25
191: aload         4
193: invokevirtual #25
196: ldc           #26
198: invokevirtual #25
201: invokevirtual #27
204: aload         4
206: ldc           #11
208: invokestatic  #28
211: new           #22
214: dup
215: invokespecial #23
218: ldc           #24
220: invokevirtual #25
223: aload         5
225: invokevirtual #25
228: ldc           #79
230: invokevirtual #25
233: invokevirtual #27
236: aload         5
238: ldc           #78
240: invokestatic  #28
243: new           #22
246: dup
247: invokespecial #23
250: ldc           #24
252: invokevirtual #25
255: aload         6
257: invokevirtual #25
260: ldc           #104
262: invokevirtual #25
265: invokevirtual #27
268: aload         6
270: ldc           #46
272: invokestatic  #28
275: aload         7
277: invokestatic  #21
280: new           #22
283: dup
284: invokespecial #23
287: ldc           #24
289: invokevirtual #25
292: aload         8
294: invokevirtual #25
297: ldc           #79
299: invokevirtual #25
302: invokevirtual #27
305: aload         8
307: ldc           #78
309: invokestatic  #28
312: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0928
Start line: 9617
End line: 0
Method source code: 
    public void test0928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0928");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str3 = helpFormatter0.getOptPrefix();
        int int4 = helpFormatter0.defaultDescPad;
        java.lang.String str5 = helpFormatter0.defaultOptPrefix;
        int int6 = helpFormatter0.getLeftPadding();
        org.apache.commons.cli.Options options9 = null;
        try {
            helpFormatter0.printHelp("                                                                                                    ", "", options9, "", false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "--" + "'", str2, "--");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "-" + "'", str3, "-");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 3 + "'", int4 == 3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "-" + "'", str5, "-");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #532
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: getfield      #52
42: astore_3
43: aload_1
44: invokevirtual #73
47: astore        4
49: aload_1
50: getfield      #44
53: istore        5
55: aload_1
56: getfield      #42
59: astore        6
61: aload_1
62: invokevirtual #35
65: istore        7
67: aconst_null
68: astore        8
70: aload_1
71: ldc           #118
73: ldc           #11
75: aload         8
77: ldc           #11
79: iconst_0
80: invokevirtual #109
83: ldc           #18
85: invokestatic  #19
88: goto          93
91: astore        9
93: new           #22
96: dup
97: invokespecial #23
100: ldc           #24
102: invokevirtual #25
105: iload_2
106: invokevirtual #29
109: ldc           #30
111: invokevirtual #25
114: iconst_1
115: invokevirtual #29
118: ldc           #24
120: invokevirtual #25
123: invokevirtual #27
126: iload_2
127: iconst_1
128: if_icmpne     135
131: iconst_1
132: goto          136
135: iconst_0
136: invokestatic  #31
139: new           #22
142: dup
143: invokespecial #23
146: ldc           #24
148: invokevirtual #25
151: aload_3
152: invokevirtual #25
155: ldc           #62
157: invokevirtual #25
160: invokevirtual #27
163: aload_3
164: ldc           #63
166: invokestatic  #28
169: new           #22
172: dup
173: invokespecial #23
176: ldc           #24
178: invokevirtual #25
181: aload         4
183: invokevirtual #25
186: ldc           #48
188: invokevirtual #25
191: invokevirtual #27
194: aload         4
196: ldc           #49
198: invokestatic  #28
201: new           #22
204: dup
205: invokespecial #23
208: ldc           #24
210: invokevirtual #25
213: iload         5
215: invokevirtual #29
218: ldc           #30
220: invokevirtual #25
223: iconst_3
224: invokevirtual #29
227: ldc           #24
229: invokevirtual #25
232: invokevirtual #27
235: iload         5
237: iconst_3
238: if_icmpne     245
241: iconst_1
242: goto          246
245: iconst_0
246: invokestatic  #31
249: new           #22
252: dup
253: invokespecial #23
256: ldc           #24
258: invokevirtual #25
261: aload         6
263: invokevirtual #25
266: ldc           #48
268: invokevirtual #25
271: invokevirtual #27
274: aload         6
276: ldc           #49
278: invokestatic  #28
281: new           #22
284: dup
285: invokespecial #23
288: ldc           #24
290: invokevirtual #25
293: iload         7
295: invokevirtual #29
298: ldc           #30
300: invokevirtual #25
303: iconst_1
304: invokevirtual #29
307: ldc           #24
309: invokevirtual #25
312: invokevirtual #27
315: iload         7
317: iconst_1
318: if_icmpne     325
321: iconst_1
322: goto          326
325: iconst_0
326: invokestatic  #31
329: return
Exception table:
from    to  target type
70    88    91   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0929
Start line: 9644
End line: 0
Method source code: 
    public void test0929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0929");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str6 = helpFormatter0.getNewLine();
        java.lang.String str7 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setDescPadding(74);
        java.lang.String str10 = helpFormatter0.getLongOptSeparator();
        helpFormatter0.defaultLeftPad = (short) -1;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\n" + "'", str6, "\n");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + " " + "'", str10, " ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #533
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #11
36: invokevirtual #51
39: aload_1
40: ldc           #11
42: putfield      #52
45: aload_1
46: getfield      #52
49: astore_2
50: aload_1
51: invokevirtual #16
54: astore_3
55: aload_1
56: getfield      #42
59: astore        4
61: aload_1
62: bipush        74
64: invokevirtual #37
67: aload_1
68: invokevirtual #72
71: astore        5
73: aload_1
74: iconst_m1
75: putfield      #40
78: new           #22
81: dup
82: invokespecial #23
85: ldc           #24
87: invokevirtual #25
90: aload_2
91: invokevirtual #25
94: ldc           #26
96: invokevirtual #25
99: invokevirtual #27
102: aload_2
103: ldc           #11
105: invokestatic  #28
108: new           #22
111: dup
112: invokespecial #23
115: ldc           #24
117: invokevirtual #25
120: aload_3
121: invokevirtual #25
124: ldc           #32
126: invokevirtual #25
129: invokevirtual #27
132: aload_3
133: ldc           #33
135: invokestatic  #28
138: new           #22
141: dup
142: invokespecial #23
145: ldc           #24
147: invokevirtual #25
150: aload         4
152: invokevirtual #25
155: ldc           #26
157: invokevirtual #25
160: invokevirtual #27
163: aload         4
165: ldc           #11
167: invokestatic  #28
170: new           #22
173: dup
174: invokespecial #23
177: ldc           #24
179: invokevirtual #25
182: aload         5
184: invokevirtual #25
187: ldc           #75
189: invokevirtual #25
192: invokevirtual #27
195: aload         5
197: ldc           #38
199: invokestatic  #28
202: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0930
Start line: 9663
End line: 0
Method source code: 
    public void test0930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0930");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setLongOptPrefix(" ");
        helpFormatter0.defaultDescPad = (short) 10;
        helpFormatter0.defaultSyntaxPrefix = "";
        helpFormatter0.setLongOptPrefix("");
        java.lang.String str13 = helpFormatter0.defaultNewLine;
        java.lang.String str14 = helpFormatter0.getLongOptPrefix();
        helpFormatter0.setSyntaxPrefix("                                                                                                    ");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #534
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: getfield      #42
48: astore_3
49: aload_1
50: ldc           #38
52: invokevirtual #43
55: aload_1
56: bipush        10
58: putfield      #44
61: aload_1
62: ldc           #11
64: putfield      #45
67: aload_1
68: ldc           #11
70: invokevirtual #43
73: aload_1
74: getfield      #36
77: astore        4
79: aload_1
80: invokevirtual #53
83: astore        5
85: aload_1
86: ldc           #118
88: invokevirtual #39
91: new           #22
94: dup
95: invokespecial #23
98: ldc           #24
100: invokevirtual #25
103: iload_2
104: invokevirtual #29
107: ldc           #30
109: invokevirtual #25
112: iconst_1
113: invokevirtual #29
116: ldc           #24
118: invokevirtual #25
121: invokevirtual #27
124: iload_2
125: iconst_1
126: if_icmpne     133
129: iconst_1
130: goto          134
133: iconst_0
134: invokestatic  #31
137: new           #22
140: dup
141: invokespecial #23
144: ldc           #24
146: invokevirtual #25
149: aload_3
150: invokevirtual #25
153: ldc           #48
155: invokevirtual #25
158: invokevirtual #27
161: aload_3
162: ldc           #49
164: invokestatic  #28
167: new           #22
170: dup
171: invokespecial #23
174: ldc           #24
176: invokevirtual #25
179: aload         4
181: invokevirtual #25
184: ldc           #26
186: invokevirtual #25
189: invokevirtual #27
192: aload         4
194: ldc           #11
196: invokestatic  #28
199: new           #22
202: dup
203: invokespecial #23
206: ldc           #24
208: invokevirtual #25
211: aload         5
213: invokevirtual #25
216: ldc           #26
218: invokevirtual #25
221: invokevirtual #27
224: aload         5
226: ldc           #11
228: invokestatic  #28
231: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0931
Start line: 9684
End line: 0
Method source code: 
    public void test0931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0931");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str3 = helpFormatter0.getOptPrefix();
        java.util.Comparator comparator4 = helpFormatter0.getOptionComparator();
        helpFormatter0.setArgName("                                                    ");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "--" + "'", str2, "--");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "-" + "'", str3, "-");
        org.junit.Assert.assertNotNull(comparator4);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #535
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: getfield      #52
42: astore_3
43: aload_1
44: invokevirtual #73
47: astore        4
49: aload_1
50: invokevirtual #58
53: astore        5
55: aload_1
56: ldc           #77
58: invokevirtual #59
61: new           #22
64: dup
65: invokespecial #23
68: ldc           #24
70: invokevirtual #25
73: iload_2
74: invokevirtual #29
77: ldc           #30
79: invokevirtual #25
82: iconst_1
83: invokevirtual #29
86: ldc           #24
88: invokevirtual #25
91: invokevirtual #27
94: iload_2
95: iconst_1
96: if_icmpne     103
99: iconst_1
100: goto          104
103: iconst_0
104: invokestatic  #31
107: new           #22
110: dup
111: invokespecial #23
114: ldc           #24
116: invokevirtual #25
119: aload_3
120: invokevirtual #25
123: ldc           #62
125: invokevirtual #25
128: invokevirtual #27
131: aload_3
132: ldc           #63
134: invokestatic  #28
137: new           #22
140: dup
141: invokespecial #23
144: ldc           #24
146: invokevirtual #25
149: aload         4
151: invokevirtual #25
154: ldc           #48
156: invokevirtual #25
159: invokevirtual #27
162: aload         4
164: ldc           #49
166: invokestatic  #28
169: aload         5
171: invokestatic  #21
174: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0932
Start line: 9700
End line: 0
Method source code: 
    public void test0932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0932");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setLongOptPrefix(" ");
        helpFormatter0.defaultDescPad = (short) 10;
        helpFormatter0.defaultSyntaxPrefix = "";
        java.lang.String str11 = helpFormatter0.defaultLongOptPrefix;
        org.apache.commons.cli.HelpFormatter helpFormatter12 = new org.apache.commons.cli.HelpFormatter();
        int int13 = helpFormatter12.getLeftPadding();
        helpFormatter12.defaultNewLine = "";
        java.lang.String str16 = helpFormatter12.defaultOptPrefix;
        helpFormatter12.setLongOptPrefix(" ");
        helpFormatter12.defaultDescPad = (short) 10;
        java.lang.String str21 = helpFormatter12.defaultArgName;
        java.util.Comparator comparator22 = helpFormatter12.optionComparator;
        helpFormatter0.optionComparator = comparator22;
        helpFormatter0.setDescPadding((int) (byte) -1);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + " " + "'", str11, " ");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "-" + "'", str16, "-");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "arg" + "'", str21, "arg");
        org.junit.Assert.assertNotNull(comparator22);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #536
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: getfield      #42
48: astore_3
49: aload_1
50: ldc           #38
52: invokevirtual #43
55: aload_1
56: bipush        10
58: putfield      #44
61: aload_1
62: ldc           #11
64: putfield      #45
67: aload_1
68: getfield      #52
71: astore        4
73: new           #8
76: dup
77: invokespecial #9
80: astore        5
82: aload         5
84: invokevirtual #35
87: istore        6
89: aload         5
91: ldc           #11
93: putfield      #36
96: aload         5
98: getfield      #42
101: astore        7
103: aload         5
105: ldc           #38
107: invokevirtual #43
110: aload         5
112: bipush        10
114: putfield      #44
117: aload         5
119: getfield      #15
122: astore        8
124: aload         5
126: getfield      #10
129: astore        9
131: aload_1
132: aload         9
134: putfield      #10
137: aload_1
138: iconst_m1
139: invokevirtual #37
142: new           #22
145: dup
146: invokespecial #23
149: ldc           #24
151: invokevirtual #25
154: iload_2
155: invokevirtual #29
158: ldc           #30
160: invokevirtual #25
163: iconst_1
164: invokevirtual #29
167: ldc           #24
169: invokevirtual #25
172: invokevirtual #27
175: iload_2
176: iconst_1
177: if_icmpne     184
180: iconst_1
181: goto          185
184: iconst_0
185: invokestatic  #31
188: new           #22
191: dup
192: invokespecial #23
195: ldc           #24
197: invokevirtual #25
200: aload_3
201: invokevirtual #25
204: ldc           #48
206: invokevirtual #25
209: invokevirtual #27
212: aload_3
213: ldc           #49
215: invokestatic  #28
218: new           #22
221: dup
222: invokespecial #23
225: ldc           #24
227: invokevirtual #25
230: aload         4
232: invokevirtual #25
235: ldc           #75
237: invokevirtual #25
240: invokevirtual #27
243: aload         4
245: ldc           #38
247: invokestatic  #28
250: new           #22
253: dup
254: invokespecial #23
257: ldc           #24
259: invokevirtual #25
262: iload         6
264: invokevirtual #29
267: ldc           #30
269: invokevirtual #25
272: iconst_1
273: invokevirtual #29
276: ldc           #24
278: invokevirtual #25
281: invokevirtual #27
284: iload         6
286: iconst_1
287: if_icmpne     294
290: iconst_1
291: goto          295
294: iconst_0
295: invokestatic  #31
298: new           #22
301: dup
302: invokespecial #23
305: ldc           #24
307: invokevirtual #25
310: aload         7
312: invokevirtual #25
315: ldc           #48
317: invokevirtual #25
320: invokevirtual #27
323: aload         7
325: ldc           #49
327: invokestatic  #28
330: new           #22
333: dup
334: invokespecial #23
337: ldc           #24
339: invokevirtual #25
342: aload         8
344: invokevirtual #25
347: ldc           #79
349: invokevirtual #25
352: invokevirtual #27
355: aload         8
357: ldc           #78
359: invokestatic  #28
362: aload         9
364: invokestatic  #21
367: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0933
Start line: 9731
End line: 0
Method source code: 
    public void test0933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0933");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        int int4 = helpFormatter0.defaultDescPad;
        helpFormatter0.defaultNewLine = " ";
        helpFormatter0.setArgName("          ");
        helpFormatter0.setLeftPadding(52);
        org.apache.commons.cli.Options options14 = null;
        try {
            helpFormatter0.printHelp((int) '#', "                                                                                                    ", "usage:", options14, "                                                    ");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 3 + "'", int4 == 3);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #537
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: getfield      #44
48: istore_3
49: aload_1
50: ldc           #38
52: putfield      #36
55: aload_1
56: ldc           #67
58: invokevirtual #59
61: aload_1
62: bipush        52
64: invokevirtual #55
67: aconst_null
68: astore        4
70: aload_1
71: bipush        35
73: ldc           #118
75: ldc           #108
77: aload         4
79: ldc           #77
81: invokevirtual #150
84: ldc           #18
86: invokestatic  #19
89: goto          94
92: astore        5
94: new           #22
97: dup
98: invokespecial #23
101: ldc           #24
103: invokevirtual #25
106: iload_2
107: invokevirtual #29
110: ldc           #30
112: invokevirtual #25
115: iconst_1
116: invokevirtual #29
119: ldc           #24
121: invokevirtual #25
124: invokevirtual #27
127: iload_2
128: iconst_1
129: if_icmpne     136
132: iconst_1
133: goto          137
136: iconst_0
137: invokestatic  #31
140: new           #22
143: dup
144: invokespecial #23
147: ldc           #24
149: invokevirtual #25
152: iload_3
153: invokevirtual #29
156: ldc           #30
158: invokevirtual #25
161: iconst_3
162: invokevirtual #29
165: ldc           #24
167: invokevirtual #25
170: invokevirtual #27
173: iload_3
174: iconst_3
175: if_icmpne     182
178: iconst_1
179: goto          183
182: iconst_0
183: invokestatic  #31
186: return
Exception table:
from    to  target type
70    89    92   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0934
Start line: 9754
End line: 0
Method source code: 
    public void test0934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0934");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str6 = helpFormatter0.getNewLine();
        java.lang.String str7 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setDescPadding(74);
        java.lang.String str10 = helpFormatter0.getLongOptSeparator();
        java.lang.String str11 = helpFormatter0.getSyntaxPrefix();
        java.lang.StringBuffer stringBuffer12 = null;
        org.apache.commons.cli.Options options14 = null;
        try {
            java.lang.StringBuffer stringBuffer17 = helpFormatter0.renderOptions(stringBuffer12, (int) (byte) 100, options14, (int) (short) 0, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\n" + "'", str6, "\n");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + " " + "'", str10, " ");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "usage: " + "'", str11, "usage: ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #538
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #11
36: invokevirtual #51
39: aload_1
40: ldc           #11
42: putfield      #52
45: aload_1
46: getfield      #52
49: astore_2
50: aload_1
51: invokevirtual #16
54: astore_3
55: aload_1
56: getfield      #42
59: astore        4
61: aload_1
62: bipush        74
64: invokevirtual #37
67: aload_1
68: invokevirtual #72
71: astore        5
73: aload_1
74: invokevirtual #89
77: astore        6
79: aconst_null
80: astore        7
82: aconst_null
83: astore        8
85: aload_1
86: aload         7
88: bipush        100
90: aload         8
92: iconst_0
93: bipush        97
95: invokevirtual #47
98: astore        9
100: ldc           #18
102: invokestatic  #19
105: goto          110
108: astore        9
110: new           #22
113: dup
114: invokespecial #23
117: ldc           #24
119: invokevirtual #25
122: aload_2
123: invokevirtual #25
126: ldc           #26
128: invokevirtual #25
131: invokevirtual #27
134: aload_2
135: ldc           #11
137: invokestatic  #28
140: new           #22
143: dup
144: invokespecial #23
147: ldc           #24
149: invokevirtual #25
152: aload_3
153: invokevirtual #25
156: ldc           #32
158: invokevirtual #25
161: invokevirtual #27
164: aload_3
165: ldc           #33
167: invokestatic  #28
170: new           #22
173: dup
174: invokespecial #23
177: ldc           #24
179: invokevirtual #25
182: aload         4
184: invokevirtual #25
187: ldc           #26
189: invokevirtual #25
192: invokevirtual #27
195: aload         4
197: ldc           #11
199: invokestatic  #28
202: new           #22
205: dup
206: invokespecial #23
209: ldc           #24
211: invokevirtual #25
214: aload         5
216: invokevirtual #25
219: ldc           #75
221: invokevirtual #25
224: invokevirtual #27
227: aload         5
229: ldc           #38
231: invokestatic  #28
234: new           #22
237: dup
238: invokespecial #23
241: ldc           #24
243: invokevirtual #25
246: aload         6
248: invokevirtual #25
251: ldc           #104
253: invokevirtual #25
256: invokevirtual #27
259: aload         6
261: ldc           #46
263: invokestatic  #28
266: return
Exception table:
from    to  target type
85   105   108   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0935
Start line: 9783
End line: 0
Method source code: 
    public void test0935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0935");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        java.lang.String str6 = helpFormatter0.rtrim("");
        int int7 = helpFormatter0.getDescPadding();
        helpFormatter0.defaultWidth = 0;
        java.util.Comparator comparator10 = helpFormatter0.optionComparator;
        java.lang.String str11 = helpFormatter0.getLongOptSeparator();
        java.util.Comparator comparator12 = helpFormatter0.optionComparator;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 3 + "'", int7 == 3);
        org.junit.Assert.assertNotNull(comparator10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + " " + "'", str11, " ");
        org.junit.Assert.assertNotNull(comparator12);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #539
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: getfield      #42
48: astore_3
49: aload_1
50: ldc           #11
52: invokevirtual #12
55: astore        4
57: aload_1
58: invokevirtual #13
61: istore        5
63: aload_1
64: iconst_0
65: putfield      #57
68: aload_1
69: getfield      #10
72: astore        6
74: aload_1
75: invokevirtual #72
78: astore        7
80: aload_1
81: getfield      #10
84: astore        8
86: new           #22
89: dup
90: invokespecial #23
93: ldc           #24
95: invokevirtual #25
98: iload_2
99: invokevirtual #29
102: ldc           #30
104: invokevirtual #25
107: iconst_1
108: invokevirtual #29
111: ldc           #24
113: invokevirtual #25
116: invokevirtual #27
119: iload_2
120: iconst_1
121: if_icmpne     128
124: iconst_1
125: goto          129
128: iconst_0
129: invokestatic  #31
132: new           #22
135: dup
136: invokespecial #23
139: ldc           #24
141: invokevirtual #25
144: aload_3
145: invokevirtual #25
148: ldc           #48
150: invokevirtual #25
153: invokevirtual #27
156: aload_3
157: ldc           #49
159: invokestatic  #28
162: new           #22
165: dup
166: invokespecial #23
169: ldc           #24
171: invokevirtual #25
174: aload         4
176: invokevirtual #25
179: ldc           #26
181: invokevirtual #25
184: invokevirtual #27
187: aload         4
189: ldc           #11
191: invokestatic  #28
194: new           #22
197: dup
198: invokespecial #23
201: ldc           #24
203: invokevirtual #25
206: iload         5
208: invokevirtual #29
211: ldc           #30
213: invokevirtual #25
216: iconst_3
217: invokevirtual #29
220: ldc           #24
222: invokevirtual #25
225: invokevirtual #27
228: iload         5
230: iconst_3
231: if_icmpne     238
234: iconst_1
235: goto          239
238: iconst_0
239: invokestatic  #31
242: aload         6
244: invokestatic  #21
247: new           #22
250: dup
251: invokespecial #23
254: ldc           #24
256: invokevirtual #25
259: aload         7
261: invokevirtual #25
264: ldc           #75
266: invokevirtual #25
269: invokevirtual #27
272: aload         7
274: ldc           #38
276: invokestatic  #28
279: aload         8
281: invokestatic  #21
284: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0936
Start line: 9806
End line: 0
Method source code: 
    public void test0936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0936");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.lang.String str1 = helpFormatter0.defaultSyntaxPrefix;
        java.util.Comparator comparator2 = helpFormatter0.optionComparator;
        java.lang.String str3 = helpFormatter0.defaultArgName;
        java.util.Comparator comparator4 = helpFormatter0.optionComparator;
        helpFormatter0.defaultLeftPad = (byte) -1;
        helpFormatter0.defaultLeftPad = (short) 1;
        java.lang.String str9 = helpFormatter0.getSyntaxPrefix();
        org.apache.commons.cli.Options options13 = null;
        try {
            helpFormatter0.printHelp((int) '#', "   ", "usage:", options13, "                                                    ", false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "usage: " + "'", str1, "usage: ");
        org.junit.Assert.assertNotNull(comparator2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "arg" + "'", str3, "arg");
        org.junit.Assert.assertNotNull(comparator4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "usage: " + "'", str9, "usage: ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #540
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: getfield      #45
37: astore_2
38: aload_1
39: getfield      #10
42: astore_3
43: aload_1
44: getfield      #15
47: astore        4
49: aload_1
50: getfield      #10
53: astore        5
55: aload_1
56: iconst_m1
57: putfield      #40
60: aload_1
61: iconst_1
62: putfield      #40
65: aload_1
66: invokevirtual #89
69: astore        6
71: aconst_null
72: astore        7
74: aload_1
75: bipush        35
77: ldc           #113
79: ldc           #108
81: aload         7
83: ldc           #77
85: iconst_0
86: invokevirtual #274
89: ldc           #18
91: invokestatic  #19
94: goto          99
97: astore        8
99: new           #22
102: dup
103: invokespecial #23
106: ldc           #24
108: invokevirtual #25
111: aload_2
112: invokevirtual #25
115: ldc           #104
117: invokevirtual #25
120: invokevirtual #27
123: aload_2
124: ldc           #46
126: invokestatic  #28
129: aload_3
130: invokestatic  #21
133: new           #22
136: dup
137: invokespecial #23
140: ldc           #24
142: invokevirtual #25
145: aload         4
147: invokevirtual #25
150: ldc           #79
152: invokevirtual #25
155: invokevirtual #27
158: aload         4
160: ldc           #78
162: invokestatic  #28
165: aload         5
167: invokestatic  #21
170: new           #22
173: dup
174: invokespecial #23
177: ldc           #24
179: invokevirtual #25
182: aload         6
184: invokevirtual #25
187: ldc           #104
189: invokevirtual #25
192: invokevirtual #27
195: aload         6
197: ldc           #46
199: invokestatic  #28
202: return
Exception table:
from    to  target type
74    94    97   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0937
Start line: 9833
End line: 0
Method source code: 
    public void test0937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0937");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str3 = helpFormatter0.getOptPrefix();
        java.lang.String str4 = helpFormatter0.getOptPrefix();
        int int5 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultLeftPad = 100;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "--" + "'", str2, "--");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "-" + "'", str3, "-");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #541
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: getfield      #52
42: astore_3
43: aload_1
44: invokevirtual #73
47: astore        4
49: aload_1
50: invokevirtual #73
53: astore        5
55: aload_1
56: invokevirtual #35
59: istore        6
61: aload_1
62: bipush        100
64: putfield      #40
67: new           #22
70: dup
71: invokespecial #23
74: ldc           #24
76: invokevirtual #25
79: iload_2
80: invokevirtual #29
83: ldc           #30
85: invokevirtual #25
88: iconst_1
89: invokevirtual #29
92: ldc           #24
94: invokevirtual #25
97: invokevirtual #27
100: iload_2
101: iconst_1
102: if_icmpne     109
105: iconst_1
106: goto          110
109: iconst_0
110: invokestatic  #31
113: new           #22
116: dup
117: invokespecial #23
120: ldc           #24
122: invokevirtual #25
125: aload_3
126: invokevirtual #25
129: ldc           #62
131: invokevirtual #25
134: invokevirtual #27
137: aload_3
138: ldc           #63
140: invokestatic  #28
143: new           #22
146: dup
147: invokespecial #23
150: ldc           #24
152: invokevirtual #25
155: aload         4
157: invokevirtual #25
160: ldc           #48
162: invokevirtual #25
165: invokevirtual #27
168: aload         4
170: ldc           #49
172: invokestatic  #28
175: new           #22
178: dup
179: invokespecial #23
182: ldc           #24
184: invokevirtual #25
187: aload         5
189: invokevirtual #25
192: ldc           #48
194: invokevirtual #25
197: invokevirtual #27
200: aload         5
202: ldc           #49
204: invokestatic  #28
207: new           #22
210: dup
211: invokespecial #23
214: ldc           #24
216: invokevirtual #25
219: iload         6
221: invokevirtual #29
224: ldc           #30
226: invokevirtual #25
229: iconst_1
230: invokevirtual #29
233: ldc           #24
235: invokevirtual #25
238: invokevirtual #27
241: iload         6
243: iconst_1
244: if_icmpne     251
247: iconst_1
248: goto          252
251: iconst_0
252: invokestatic  #31
255: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0938
Start line: 9851
End line: 0
Method source code: 
    public void test0938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0938");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        int int4 = helpFormatter0.defaultWidth;
        java.util.Comparator comparator5 = helpFormatter0.getOptionComparator();
        java.lang.String str6 = helpFormatter0.getLongOptSeparator();
        helpFormatter0.setArgName("hi!");
        helpFormatter0.setLongOptPrefix("                                                    ");
        java.lang.String str12 = helpFormatter0.createPadding((int) '#');
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 74 + "'", int4 == 74);
        org.junit.Assert.assertNotNull(comparator5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + " " + "'", str6, " ");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "                                   " + "'", str12, "                                   ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #542
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: getfield      #57
48: istore_3
49: aload_1
50: invokevirtual #58
53: astore        4
55: aload_1
56: invokevirtual #72
59: astore        5
61: aload_1
62: ldc           #65
64: invokevirtual #59
67: aload_1
68: ldc           #77
70: invokevirtual #43
73: aload_1
74: bipush        35
76: invokevirtual #93
79: astore        6
81: new           #22
84: dup
85: invokespecial #23
88: ldc           #24
90: invokevirtual #25
93: iload_2
94: invokevirtual #29
97: ldc           #30
99: invokevirtual #25
102: iconst_1
103: invokevirtual #29
106: ldc           #24
108: invokevirtual #25
111: invokevirtual #27
114: iload_2
115: iconst_1
116: if_icmpne     123
119: iconst_1
120: goto          124
123: iconst_0
124: invokestatic  #31
127: new           #22
130: dup
131: invokespecial #23
134: ldc           #24
136: invokevirtual #25
139: iload_3
140: invokevirtual #29
143: ldc           #30
145: invokevirtual #25
148: bipush        74
150: invokevirtual #29
153: ldc           #24
155: invokevirtual #25
158: invokevirtual #27
161: iload_3
162: bipush        74
164: if_icmpne     171
167: iconst_1
168: goto          172
171: iconst_0
172: invokestatic  #31
175: aload         4
177: invokestatic  #21
180: new           #22
183: dup
184: invokespecial #23
187: ldc           #24
189: invokevirtual #25
192: aload         5
194: invokevirtual #25
197: ldc           #75
199: invokevirtual #25
202: invokevirtual #27
205: aload         5
207: ldc           #38
209: invokestatic  #28
212: new           #22
215: dup
216: invokespecial #23
219: ldc           #24
221: invokevirtual #25
224: aload         6
226: invokevirtual #25
229: ldc_w         #543
232: invokevirtual #25
235: invokevirtual #27
238: aload         6
240: ldc_w         #544
243: invokestatic  #28
246: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0939
Start line: 9871
End line: 0
Method source code: 
    public void test0939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0939");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultOptPrefix;
        java.lang.String str6 = helpFormatter0.getLongOptPrefix();
        helpFormatter0.defaultArgName = "                                                                                                 ";
        int int9 = helpFormatter0.defaultLeftPad;
        helpFormatter0.setArgName("");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #545
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #11
36: invokevirtual #51
39: aload_1
40: ldc           #11
42: putfield      #52
45: aload_1
46: getfield      #42
49: astore_2
50: aload_1
51: invokevirtual #53
54: astore_3
55: aload_1
56: ldc           #14
58: putfield      #15
61: aload_1
62: getfield      #40
65: istore        4
67: aload_1
68: ldc           #11
70: invokevirtual #59
73: new           #22
76: dup
77: invokespecial #23
80: ldc           #24
82: invokevirtual #25
85: aload_2
86: invokevirtual #25
89: ldc           #26
91: invokevirtual #25
94: invokevirtual #27
97: aload_2
98: ldc           #11
100: invokestatic  #28
103: new           #22
106: dup
107: invokespecial #23
110: ldc           #24
112: invokevirtual #25
115: aload_3
116: invokevirtual #25
119: ldc           #26
121: invokevirtual #25
124: invokevirtual #27
127: aload_3
128: ldc           #11
130: invokestatic  #28
133: new           #22
136: dup
137: invokespecial #23
140: ldc           #24
142: invokevirtual #25
145: iload         4
147: invokevirtual #29
150: ldc           #30
152: invokevirtual #25
155: iconst_1
156: invokevirtual #29
159: ldc           #24
161: invokevirtual #25
164: invokevirtual #27
167: iload         4
169: iconst_1
170: if_icmpne     177
173: iconst_1
174: goto          178
177: iconst_0
178: invokestatic  #31
181: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0940
Start line: 9888
End line: 0
Method source code: 
    public void test0940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0940");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str6 = helpFormatter0.getNewLine();
        java.lang.String str7 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setDescPadding(74);
        java.lang.String str10 = helpFormatter0.getLongOptSeparator();
        java.lang.String str11 = helpFormatter0.defaultNewLine;
        helpFormatter0.setLeftPadding((int) (short) 10);
        int int14 = helpFormatter0.getDescPadding();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\n" + "'", str6, "\n");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + " " + "'", str10, " ");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\n" + "'", str11, "\n");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 74 + "'", int14 == 74);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #546
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #11
36: invokevirtual #51
39: aload_1
40: ldc           #11
42: putfield      #52
45: aload_1
46: getfield      #52
49: astore_2
50: aload_1
51: invokevirtual #16
54: astore_3
55: aload_1
56: getfield      #42
59: astore        4
61: aload_1
62: bipush        74
64: invokevirtual #37
67: aload_1
68: invokevirtual #72
71: astore        5
73: aload_1
74: getfield      #36
77: astore        6
79: aload_1
80: bipush        10
82: invokevirtual #55
85: aload_1
86: invokevirtual #13
89: istore        7
91: new           #22
94: dup
95: invokespecial #23
98: ldc           #24
100: invokevirtual #25
103: aload_2
104: invokevirtual #25
107: ldc           #26
109: invokevirtual #25
112: invokevirtual #27
115: aload_2
116: ldc           #11
118: invokestatic  #28
121: new           #22
124: dup
125: invokespecial #23
128: ldc           #24
130: invokevirtual #25
133: aload_3
134: invokevirtual #25
137: ldc           #32
139: invokevirtual #25
142: invokevirtual #27
145: aload_3
146: ldc           #33
148: invokestatic  #28
151: new           #22
154: dup
155: invokespecial #23
158: ldc           #24
160: invokevirtual #25
163: aload         4
165: invokevirtual #25
168: ldc           #26
170: invokevirtual #25
173: invokevirtual #27
176: aload         4
178: ldc           #11
180: invokestatic  #28
183: new           #22
186: dup
187: invokespecial #23
190: ldc           #24
192: invokevirtual #25
195: aload         5
197: invokevirtual #25
200: ldc           #75
202: invokevirtual #25
205: invokevirtual #27
208: aload         5
210: ldc           #38
212: invokestatic  #28
215: new           #22
218: dup
219: invokespecial #23
222: ldc           #24
224: invokevirtual #25
227: aload         6
229: invokevirtual #25
232: ldc           #32
234: invokevirtual #25
237: invokevirtual #27
240: aload         6
242: ldc           #33
244: invokestatic  #28
247: new           #22
250: dup
251: invokespecial #23
254: ldc           #24
256: invokevirtual #25
259: iload         7
261: invokevirtual #29
264: ldc           #30
266: invokevirtual #25
269: bipush        74
271: invokevirtual #29
274: ldc           #24
276: invokevirtual #25
279: invokevirtual #27
282: iload         7
284: bipush        74
286: if_icmpne     293
289: iconst_1
290: goto          294
293: iconst_0
294: invokestatic  #31
297: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0941
Start line: 9911
End line: 0
Method source code: 
    public void test0941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0941");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.getArgName();
        helpFormatter0.defaultNewLine = "\n";
        helpFormatter0.defaultLeftPad = (byte) -1;
        helpFormatter0.setLongOptSeparator("");
        helpFormatter0.setLongOptSeparator("-");
        java.lang.String str11 = helpFormatter0.getSyntaxPrefix();
        java.lang.String str13 = helpFormatter0.createPadding(100);
        int int17 = helpFormatter0.findWrapPos("          ", (int) (byte) 0, (int) '#');
        org.apache.commons.cli.Options options19 = null;
        try {
            helpFormatter0.printHelp("usage: ", options19, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: null");
        } catch (java.lang.NegativeArraySizeException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "arg" + "'", str2, "arg");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "usage: " + "'", str11, "usage: ");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "                                                                                                    " + "'", str13, "                                                                                                    ");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #547
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: invokevirtual #83
42: astore_3
43: aload_1
44: ldc           #33
46: putfield      #36
49: aload_1
50: iconst_m1
51: putfield      #40
54: aload_1
55: ldc           #11
57: invokevirtual #74
60: aload_1
61: ldc           #49
63: invokevirtual #74
66: aload_1
67: invokevirtual #89
70: astore        4
72: aload_1
73: bipush        100
75: invokevirtual #93
78: astore        5
80: aload_1
81: ldc           #67
83: iconst_0
84: bipush        35
86: invokevirtual #61
89: istore        6
91: aconst_null
92: astore        7
94: aload_1
95: ldc           #46
97: aload         7
99: iconst_0
100: invokevirtual #103
103: ldc           #84
105: invokestatic  #19
108: goto          113
111: astore        8
113: new           #22
116: dup
117: invokespecial #23
120: ldc           #24
122: invokevirtual #25
125: iload_2
126: invokevirtual #29
129: ldc           #30
131: invokevirtual #25
134: iconst_1
135: invokevirtual #29
138: ldc           #24
140: invokevirtual #25
143: invokevirtual #27
146: iload_2
147: iconst_1
148: if_icmpne     155
151: iconst_1
152: goto          156
155: iconst_0
156: invokestatic  #31
159: new           #22
162: dup
163: invokespecial #23
166: ldc           #24
168: invokevirtual #25
171: aload_3
172: invokevirtual #25
175: ldc           #79
177: invokevirtual #25
180: invokevirtual #27
183: aload_3
184: ldc           #78
186: invokestatic  #28
189: new           #22
192: dup
193: invokespecial #23
196: ldc           #24
198: invokevirtual #25
201: aload         4
203: invokevirtual #25
206: ldc           #104
208: invokevirtual #25
211: invokevirtual #27
214: aload         4
216: ldc           #46
218: invokestatic  #28
221: new           #22
224: dup
225: invokespecial #23
228: ldc           #24
230: invokevirtual #25
233: aload         5
235: invokevirtual #25
238: ldc           #222
240: invokevirtual #25
243: invokevirtual #27
246: aload         5
248: ldc           #118
250: invokestatic  #28
253: new           #22
256: dup
257: invokespecial #23
260: ldc           #24
262: invokevirtual #25
265: iload         6
267: invokevirtual #29
270: ldc           #30
272: invokevirtual #25
275: iconst_m1
276: invokevirtual #29
279: ldc           #24
281: invokevirtual #25
284: invokevirtual #27
287: iload         6
289: iconst_m1
290: if_icmpne     297
293: iconst_1
294: goto          298
297: iconst_0
298: invokestatic  #31
301: return
Exception table:
from    to  target type
94   108   111   Class java/lang/NegativeArraySizeException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0942
Start line: 9940
End line: 0
Method source code: 
    public void test0942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0942");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str6 = helpFormatter0.getNewLine();
        java.util.Comparator comparator7 = helpFormatter0.getOptionComparator();
        org.apache.commons.cli.HelpFormatter helpFormatter8 = new org.apache.commons.cli.HelpFormatter();
        int int9 = helpFormatter8.getLeftPadding();
        helpFormatter8.defaultNewLine = "";
        java.lang.String str12 = helpFormatter8.defaultOptPrefix;
        helpFormatter8.setLongOptPrefix(" ");
        helpFormatter8.defaultDescPad = (short) 10;
        java.lang.String str17 = helpFormatter8.defaultArgName;
        java.util.Comparator comparator18 = helpFormatter8.optionComparator;
        helpFormatter0.setOptionComparator(comparator18);
        helpFormatter0.setLongOptSeparator("          ");
        helpFormatter0.setWidth(100);
        helpFormatter0.defaultWidth = (short) 100;
        java.io.PrintWriter printWriter26 = null;
        org.apache.commons.cli.Options options29 = null;
        try {
            helpFormatter0.printUsage(printWriter26, 10, "                                                                                                    ", options29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\n" + "'", str6, "\n");
        org.junit.Assert.assertNotNull(comparator7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "-" + "'", str12, "-");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "arg" + "'", str17, "arg");
        org.junit.Assert.assertNotNull(comparator18);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #548
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #11
36: invokevirtual #51
39: aload_1
40: ldc           #11
42: putfield      #52
45: aload_1
46: getfield      #52
49: astore_2
50: aload_1
51: invokevirtual #16
54: astore_3
55: aload_1
56: invokevirtual #58
59: astore        4
61: new           #8
64: dup
65: invokespecial #9
68: astore        5
70: aload         5
72: invokevirtual #35
75: istore        6
77: aload         5
79: ldc           #11
81: putfield      #36
84: aload         5
86: getfield      #42
89: astore        7
91: aload         5
93: ldc           #38
95: invokevirtual #43
98: aload         5
100: bipush        10
102: putfield      #44
105: aload         5
107: getfield      #15
110: astore        8
112: aload         5
114: getfield      #10
117: astore        9
119: aload_1
120: aload         9
122: invokevirtual #99
125: aload_1
126: ldc           #67
128: invokevirtual #74
131: aload_1
132: bipush        100
134: invokevirtual #90
137: aload_1
138: bipush        100
140: putfield      #57
143: aconst_null
144: astore        10
146: aconst_null
147: astore        11
149: aload_1
150: aload         10
152: bipush        10
154: ldc           #118
156: aload         11
158: invokevirtual #81
161: ldc           #18
163: invokestatic  #19
166: goto          171
169: astore        12
171: new           #22
174: dup
175: invokespecial #23
178: ldc           #24
180: invokevirtual #25
183: aload_2
184: invokevirtual #25
187: ldc           #26
189: invokevirtual #25
192: invokevirtual #27
195: aload_2
196: ldc           #11
198: invokestatic  #28
201: new           #22
204: dup
205: invokespecial #23
208: ldc           #24
210: invokevirtual #25
213: aload_3
214: invokevirtual #25
217: ldc           #32
219: invokevirtual #25
222: invokevirtual #27
225: aload_3
226: ldc           #33
228: invokestatic  #28
231: aload         4
233: invokestatic  #21
236: new           #22
239: dup
240: invokespecial #23
243: ldc           #24
245: invokevirtual #25
248: iload         6
250: invokevirtual #29
253: ldc           #30
255: invokevirtual #25
258: iconst_1
259: invokevirtual #29
262: ldc           #24
264: invokevirtual #25
267: invokevirtual #27
270: iload         6
272: iconst_1
273: if_icmpne     280
276: iconst_1
277: goto          281
280: iconst_0
281: invokestatic  #31
284: new           #22
287: dup
288: invokespecial #23
291: ldc           #24
293: invokevirtual #25
296: aload         7
298: invokevirtual #25
301: ldc           #48
303: invokevirtual #25
306: invokevirtual #27
309: aload         7
311: ldc           #49
313: invokestatic  #28
316: new           #22
319: dup
320: invokespecial #23
323: ldc           #24
325: invokevirtual #25
328: aload         8
330: invokevirtual #25
333: ldc           #79
335: invokevirtual #25
338: invokevirtual #27
341: aload         8
343: ldc           #78
345: invokestatic  #28
348: aload         9
350: invokestatic  #21
353: return
Exception table:
from    to  target type
149   166   169   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0943
Start line: 9980
End line: 0
Method source code: 
    public void test0943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0943");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setLongOptPrefix(" ");
        helpFormatter0.defaultOptPrefix = "usage: ";
        helpFormatter0.setArgName("                                                                                                 ");
        java.io.PrintWriter printWriter11 = null;
        org.apache.commons.cli.Options options13 = null;
        try {
            helpFormatter0.printOptions(printWriter11, 100, options13, 97, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #549
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: getfield      #42
48: astore_3
49: aload_1
50: ldc           #38
52: invokevirtual #43
55: aload_1
56: ldc           #46
58: putfield      #42
61: aload_1
62: ldc           #14
64: invokevirtual #59
67: aconst_null
68: astore        4
70: aconst_null
71: astore        5
73: aload_1
74: aload         4
76: bipush        100
78: aload         5
80: bipush        97
82: iconst_0
83: invokevirtual #17
86: ldc           #18
88: invokestatic  #19
91: goto          96
94: astore        6
96: new           #22
99: dup
100: invokespecial #23
103: ldc           #24
105: invokevirtual #25
108: iload_2
109: invokevirtual #29
112: ldc           #30
114: invokevirtual #25
117: iconst_1
118: invokevirtual #29
121: ldc           #24
123: invokevirtual #25
126: invokevirtual #27
129: iload_2
130: iconst_1
131: if_icmpne     138
134: iconst_1
135: goto          139
138: iconst_0
139: invokestatic  #31
142: new           #22
145: dup
146: invokespecial #23
149: ldc           #24
151: invokevirtual #25
154: aload_3
155: invokevirtual #25
158: ldc           #48
160: invokevirtual #25
163: invokevirtual #27
166: aload_3
167: ldc           #49
169: invokestatic  #28
172: return
Exception table:
from    to  target type
73    91    94   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0944
Start line: 10004
End line: 0
Method source code: 
    public void test0944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0944");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        org.apache.commons.cli.HelpFormatter helpFormatter4 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter4.setOptPrefix("");
        helpFormatter4.defaultLongOptPrefix = "";
        java.lang.String str9 = helpFormatter4.defaultLongOptPrefix;
        helpFormatter4.defaultDescPad = 0;
        org.apache.commons.cli.HelpFormatter helpFormatter12 = new org.apache.commons.cli.HelpFormatter();
        java.util.Comparator comparator13 = helpFormatter12.optionComparator;
        int int14 = helpFormatter12.getLeftPadding();
        int int15 = helpFormatter12.defaultLeftPad;
        java.lang.String str17 = helpFormatter12.createPadding((int) 'a');
        org.apache.commons.cli.HelpFormatter helpFormatter18 = new org.apache.commons.cli.HelpFormatter();
        int int19 = helpFormatter18.getLeftPadding();
        helpFormatter18.defaultNewLine = "";
        helpFormatter18.defaultDescPad = '4';
        helpFormatter18.setNewLine("");
        int int29 = helpFormatter18.findWrapPos("\n", (int) ' ', 3);
        java.util.Comparator comparator30 = helpFormatter18.optionComparator;
        helpFormatter12.setOptionComparator(comparator30);
        helpFormatter4.setOptionComparator(comparator30);
        helpFormatter0.optionComparator = comparator30;
        int int34 = helpFormatter0.defaultWidth;
        org.apache.commons.cli.HelpFormatter helpFormatter35 = new org.apache.commons.cli.HelpFormatter();
        int int36 = helpFormatter35.getLeftPadding();
        helpFormatter35.defaultNewLine = "";
        helpFormatter35.setDescPadding(10);
        java.lang.String str41 = helpFormatter35.getOptPrefix();
        java.lang.String str42 = helpFormatter35.getNewLine();
        helpFormatter35.defaultOptPrefix = "";
        helpFormatter35.setNewLine("");
        helpFormatter35.defaultSyntaxPrefix = "usage: ";
        java.lang.String str49 = helpFormatter35.getArgName();
        java.util.Comparator comparator50 = helpFormatter35.optionComparator;
        helpFormatter0.setOptionComparator(comparator50);
        java.io.PrintWriter printWriter52 = null;
        try {
            helpFormatter0.printWrapped(printWriter52, (int) ' ', "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(comparator13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "                                                                                                 " + "'", str17, "                                                                                                 ");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(comparator30);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 74 + "'", int34 == 74);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "-" + "'", str41, "-");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "arg" + "'", str49, "arg");
        org.junit.Assert.assertNotNull(comparator50);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #550
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: new           #8
47: dup
48: invokespecial #9
51: astore_3
52: aload_3
53: ldc           #11
55: invokevirtual #51
58: aload_3
59: ldc           #11
61: putfield      #52
64: aload_3
65: getfield      #52
68: astore        4
70: aload_3
71: iconst_0
72: putfield      #44
75: new           #8
78: dup
79: invokespecial #9
82: astore        5
84: aload         5
86: getfield      #10
89: astore        6
91: aload         5
93: invokevirtual #35
96: istore        7
98: aload         5
100: getfield      #40
103: istore        8
105: aload         5
107: bipush        97
109: invokevirtual #93
112: astore        9
114: new           #8
117: dup
118: invokespecial #9
121: astore        10
123: aload         10
125: invokevirtual #35
128: istore        11
130: aload         10
132: ldc           #11
134: putfield      #36
137: aload         10
139: bipush        52
141: putfield      #44
144: aload         10
146: ldc           #11
148: invokevirtual #88
151: aload         10
153: ldc           #33
155: bipush        32
157: iconst_3
158: invokevirtual #61
161: istore        12
163: aload         10
165: getfield      #10
168: astore        13
170: aload         5
172: aload         13
174: invokevirtual #99
177: aload_3
178: aload         13
180: invokevirtual #99
183: aload_1
184: aload         13
186: putfield      #10
189: aload_1
190: getfield      #57
193: istore        14
195: new           #8
198: dup
199: invokespecial #9
202: astore        15
204: aload         15
206: invokevirtual #35
209: istore        16
211: aload         15
213: ldc           #11
215: putfield      #36
218: aload         15
220: bipush        10
222: invokevirtual #37
225: aload         15
227: invokevirtual #73
230: astore        17
232: aload         15
234: invokevirtual #16
237: astore        18
239: aload         15
241: ldc           #11
243: putfield      #42
246: aload         15
248: ldc           #11
250: invokevirtual #88
253: aload         15
255: ldc           #46
257: putfield      #45
260: aload         15
262: invokevirtual #83
265: astore        19
267: aload         15
269: getfield      #10
272: astore        20
274: aload_1
275: aload         20
277: invokevirtual #99
280: aconst_null
281: astore        21
283: aload_1
284: aload         21
286: bipush        32
288: ldc           #11
290: invokevirtual #180
293: ldc           #18
295: invokestatic  #19
298: goto          303
301: astore        22
303: new           #22
306: dup
307: invokespecial #23
310: ldc           #24
312: invokevirtual #25
315: iload_2
316: invokevirtual #29
319: ldc           #30
321: invokevirtual #25
324: iconst_1
325: invokevirtual #29
328: ldc           #24
330: invokevirtual #25
333: invokevirtual #27
336: iload_2
337: iconst_1
338: if_icmpne     345
341: iconst_1
342: goto          346
345: iconst_0
346: invokestatic  #31
349: new           #22
352: dup
353: invokespecial #23
356: ldc           #24
358: invokevirtual #25
361: aload         4
363: invokevirtual #25
366: ldc           #26
368: invokevirtual #25
371: invokevirtual #27
374: aload         4
376: ldc           #11
378: invokestatic  #28
381: aload         6
383: invokestatic  #21
386: new           #22
389: dup
390: invokespecial #23
393: ldc           #24
395: invokevirtual #25
398: iload         7
400: invokevirtual #29
403: ldc           #30
405: invokevirtual #25
408: iconst_1
409: invokevirtual #29
412: ldc           #24
414: invokevirtual #25
417: invokevirtual #27
420: iload         7
422: iconst_1
423: if_icmpne     430
426: iconst_1
427: goto          431
430: iconst_0
431: invokestatic  #31
434: new           #22
437: dup
438: invokespecial #23
441: ldc           #24
443: invokevirtual #25
446: iload         8
448: invokevirtual #29
451: ldc           #30
453: invokevirtual #25
456: iconst_1
457: invokevirtual #29
460: ldc           #24
462: invokevirtual #25
465: invokevirtual #27
468: iload         8
470: iconst_1
471: if_icmpne     478
474: iconst_1
475: goto          479
478: iconst_0
479: invokestatic  #31
482: new           #22
485: dup
486: invokespecial #23
489: ldc           #24
491: invokevirtual #25
494: aload         9
496: invokevirtual #25
499: ldc           #142
501: invokevirtual #25
504: invokevirtual #27
507: aload         9
509: ldc           #14
511: invokestatic  #28
514: new           #22
517: dup
518: invokespecial #23
521: ldc           #24
523: invokevirtual #25
526: iload         11
528: invokevirtual #29
531: ldc           #30
533: invokevirtual #25
536: iconst_1
537: invokevirtual #29
540: ldc           #24
542: invokevirtual #25
545: invokevirtual #27
548: iload         11
550: iconst_1
551: if_icmpne     558
554: iconst_1
555: goto          559
558: iconst_0
559: invokestatic  #31
562: new           #22
565: dup
566: invokespecial #23
569: ldc           #24
571: invokevirtual #25
574: iload         12
576: invokevirtual #29
579: ldc           #30
581: invokevirtual #25
584: iconst_m1
585: invokevirtual #29
588: ldc           #24
590: invokevirtual #25
593: invokevirtual #27
596: iload         12
598: iconst_m1
599: if_icmpne     606
602: iconst_1
603: goto          607
606: iconst_0
607: invokestatic  #31
610: aload         13
612: invokestatic  #21
615: new           #22
618: dup
619: invokespecial #23
622: ldc           #24
624: invokevirtual #25
627: iload         14
629: invokevirtual #29
632: ldc           #30
634: invokevirtual #25
637: bipush        74
639: invokevirtual #29
642: ldc           #24
644: invokevirtual #25
647: invokevirtual #27
650: iload         14
652: bipush        74
654: if_icmpne     661
657: iconst_1
658: goto          662
661: iconst_0
662: invokestatic  #31
665: new           #22
668: dup
669: invokespecial #23
672: ldc           #24
674: invokevirtual #25
677: iload         16
679: invokevirtual #29
682: ldc           #30
684: invokevirtual #25
687: iconst_1
688: invokevirtual #29
691: ldc           #24
693: invokevirtual #25
696: invokevirtual #27
699: iload         16
701: iconst_1
702: if_icmpne     709
705: iconst_1
706: goto          710
709: iconst_0
710: invokestatic  #31
713: new           #22
716: dup
717: invokespecial #23
720: ldc           #24
722: invokevirtual #25
725: aload         17
727: invokevirtual #25
730: ldc           #48
732: invokevirtual #25
735: invokevirtual #27
738: aload         17
740: ldc           #49
742: invokestatic  #28
745: new           #22
748: dup
749: invokespecial #23
752: ldc           #24
754: invokevirtual #25
757: aload         18
759: invokevirtual #25
762: ldc           #26
764: invokevirtual #25
767: invokevirtual #27
770: aload         18
772: ldc           #11
774: invokestatic  #28
777: new           #22
780: dup
781: invokespecial #23
784: ldc           #24
786: invokevirtual #25
789: aload         19
791: invokevirtual #25
794: ldc           #79
796: invokevirtual #25
799: invokevirtual #27
802: aload         19
804: ldc           #78
806: invokestatic  #28
809: aload         20
811: invokestatic  #21
814: return
Exception table:
from    to  target type
283   298   301   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0945
Start line: 10069
End line: 0
Method source code: 
    public void test0945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0945");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.lang.String str1 = helpFormatter0.defaultSyntaxPrefix;
        java.util.Comparator comparator2 = helpFormatter0.optionComparator;
        java.lang.String str3 = helpFormatter0.defaultArgName;
        java.util.Comparator comparator4 = helpFormatter0.optionComparator;
        java.lang.String str5 = helpFormatter0.getLongOptSeparator();
        helpFormatter0.defaultOptPrefix = "hi!";
        int int8 = helpFormatter0.defaultWidth;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "usage: " + "'", str1, "usage: ");
        org.junit.Assert.assertNotNull(comparator2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "arg" + "'", str3, "arg");
        org.junit.Assert.assertNotNull(comparator4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + " " + "'", str5, " ");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 74 + "'", int8 == 74);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #551
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: getfield      #45
37: astore_2
38: aload_1
39: getfield      #10
42: astore_3
43: aload_1
44: getfield      #15
47: astore        4
49: aload_1
50: getfield      #10
53: astore        5
55: aload_1
56: invokevirtual #72
59: astore        6
61: aload_1
62: ldc           #65
64: putfield      #42
67: aload_1
68: getfield      #57
71: istore        7
73: new           #22
76: dup
77: invokespecial #23
80: ldc           #24
82: invokevirtual #25
85: aload_2
86: invokevirtual #25
89: ldc           #104
91: invokevirtual #25
94: invokevirtual #27
97: aload_2
98: ldc           #46
100: invokestatic  #28
103: aload_3
104: invokestatic  #21
107: new           #22
110: dup
111: invokespecial #23
114: ldc           #24
116: invokevirtual #25
119: aload         4
121: invokevirtual #25
124: ldc           #79
126: invokevirtual #25
129: invokevirtual #27
132: aload         4
134: ldc           #78
136: invokestatic  #28
139: aload         5
141: invokestatic  #21
144: new           #22
147: dup
148: invokespecial #23
151: ldc           #24
153: invokevirtual #25
156: aload         6
158: invokevirtual #25
161: ldc           #75
163: invokevirtual #25
166: invokevirtual #27
169: aload         6
171: ldc           #38
173: invokestatic  #28
176: new           #22
179: dup
180: invokespecial #23
183: ldc           #24
185: invokevirtual #25
188: iload         7
190: invokevirtual #29
193: ldc           #30
195: invokevirtual #25
198: bipush        74
200: invokevirtual #29
203: ldc           #24
205: invokevirtual #25
208: invokevirtual #27
211: iload         7
213: bipush        74
215: if_icmpne     222
218: iconst_1
219: goto          223
222: iconst_0
223: invokestatic  #31
226: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0946
Start line: 10089
End line: 0
Method source code: 
    public void test0946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0946");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        helpFormatter0.defaultArgName = "hi!";
        java.util.Comparator comparator8 = helpFormatter0.getOptionComparator();
        int int9 = helpFormatter0.defaultWidth;
        java.lang.String str11 = helpFormatter0.createPadding(0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(comparator8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 74 + "'", int9 == 74);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #552
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: bipush        10
47: invokevirtual #37
50: aload_1
51: ldc           #65
53: putfield      #15
56: aload_1
57: invokevirtual #58
60: astore_3
61: aload_1
62: getfield      #57
65: istore        4
67: aload_1
68: iconst_0
69: invokevirtual #93
72: astore        5
74: new           #22
77: dup
78: invokespecial #23
81: ldc           #24
83: invokevirtual #25
86: iload_2
87: invokevirtual #29
90: ldc           #30
92: invokevirtual #25
95: iconst_1
96: invokevirtual #29
99: ldc           #24
101: invokevirtual #25
104: invokevirtual #27
107: iload_2
108: iconst_1
109: if_icmpne     116
112: iconst_1
113: goto          117
116: iconst_0
117: invokestatic  #31
120: aload_3
121: invokestatic  #21
124: new           #22
127: dup
128: invokespecial #23
131: ldc           #24
133: invokevirtual #25
136: iload         4
138: invokevirtual #29
141: ldc           #30
143: invokevirtual #25
146: bipush        74
148: invokevirtual #29
151: ldc           #24
153: invokevirtual #25
156: invokevirtual #27
159: iload         4
161: bipush        74
163: if_icmpne     170
166: iconst_1
167: goto          171
170: iconst_0
171: invokestatic  #31
174: new           #22
177: dup
178: invokespecial #23
181: ldc           #24
183: invokevirtual #25
186: aload         5
188: invokevirtual #25
191: ldc           #26
193: invokevirtual #25
196: invokevirtual #27
199: aload         5
201: ldc           #11
203: invokestatic  #28
206: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0947
Start line: 10107
End line: 0
Method source code: 
    public void test0947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0947");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.defaultLongOptPrefix = "hi!";
        java.lang.String str3 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str4 = helpFormatter0.defaultNewLine;
        helpFormatter0.defaultWidth = (short) 100;
        java.lang.String str7 = helpFormatter0.getArgName();
        java.lang.String str8 = helpFormatter0.defaultNewLine;
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!" + "'", str3, "hi!");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\n" + "'", str4, "\n");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "arg" + "'", str7, "arg");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\n" + "'", str8, "\n");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #553
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #65
36: putfield      #52
39: aload_1
40: getfield      #52
43: astore_2
44: aload_1
45: getfield      #36
48: astore_3
49: aload_1
50: bipush        100
52: putfield      #57
55: aload_1
56: invokevirtual #83
59: astore        4
61: aload_1
62: getfield      #36
65: astore        5
67: new           #22
70: dup
71: invokespecial #23
74: ldc           #24
76: invokevirtual #25
79: aload_2
80: invokevirtual #25
83: ldc           #97
85: invokevirtual #25
88: invokevirtual #27
91: aload_2
92: ldc           #65
94: invokestatic  #28
97: new           #22
100: dup
101: invokespecial #23
104: ldc           #24
106: invokevirtual #25
109: aload_3
110: invokevirtual #25
113: ldc           #32
115: invokevirtual #25
118: invokevirtual #27
121: aload_3
122: ldc           #33
124: invokestatic  #28
127: new           #22
130: dup
131: invokespecial #23
134: ldc           #24
136: invokevirtual #25
139: aload         4
141: invokevirtual #25
144: ldc           #79
146: invokevirtual #25
149: invokevirtual #27
152: aload         4
154: ldc           #78
156: invokestatic  #28
159: new           #22
162: dup
163: invokespecial #23
166: ldc           #24
168: invokevirtual #25
171: aload         5
173: invokevirtual #25
176: ldc           #32
178: invokevirtual #25
181: invokevirtual #27
184: aload         5
186: ldc           #33
188: invokestatic  #28
191: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0948
Start line: 10124
End line: 0
Method source code: 
    public void test0948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0948");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.util.Comparator comparator1 = helpFormatter0.optionComparator;
        java.lang.String str2 = helpFormatter0.getLongOptPrefix();
        int int6 = helpFormatter0.findWrapPos("\n", 0, (-2));
        java.util.Comparator comparator7 = helpFormatter0.getOptionComparator();
        org.junit.Assert.assertNotNull(comparator1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "--" + "'", str2, "--");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(comparator7);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #554
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: getfield      #10
37: astore_2
38: aload_1
39: invokevirtual #53
42: astore_3
43: aload_1
44: ldc           #33
46: iconst_0
47: bipush        -2
49: invokevirtual #61
52: istore        4
54: aload_1
55: invokevirtual #58
58: astore        5
60: aload_2
61: invokestatic  #21
64: new           #22
67: dup
68: invokespecial #23
71: ldc           #24
73: invokevirtual #25
76: aload_3
77: invokevirtual #25
80: ldc           #62
82: invokevirtual #25
85: invokevirtual #27
88: aload_3
89: ldc           #63
91: invokestatic  #28
94: new           #22
97: dup
98: invokespecial #23
101: ldc           #24
103: invokevirtual #25
106: iload         4
108: invokevirtual #29
111: ldc           #30
113: invokevirtual #25
116: iconst_1
117: invokevirtual #29
120: ldc           #24
122: invokevirtual #25
125: invokevirtual #27
128: iload         4
130: iconst_1
131: if_icmpne     138
134: iconst_1
135: goto          139
138: iconst_0
139: invokestatic  #31
142: aload         5
144: invokestatic  #21
147: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0949
Start line: 10139
End line: 0
Method source code: 
    public void test0949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0949");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str6 = helpFormatter0.getNewLine();
        java.util.Comparator comparator7 = helpFormatter0.getOptionComparator();
        org.apache.commons.cli.Options options10 = null;
        try {
            helpFormatter0.printHelp("", "", options10, "                                                                                                 ");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: cmdLineSyntax not provided");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\n" + "'", str6, "\n");
        org.junit.Assert.assertNotNull(comparator7);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #555
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #11
36: invokevirtual #51
39: aload_1
40: ldc           #11
42: putfield      #52
45: aload_1
46: getfield      #52
49: astore_2
50: aload_1
51: invokevirtual #16
54: astore_3
55: aload_1
56: invokevirtual #58
59: astore        4
61: aconst_null
62: astore        5
64: aload_1
65: ldc           #11
67: ldc           #11
69: aload         5
71: ldc           #14
73: invokevirtual #128
76: ldc           #69
78: invokestatic  #19
81: goto          86
84: astore        6
86: new           #22
89: dup
90: invokespecial #23
93: ldc           #24
95: invokevirtual #25
98: aload_2
99: invokevirtual #25
102: ldc           #26
104: invokevirtual #25
107: invokevirtual #27
110: aload_2
111: ldc           #11
113: invokestatic  #28
116: new           #22
119: dup
120: invokespecial #23
123: ldc           #24
125: invokevirtual #25
128: aload_3
129: invokevirtual #25
132: ldc           #32
134: invokevirtual #25
137: invokevirtual #27
140: aload_3
141: ldc           #33
143: invokestatic  #28
146: aload         4
148: invokestatic  #21
151: return
Exception table:
from    to  target type
64    81    84   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0950
Start line: 10162
End line: 0
Method source code: 
    public void test0950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0950");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        java.lang.String str6 = helpFormatter0.rtrim("");
        java.lang.String str8 = helpFormatter0.rtrim("-");
        helpFormatter0.defaultOptPrefix = "--";
        helpFormatter0.defaultDescPad = 3;
        java.io.PrintWriter printWriter13 = null;
        org.apache.commons.cli.Options options15 = null;
        try {
            helpFormatter0.printOptions(printWriter13, 74, options15, (int) (short) 100, 3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "-" + "'", str8, "-");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #556
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: getfield      #42
48: astore_3
49: aload_1
50: ldc           #11
52: invokevirtual #12
55: astore        4
57: aload_1
58: ldc           #49
60: invokevirtual #12
63: astore        5
65: aload_1
66: ldc           #63
68: putfield      #42
71: aload_1
72: iconst_3
73: putfield      #44
76: aconst_null
77: astore        6
79: aconst_null
80: astore        7
82: aload_1
83: aload         6
85: bipush        74
87: aload         7
89: bipush        100
91: iconst_3
92: invokevirtual #17
95: ldc           #18
97: invokestatic  #19
100: goto          105
103: astore        8
105: new           #22
108: dup
109: invokespecial #23
112: ldc           #24
114: invokevirtual #25
117: iload_2
118: invokevirtual #29
121: ldc           #30
123: invokevirtual #25
126: iconst_1
127: invokevirtual #29
130: ldc           #24
132: invokevirtual #25
135: invokevirtual #27
138: iload_2
139: iconst_1
140: if_icmpne     147
143: iconst_1
144: goto          148
147: iconst_0
148: invokestatic  #31
151: new           #22
154: dup
155: invokespecial #23
158: ldc           #24
160: invokevirtual #25
163: aload_3
164: invokevirtual #25
167: ldc           #48
169: invokevirtual #25
172: invokevirtual #27
175: aload_3
176: ldc           #49
178: invokestatic  #28
181: new           #22
184: dup
185: invokespecial #23
188: ldc           #24
190: invokevirtual #25
193: aload         4
195: invokevirtual #25
198: ldc           #26
200: invokevirtual #25
203: invokevirtual #27
206: aload         4
208: ldc           #11
210: invokestatic  #28
213: new           #22
216: dup
217: invokespecial #23
220: ldc           #24
222: invokevirtual #25
225: aload         5
227: invokevirtual #25
230: ldc           #48
232: invokevirtual #25
235: invokevirtual #27
238: aload         5
240: ldc           #49
242: invokestatic  #28
245: return
Exception table:
from    to  target type
82   100   103   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0951
Start line: 10189
End line: 0
Method source code: 
    public void test0951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0951");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.lang.String str1 = helpFormatter0.defaultSyntaxPrefix;
        helpFormatter0.setArgName("-");
        java.lang.String str4 = helpFormatter0.getNewLine();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "usage: " + "'", str1, "usage: ");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\n" + "'", str4, "\n");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #557
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: getfield      #45
37: astore_2
38: aload_1
39: ldc           #49
41: invokevirtual #59
44: aload_1
45: invokevirtual #16
48: astore_3
49: new           #22
52: dup
53: invokespecial #23
56: ldc           #24
58: invokevirtual #25
61: aload_2
62: invokevirtual #25
65: ldc           #104
67: invokevirtual #25
70: invokevirtual #27
73: aload_2
74: ldc           #46
76: invokestatic  #28
79: new           #22
82: dup
83: invokespecial #23
86: ldc           #24
88: invokevirtual #25
91: aload_3
92: invokevirtual #25
95: ldc           #32
97: invokevirtual #25
100: invokevirtual #27
103: aload_3
104: ldc           #33
106: invokestatic  #28
109: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0952
Start line: 10201
End line: 0
Method source code: 
    public void test0952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0952");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        java.lang.String str6 = helpFormatter0.rtrim("");
        int int10 = helpFormatter0.findWrapPos(" ", (int) (byte) 10, (int) (short) 10);
        java.lang.String str11 = helpFormatter0.getLongOptPrefix();
        org.apache.commons.cli.HelpFormatter helpFormatter12 = new org.apache.commons.cli.HelpFormatter();
        int int13 = helpFormatter12.getLeftPadding();
        helpFormatter12.defaultNewLine = "";
        int int16 = helpFormatter12.defaultWidth;
        java.util.Comparator comparator17 = helpFormatter12.getOptionComparator();
        java.lang.String str18 = helpFormatter12.defaultOptPrefix;
        org.apache.commons.cli.HelpFormatter helpFormatter19 = new org.apache.commons.cli.HelpFormatter();
        int int20 = helpFormatter19.getLeftPadding();
        helpFormatter19.defaultNewLine = "";
        helpFormatter19.setDescPadding(10);
        helpFormatter19.setSyntaxPrefix(" ");
        int int27 = helpFormatter19.defaultLeftPad;
        helpFormatter19.setLeftPadding(1);
        java.util.Comparator comparator30 = helpFormatter19.optionComparator;
        helpFormatter12.setOptionComparator(comparator30);
        helpFormatter0.setOptionComparator(comparator30);
        helpFormatter0.defaultNewLine = "hi!";
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "--" + "'", str11, "--");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 74 + "'", int16 == 74);
        org.junit.Assert.assertNotNull(comparator17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "-" + "'", str18, "-");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNotNull(comparator30);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #558
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: getfield      #42
48: astore_3
49: aload_1
50: ldc           #11
52: invokevirtual #12
55: astore        4
57: aload_1
58: ldc           #38
60: bipush        10
62: bipush        10
64: invokevirtual #61
67: istore        5
69: aload_1
70: invokevirtual #53
73: astore        6
75: new           #8
78: dup
79: invokespecial #9
82: astore        7
84: aload         7
86: invokevirtual #35
89: istore        8
91: aload         7
93: ldc           #11
95: putfield      #36
98: aload         7
100: getfield      #57
103: istore        9
105: aload         7
107: invokevirtual #58
110: astore        10
112: aload         7
114: getfield      #42
117: astore        11
119: new           #8
122: dup
123: invokespecial #9
126: astore        12
128: aload         12
130: invokevirtual #35
133: istore        13
135: aload         12
137: ldc           #11
139: putfield      #36
142: aload         12
144: bipush        10
146: invokevirtual #37
149: aload         12
151: ldc           #38
153: invokevirtual #39
156: aload         12
158: getfield      #40
161: istore        14
163: aload         12
165: iconst_1
166: invokevirtual #55
169: aload         12
171: getfield      #10
174: astore        15
176: aload         7
178: aload         15
180: invokevirtual #99
183: aload_1
184: aload         15
186: invokevirtual #99
189: aload_1
190: ldc           #65
192: putfield      #36
195: new           #22
198: dup
199: invokespecial #23
202: ldc           #24
204: invokevirtual #25
207: iload_2
208: invokevirtual #29
211: ldc           #30
213: invokevirtual #25
216: iconst_1
217: invokevirtual #29
220: ldc           #24
222: invokevirtual #25
225: invokevirtual #27
228: iload_2
229: iconst_1
230: if_icmpne     237
233: iconst_1
234: goto          238
237: iconst_0
238: invokestatic  #31
241: new           #22
244: dup
245: invokespecial #23
248: ldc           #24
250: invokevirtual #25
253: aload_3
254: invokevirtual #25
257: ldc           #48
259: invokevirtual #25
262: invokevirtual #27
265: aload_3
266: ldc           #49
268: invokestatic  #28
271: new           #22
274: dup
275: invokespecial #23
278: ldc           #24
280: invokevirtual #25
283: aload         4
285: invokevirtual #25
288: ldc           #26
290: invokevirtual #25
293: invokevirtual #27
296: aload         4
298: ldc           #11
300: invokestatic  #28
303: new           #22
306: dup
307: invokespecial #23
310: ldc           #24
312: invokevirtual #25
315: iload         5
317: invokevirtual #29
320: ldc           #30
322: invokevirtual #25
325: iconst_m1
326: invokevirtual #29
329: ldc           #24
331: invokevirtual #25
334: invokevirtual #27
337: iload         5
339: iconst_m1
340: if_icmpne     347
343: iconst_1
344: goto          348
347: iconst_0
348: invokestatic  #31
351: new           #22
354: dup
355: invokespecial #23
358: ldc           #24
360: invokevirtual #25
363: aload         6
365: invokevirtual #25
368: ldc           #62
370: invokevirtual #25
373: invokevirtual #27
376: aload         6
378: ldc           #63
380: invokestatic  #28
383: new           #22
386: dup
387: invokespecial #23
390: ldc           #24
392: invokevirtual #25
395: iload         8
397: invokevirtual #29
400: ldc           #30
402: invokevirtual #25
405: iconst_1
406: invokevirtual #29
409: ldc           #24
411: invokevirtual #25
414: invokevirtual #27
417: iload         8
419: iconst_1
420: if_icmpne     427
423: iconst_1
424: goto          428
427: iconst_0
428: invokestatic  #31
431: new           #22
434: dup
435: invokespecial #23
438: ldc           #24
440: invokevirtual #25
443: iload         9
445: invokevirtual #29
448: ldc           #30
450: invokevirtual #25
453: bipush        74
455: invokevirtual #29
458: ldc           #24
460: invokevirtual #25
463: invokevirtual #27
466: iload         9
468: bipush        74
470: if_icmpne     477
473: iconst_1
474: goto          478
477: iconst_0
478: invokestatic  #31
481: aload         10
483: invokestatic  #21
486: new           #22
489: dup
490: invokespecial #23
493: ldc           #24
495: invokevirtual #25
498: aload         11
500: invokevirtual #25
503: ldc           #48
505: invokevirtual #25
508: invokevirtual #27
511: aload         11
513: ldc           #49
515: invokestatic  #28
518: new           #22
521: dup
522: invokespecial #23
525: ldc           #24
527: invokevirtual #25
530: iload         13
532: invokevirtual #29
535: ldc           #30
537: invokevirtual #25
540: iconst_1
541: invokevirtual #29
544: ldc           #24
546: invokevirtual #25
549: invokevirtual #27
552: iload         13
554: iconst_1
555: if_icmpne     562
558: iconst_1
559: goto          563
562: iconst_0
563: invokestatic  #31
566: new           #22
569: dup
570: invokespecial #23
573: ldc           #24
575: invokevirtual #25
578: iload         14
580: invokevirtual #29
583: ldc           #30
585: invokevirtual #25
588: iconst_1
589: invokevirtual #29
592: ldc           #24
594: invokevirtual #25
597: invokevirtual #27
600: iload         14
602: iconst_1
603: if_icmpne     610
606: iconst_1
607: goto          611
610: iconst_0
611: invokestatic  #31
614: aload         15
616: invokestatic  #21
619: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0953
Start line: 10243
End line: 0
Method source code: 
    public void test0953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0953");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.getArgName();
        helpFormatter0.defaultNewLine = "\n";
        helpFormatter0.defaultLeftPad = (byte) -1;
        helpFormatter0.setLongOptSeparator("");
        org.apache.commons.cli.HelpFormatter helpFormatter9 = new org.apache.commons.cli.HelpFormatter();
        int int10 = helpFormatter9.getLeftPadding();
        helpFormatter9.defaultNewLine = "";
        helpFormatter9.setDescPadding(10);
        helpFormatter9.setSyntaxPrefix(" ");
        java.util.Comparator comparator17 = helpFormatter9.getOptionComparator();
        helpFormatter0.setOptionComparator(comparator17);
        java.lang.String str19 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setWidth((int) (short) 100);
        java.lang.String str22 = helpFormatter0.defaultLongOptPrefix;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "arg" + "'", str2, "arg");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(comparator17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "-" + "'", str19, "-");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "--" + "'", str22, "--");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #559
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: invokevirtual #83
42: astore_3
43: aload_1
44: ldc           #33
46: putfield      #36
49: aload_1
50: iconst_m1
51: putfield      #40
54: aload_1
55: ldc           #11
57: invokevirtual #74
60: new           #8
63: dup
64: invokespecial #9
67: astore        4
69: aload         4
71: invokevirtual #35
74: istore        5
76: aload         4
78: ldc           #11
80: putfield      #36
83: aload         4
85: bipush        10
87: invokevirtual #37
90: aload         4
92: ldc           #38
94: invokevirtual #39
97: aload         4
99: invokevirtual #58
102: astore        6
104: aload_1
105: aload         6
107: invokevirtual #99
110: aload_1
111: getfield      #42
114: astore        7
116: aload_1
117: bipush        100
119: invokevirtual #90
122: aload_1
123: getfield      #52
126: astore        8
128: new           #22
131: dup
132: invokespecial #23
135: ldc           #24
137: invokevirtual #25
140: iload_2
141: invokevirtual #29
144: ldc           #30
146: invokevirtual #25
149: iconst_1
150: invokevirtual #29
153: ldc           #24
155: invokevirtual #25
158: invokevirtual #27
161: iload_2
162: iconst_1
163: if_icmpne     170
166: iconst_1
167: goto          171
170: iconst_0
171: invokestatic  #31
174: new           #22
177: dup
178: invokespecial #23
181: ldc           #24
183: invokevirtual #25
186: aload_3
187: invokevirtual #25
190: ldc           #79
192: invokevirtual #25
195: invokevirtual #27
198: aload_3
199: ldc           #78
201: invokestatic  #28
204: new           #22
207: dup
208: invokespecial #23
211: ldc           #24
213: invokevirtual #25
216: iload         5
218: invokevirtual #29
221: ldc           #30
223: invokevirtual #25
226: iconst_1
227: invokevirtual #29
230: ldc           #24
232: invokevirtual #25
235: invokevirtual #27
238: iload         5
240: iconst_1
241: if_icmpne     248
244: iconst_1
245: goto          249
248: iconst_0
249: invokestatic  #31
252: aload         6
254: invokestatic  #21
257: new           #22
260: dup
261: invokespecial #23
264: ldc           #24
266: invokevirtual #25
269: aload         7
271: invokevirtual #25
274: ldc           #48
276: invokevirtual #25
279: invokevirtual #27
282: aload         7
284: ldc           #49
286: invokestatic  #28
289: new           #22
292: dup
293: invokespecial #23
296: ldc           #24
298: invokevirtual #25
301: aload         8
303: invokevirtual #25
306: ldc           #62
308: invokevirtual #25
311: invokevirtual #27
314: aload         8
316: ldc           #63
318: invokestatic  #28
321: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0954
Start line: 10271
End line: 0
Method source code: 
    public void test0954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0954");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        helpFormatter0.setSyntaxPrefix(" ");
        java.util.Comparator comparator8 = helpFormatter0.getOptionComparator();
        java.lang.String str10 = helpFormatter0.createPadding(1);
        java.util.Comparator comparator11 = helpFormatter0.getOptionComparator();
        java.util.Comparator comparator12 = helpFormatter0.optionComparator;
        java.lang.String str14 = helpFormatter0.createPadding(0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(comparator8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + " " + "'", str10, " ");
        org.junit.Assert.assertNotNull(comparator11);
        org.junit.Assert.assertNotNull(comparator12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #560
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: bipush        10
47: invokevirtual #37
50: aload_1
51: ldc           #38
53: invokevirtual #39
56: aload_1
57: invokevirtual #58
60: astore_3
61: aload_1
62: iconst_1
63: invokevirtual #93
66: astore        4
68: aload_1
69: invokevirtual #58
72: astore        5
74: aload_1
75: getfield      #10
78: astore        6
80: aload_1
81: iconst_0
82: invokevirtual #93
85: astore        7
87: new           #22
90: dup
91: invokespecial #23
94: ldc           #24
96: invokevirtual #25
99: iload_2
100: invokevirtual #29
103: ldc           #30
105: invokevirtual #25
108: iconst_1
109: invokevirtual #29
112: ldc           #24
114: invokevirtual #25
117: invokevirtual #27
120: iload_2
121: iconst_1
122: if_icmpne     129
125: iconst_1
126: goto          130
129: iconst_0
130: invokestatic  #31
133: aload_3
134: invokestatic  #21
137: new           #22
140: dup
141: invokespecial #23
144: ldc           #24
146: invokevirtual #25
149: aload         4
151: invokevirtual #25
154: ldc           #75
156: invokevirtual #25
159: invokevirtual #27
162: aload         4
164: ldc           #38
166: invokestatic  #28
169: aload         5
171: invokestatic  #21
174: aload         6
176: invokestatic  #21
179: new           #22
182: dup
183: invokespecial #23
186: ldc           #24
188: invokevirtual #25
191: aload         7
193: invokevirtual #25
196: ldc           #26
198: invokevirtual #25
201: invokevirtual #27
204: aload         7
206: ldc           #11
208: invokestatic  #28
211: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0955
Start line: 10293
End line: 0
Method source code: 
    public void test0955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0955");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.defaultArgName;
        java.lang.String str3 = helpFormatter0.defaultNewLine;
        helpFormatter0.defaultLeftPad = 10;
        java.lang.String str7 = helpFormatter0.rtrim("hi!");
        java.lang.String str9 = helpFormatter0.rtrim(" ");
        helpFormatter0.setLongOptSeparator("usage:");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "arg" + "'", str2, "arg");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\n" + "'", str3, "\n");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #561
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: getfield      #15
42: astore_3
43: aload_1
44: getfield      #36
47: astore        4
49: aload_1
50: bipush        10
52: putfield      #40
55: aload_1
56: ldc           #65
58: invokevirtual #12
61: astore        5
63: aload_1
64: ldc           #38
66: invokevirtual #12
69: astore        6
71: aload_1
72: ldc           #108
74: invokevirtual #74
77: new           #22
80: dup
81: invokespecial #23
84: ldc           #24
86: invokevirtual #25
89: iload_2
90: invokevirtual #29
93: ldc           #30
95: invokevirtual #25
98: iconst_1
99: invokevirtual #29
102: ldc           #24
104: invokevirtual #25
107: invokevirtual #27
110: iload_2
111: iconst_1
112: if_icmpne     119
115: iconst_1
116: goto          120
119: iconst_0
120: invokestatic  #31
123: new           #22
126: dup
127: invokespecial #23
130: ldc           #24
132: invokevirtual #25
135: aload_3
136: invokevirtual #25
139: ldc           #79
141: invokevirtual #25
144: invokevirtual #27
147: aload_3
148: ldc           #78
150: invokestatic  #28
153: new           #22
156: dup
157: invokespecial #23
160: ldc           #24
162: invokevirtual #25
165: aload         4
167: invokevirtual #25
170: ldc           #32
172: invokevirtual #25
175: invokevirtual #27
178: aload         4
180: ldc           #33
182: invokestatic  #28
185: new           #22
188: dup
189: invokespecial #23
192: ldc           #24
194: invokevirtual #25
197: aload         5
199: invokevirtual #25
202: ldc           #97
204: invokevirtual #25
207: invokevirtual #27
210: aload         5
212: ldc           #65
214: invokestatic  #28
217: new           #22
220: dup
221: invokespecial #23
224: ldc           #24
226: invokevirtual #25
229: aload         6
231: invokevirtual #25
234: ldc           #26
236: invokevirtual #25
239: invokevirtual #27
242: aload         6
244: ldc           #11
246: invokestatic  #28
249: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0956
Start line: 10312
End line: 0
Method source code: 
    public void test0956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0956");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.getArgName();
        helpFormatter0.setLongOptPrefix("                                                                                                 ");
        int int8 = helpFormatter0.findWrapPos("--", (int) (short) -1, (int) (byte) 100);
        helpFormatter0.defaultOptPrefix = "usage: ";
        helpFormatter0.setLongOptSeparator("--");
        helpFormatter0.defaultNewLine = "                                                                                                    ";
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "arg" + "'", str2, "arg");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #562
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: invokevirtual #83
42: astore_3
43: aload_1
44: ldc           #14
46: invokevirtual #43
49: aload_1
50: ldc           #63
52: iconst_m1
53: bipush        100
55: invokevirtual #61
58: istore        4
60: aload_1
61: ldc           #46
63: putfield      #42
66: aload_1
67: ldc           #63
69: invokevirtual #74
72: aload_1
73: ldc           #118
75: putfield      #36
78: new           #22
81: dup
82: invokespecial #23
85: ldc           #24
87: invokevirtual #25
90: iload_2
91: invokevirtual #29
94: ldc           #30
96: invokevirtual #25
99: iconst_1
100: invokevirtual #29
103: ldc           #24
105: invokevirtual #25
108: invokevirtual #27
111: iload_2
112: iconst_1
113: if_icmpne     120
116: iconst_1
117: goto          121
120: iconst_0
121: invokestatic  #31
124: new           #22
127: dup
128: invokespecial #23
131: ldc           #24
133: invokevirtual #25
136: aload_3
137: invokevirtual #25
140: ldc           #79
142: invokevirtual #25
145: invokevirtual #27
148: aload_3
149: ldc           #78
151: invokestatic  #28
154: new           #22
157: dup
158: invokespecial #23
161: ldc           #24
163: invokevirtual #25
166: iload         4
168: invokevirtual #29
171: ldc           #30
173: invokevirtual #25
176: iconst_m1
177: invokevirtual #29
180: ldc           #24
182: invokevirtual #25
185: invokevirtual #27
188: iload         4
190: iconst_m1
191: if_icmpne     198
194: iconst_1
195: goto          199
198: iconst_0
199: invokestatic  #31
202: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0957
Start line: 10329
End line: 0
Method source code: 
    public void test0957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0957");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultOptPrefix;
        java.lang.String str6 = helpFormatter0.getLongOptPrefix();
        java.lang.String str7 = helpFormatter0.defaultOptPrefix;
        java.lang.String str8 = helpFormatter0.defaultArgName;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "arg" + "'", str8, "arg");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #563
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #11
36: invokevirtual #51
39: aload_1
40: ldc           #11
42: putfield      #52
45: aload_1
46: getfield      #42
49: astore_2
50: aload_1
51: invokevirtual #53
54: astore_3
55: aload_1
56: getfield      #42
59: astore        4
61: aload_1
62: getfield      #15
65: astore        5
67: new           #22
70: dup
71: invokespecial #23
74: ldc           #24
76: invokevirtual #25
79: aload_2
80: invokevirtual #25
83: ldc           #26
85: invokevirtual #25
88: invokevirtual #27
91: aload_2
92: ldc           #11
94: invokestatic  #28
97: new           #22
100: dup
101: invokespecial #23
104: ldc           #24
106: invokevirtual #25
109: aload_3
110: invokevirtual #25
113: ldc           #26
115: invokevirtual #25
118: invokevirtual #27
121: aload_3
122: ldc           #11
124: invokestatic  #28
127: new           #22
130: dup
131: invokespecial #23
134: ldc           #24
136: invokevirtual #25
139: aload         4
141: invokevirtual #25
144: ldc           #26
146: invokevirtual #25
149: invokevirtual #27
152: aload         4
154: ldc           #11
156: invokestatic  #28
159: new           #22
162: dup
163: invokespecial #23
166: ldc           #24
168: invokevirtual #25
171: aload         5
173: invokevirtual #25
176: ldc           #79
178: invokevirtual #25
181: invokevirtual #27
184: aload         5
186: ldc           #78
188: invokestatic  #28
191: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0958
Start line: 10346
End line: 0
Method source code: 
    public void test0958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0958");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.getArgName();
        helpFormatter0.defaultNewLine = "\n";
        helpFormatter0.defaultLeftPad = (byte) -1;
        helpFormatter0.setLongOptSeparator("");
        helpFormatter0.setLongOptSeparator("-");
        java.lang.String str11 = helpFormatter0.getSyntaxPrefix();
        java.lang.String str13 = helpFormatter0.createPadding(100);
        org.apache.commons.cli.HelpFormatter helpFormatter14 = new org.apache.commons.cli.HelpFormatter();
        int int15 = helpFormatter14.getLeftPadding();
        helpFormatter14.defaultNewLine = "";
        helpFormatter14.setDescPadding(10);
        helpFormatter14.defaultArgName = "hi!";
        java.util.Comparator comparator22 = helpFormatter14.getOptionComparator();
        helpFormatter0.optionComparator = comparator22;
        int int24 = helpFormatter0.defaultLeftPad;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "arg" + "'", str2, "arg");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "usage: " + "'", str11, "usage: ");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "                                                                                                    " + "'", str13, "                                                                                                    ");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(comparator22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #564
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: invokevirtual #83
42: astore_3
43: aload_1
44: ldc           #33
46: putfield      #36
49: aload_1
50: iconst_m1
51: putfield      #40
54: aload_1
55: ldc           #11
57: invokevirtual #74
60: aload_1
61: ldc           #49
63: invokevirtual #74
66: aload_1
67: invokevirtual #89
70: astore        4
72: aload_1
73: bipush        100
75: invokevirtual #93
78: astore        5
80: new           #8
83: dup
84: invokespecial #9
87: astore        6
89: aload         6
91: invokevirtual #35
94: istore        7
96: aload         6
98: ldc           #11
100: putfield      #36
103: aload         6
105: bipush        10
107: invokevirtual #37
110: aload         6
112: ldc           #65
114: putfield      #15
117: aload         6
119: invokevirtual #58
122: astore        8
124: aload_1
125: aload         8
127: putfield      #10
130: aload_1
131: getfield      #40
134: istore        9
136: new           #22
139: dup
140: invokespecial #23
143: ldc           #24
145: invokevirtual #25
148: iload_2
149: invokevirtual #29
152: ldc           #30
154: invokevirtual #25
157: iconst_1
158: invokevirtual #29
161: ldc           #24
163: invokevirtual #25
166: invokevirtual #27
169: iload_2
170: iconst_1
171: if_icmpne     178
174: iconst_1
175: goto          179
178: iconst_0
179: invokestatic  #31
182: new           #22
185: dup
186: invokespecial #23
189: ldc           #24
191: invokevirtual #25
194: aload_3
195: invokevirtual #25
198: ldc           #79
200: invokevirtual #25
203: invokevirtual #27
206: aload_3
207: ldc           #78
209: invokestatic  #28
212: new           #22
215: dup
216: invokespecial #23
219: ldc           #24
221: invokevirtual #25
224: aload         4
226: invokevirtual #25
229: ldc           #104
231: invokevirtual #25
234: invokevirtual #27
237: aload         4
239: ldc           #46
241: invokestatic  #28
244: new           #22
247: dup
248: invokespecial #23
251: ldc           #24
253: invokevirtual #25
256: aload         5
258: invokevirtual #25
261: ldc           #222
263: invokevirtual #25
266: invokevirtual #27
269: aload         5
271: ldc           #118
273: invokestatic  #28
276: new           #22
279: dup
280: invokespecial #23
283: ldc           #24
285: invokevirtual #25
288: iload         7
290: invokevirtual #29
293: ldc           #30
295: invokevirtual #25
298: iconst_1
299: invokevirtual #29
302: ldc           #24
304: invokevirtual #25
307: invokevirtual #27
310: iload         7
312: iconst_1
313: if_icmpne     320
316: iconst_1
317: goto          321
320: iconst_0
321: invokestatic  #31
324: aload         8
326: invokestatic  #21
329: new           #22
332: dup
333: invokespecial #23
336: ldc           #24
338: invokevirtual #25
341: iload         9
343: invokevirtual #29
346: ldc           #30
348: invokevirtual #25
351: iconst_m1
352: invokevirtual #29
355: ldc           #24
357: invokevirtual #25
360: invokevirtual #27
363: iload         9
365: iconst_m1
366: if_icmpne     373
369: iconst_1
370: goto          374
373: iconst_0
374: invokestatic  #31
377: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0959
Start line: 10376
End line: 0
Method source code: 
    public void test0959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0959");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        java.lang.String str6 = helpFormatter0.defaultNewLine;
        helpFormatter0.setDescPadding(10);
        org.apache.commons.cli.HelpFormatter helpFormatter9 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter9.setOptPrefix("");
        helpFormatter9.defaultLongOptPrefix = "";
        java.lang.String str14 = helpFormatter9.defaultLongOptPrefix;
        java.lang.String str15 = helpFormatter9.getNewLine();
        java.util.Comparator comparator16 = helpFormatter9.getOptionComparator();
        helpFormatter0.optionComparator = comparator16;
        java.lang.String str19 = helpFormatter0.rtrim("");
        java.lang.String str20 = helpFormatter0.getNewLine();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\n" + "'", str15, "\n");
        org.junit.Assert.assertNotNull(comparator16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #565
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: bipush        10
47: invokevirtual #37
50: aload_1
51: getfield      #36
54: astore_3
55: aload_1
56: bipush        10
58: invokevirtual #37
61: new           #8
64: dup
65: invokespecial #9
68: astore        4
70: aload         4
72: ldc           #11
74: invokevirtual #51
77: aload         4
79: ldc           #11
81: putfield      #52
84: aload         4
86: getfield      #52
89: astore        5
91: aload         4
93: invokevirtual #16
96: astore        6
98: aload         4
100: invokevirtual #58
103: astore        7
105: aload_1
106: aload         7
108: putfield      #10
111: aload_1
112: ldc           #11
114: invokevirtual #12
117: astore        8
119: aload_1
120: invokevirtual #16
123: astore        9
125: new           #22
128: dup
129: invokespecial #23
132: ldc           #24
134: invokevirtual #25
137: iload_2
138: invokevirtual #29
141: ldc           #30
143: invokevirtual #25
146: iconst_1
147: invokevirtual #29
150: ldc           #24
152: invokevirtual #25
155: invokevirtual #27
158: iload_2
159: iconst_1
160: if_icmpne     167
163: iconst_1
164: goto          168
167: iconst_0
168: invokestatic  #31
171: new           #22
174: dup
175: invokespecial #23
178: ldc           #24
180: invokevirtual #25
183: aload_3
184: invokevirtual #25
187: ldc           #26
189: invokevirtual #25
192: invokevirtual #27
195: aload_3
196: ldc           #11
198: invokestatic  #28
201: new           #22
204: dup
205: invokespecial #23
208: ldc           #24
210: invokevirtual #25
213: aload         5
215: invokevirtual #25
218: ldc           #26
220: invokevirtual #25
223: invokevirtual #27
226: aload         5
228: ldc           #11
230: invokestatic  #28
233: new           #22
236: dup
237: invokespecial #23
240: ldc           #24
242: invokevirtual #25
245: aload         6
247: invokevirtual #25
250: ldc           #32
252: invokevirtual #25
255: invokevirtual #27
258: aload         6
260: ldc           #33
262: invokestatic  #28
265: aload         7
267: invokestatic  #21
270: new           #22
273: dup
274: invokespecial #23
277: ldc           #24
279: invokevirtual #25
282: aload         8
284: invokevirtual #25
287: ldc           #26
289: invokevirtual #25
292: invokevirtual #27
295: aload         8
297: ldc           #11
299: invokestatic  #28
302: new           #22
305: dup
306: invokespecial #23
309: ldc           #24
311: invokevirtual #25
314: aload         9
316: invokevirtual #25
319: ldc           #26
321: invokevirtual #25
324: invokevirtual #27
327: aload         9
329: ldc           #11
331: invokestatic  #28
334: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0960
Start line: 10404
End line: 0
Method source code: 
    public void test0960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0960");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        java.lang.String str3 = helpFormatter0.getLongOptSeparator();
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        java.lang.String str5 = helpFormatter0.defaultArgName;
        int int6 = helpFormatter0.getLeftPadding();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + " " + "'", str3, " ");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "arg" + "'", str5, "arg");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #566
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #11
36: invokevirtual #51
39: aload_1
40: invokevirtual #72
43: astore_2
44: aload_1
45: getfield      #42
48: astore_3
49: aload_1
50: getfield      #15
53: astore        4
55: aload_1
56: invokevirtual #35
59: istore        5
61: new           #22
64: dup
65: invokespecial #23
68: ldc           #24
70: invokevirtual #25
73: aload_2
74: invokevirtual #25
77: ldc           #75
79: invokevirtual #25
82: invokevirtual #27
85: aload_2
86: ldc           #38
88: invokestatic  #28
91: new           #22
94: dup
95: invokespecial #23
98: ldc           #24
100: invokevirtual #25
103: aload_3
104: invokevirtual #25
107: ldc           #26
109: invokevirtual #25
112: invokevirtual #27
115: aload_3
116: ldc           #11
118: invokestatic  #28
121: new           #22
124: dup
125: invokespecial #23
128: ldc           #24
130: invokevirtual #25
133: aload         4
135: invokevirtual #25
138: ldc           #79
140: invokevirtual #25
143: invokevirtual #27
146: aload         4
148: ldc           #78
150: invokestatic  #28
153: new           #22
156: dup
157: invokespecial #23
160: ldc           #24
162: invokevirtual #25
165: iload         5
167: invokevirtual #29
170: ldc           #30
172: invokevirtual #25
175: iconst_1
176: invokevirtual #29
179: ldc           #24
181: invokevirtual #25
184: invokevirtual #27
187: iload         5
189: iconst_1
190: if_icmpne     197
193: iconst_1
194: goto          198
197: iconst_0
198: invokestatic  #31
201: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0961
Start line: 10420
End line: 0
Method source code: 
    public void test0961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0961");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setLongOptPrefix(" ");
        helpFormatter0.defaultDescPad = (short) 10;
        java.lang.String str9 = helpFormatter0.defaultArgName;
        helpFormatter0.setSyntaxPrefix("");
        helpFormatter0.defaultOptPrefix = "                                                                                                 ";
        helpFormatter0.setLongOptPrefix("          ");
        java.lang.String str16 = helpFormatter0.defaultArgName;
        org.apache.commons.cli.Options options18 = null;
        try {
            helpFormatter0.printHelp("\n", options18, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "arg" + "'", str9, "arg");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "arg" + "'", str16, "arg");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #567
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: getfield      #42
48: astore_3
49: aload_1
50: ldc           #38
52: invokevirtual #43
55: aload_1
56: bipush        10
58: putfield      #44
61: aload_1
62: getfield      #15
65: astore        4
67: aload_1
68: ldc           #11
70: invokevirtual #39
73: aload_1
74: ldc           #14
76: putfield      #42
79: aload_1
80: ldc           #67
82: invokevirtual #43
85: aload_1
86: getfield      #15
89: astore        5
91: aconst_null
92: astore        6
94: aload_1
95: ldc           #33
97: aload         6
99: iconst_1
100: invokevirtual #103
103: ldc           #18
105: invokestatic  #19
108: goto          113
111: astore        7
113: new           #22
116: dup
117: invokespecial #23
120: ldc           #24
122: invokevirtual #25
125: iload_2
126: invokevirtual #29
129: ldc           #30
131: invokevirtual #25
134: iconst_1
135: invokevirtual #29
138: ldc           #24
140: invokevirtual #25
143: invokevirtual #27
146: iload_2
147: iconst_1
148: if_icmpne     155
151: iconst_1
152: goto          156
155: iconst_0
156: invokestatic  #31
159: new           #22
162: dup
163: invokespecial #23
166: ldc           #24
168: invokevirtual #25
171: aload_3
172: invokevirtual #25
175: ldc           #48
177: invokevirtual #25
180: invokevirtual #27
183: aload_3
184: ldc           #49
186: invokestatic  #28
189: new           #22
192: dup
193: invokespecial #23
196: ldc           #24
198: invokevirtual #25
201: aload         4
203: invokevirtual #25
206: ldc           #79
208: invokevirtual #25
211: invokevirtual #27
214: aload         4
216: ldc           #78
218: invokestatic  #28
221: new           #22
224: dup
225: invokespecial #23
228: ldc           #24
230: invokevirtual #25
233: aload         5
235: invokevirtual #25
238: ldc           #79
240: invokevirtual #25
243: invokevirtual #27
246: aload         5
248: ldc           #78
250: invokestatic  #28
253: return
Exception table:
from    to  target type
94   108   111   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0962
Start line: 10449
End line: 0
Method source code: 
    public void test0962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0962");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.getArgName();
        helpFormatter0.defaultNewLine = "\n";
        java.lang.String str5 = helpFormatter0.getSyntaxPrefix();
        helpFormatter0.setDescPadding(0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "arg" + "'", str2, "arg");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "usage: " + "'", str5, "usage: ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #568
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: invokevirtual #83
42: astore_3
43: aload_1
44: ldc           #33
46: putfield      #36
49: aload_1
50: invokevirtual #89
53: astore        4
55: aload_1
56: iconst_0
57: invokevirtual #37
60: new           #22
63: dup
64: invokespecial #23
67: ldc           #24
69: invokevirtual #25
72: iload_2
73: invokevirtual #29
76: ldc           #30
78: invokevirtual #25
81: iconst_1
82: invokevirtual #29
85: ldc           #24
87: invokevirtual #25
90: invokevirtual #27
93: iload_2
94: iconst_1
95: if_icmpne     102
98: iconst_1
99: goto          103
102: iconst_0
103: invokestatic  #31
106: new           #22
109: dup
110: invokespecial #23
113: ldc           #24
115: invokevirtual #25
118: aload_3
119: invokevirtual #25
122: ldc           #79
124: invokevirtual #25
127: invokevirtual #27
130: aload_3
131: ldc           #78
133: invokestatic  #28
136: new           #22
139: dup
140: invokespecial #23
143: ldc           #24
145: invokevirtual #25
148: aload         4
150: invokevirtual #25
153: ldc           #104
155: invokevirtual #25
158: invokevirtual #27
161: aload         4
163: ldc           #46
165: invokestatic  #28
168: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0963
Start line: 10464
End line: 0
Method source code: 
    public void test0963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0963");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.defaultLongOptPrefix = "hi!";
        int int3 = helpFormatter0.getWidth();
        helpFormatter0.setLongOptPrefix("          ");
        helpFormatter0.setLeftPadding(0);
        java.lang.String str8 = helpFormatter0.getSyntaxPrefix();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 74 + "'", int3 == 74);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "usage: " + "'", str8, "usage: ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #569
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #65
36: putfield      #52
39: aload_1
40: invokevirtual #66
43: istore_2
44: aload_1
45: ldc           #67
47: invokevirtual #43
50: aload_1
51: iconst_0
52: invokevirtual #55
55: aload_1
56: invokevirtual #89
59: astore_3
60: new           #22
63: dup
64: invokespecial #23
67: ldc           #24
69: invokevirtual #25
72: iload_2
73: invokevirtual #29
76: ldc           #30
78: invokevirtual #25
81: bipush        74
83: invokevirtual #29
86: ldc           #24
88: invokevirtual #25
91: invokevirtual #27
94: iload_2
95: bipush        74
97: if_icmpne     104
100: iconst_1
101: goto          105
104: iconst_0
105: invokestatic  #31
108: new           #22
111: dup
112: invokespecial #23
115: ldc           #24
117: invokevirtual #25
120: aload_3
121: invokevirtual #25
124: ldc           #104
126: invokevirtual #25
129: invokevirtual #27
132: aload_3
133: ldc           #46
135: invokestatic  #28
138: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0964
Start line: 10478
End line: 0
Method source code: 
    public void test0964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0964");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str6 = helpFormatter0.getNewLine();
        java.lang.String str7 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setDescPadding(74);
        java.util.Comparator comparator10 = helpFormatter0.getOptionComparator();
        java.lang.String str11 = helpFormatter0.getArgName();
        helpFormatter0.defaultDescPad = (byte) 1;
        org.apache.commons.cli.Options options15 = null;
        try {
            helpFormatter0.printHelp("                                                                                                    ", options15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\n" + "'", str6, "\n");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(comparator10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "arg" + "'", str11, "arg");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #570
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #11
36: invokevirtual #51
39: aload_1
40: ldc           #11
42: putfield      #52
45: aload_1
46: getfield      #52
49: astore_2
50: aload_1
51: invokevirtual #16
54: astore_3
55: aload_1
56: getfield      #42
59: astore        4
61: aload_1
62: bipush        74
64: invokevirtual #37
67: aload_1
68: invokevirtual #58
71: astore        5
73: aload_1
74: invokevirtual #83
77: astore        6
79: aload_1
80: iconst_1
81: putfield      #44
84: aconst_null
85: astore        7
87: aload_1
88: ldc           #118
90: aload         7
92: invokevirtual #240
95: ldc           #18
97: invokestatic  #19
100: goto          105
103: astore        8
105: new           #22
108: dup
109: invokespecial #23
112: ldc           #24
114: invokevirtual #25
117: aload_2
118: invokevirtual #25
121: ldc           #26
123: invokevirtual #25
126: invokevirtual #27
129: aload_2
130: ldc           #11
132: invokestatic  #28
135: new           #22
138: dup
139: invokespecial #23
142: ldc           #24
144: invokevirtual #25
147: aload_3
148: invokevirtual #25
151: ldc           #32
153: invokevirtual #25
156: invokevirtual #27
159: aload_3
160: ldc           #33
162: invokestatic  #28
165: new           #22
168: dup
169: invokespecial #23
172: ldc           #24
174: invokevirtual #25
177: aload         4
179: invokevirtual #25
182: ldc           #26
184: invokevirtual #25
187: invokevirtual #27
190: aload         4
192: ldc           #11
194: invokestatic  #28
197: aload         5
199: invokestatic  #21
202: new           #22
205: dup
206: invokespecial #23
209: ldc           #24
211: invokevirtual #25
214: aload         6
216: invokevirtual #25
219: ldc           #79
221: invokevirtual #25
224: invokevirtual #27
227: aload         6
229: ldc           #78
231: invokestatic  #28
234: return
Exception table:
from    to  target type
87   100   103   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0965
Start line: 10507
End line: 0
Method source code: 
    public void test0965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0965");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.util.Comparator comparator1 = helpFormatter0.optionComparator;
        int int2 = helpFormatter0.getLeftPadding();
        int int3 = helpFormatter0.defaultLeftPad;
        java.lang.String str5 = helpFormatter0.createPadding((int) 'a');
        int int6 = helpFormatter0.defaultWidth;
        java.util.Comparator comparator7 = helpFormatter0.getOptionComparator();
        org.apache.commons.cli.Options options10 = null;
        try {
            helpFormatter0.printHelp("          ", "   ", options10, "usage: ");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(comparator1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "                                                                                                 " + "'", str5, "                                                                                                 ");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 74 + "'", int6 == 74);
        org.junit.Assert.assertNotNull(comparator7);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #571
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: getfield      #10
37: astore_2
38: aload_1
39: invokevirtual #35
42: istore_3
43: aload_1
44: getfield      #40
47: istore        4
49: aload_1
50: bipush        97
52: invokevirtual #93
55: astore        5
57: aload_1
58: getfield      #57
61: istore        6
63: aload_1
64: invokevirtual #58
67: astore        7
69: aconst_null
70: astore        8
72: aload_1
73: ldc           #67
75: ldc           #113
77: aload         8
79: ldc           #46
81: invokevirtual #128
84: ldc           #18
86: invokestatic  #19
89: goto          94
92: astore        9
94: aload_2
95: invokestatic  #21
98: new           #22
101: dup
102: invokespecial #23
105: ldc           #24
107: invokevirtual #25
110: iload_3
111: invokevirtual #29
114: ldc           #30
116: invokevirtual #25
119: iconst_1
120: invokevirtual #29
123: ldc           #24
125: invokevirtual #25
128: invokevirtual #27
131: iload_3
132: iconst_1
133: if_icmpne     140
136: iconst_1
137: goto          141
140: iconst_0
141: invokestatic  #31
144: new           #22
147: dup
148: invokespecial #23
151: ldc           #24
153: invokevirtual #25
156: iload         4
158: invokevirtual #29
161: ldc           #30
163: invokevirtual #25
166: iconst_1
167: invokevirtual #29
170: ldc           #24
172: invokevirtual #25
175: invokevirtual #27
178: iload         4
180: iconst_1
181: if_icmpne     188
184: iconst_1
185: goto          189
188: iconst_0
189: invokestatic  #31
192: new           #22
195: dup
196: invokespecial #23
199: ldc           #24
201: invokevirtual #25
204: aload         5
206: invokevirtual #25
209: ldc           #142
211: invokevirtual #25
214: invokevirtual #27
217: aload         5
219: ldc           #14
221: invokestatic  #28
224: new           #22
227: dup
228: invokespecial #23
231: ldc           #24
233: invokevirtual #25
236: iload         6
238: invokevirtual #29
241: ldc           #30
243: invokevirtual #25
246: bipush        74
248: invokevirtual #29
251: ldc           #24
253: invokevirtual #25
256: invokevirtual #27
259: iload         6
261: bipush        74
263: if_icmpne     270
266: iconst_1
267: goto          271
270: iconst_0
271: invokestatic  #31
274: aload         7
276: invokestatic  #21
279: return
Exception table:
from    to  target type
72    89    92   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0966
Start line: 10534
End line: 0
Method source code: 
    public void test0966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0966");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        java.lang.String str3 = helpFormatter0.getLongOptSeparator();
        java.lang.String str5 = helpFormatter0.rtrim("\n");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + " " + "'", str3, " ");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #572
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #11
36: invokevirtual #51
39: aload_1
40: invokevirtual #72
43: astore_2
44: aload_1
45: ldc           #33
47: invokevirtual #12
50: astore_3
51: new           #22
54: dup
55: invokespecial #23
58: ldc           #24
60: invokevirtual #25
63: aload_2
64: invokevirtual #25
67: ldc           #75
69: invokevirtual #25
72: invokevirtual #27
75: aload_2
76: ldc           #38
78: invokestatic  #28
81: new           #22
84: dup
85: invokespecial #23
88: ldc           #24
90: invokevirtual #25
93: aload_3
94: invokevirtual #25
97: ldc           #26
99: invokevirtual #25
102: invokevirtual #27
105: aload_3
106: ldc           #11
108: invokestatic  #28
111: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0967
Start line: 10546
End line: 0
Method source code: 
    public void test0967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0967");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setLongOptPrefix(" ");
        java.lang.String str7 = helpFormatter0.getLongOptPrefix();
        java.lang.String str8 = helpFormatter0.defaultNewLine;
        java.io.PrintWriter printWriter9 = null;
        try {
            helpFormatter0.printWrapped(printWriter9, 32, (int) (short) 10, "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + " " + "'", str7, " ");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #573
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: getfield      #42
48: astore_3
49: aload_1
50: ldc           #38
52: invokevirtual #43
55: aload_1
56: invokevirtual #53
59: astore        4
61: aload_1
62: getfield      #36
65: astore        5
67: aconst_null
68: astore        6
70: aload_1
71: aload         6
73: bipush        32
75: bipush        10
77: ldc           #65
79: invokevirtual #187
82: ldc           #18
84: invokestatic  #19
87: goto          92
90: astore        7
92: new           #22
95: dup
96: invokespecial #23
99: ldc           #24
101: invokevirtual #25
104: iload_2
105: invokevirtual #29
108: ldc           #30
110: invokevirtual #25
113: iconst_1
114: invokevirtual #29
117: ldc           #24
119: invokevirtual #25
122: invokevirtual #27
125: iload_2
126: iconst_1
127: if_icmpne     134
130: iconst_1
131: goto          135
134: iconst_0
135: invokestatic  #31
138: new           #22
141: dup
142: invokespecial #23
145: ldc           #24
147: invokevirtual #25
150: aload_3
151: invokevirtual #25
154: ldc           #48
156: invokevirtual #25
159: invokevirtual #27
162: aload_3
163: ldc           #49
165: invokestatic  #28
168: new           #22
171: dup
172: invokespecial #23
175: ldc           #24
177: invokevirtual #25
180: aload         4
182: invokevirtual #25
185: ldc           #75
187: invokevirtual #25
190: invokevirtual #27
193: aload         4
195: ldc           #38
197: invokestatic  #28
200: new           #22
203: dup
204: invokespecial #23
207: ldc           #24
209: invokevirtual #25
212: aload         5
214: invokevirtual #25
217: ldc           #26
219: invokevirtual #25
222: invokevirtual #27
225: aload         5
227: ldc           #11
229: invokestatic  #28
232: return
Exception table:
from    to  target type
70    87    90   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0968
Start line: 10571
End line: 0
Method source code: 
    public void test0968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0968");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        java.lang.String str6 = helpFormatter0.defaultNewLine;
        java.lang.String str7 = helpFormatter0.getArgName();
        org.apache.commons.cli.HelpFormatter helpFormatter8 = new org.apache.commons.cli.HelpFormatter();
        java.lang.String str9 = helpFormatter8.defaultSyntaxPrefix;
        java.util.Comparator comparator10 = helpFormatter8.optionComparator;
        java.lang.String str11 = helpFormatter8.defaultArgName;
        java.util.Comparator comparator12 = helpFormatter8.optionComparator;
        helpFormatter0.optionComparator = comparator12;
        int int14 = helpFormatter0.getWidth();
        java.lang.String str15 = helpFormatter0.defaultArgName;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "arg" + "'", str7, "arg");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "usage: " + "'", str9, "usage: ");
        org.junit.Assert.assertNotNull(comparator10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "arg" + "'", str11, "arg");
        org.junit.Assert.assertNotNull(comparator12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 74 + "'", int14 == 74);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "arg" + "'", str15, "arg");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #574
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: bipush        10
47: invokevirtual #37
50: aload_1
51: getfield      #36
54: astore_3
55: aload_1
56: invokevirtual #83
59: astore        4
61: new           #8
64: dup
65: invokespecial #9
68: astore        5
70: aload         5
72: getfield      #45
75: astore        6
77: aload         5
79: getfield      #10
82: astore        7
84: aload         5
86: getfield      #15
89: astore        8
91: aload         5
93: getfield      #10
96: astore        9
98: aload_1
99: aload         9
101: putfield      #10
104: aload_1
105: invokevirtual #66
108: istore        10
110: aload_1
111: getfield      #15
114: astore        11
116: new           #22
119: dup
120: invokespecial #23
123: ldc           #24
125: invokevirtual #25
128: iload_2
129: invokevirtual #29
132: ldc           #30
134: invokevirtual #25
137: iconst_1
138: invokevirtual #29
141: ldc           #24
143: invokevirtual #25
146: invokevirtual #27
149: iload_2
150: iconst_1
151: if_icmpne     158
154: iconst_1
155: goto          159
158: iconst_0
159: invokestatic  #31
162: new           #22
165: dup
166: invokespecial #23
169: ldc           #24
171: invokevirtual #25
174: aload_3
175: invokevirtual #25
178: ldc           #26
180: invokevirtual #25
183: invokevirtual #27
186: aload_3
187: ldc           #11
189: invokestatic  #28
192: new           #22
195: dup
196: invokespecial #23
199: ldc           #24
201: invokevirtual #25
204: aload         4
206: invokevirtual #25
209: ldc           #79
211: invokevirtual #25
214: invokevirtual #27
217: aload         4
219: ldc           #78
221: invokestatic  #28
224: new           #22
227: dup
228: invokespecial #23
231: ldc           #24
233: invokevirtual #25
236: aload         6
238: invokevirtual #25
241: ldc           #104
243: invokevirtual #25
246: invokevirtual #27
249: aload         6
251: ldc           #46
253: invokestatic  #28
256: aload         7
258: invokestatic  #21
261: new           #22
264: dup
265: invokespecial #23
268: ldc           #24
270: invokevirtual #25
273: aload         8
275: invokevirtual #25
278: ldc           #79
280: invokevirtual #25
283: invokevirtual #27
286: aload         8
288: ldc           #78
290: invokestatic  #28
293: aload         9
295: invokestatic  #21
298: new           #22
301: dup
302: invokespecial #23
305: ldc           #24
307: invokevirtual #25
310: iload         10
312: invokevirtual #29
315: ldc           #30
317: invokevirtual #25
320: bipush        74
322: invokevirtual #29
325: ldc           #24
327: invokevirtual #25
330: invokevirtual #27
333: iload         10
335: bipush        74
337: if_icmpne     344
340: iconst_1
341: goto          345
344: iconst_0
345: invokestatic  #31
348: new           #22
351: dup
352: invokespecial #23
355: ldc           #24
357: invokevirtual #25
360: aload         11
362: invokevirtual #25
365: ldc           #79
367: invokevirtual #25
370: invokevirtual #27
373: aload         11
375: ldc           #78
377: invokestatic  #28
380: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0969
Start line: 10600
End line: 0
Method source code: 
    public void test0969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0969");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.defaultDescPad = '4';
        helpFormatter0.setNewLine("");
        helpFormatter0.defaultDescPad = 'a';
        java.lang.String str10 = helpFormatter0.defaultNewLine;
        int int11 = helpFormatter0.getDescPadding();
        helpFormatter0.setDescPadding((int) (byte) 100);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 97 + "'", int11 == 97);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #575
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: bipush        52
47: putfield      #44
50: aload_1
51: ldc           #11
53: invokevirtual #88
56: aload_1
57: bipush        97
59: putfield      #44
62: aload_1
63: getfield      #36
66: astore_3
67: aload_1
68: invokevirtual #13
71: istore        4
73: aload_1
74: bipush        100
76: invokevirtual #37
79: new           #22
82: dup
83: invokespecial #23
86: ldc           #24
88: invokevirtual #25
91: iload_2
92: invokevirtual #29
95: ldc           #30
97: invokevirtual #25
100: iconst_1
101: invokevirtual #29
104: ldc           #24
106: invokevirtual #25
109: invokevirtual #27
112: iload_2
113: iconst_1
114: if_icmpne     121
117: iconst_1
118: goto          122
121: iconst_0
122: invokestatic  #31
125: new           #22
128: dup
129: invokespecial #23
132: ldc           #24
134: invokevirtual #25
137: aload_3
138: invokevirtual #25
141: ldc           #26
143: invokevirtual #25
146: invokevirtual #27
149: aload_3
150: ldc           #11
152: invokestatic  #28
155: new           #22
158: dup
159: invokespecial #23
162: ldc           #24
164: invokevirtual #25
167: iload         4
169: invokevirtual #29
172: ldc           #30
174: invokevirtual #25
177: bipush        97
179: invokevirtual #29
182: ldc           #24
184: invokevirtual #25
187: invokevirtual #27
190: iload         4
192: bipush        97
194: if_icmpne     201
197: iconst_1
198: goto          202
201: iconst_0
202: invokestatic  #31
205: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0970
Start line: 10618
End line: 0
Method source code: 
    public void test0970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0970");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        org.apache.commons.cli.Options options2 = null;
        try {
            helpFormatter0.printHelp("usage: ", options2, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #576
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aconst_null
34: astore_2
35: aload_1
36: ldc           #46
38: aload_2
39: iconst_1
40: invokevirtual #103
43: ldc           #18
45: invokestatic  #19
48: goto          52
51: astore_3
52: return
Exception table:
from    to  target type
35    48    51   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0971
Start line: 10633
End line: 0
Method source code: 
    public void test0971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0971");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.util.Comparator comparator1 = helpFormatter0.optionComparator;
        int int2 = helpFormatter0.getLeftPadding();
        int int6 = helpFormatter0.findWrapPos("-", 100, (-1));
        helpFormatter0.setLongOptPrefix("hi!");
        org.junit.Assert.assertNotNull(comparator1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #577
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: getfield      #10
37: astore_2
38: aload_1
39: invokevirtual #35
42: istore_3
43: aload_1
44: ldc           #49
46: bipush        100
48: iconst_m1
49: invokevirtual #61
52: istore        4
54: aload_1
55: ldc           #65
57: invokevirtual #43
60: aload_2
61: invokestatic  #21
64: new           #22
67: dup
68: invokespecial #23
71: ldc           #24
73: invokevirtual #25
76: iload_3
77: invokevirtual #29
80: ldc           #30
82: invokevirtual #25
85: iconst_1
86: invokevirtual #29
89: ldc           #24
91: invokevirtual #25
94: invokevirtual #27
97: iload_3
98: iconst_1
99: if_icmpne     106
102: iconst_1
103: goto          107
106: iconst_0
107: invokestatic  #31
110: new           #22
113: dup
114: invokespecial #23
117: ldc           #24
119: invokevirtual #25
122: iload         4
124: invokevirtual #29
127: ldc           #30
129: invokevirtual #25
132: iconst_m1
133: invokevirtual #29
136: ldc           #24
138: invokevirtual #25
141: invokevirtual #27
144: iload         4
146: iconst_m1
147: if_icmpne     154
150: iconst_1
151: goto          155
154: iconst_0
155: invokestatic  #31
158: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0972
Start line: 10647
End line: 0
Method source code: 
    public void test0972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0972");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        helpFormatter0.defaultArgName = "hi!";
        java.lang.String str9 = helpFormatter0.createPadding((int) (byte) 10);
        helpFormatter0.defaultWidth = ' ';
        java.io.PrintWriter printWriter12 = null;
        org.apache.commons.cli.Options options16 = null;
        try {
            helpFormatter0.printHelp(printWriter12, (int) '4', "          ", "arg", options16, (int) (byte) 100, 0, "\n", false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "          " + "'", str9, "          ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #578
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: bipush        10
47: invokevirtual #37
50: aload_1
51: ldc           #65
53: putfield      #15
56: aload_1
57: bipush        10
59: invokevirtual #93
62: astore_3
63: aload_1
64: bipush        32
66: putfield      #57
69: aconst_null
70: astore        4
72: aconst_null
73: astore        5
75: aload_1
76: aload         4
78: bipush        52
80: ldc           #67
82: ldc           #78
84: aload         5
86: bipush        100
88: iconst_0
89: ldc           #33
91: iconst_0
92: invokevirtual #138
95: ldc           #18
97: invokestatic  #19
100: goto          105
103: astore        6
105: new           #22
108: dup
109: invokespecial #23
112: ldc           #24
114: invokevirtual #25
117: iload_2
118: invokevirtual #29
121: ldc           #30
123: invokevirtual #25
126: iconst_1
127: invokevirtual #29
130: ldc           #24
132: invokevirtual #25
135: invokevirtual #27
138: iload_2
139: iconst_1
140: if_icmpne     147
143: iconst_1
144: goto          148
147: iconst_0
148: invokestatic  #31
151: new           #22
154: dup
155: invokespecial #23
158: ldc           #24
160: invokevirtual #25
163: aload_3
164: invokevirtual #25
167: ldc           #135
169: invokevirtual #25
172: invokevirtual #27
175: aload_3
176: ldc           #67
178: invokestatic  #28
181: return
Exception table:
from    to  target type
75   100   103   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0973
Start line: 10671
End line: 0
Method source code: 
    public void test0973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0973");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        helpFormatter0.defaultArgName = "hi!";
        java.util.Comparator comparator8 = helpFormatter0.getOptionComparator();
        int int9 = helpFormatter0.defaultWidth;
        java.lang.String str10 = helpFormatter0.defaultNewLine;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(comparator8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 74 + "'", int9 == 74);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #579
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: bipush        10
47: invokevirtual #37
50: aload_1
51: ldc           #65
53: putfield      #15
56: aload_1
57: invokevirtual #58
60: astore_3
61: aload_1
62: getfield      #57
65: istore        4
67: aload_1
68: getfield      #36
71: astore        5
73: new           #22
76: dup
77: invokespecial #23
80: ldc           #24
82: invokevirtual #25
85: iload_2
86: invokevirtual #29
89: ldc           #30
91: invokevirtual #25
94: iconst_1
95: invokevirtual #29
98: ldc           #24
100: invokevirtual #25
103: invokevirtual #27
106: iload_2
107: iconst_1
108: if_icmpne     115
111: iconst_1
112: goto          116
115: iconst_0
116: invokestatic  #31
119: aload_3
120: invokestatic  #21
123: new           #22
126: dup
127: invokespecial #23
130: ldc           #24
132: invokevirtual #25
135: iload         4
137: invokevirtual #29
140: ldc           #30
142: invokevirtual #25
145: bipush        74
147: invokevirtual #29
150: ldc           #24
152: invokevirtual #25
155: invokevirtual #27
158: iload         4
160: bipush        74
162: if_icmpne     169
165: iconst_1
166: goto          170
169: iconst_0
170: invokestatic  #31
173: new           #22
176: dup
177: invokespecial #23
180: ldc           #24
182: invokevirtual #25
185: aload         5
187: invokevirtual #25
190: ldc           #26
192: invokevirtual #25
195: invokevirtual #27
198: aload         5
200: ldc           #11
202: invokestatic  #28
205: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0974
Start line: 10689
End line: 0
Method source code: 
    public void test0974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0974");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str6 = helpFormatter0.getNewLine();
        java.util.Comparator comparator7 = helpFormatter0.getOptionComparator();
        helpFormatter0.setLongOptSeparator("usage: ");
        helpFormatter0.defaultLeftPad = '4';
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\n" + "'", str6, "\n");
        org.junit.Assert.assertNotNull(comparator7);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #580
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #11
36: invokevirtual #51
39: aload_1
40: ldc           #11
42: putfield      #52
45: aload_1
46: getfield      #52
49: astore_2
50: aload_1
51: invokevirtual #16
54: astore_3
55: aload_1
56: invokevirtual #58
59: astore        4
61: aload_1
62: ldc           #46
64: invokevirtual #74
67: aload_1
68: bipush        52
70: putfield      #40
73: new           #22
76: dup
77: invokespecial #23
80: ldc           #24
82: invokevirtual #25
85: aload_2
86: invokevirtual #25
89: ldc           #26
91: invokevirtual #25
94: invokevirtual #27
97: aload_2
98: ldc           #11
100: invokestatic  #28
103: new           #22
106: dup
107: invokespecial #23
110: ldc           #24
112: invokevirtual #25
115: aload_3
116: invokevirtual #25
119: ldc           #32
121: invokevirtual #25
124: invokevirtual #27
127: aload_3
128: ldc           #33
130: invokestatic  #28
133: aload         4
135: invokestatic  #21
138: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0975
Start line: 10706
End line: 0
Method source code: 
    public void test0975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0975");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        java.lang.String str6 = helpFormatter0.rtrim("");
        int int10 = helpFormatter0.findWrapPos(" ", (int) (byte) 10, (int) (short) 10);
        helpFormatter0.defaultDescPad = 52;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #581
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: getfield      #42
48: astore_3
49: aload_1
50: ldc           #11
52: invokevirtual #12
55: astore        4
57: aload_1
58: ldc           #38
60: bipush        10
62: bipush        10
64: invokevirtual #61
67: istore        5
69: aload_1
70: bipush        52
72: putfield      #44
75: new           #22
78: dup
79: invokespecial #23
82: ldc           #24
84: invokevirtual #25
87: iload_2
88: invokevirtual #29
91: ldc           #30
93: invokevirtual #25
96: iconst_1
97: invokevirtual #29
100: ldc           #24
102: invokevirtual #25
105: invokevirtual #27
108: iload_2
109: iconst_1
110: if_icmpne     117
113: iconst_1
114: goto          118
117: iconst_0
118: invokestatic  #31
121: new           #22
124: dup
125: invokespecial #23
128: ldc           #24
130: invokevirtual #25
133: aload_3
134: invokevirtual #25
137: ldc           #48
139: invokevirtual #25
142: invokevirtual #27
145: aload_3
146: ldc           #49
148: invokestatic  #28
151: new           #22
154: dup
155: invokespecial #23
158: ldc           #24
160: invokevirtual #25
163: aload         4
165: invokevirtual #25
168: ldc           #26
170: invokevirtual #25
173: invokevirtual #27
176: aload         4
178: ldc           #11
180: invokestatic  #28
183: new           #22
186: dup
187: invokespecial #23
190: ldc           #24
192: invokevirtual #25
195: iload         5
197: invokevirtual #29
200: ldc           #30
202: invokevirtual #25
205: iconst_m1
206: invokevirtual #29
209: ldc           #24
211: invokevirtual #25
214: invokevirtual #27
217: iload         5
219: iconst_m1
220: if_icmpne     227
223: iconst_1
224: goto          228
227: iconst_0
228: invokestatic  #31
231: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0976
Start line: 10723
End line: 0
Method source code: 
    public void test0976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0976");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.getArgName();
        helpFormatter0.setArgName("arg");
        int int7 = helpFormatter0.defaultDescPad;
        helpFormatter0.defaultNewLine = "--";
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "arg" + "'", str4, "arg");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 3 + "'", int7 == 3);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #582
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: invokevirtual #83
48: astore_3
49: aload_1
50: ldc           #78
52: invokevirtual #59
55: aload_1
56: getfield      #44
59: istore        4
61: aload_1
62: ldc           #63
64: putfield      #36
67: new           #22
70: dup
71: invokespecial #23
74: ldc           #24
76: invokevirtual #25
79: iload_2
80: invokevirtual #29
83: ldc           #30
85: invokevirtual #25
88: iconst_1
89: invokevirtual #29
92: ldc           #24
94: invokevirtual #25
97: invokevirtual #27
100: iload_2
101: iconst_1
102: if_icmpne     109
105: iconst_1
106: goto          110
109: iconst_0
110: invokestatic  #31
113: new           #22
116: dup
117: invokespecial #23
120: ldc           #24
122: invokevirtual #25
125: aload_3
126: invokevirtual #25
129: ldc           #79
131: invokevirtual #25
134: invokevirtual #27
137: aload_3
138: ldc           #78
140: invokestatic  #28
143: new           #22
146: dup
147: invokespecial #23
150: ldc           #24
152: invokevirtual #25
155: iload         4
157: invokevirtual #29
160: ldc           #30
162: invokevirtual #25
165: iconst_3
166: invokevirtual #29
169: ldc           #24
171: invokevirtual #25
174: invokevirtual #27
177: iload         4
179: iconst_3
180: if_icmpne     187
183: iconst_1
184: goto          188
187: iconst_0
188: invokestatic  #31
191: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0977
Start line: 10739
End line: 0
Method source code: 
    public void test0977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0977");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        int int2 = helpFormatter0.getWidth();
        int int3 = helpFormatter0.defaultLeftPad;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 74 + "'", int2 == 74);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #583
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: invokevirtual #66
42: istore_3
43: aload_1
44: getfield      #40
47: istore        4
49: new           #22
52: dup
53: invokespecial #23
56: ldc           #24
58: invokevirtual #25
61: iload_2
62: invokevirtual #29
65: ldc           #30
67: invokevirtual #25
70: iconst_1
71: invokevirtual #29
74: ldc           #24
76: invokevirtual #25
79: invokevirtual #27
82: iload_2
83: iconst_1
84: if_icmpne     91
87: iconst_1
88: goto          92
91: iconst_0
92: invokestatic  #31
95: new           #22
98: dup
99: invokespecial #23
102: ldc           #24
104: invokevirtual #25
107: iload_3
108: invokevirtual #29
111: ldc           #30
113: invokevirtual #25
116: bipush        74
118: invokevirtual #29
121: ldc           #24
123: invokevirtual #25
126: invokevirtual #27
129: iload_3
130: bipush        74
132: if_icmpne     139
135: iconst_1
136: goto          140
139: iconst_0
140: invokestatic  #31
143: new           #22
146: dup
147: invokespecial #23
150: ldc           #24
152: invokevirtual #25
155: iload         4
157: invokevirtual #29
160: ldc           #30
162: invokevirtual #25
165: iconst_1
166: invokevirtual #29
169: ldc           #24
171: invokevirtual #25
174: invokevirtual #27
177: iload         4
179: iconst_1
180: if_icmpne     187
183: iconst_1
184: goto          188
187: iconst_0
188: invokestatic  #31
191: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0978
Start line: 10752
End line: 0
Method source code: 
    public void test0978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0978");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.defaultLongOptPrefix = "hi!";
        int int3 = helpFormatter0.getWidth();
        helpFormatter0.setLongOptPrefix("          ");
        helpFormatter0.setLeftPadding(0);
        java.lang.String str8 = helpFormatter0.getArgName();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 74 + "'", int3 == 74);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "arg" + "'", str8, "arg");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #584
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #65
36: putfield      #52
39: aload_1
40: invokevirtual #66
43: istore_2
44: aload_1
45: ldc           #67
47: invokevirtual #43
50: aload_1
51: iconst_0
52: invokevirtual #55
55: aload_1
56: invokevirtual #83
59: astore_3
60: new           #22
63: dup
64: invokespecial #23
67: ldc           #24
69: invokevirtual #25
72: iload_2
73: invokevirtual #29
76: ldc           #30
78: invokevirtual #25
81: bipush        74
83: invokevirtual #29
86: ldc           #24
88: invokevirtual #25
91: invokevirtual #27
94: iload_2
95: bipush        74
97: if_icmpne     104
100: iconst_1
101: goto          105
104: iconst_0
105: invokestatic  #31
108: new           #22
111: dup
112: invokespecial #23
115: ldc           #24
117: invokevirtual #25
120: aload_3
121: invokevirtual #25
124: ldc           #79
126: invokevirtual #25
129: invokevirtual #27
132: aload_3
133: ldc           #78
135: invokestatic  #28
138: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0979
Start line: 10766
End line: 0
Method source code: 
    public void test0979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0979");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.getArgName();
        helpFormatter0.setSyntaxPrefix("usage: ");
        java.lang.String str6 = helpFormatter0.rtrim("\n");
        java.lang.String str7 = helpFormatter0.getNewLine();
        helpFormatter0.defaultNewLine = " ";
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "arg" + "'", str2, "arg");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\n" + "'", str7, "\n");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #585
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: invokevirtual #83
42: astore_3
43: aload_1
44: ldc           #46
46: invokevirtual #39
49: aload_1
50: ldc           #33
52: invokevirtual #12
55: astore        4
57: aload_1
58: invokevirtual #16
61: astore        5
63: aload_1
64: ldc           #38
66: putfield      #36
69: new           #22
72: dup
73: invokespecial #23
76: ldc           #24
78: invokevirtual #25
81: iload_2
82: invokevirtual #29
85: ldc           #30
87: invokevirtual #25
90: iconst_1
91: invokevirtual #29
94: ldc           #24
96: invokevirtual #25
99: invokevirtual #27
102: iload_2
103: iconst_1
104: if_icmpne     111
107: iconst_1
108: goto          112
111: iconst_0
112: invokestatic  #31
115: new           #22
118: dup
119: invokespecial #23
122: ldc           #24
124: invokevirtual #25
127: aload_3
128: invokevirtual #25
131: ldc           #79
133: invokevirtual #25
136: invokevirtual #27
139: aload_3
140: ldc           #78
142: invokestatic  #28
145: new           #22
148: dup
149: invokespecial #23
152: ldc           #24
154: invokevirtual #25
157: aload         4
159: invokevirtual #25
162: ldc           #26
164: invokevirtual #25
167: invokevirtual #27
170: aload         4
172: ldc           #11
174: invokestatic  #28
177: new           #22
180: dup
181: invokespecial #23
184: ldc           #24
186: invokevirtual #25
189: aload         5
191: invokevirtual #25
194: ldc           #32
196: invokevirtual #25
199: invokevirtual #27
202: aload         5
204: ldc           #33
206: invokestatic  #28
209: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0980
Start line: 10783
End line: 0
Method source code: 
    public void test0980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0980");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.getArgName();
        helpFormatter0.defaultNewLine = "\n";
        helpFormatter0.defaultLeftPad = (byte) -1;
        helpFormatter0.setLongOptSeparator("");
        helpFormatter0.setLongOptSeparator("-");
        java.lang.String str11 = helpFormatter0.getSyntaxPrefix();
        helpFormatter0.defaultDescPad = (byte) 1;
        org.apache.commons.cli.Options options16 = null;
        try {
            helpFormatter0.printHelp("                                                                                                    ", "-", options16, "                                ");
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: null");
        } catch (java.lang.NegativeArraySizeException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "arg" + "'", str2, "arg");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "usage: " + "'", str11, "usage: ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #586
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: invokevirtual #83
42: astore_3
43: aload_1
44: ldc           #33
46: putfield      #36
49: aload_1
50: iconst_m1
51: putfield      #40
54: aload_1
55: ldc           #11
57: invokevirtual #74
60: aload_1
61: ldc           #49
63: invokevirtual #74
66: aload_1
67: invokevirtual #89
70: astore        4
72: aload_1
73: iconst_1
74: putfield      #44
77: aconst_null
78: astore        5
80: aload_1
81: ldc           #118
83: ldc           #49
85: aload         5
87: ldc           #95
89: invokevirtual #128
92: ldc           #84
94: invokestatic  #19
97: goto          102
100: astore        6
102: new           #22
105: dup
106: invokespecial #23
109: ldc           #24
111: invokevirtual #25
114: iload_2
115: invokevirtual #29
118: ldc           #30
120: invokevirtual #25
123: iconst_1
124: invokevirtual #29
127: ldc           #24
129: invokevirtual #25
132: invokevirtual #27
135: iload_2
136: iconst_1
137: if_icmpne     144
140: iconst_1
141: goto          145
144: iconst_0
145: invokestatic  #31
148: new           #22
151: dup
152: invokespecial #23
155: ldc           #24
157: invokevirtual #25
160: aload_3
161: invokevirtual #25
164: ldc           #79
166: invokevirtual #25
169: invokevirtual #27
172: aload_3
173: ldc           #78
175: invokestatic  #28
178: new           #22
181: dup
182: invokespecial #23
185: ldc           #24
187: invokevirtual #25
190: aload         4
192: invokevirtual #25
195: ldc           #104
197: invokevirtual #25
200: invokevirtual #27
203: aload         4
205: ldc           #46
207: invokestatic  #28
210: return
Exception table:
from    to  target type
80    97   100   Class java/lang/NegativeArraySizeException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0981
Start line: 10809
End line: 0
Method source code: 
    public void test0981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0981");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        java.lang.String str3 = helpFormatter0.getLongOptPrefix();
        java.lang.String str4 = helpFormatter0.getOptPrefix();
        helpFormatter0.defaultArgName = "          ";
        java.lang.String str7 = helpFormatter0.getNewLine();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "--" + "'", str3, "--");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\n" + "'", str7, "\n");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #587
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #11
36: invokevirtual #51
39: aload_1
40: invokevirtual #53
43: astore_2
44: aload_1
45: invokevirtual #73
48: astore_3
49: aload_1
50: ldc           #67
52: putfield      #15
55: aload_1
56: invokevirtual #16
59: astore        4
61: new           #22
64: dup
65: invokespecial #23
68: ldc           #24
70: invokevirtual #25
73: aload_2
74: invokevirtual #25
77: ldc           #62
79: invokevirtual #25
82: invokevirtual #27
85: aload_2
86: ldc           #63
88: invokestatic  #28
91: new           #22
94: dup
95: invokespecial #23
98: ldc           #24
100: invokevirtual #25
103: aload_3
104: invokevirtual #25
107: ldc           #26
109: invokevirtual #25
112: invokevirtual #27
115: aload_3
116: ldc           #11
118: invokestatic  #28
121: new           #22
124: dup
125: invokespecial #23
128: ldc           #24
130: invokevirtual #25
133: aload         4
135: invokevirtual #25
138: ldc           #32
140: invokevirtual #25
143: invokevirtual #27
146: aload         4
148: ldc           #33
150: invokestatic  #28
153: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0982
Start line: 10824
End line: 0
Method source code: 
    public void test0982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0982");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        java.lang.String str6 = helpFormatter0.defaultNewLine;
        helpFormatter0.setDescPadding(10);
        int int9 = helpFormatter0.defaultLeftPad;
        int int10 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultOptPrefix = "                                ";
        org.apache.commons.cli.Options options15 = null;
        try {
            helpFormatter0.printHelp("\n", "                                ", options15, " ");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #588
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: bipush        10
47: invokevirtual #37
50: aload_1
51: getfield      #36
54: astore_3
55: aload_1
56: bipush        10
58: invokevirtual #37
61: aload_1
62: getfield      #40
65: istore        4
67: aload_1
68: invokevirtual #35
71: istore        5
73: aload_1
74: ldc           #95
76: putfield      #42
79: aconst_null
80: astore        6
82: aload_1
83: ldc           #33
85: ldc           #95
87: aload         6
89: ldc           #38
91: invokevirtual #128
94: ldc           #18
96: invokestatic  #19
99: goto          104
102: astore        7
104: new           #22
107: dup
108: invokespecial #23
111: ldc           #24
113: invokevirtual #25
116: iload_2
117: invokevirtual #29
120: ldc           #30
122: invokevirtual #25
125: iconst_1
126: invokevirtual #29
129: ldc           #24
131: invokevirtual #25
134: invokevirtual #27
137: iload_2
138: iconst_1
139: if_icmpne     146
142: iconst_1
143: goto          147
146: iconst_0
147: invokestatic  #31
150: new           #22
153: dup
154: invokespecial #23
157: ldc           #24
159: invokevirtual #25
162: aload_3
163: invokevirtual #25
166: ldc           #26
168: invokevirtual #25
171: invokevirtual #27
174: aload_3
175: ldc           #11
177: invokestatic  #28
180: new           #22
183: dup
184: invokespecial #23
187: ldc           #24
189: invokevirtual #25
192: iload         4
194: invokevirtual #29
197: ldc           #30
199: invokevirtual #25
202: iconst_1
203: invokevirtual #29
206: ldc           #24
208: invokevirtual #25
211: invokevirtual #27
214: iload         4
216: iconst_1
217: if_icmpne     224
220: iconst_1
221: goto          225
224: iconst_0
225: invokestatic  #31
228: new           #22
231: dup
232: invokespecial #23
235: ldc           #24
237: invokevirtual #25
240: iload         5
242: invokevirtual #29
245: ldc           #30
247: invokevirtual #25
250: iconst_1
251: invokevirtual #29
254: ldc           #24
256: invokevirtual #25
259: invokevirtual #27
262: iload         5
264: iconst_1
265: if_icmpne     272
268: iconst_1
269: goto          273
272: iconst_0
273: invokestatic  #31
276: return
Exception table:
from    to  target type
82    99   102   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0983
Start line: 10851
End line: 0
Method source code: 
    public void test0983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0983");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.lang.String str1 = helpFormatter0.defaultSyntaxPrefix;
        java.util.Comparator comparator2 = helpFormatter0.optionComparator;
        java.lang.String str3 = helpFormatter0.defaultArgName;
        java.util.Comparator comparator4 = helpFormatter0.optionComparator;
        helpFormatter0.defaultDescPad = ' ';
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "usage: " + "'", str1, "usage: ");
        org.junit.Assert.assertNotNull(comparator2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "arg" + "'", str3, "arg");
        org.junit.Assert.assertNotNull(comparator4);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #589
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: getfield      #45
37: astore_2
38: aload_1
39: getfield      #10
42: astore_3
43: aload_1
44: getfield      #15
47: astore        4
49: aload_1
50: getfield      #10
53: astore        5
55: aload_1
56: bipush        32
58: putfield      #44
61: new           #22
64: dup
65: invokespecial #23
68: ldc           #24
70: invokevirtual #25
73: aload_2
74: invokevirtual #25
77: ldc           #104
79: invokevirtual #25
82: invokevirtual #27
85: aload_2
86: ldc           #46
88: invokestatic  #28
91: aload_3
92: invokestatic  #21
95: new           #22
98: dup
99: invokespecial #23
102: ldc           #24
104: invokevirtual #25
107: aload         4
109: invokevirtual #25
112: ldc           #79
114: invokevirtual #25
117: invokevirtual #27
120: aload         4
122: ldc           #78
124: invokestatic  #28
127: aload         5
129: invokestatic  #21
132: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0984
Start line: 10867
End line: 0
Method source code: 
    public void test0984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0984");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.defaultDescPad = '4';
        helpFormatter0.setNewLine("");
        helpFormatter0.setSyntaxPrefix("");
        java.lang.String str10 = helpFormatter0.getSyntaxPrefix();
        helpFormatter0.setWidth((-2));
        helpFormatter0.defaultOptPrefix = "usage: ";
        helpFormatter0.defaultArgName = "\n";
        int int17 = helpFormatter0.getWidth();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-2) + "'", int17 == (-2));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #590
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: bipush        52
47: putfield      #44
50: aload_1
51: ldc           #11
53: invokevirtual #88
56: aload_1
57: ldc           #11
59: invokevirtual #39
62: aload_1
63: invokevirtual #89
66: astore_3
67: aload_1
68: bipush        -2
70: invokevirtual #90
73: aload_1
74: ldc           #46
76: putfield      #42
79: aload_1
80: ldc           #33
82: putfield      #15
85: aload_1
86: invokevirtual #66
89: istore        4
91: new           #22
94: dup
95: invokespecial #23
98: ldc           #24
100: invokevirtual #25
103: iload_2
104: invokevirtual #29
107: ldc           #30
109: invokevirtual #25
112: iconst_1
113: invokevirtual #29
116: ldc           #24
118: invokevirtual #25
121: invokevirtual #27
124: iload_2
125: iconst_1
126: if_icmpne     133
129: iconst_1
130: goto          134
133: iconst_0
134: invokestatic  #31
137: new           #22
140: dup
141: invokespecial #23
144: ldc           #24
146: invokevirtual #25
149: aload_3
150: invokevirtual #25
153: ldc           #26
155: invokevirtual #25
158: invokevirtual #27
161: aload_3
162: ldc           #11
164: invokestatic  #28
167: new           #22
170: dup
171: invokespecial #23
174: ldc           #24
176: invokevirtual #25
179: iload         4
181: invokevirtual #29
184: ldc           #30
186: invokevirtual #25
189: bipush        -2
191: invokevirtual #29
194: ldc           #24
196: invokevirtual #25
199: invokevirtual #27
202: iload         4
204: bipush        -2
206: if_icmpne     213
209: iconst_1
210: goto          214
213: iconst_0
214: invokestatic  #31
217: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0985
Start line: 10887
End line: 0
Method source code: 
    public void test0985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0985");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.defaultLongOptPrefix;
        helpFormatter0.defaultSyntaxPrefix = "--";
        java.lang.String str5 = helpFormatter0.defaultOptPrefix;
        java.util.Comparator comparator6 = helpFormatter0.optionComparator;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "--" + "'", str2, "--");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "-" + "'", str5, "-");
        org.junit.Assert.assertNotNull(comparator6);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #591
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: getfield      #52
42: astore_3
43: aload_1
44: ldc           #63
46: putfield      #45
49: aload_1
50: getfield      #42
53: astore        4
55: aload_1
56: getfield      #10
59: astore        5
61: new           #22
64: dup
65: invokespecial #23
68: ldc           #24
70: invokevirtual #25
73: iload_2
74: invokevirtual #29
77: ldc           #30
79: invokevirtual #25
82: iconst_1
83: invokevirtual #29
86: ldc           #24
88: invokevirtual #25
91: invokevirtual #27
94: iload_2
95: iconst_1
96: if_icmpne     103
99: iconst_1
100: goto          104
103: iconst_0
104: invokestatic  #31
107: new           #22
110: dup
111: invokespecial #23
114: ldc           #24
116: invokevirtual #25
119: aload_3
120: invokevirtual #25
123: ldc           #62
125: invokevirtual #25
128: invokevirtual #27
131: aload_3
132: ldc           #63
134: invokestatic  #28
137: new           #22
140: dup
141: invokespecial #23
144: ldc           #24
146: invokevirtual #25
149: aload         4
151: invokevirtual #25
154: ldc           #48
156: invokevirtual #25
159: invokevirtual #27
162: aload         4
164: ldc           #49
166: invokestatic  #28
169: aload         5
171: invokestatic  #21
174: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0986
Start line: 10903
End line: 0
Method source code: 
    public void test0986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0986");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setLongOptPrefix(" ");
        helpFormatter0.defaultDescPad = (short) 10;
        helpFormatter0.defaultSyntaxPrefix = "";
        helpFormatter0.setLongOptPrefix("");
        java.lang.String str13 = helpFormatter0.defaultNewLine;
        java.lang.String str14 = helpFormatter0.getLongOptPrefix();
        helpFormatter0.setWidth((int) (byte) 0);
        java.lang.String str17 = helpFormatter0.defaultOptPrefix;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "-" + "'", str17, "-");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #592
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: getfield      #42
48: astore_3
49: aload_1
50: ldc           #38
52: invokevirtual #43
55: aload_1
56: bipush        10
58: putfield      #44
61: aload_1
62: ldc           #11
64: putfield      #45
67: aload_1
68: ldc           #11
70: invokevirtual #43
73: aload_1
74: getfield      #36
77: astore        4
79: aload_1
80: invokevirtual #53
83: astore        5
85: aload_1
86: iconst_0
87: invokevirtual #90
90: aload_1
91: getfield      #42
94: astore        6
96: new           #22
99: dup
100: invokespecial #23
103: ldc           #24
105: invokevirtual #25
108: iload_2
109: invokevirtual #29
112: ldc           #30
114: invokevirtual #25
117: iconst_1
118: invokevirtual #29
121: ldc           #24
123: invokevirtual #25
126: invokevirtual #27
129: iload_2
130: iconst_1
131: if_icmpne     138
134: iconst_1
135: goto          139
138: iconst_0
139: invokestatic  #31
142: new           #22
145: dup
146: invokespecial #23
149: ldc           #24
151: invokevirtual #25
154: aload_3
155: invokevirtual #25
158: ldc           #48
160: invokevirtual #25
163: invokevirtual #27
166: aload_3
167: ldc           #49
169: invokestatic  #28
172: new           #22
175: dup
176: invokespecial #23
179: ldc           #24
181: invokevirtual #25
184: aload         4
186: invokevirtual #25
189: ldc           #26
191: invokevirtual #25
194: invokevirtual #27
197: aload         4
199: ldc           #11
201: invokestatic  #28
204: new           #22
207: dup
208: invokespecial #23
211: ldc           #24
213: invokevirtual #25
216: aload         5
218: invokevirtual #25
221: ldc           #26
223: invokevirtual #25
226: invokevirtual #27
229: aload         5
231: ldc           #11
233: invokestatic  #28
236: new           #22
239: dup
240: invokespecial #23
243: ldc           #24
245: invokevirtual #25
248: aload         6
250: invokevirtual #25
253: ldc           #48
255: invokevirtual #25
258: invokevirtual #27
261: aload         6
263: ldc           #49
265: invokestatic  #28
268: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0987
Start line: 10926
End line: 0
Method source code: 
    public void test0987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0987");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setLongOptPrefix(" ");
        helpFormatter0.defaultDescPad = (short) 10;
        java.lang.String str9 = helpFormatter0.defaultArgName;
        helpFormatter0.setSyntaxPrefix("");
        helpFormatter0.defaultOptPrefix = "                                                                                                 ";
        helpFormatter0.setLongOptPrefix("          ");
        int int16 = helpFormatter0.getLeftPadding();
        java.util.Comparator comparator17 = helpFormatter0.getOptionComparator();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "arg" + "'", str9, "arg");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(comparator17);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #593
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: getfield      #42
48: astore_3
49: aload_1
50: ldc           #38
52: invokevirtual #43
55: aload_1
56: bipush        10
58: putfield      #44
61: aload_1
62: getfield      #15
65: astore        4
67: aload_1
68: ldc           #11
70: invokevirtual #39
73: aload_1
74: ldc           #14
76: putfield      #42
79: aload_1
80: ldc           #67
82: invokevirtual #43
85: aload_1
86: invokevirtual #35
89: istore        5
91: aload_1
92: invokevirtual #58
95: astore        6
97: new           #22
100: dup
101: invokespecial #23
104: ldc           #24
106: invokevirtual #25
109: iload_2
110: invokevirtual #29
113: ldc           #30
115: invokevirtual #25
118: iconst_1
119: invokevirtual #29
122: ldc           #24
124: invokevirtual #25
127: invokevirtual #27
130: iload_2
131: iconst_1
132: if_icmpne     139
135: iconst_1
136: goto          140
139: iconst_0
140: invokestatic  #31
143: new           #22
146: dup
147: invokespecial #23
150: ldc           #24
152: invokevirtual #25
155: aload_3
156: invokevirtual #25
159: ldc           #48
161: invokevirtual #25
164: invokevirtual #27
167: aload_3
168: ldc           #49
170: invokestatic  #28
173: new           #22
176: dup
177: invokespecial #23
180: ldc           #24
182: invokevirtual #25
185: aload         4
187: invokevirtual #25
190: ldc           #79
192: invokevirtual #25
195: invokevirtual #27
198: aload         4
200: ldc           #78
202: invokestatic  #28
205: new           #22
208: dup
209: invokespecial #23
212: ldc           #24
214: invokevirtual #25
217: iload         5
219: invokevirtual #29
222: ldc           #30
224: invokevirtual #25
227: iconst_1
228: invokevirtual #29
231: ldc           #24
233: invokevirtual #25
236: invokevirtual #27
239: iload         5
241: iconst_1
242: if_icmpne     249
245: iconst_1
246: goto          250
249: iconst_0
250: invokestatic  #31
253: aload         6
255: invokestatic  #21
258: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0988
Start line: 10949
End line: 0
Method source code: 
    public void test0988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0988");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        java.lang.String str6 = helpFormatter0.rtrim("");
        java.lang.String str8 = helpFormatter0.rtrim("-");
        java.lang.String str10 = helpFormatter0.rtrim("-");
        java.lang.String str11 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str13 = helpFormatter0.rtrim("          ");
        int int14 = helpFormatter0.getDescPadding();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "-" + "'", str8, "-");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "-" + "'", str10, "-");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "--" + "'", str11, "--");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 3 + "'", int14 == 3);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #594
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: getfield      #42
48: astore_3
49: aload_1
50: ldc           #11
52: invokevirtual #12
55: astore        4
57: aload_1
58: ldc           #49
60: invokevirtual #12
63: astore        5
65: aload_1
66: ldc           #49
68: invokevirtual #12
71: astore        6
73: aload_1
74: getfield      #52
77: astore        7
79: aload_1
80: ldc           #67
82: invokevirtual #12
85: astore        8
87: aload_1
88: invokevirtual #13
91: istore        9
93: new           #22
96: dup
97: invokespecial #23
100: ldc           #24
102: invokevirtual #25
105: iload_2
106: invokevirtual #29
109: ldc           #30
111: invokevirtual #25
114: iconst_1
115: invokevirtual #29
118: ldc           #24
120: invokevirtual #25
123: invokevirtual #27
126: iload_2
127: iconst_1
128: if_icmpne     135
131: iconst_1
132: goto          136
135: iconst_0
136: invokestatic  #31
139: new           #22
142: dup
143: invokespecial #23
146: ldc           #24
148: invokevirtual #25
151: aload_3
152: invokevirtual #25
155: ldc           #48
157: invokevirtual #25
160: invokevirtual #27
163: aload_3
164: ldc           #49
166: invokestatic  #28
169: new           #22
172: dup
173: invokespecial #23
176: ldc           #24
178: invokevirtual #25
181: aload         4
183: invokevirtual #25
186: ldc           #26
188: invokevirtual #25
191: invokevirtual #27
194: aload         4
196: ldc           #11
198: invokestatic  #28
201: new           #22
204: dup
205: invokespecial #23
208: ldc           #24
210: invokevirtual #25
213: aload         5
215: invokevirtual #25
218: ldc           #48
220: invokevirtual #25
223: invokevirtual #27
226: aload         5
228: ldc           #49
230: invokestatic  #28
233: new           #22
236: dup
237: invokespecial #23
240: ldc           #24
242: invokevirtual #25
245: aload         6
247: invokevirtual #25
250: ldc           #48
252: invokevirtual #25
255: invokevirtual #27
258: aload         6
260: ldc           #49
262: invokestatic  #28
265: new           #22
268: dup
269: invokespecial #23
272: ldc           #24
274: invokevirtual #25
277: aload         7
279: invokevirtual #25
282: ldc           #62
284: invokevirtual #25
287: invokevirtual #27
290: aload         7
292: ldc           #63
294: invokestatic  #28
297: new           #22
300: dup
301: invokespecial #23
304: ldc           #24
306: invokevirtual #25
309: aload         8
311: invokevirtual #25
314: ldc           #26
316: invokevirtual #25
319: invokevirtual #27
322: aload         8
324: ldc           #11
326: invokestatic  #28
329: new           #22
332: dup
333: invokespecial #23
336: ldc           #24
338: invokevirtual #25
341: iload         9
343: invokevirtual #29
346: ldc           #30
348: invokevirtual #25
351: iconst_3
352: invokevirtual #29
355: ldc           #24
357: invokevirtual #25
360: invokevirtual #27
363: iload         9
365: iconst_3
366: if_icmpne     373
369: iconst_1
370: goto          374
373: iconst_0
374: invokestatic  #31
377: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0989
Start line: 10973
End line: 0
Method source code: 
    public void test0989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0989");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setLongOptPrefix(" ");
        helpFormatter0.defaultDescPad = (short) 10;
        helpFormatter0.defaultSyntaxPrefix = "";
        helpFormatter0.setLongOptPrefix("");
        java.lang.String str13 = helpFormatter0.getOptPrefix();
        helpFormatter0.setArgName("   ");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "-" + "'", str13, "-");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #595
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: getfield      #42
48: astore_3
49: aload_1
50: ldc           #38
52: invokevirtual #43
55: aload_1
56: bipush        10
58: putfield      #44
61: aload_1
62: ldc           #11
64: putfield      #45
67: aload_1
68: ldc           #11
70: invokevirtual #43
73: aload_1
74: invokevirtual #73
77: astore        4
79: aload_1
80: ldc           #113
82: invokevirtual #59
85: new           #22
88: dup
89: invokespecial #23
92: ldc           #24
94: invokevirtual #25
97: iload_2
98: invokevirtual #29
101: ldc           #30
103: invokevirtual #25
106: iconst_1
107: invokevirtual #29
110: ldc           #24
112: invokevirtual #25
115: invokevirtual #27
118: iload_2
119: iconst_1
120: if_icmpne     127
123: iconst_1
124: goto          128
127: iconst_0
128: invokestatic  #31
131: new           #22
134: dup
135: invokespecial #23
138: ldc           #24
140: invokevirtual #25
143: aload_3
144: invokevirtual #25
147: ldc           #48
149: invokevirtual #25
152: invokevirtual #27
155: aload_3
156: ldc           #49
158: invokestatic  #28
161: new           #22
164: dup
165: invokespecial #23
168: ldc           #24
170: invokevirtual #25
173: aload         4
175: invokevirtual #25
178: ldc           #48
180: invokevirtual #25
183: invokevirtual #27
186: aload         4
188: ldc           #49
190: invokestatic  #28
193: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0990
Start line: 10992
End line: 0
Method source code: 
    public void test0990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0990");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        java.lang.String str6 = helpFormatter0.rtrim("");
        java.lang.String str8 = helpFormatter0.rtrim("-");
        helpFormatter0.defaultOptPrefix = "--";
        helpFormatter0.defaultDescPad = (short) 1;
        int int13 = helpFormatter0.getWidth();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "-" + "'", str8, "-");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 74 + "'", int13 == 74);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #596
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: getfield      #42
48: astore_3
49: aload_1
50: ldc           #11
52: invokevirtual #12
55: astore        4
57: aload_1
58: ldc           #49
60: invokevirtual #12
63: astore        5
65: aload_1
66: ldc           #63
68: putfield      #42
71: aload_1
72: iconst_1
73: putfield      #44
76: aload_1
77: invokevirtual #66
80: istore        6
82: new           #22
85: dup
86: invokespecial #23
89: ldc           #24
91: invokevirtual #25
94: iload_2
95: invokevirtual #29
98: ldc           #30
100: invokevirtual #25
103: iconst_1
104: invokevirtual #29
107: ldc           #24
109: invokevirtual #25
112: invokevirtual #27
115: iload_2
116: iconst_1
117: if_icmpne     124
120: iconst_1
121: goto          125
124: iconst_0
125: invokestatic  #31
128: new           #22
131: dup
132: invokespecial #23
135: ldc           #24
137: invokevirtual #25
140: aload_3
141: invokevirtual #25
144: ldc           #48
146: invokevirtual #25
149: invokevirtual #27
152: aload_3
153: ldc           #49
155: invokestatic  #28
158: new           #22
161: dup
162: invokespecial #23
165: ldc           #24
167: invokevirtual #25
170: aload         4
172: invokevirtual #25
175: ldc           #26
177: invokevirtual #25
180: invokevirtual #27
183: aload         4
185: ldc           #11
187: invokestatic  #28
190: new           #22
193: dup
194: invokespecial #23
197: ldc           #24
199: invokevirtual #25
202: aload         5
204: invokevirtual #25
207: ldc           #48
209: invokevirtual #25
212: invokevirtual #27
215: aload         5
217: ldc           #49
219: invokestatic  #28
222: new           #22
225: dup
226: invokespecial #23
229: ldc           #24
231: invokevirtual #25
234: iload         6
236: invokevirtual #29
239: ldc           #30
241: invokevirtual #25
244: bipush        74
246: invokevirtual #29
249: ldc           #24
251: invokevirtual #25
254: invokevirtual #27
257: iload         6
259: bipush        74
261: if_icmpne     268
264: iconst_1
265: goto          269
268: iconst_0
269: invokestatic  #31
272: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0991
Start line: 11012
End line: 0
Method source code: 
    public void test0991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0991");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str3 = helpFormatter0.getOptPrefix();
        int int4 = helpFormatter0.defaultDescPad;
        helpFormatter0.setOptPrefix("");
        java.lang.String str7 = helpFormatter0.getLongOptSeparator();
        org.apache.commons.cli.Options options9 = null;
        try {
            helpFormatter0.printHelp("                                   ", options9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "--" + "'", str2, "--");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "-" + "'", str3, "-");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 3 + "'", int4 == 3);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + " " + "'", str7, " ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #597
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: getfield      #52
42: astore_3
43: aload_1
44: invokevirtual #73
47: astore        4
49: aload_1
50: getfield      #44
53: istore        5
55: aload_1
56: ldc           #11
58: invokevirtual #51
61: aload_1
62: invokevirtual #72
65: astore        6
67: aconst_null
68: astore        7
70: aload_1
71: ldc_w         #544
74: aload         7
76: invokevirtual #240
79: ldc           #18
81: invokestatic  #19
84: goto          89
87: astore        8
89: new           #22
92: dup
93: invokespecial #23
96: ldc           #24
98: invokevirtual #25
101: iload_2
102: invokevirtual #29
105: ldc           #30
107: invokevirtual #25
110: iconst_1
111: invokevirtual #29
114: ldc           #24
116: invokevirtual #25
119: invokevirtual #27
122: iload_2
123: iconst_1
124: if_icmpne     131
127: iconst_1
128: goto          132
131: iconst_0
132: invokestatic  #31
135: new           #22
138: dup
139: invokespecial #23
142: ldc           #24
144: invokevirtual #25
147: aload_3
148: invokevirtual #25
151: ldc           #62
153: invokevirtual #25
156: invokevirtual #27
159: aload_3
160: ldc           #63
162: invokestatic  #28
165: new           #22
168: dup
169: invokespecial #23
172: ldc           #24
174: invokevirtual #25
177: aload         4
179: invokevirtual #25
182: ldc           #48
184: invokevirtual #25
187: invokevirtual #27
190: aload         4
192: ldc           #49
194: invokestatic  #28
197: new           #22
200: dup
201: invokespecial #23
204: ldc           #24
206: invokevirtual #25
209: iload         5
211: invokevirtual #29
214: ldc           #30
216: invokevirtual #25
219: iconst_3
220: invokevirtual #29
223: ldc           #24
225: invokevirtual #25
228: invokevirtual #27
231: iload         5
233: iconst_3
234: if_icmpne     241
237: iconst_1
238: goto          242
241: iconst_0
242: invokestatic  #31
245: new           #22
248: dup
249: invokespecial #23
252: ldc           #24
254: invokevirtual #25
257: aload         6
259: invokevirtual #25
262: ldc           #75
264: invokevirtual #25
267: invokevirtual #27
270: aload         6
272: ldc           #38
274: invokestatic  #28
277: return
Exception table:
from    to  target type
70    84    87   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0992
Start line: 11038
End line: 0
Method source code: 
    public void test0992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0992");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.util.Comparator comparator1 = helpFormatter0.optionComparator;
        int int2 = helpFormatter0.getLeftPadding();
        java.lang.String str4 = helpFormatter0.rtrim("-");
        int int5 = helpFormatter0.defaultLeftPad;
        java.lang.String str6 = helpFormatter0.getLongOptPrefix();
        helpFormatter0.defaultLeftPad = 32;
        org.apache.commons.cli.Options options12 = null;
        try {
            helpFormatter0.printHelp((int) '#', "                                                                                                 ", "                                ", options12, "                                                    ");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(comparator1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "--" + "'", str6, "--");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #598
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: getfield      #10
37: astore_2
38: aload_1
39: invokevirtual #35
42: istore_3
43: aload_1
44: ldc           #49
46: invokevirtual #12
49: astore        4
51: aload_1
52: getfield      #40
55: istore        5
57: aload_1
58: invokevirtual #53
61: astore        6
63: aload_1
64: bipush        32
66: putfield      #40
69: aconst_null
70: astore        7
72: aload_1
73: bipush        35
75: ldc           #14
77: ldc           #95
79: aload         7
81: ldc           #77
83: invokevirtual #150
86: ldc           #18
88: invokestatic  #19
91: goto          96
94: astore        8
96: aload_2
97: invokestatic  #21
100: new           #22
103: dup
104: invokespecial #23
107: ldc           #24
109: invokevirtual #25
112: iload_3
113: invokevirtual #29
116: ldc           #30
118: invokevirtual #25
121: iconst_1
122: invokevirtual #29
125: ldc           #24
127: invokevirtual #25
130: invokevirtual #27
133: iload_3
134: iconst_1
135: if_icmpne     142
138: iconst_1
139: goto          143
142: iconst_0
143: invokestatic  #31
146: new           #22
149: dup
150: invokespecial #23
153: ldc           #24
155: invokevirtual #25
158: aload         4
160: invokevirtual #25
163: ldc           #48
165: invokevirtual #25
168: invokevirtual #27
171: aload         4
173: ldc           #49
175: invokestatic  #28
178: new           #22
181: dup
182: invokespecial #23
185: ldc           #24
187: invokevirtual #25
190: iload         5
192: invokevirtual #29
195: ldc           #30
197: invokevirtual #25
200: iconst_1
201: invokevirtual #29
204: ldc           #24
206: invokevirtual #25
209: invokevirtual #27
212: iload         5
214: iconst_1
215: if_icmpne     222
218: iconst_1
219: goto          223
222: iconst_0
223: invokestatic  #31
226: new           #22
229: dup
230: invokespecial #23
233: ldc           #24
235: invokevirtual #25
238: aload         6
240: invokevirtual #25
243: ldc           #62
245: invokevirtual #25
248: invokevirtual #27
251: aload         6
253: ldc           #63
255: invokestatic  #28
258: return
Exception table:
from    to  target type
72    91    94   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0993
Start line: 11064
End line: 0
Method source code: 
    public void test0993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0993");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.defaultDescPad = '4';
        helpFormatter0.setNewLine("");
        helpFormatter0.defaultWidth = 0;
        helpFormatter0.setDescPadding((int) 'a');
        helpFormatter0.setLongOptSeparator("arg");
        int int14 = helpFormatter0.getDescPadding();
        org.apache.commons.cli.HelpFormatter helpFormatter15 = new org.apache.commons.cli.HelpFormatter();
        int int16 = helpFormatter15.getLeftPadding();
        helpFormatter15.defaultNewLine = "";
        helpFormatter15.setDescPadding(10);
        helpFormatter15.setSyntaxPrefix(" ");
        java.util.Comparator comparator23 = helpFormatter15.getOptionComparator();
        helpFormatter0.optionComparator = comparator23;
        java.lang.String str25 = helpFormatter0.defaultArgName;
        java.lang.String str26 = helpFormatter0.getSyntaxPrefix();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 97 + "'", int14 == 97);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(comparator23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "arg" + "'", str25, "arg");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "usage: " + "'", str26, "usage: ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #599
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: bipush        52
47: putfield      #44
50: aload_1
51: ldc           #11
53: invokevirtual #88
56: aload_1
57: iconst_0
58: putfield      #57
61: aload_1
62: bipush        97
64: invokevirtual #37
67: aload_1
68: ldc           #78
70: invokevirtual #74
73: aload_1
74: invokevirtual #13
77: istore_3
78: new           #8
81: dup
82: invokespecial #9
85: astore        4
87: aload         4
89: invokevirtual #35
92: istore        5
94: aload         4
96: ldc           #11
98: putfield      #36
101: aload         4
103: bipush        10
105: invokevirtual #37
108: aload         4
110: ldc           #38
112: invokevirtual #39
115: aload         4
117: invokevirtual #58
120: astore        6
122: aload_1
123: aload         6
125: putfield      #10
128: aload_1
129: getfield      #15
132: astore        7
134: aload_1
135: invokevirtual #89
138: astore        8
140: new           #22
143: dup
144: invokespecial #23
147: ldc           #24
149: invokevirtual #25
152: iload_2
153: invokevirtual #29
156: ldc           #30
158: invokevirtual #25
161: iconst_1
162: invokevirtual #29
165: ldc           #24
167: invokevirtual #25
170: invokevirtual #27
173: iload_2
174: iconst_1
175: if_icmpne     182
178: iconst_1
179: goto          183
182: iconst_0
183: invokestatic  #31
186: new           #22
189: dup
190: invokespecial #23
193: ldc           #24
195: invokevirtual #25
198: iload_3
199: invokevirtual #29
202: ldc           #30
204: invokevirtual #25
207: bipush        97
209: invokevirtual #29
212: ldc           #24
214: invokevirtual #25
217: invokevirtual #27
220: iload_3
221: bipush        97
223: if_icmpne     230
226: iconst_1
227: goto          231
230: iconst_0
231: invokestatic  #31
234: new           #22
237: dup
238: invokespecial #23
241: ldc           #24
243: invokevirtual #25
246: iload         5
248: invokevirtual #29
251: ldc           #30
253: invokevirtual #25
256: iconst_1
257: invokevirtual #29
260: ldc           #24
262: invokevirtual #25
265: invokevirtual #27
268: iload         5
270: iconst_1
271: if_icmpne     278
274: iconst_1
275: goto          279
278: iconst_0
279: invokestatic  #31
282: aload         6
284: invokestatic  #21
287: new           #22
290: dup
291: invokespecial #23
294: ldc           #24
296: invokevirtual #25
299: aload         7
301: invokevirtual #25
304: ldc           #79
306: invokevirtual #25
309: invokevirtual #27
312: aload         7
314: ldc           #78
316: invokestatic  #28
319: new           #22
322: dup
323: invokespecial #23
326: ldc           #24
328: invokevirtual #25
331: aload         8
333: invokevirtual #25
336: ldc           #104
338: invokevirtual #25
341: invokevirtual #27
344: aload         8
346: ldc           #46
348: invokestatic  #28
351: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0994
Start line: 11094
End line: 0
Method source code: 
    public void test0994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0994");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.defaultDescPad = '4';
        helpFormatter0.setNewLine("");
        helpFormatter0.setLongOptPrefix(" ");
        java.lang.String str10 = helpFormatter0.defaultSyntaxPrefix;
        helpFormatter0.defaultWidth = 1;
        java.lang.String str13 = helpFormatter0.getArgName();
        java.lang.String str14 = helpFormatter0.defaultArgName;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "usage: " + "'", str10, "usage: ");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "arg" + "'", str13, "arg");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "arg" + "'", str14, "arg");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #600
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: bipush        52
47: putfield      #44
50: aload_1
51: ldc           #11
53: invokevirtual #88
56: aload_1
57: ldc           #38
59: invokevirtual #43
62: aload_1
63: getfield      #45
66: astore_3
67: aload_1
68: iconst_1
69: putfield      #57
72: aload_1
73: invokevirtual #83
76: astore        4
78: aload_1
79: getfield      #15
82: astore        5
84: new           #22
87: dup
88: invokespecial #23
91: ldc           #24
93: invokevirtual #25
96: iload_2
97: invokevirtual #29
100: ldc           #30
102: invokevirtual #25
105: iconst_1
106: invokevirtual #29
109: ldc           #24
111: invokevirtual #25
114: invokevirtual #27
117: iload_2
118: iconst_1
119: if_icmpne     126
122: iconst_1
123: goto          127
126: iconst_0
127: invokestatic  #31
130: new           #22
133: dup
134: invokespecial #23
137: ldc           #24
139: invokevirtual #25
142: aload_3
143: invokevirtual #25
146: ldc           #104
148: invokevirtual #25
151: invokevirtual #27
154: aload_3
155: ldc           #46
157: invokestatic  #28
160: new           #22
163: dup
164: invokespecial #23
167: ldc           #24
169: invokevirtual #25
172: aload         4
174: invokevirtual #25
177: ldc           #79
179: invokevirtual #25
182: invokevirtual #27
185: aload         4
187: ldc           #78
189: invokestatic  #28
192: new           #22
195: dup
196: invokespecial #23
199: ldc           #24
201: invokevirtual #25
204: aload         5
206: invokevirtual #25
209: ldc           #79
211: invokevirtual #25
214: invokevirtual #27
217: aload         5
219: ldc           #78
221: invokestatic  #28
224: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0995
Start line: 11114
End line: 0
Method source code: 
    public void test0995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0995");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        org.apache.commons.cli.HelpFormatter helpFormatter4 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter4.setOptPrefix("");
        helpFormatter4.defaultLongOptPrefix = "";
        java.lang.String str9 = helpFormatter4.defaultLongOptPrefix;
        helpFormatter4.defaultDescPad = 0;
        org.apache.commons.cli.HelpFormatter helpFormatter12 = new org.apache.commons.cli.HelpFormatter();
        java.util.Comparator comparator13 = helpFormatter12.optionComparator;
        int int14 = helpFormatter12.getLeftPadding();
        int int15 = helpFormatter12.defaultLeftPad;
        java.lang.String str17 = helpFormatter12.createPadding((int) 'a');
        org.apache.commons.cli.HelpFormatter helpFormatter18 = new org.apache.commons.cli.HelpFormatter();
        int int19 = helpFormatter18.getLeftPadding();
        helpFormatter18.defaultNewLine = "";
        helpFormatter18.defaultDescPad = '4';
        helpFormatter18.setNewLine("");
        int int29 = helpFormatter18.findWrapPos("\n", (int) ' ', 3);
        java.util.Comparator comparator30 = helpFormatter18.optionComparator;
        helpFormatter12.setOptionComparator(comparator30);
        helpFormatter4.setOptionComparator(comparator30);
        helpFormatter0.optionComparator = comparator30;
        int int37 = helpFormatter0.findWrapPos("-", 0, (int) (byte) 1);
        helpFormatter0.defaultNewLine = "";
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(comparator13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "                                                                                                 " + "'", str17, "                                                                                                 ");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(comparator30);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #601
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: new           #8
47: dup
48: invokespecial #9
51: astore_3
52: aload_3
53: ldc           #11
55: invokevirtual #51
58: aload_3
59: ldc           #11
61: putfield      #52
64: aload_3
65: getfield      #52
68: astore        4
70: aload_3
71: iconst_0
72: putfield      #44
75: new           #8
78: dup
79: invokespecial #9
82: astore        5
84: aload         5
86: getfield      #10
89: astore        6
91: aload         5
93: invokevirtual #35
96: istore        7
98: aload         5
100: getfield      #40
103: istore        8
105: aload         5
107: bipush        97
109: invokevirtual #93
112: astore        9
114: new           #8
117: dup
118: invokespecial #9
121: astore        10
123: aload         10
125: invokevirtual #35
128: istore        11
130: aload         10
132: ldc           #11
134: putfield      #36
137: aload         10
139: bipush        52
141: putfield      #44
144: aload         10
146: ldc           #11
148: invokevirtual #88
151: aload         10
153: ldc           #33
155: bipush        32
157: iconst_3
158: invokevirtual #61
161: istore        12
163: aload         10
165: getfield      #10
168: astore        13
170: aload         5
172: aload         13
174: invokevirtual #99
177: aload_3
178: aload         13
180: invokevirtual #99
183: aload_1
184: aload         13
186: putfield      #10
189: aload_1
190: ldc           #49
192: iconst_0
193: iconst_1
194: invokevirtual #61
197: istore        14
199: aload_1
200: ldc           #11
202: putfield      #36
205: new           #22
208: dup
209: invokespecial #23
212: ldc           #24
214: invokevirtual #25
217: iload_2
218: invokevirtual #29
221: ldc           #30
223: invokevirtual #25
226: iconst_1
227: invokevirtual #29
230: ldc           #24
232: invokevirtual #25
235: invokevirtual #27
238: iload_2
239: iconst_1
240: if_icmpne     247
243: iconst_1
244: goto          248
247: iconst_0
248: invokestatic  #31
251: new           #22
254: dup
255: invokespecial #23
258: ldc           #24
260: invokevirtual #25
263: aload         4
265: invokevirtual #25
268: ldc           #26
270: invokevirtual #25
273: invokevirtual #27
276: aload         4
278: ldc           #11
280: invokestatic  #28
283: aload         6
285: invokestatic  #21
288: new           #22
291: dup
292: invokespecial #23
295: ldc           #24
297: invokevirtual #25
300: iload         7
302: invokevirtual #29
305: ldc           #30
307: invokevirtual #25
310: iconst_1
311: invokevirtual #29
314: ldc           #24
316: invokevirtual #25
319: invokevirtual #27
322: iload         7
324: iconst_1
325: if_icmpne     332
328: iconst_1
329: goto          333
332: iconst_0
333: invokestatic  #31
336: new           #22
339: dup
340: invokespecial #23
343: ldc           #24
345: invokevirtual #25
348: iload         8
350: invokevirtual #29
353: ldc           #30
355: invokevirtual #25
358: iconst_1
359: invokevirtual #29
362: ldc           #24
364: invokevirtual #25
367: invokevirtual #27
370: iload         8
372: iconst_1
373: if_icmpne     380
376: iconst_1
377: goto          381
380: iconst_0
381: invokestatic  #31
384: new           #22
387: dup
388: invokespecial #23
391: ldc           #24
393: invokevirtual #25
396: aload         9
398: invokevirtual #25
401: ldc           #142
403: invokevirtual #25
406: invokevirtual #27
409: aload         9
411: ldc           #14
413: invokestatic  #28
416: new           #22
419: dup
420: invokespecial #23
423: ldc           #24
425: invokevirtual #25
428: iload         11
430: invokevirtual #29
433: ldc           #30
435: invokevirtual #25
438: iconst_1
439: invokevirtual #29
442: ldc           #24
444: invokevirtual #25
447: invokevirtual #27
450: iload         11
452: iconst_1
453: if_icmpne     460
456: iconst_1
457: goto          461
460: iconst_0
461: invokestatic  #31
464: new           #22
467: dup
468: invokespecial #23
471: ldc           #24
473: invokevirtual #25
476: iload         12
478: invokevirtual #29
481: ldc           #30
483: invokevirtual #25
486: iconst_m1
487: invokevirtual #29
490: ldc           #24
492: invokevirtual #25
495: invokevirtual #27
498: iload         12
500: iconst_m1
501: if_icmpne     508
504: iconst_1
505: goto          509
508: iconst_0
509: invokestatic  #31
512: aload         13
514: invokestatic  #21
517: new           #22
520: dup
521: invokespecial #23
524: ldc           #24
526: invokevirtual #25
529: iload         14
531: invokevirtual #29
534: ldc           #30
536: invokevirtual #25
539: iconst_m1
540: invokevirtual #29
543: ldc           #24
545: invokevirtual #25
548: invokevirtual #27
551: iload         14
553: iconst_m1
554: if_icmpne     561
557: iconst_1
558: goto          562
561: iconst_0
562: invokestatic  #31
565: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0996
Start line: 11155
End line: 0
Method source code: 
    public void test0996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0996");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.defaultLongOptPrefix = "hi!";
        int int3 = helpFormatter0.getWidth();
        helpFormatter0.defaultLeftPad = ' ';
        java.lang.String str6 = helpFormatter0.defaultNewLine;
        java.lang.String str7 = helpFormatter0.defaultArgName;
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 74 + "'", int3 == 74);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\n" + "'", str6, "\n");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "arg" + "'", str7, "arg");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #602
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #65
36: putfield      #52
39: aload_1
40: invokevirtual #66
43: istore_2
44: aload_1
45: bipush        32
47: putfield      #40
50: aload_1
51: getfield      #36
54: astore_3
55: aload_1
56: getfield      #15
59: astore        4
61: new           #22
64: dup
65: invokespecial #23
68: ldc           #24
70: invokevirtual #25
73: iload_2
74: invokevirtual #29
77: ldc           #30
79: invokevirtual #25
82: bipush        74
84: invokevirtual #29
87: ldc           #24
89: invokevirtual #25
92: invokevirtual #27
95: iload_2
96: bipush        74
98: if_icmpne     105
101: iconst_1
102: goto          106
105: iconst_0
106: invokestatic  #31
109: new           #22
112: dup
113: invokespecial #23
116: ldc           #24
118: invokevirtual #25
121: aload_3
122: invokevirtual #25
125: ldc           #32
127: invokevirtual #25
130: invokevirtual #27
133: aload_3
134: ldc           #33
136: invokestatic  #28
139: new           #22
142: dup
143: invokespecial #23
146: ldc           #24
148: invokevirtual #25
151: aload         4
153: invokevirtual #25
156: ldc           #79
158: invokevirtual #25
161: invokevirtual #27
164: aload         4
166: ldc           #78
168: invokestatic  #28
171: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0997
Start line: 11170
End line: 0
Method source code: 
    public void test0997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0997");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setLongOptPrefix(" ");
        helpFormatter0.defaultDescPad = (short) 10;
        helpFormatter0.defaultSyntaxPrefix = "";
        helpFormatter0.setLongOptPrefix("");
        java.lang.String str13 = helpFormatter0.defaultNewLine;
        java.lang.String str14 = helpFormatter0.getLongOptPrefix();
        helpFormatter0.setArgName("");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #603
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: getfield      #42
48: astore_3
49: aload_1
50: ldc           #38
52: invokevirtual #43
55: aload_1
56: bipush        10
58: putfield      #44
61: aload_1
62: ldc           #11
64: putfield      #45
67: aload_1
68: ldc           #11
70: invokevirtual #43
73: aload_1
74: getfield      #36
77: astore        4
79: aload_1
80: invokevirtual #53
83: astore        5
85: aload_1
86: ldc           #11
88: invokevirtual #59
91: new           #22
94: dup
95: invokespecial #23
98: ldc           #24
100: invokevirtual #25
103: iload_2
104: invokevirtual #29
107: ldc           #30
109: invokevirtual #25
112: iconst_1
113: invokevirtual #29
116: ldc           #24
118: invokevirtual #25
121: invokevirtual #27
124: iload_2
125: iconst_1
126: if_icmpne     133
129: iconst_1
130: goto          134
133: iconst_0
134: invokestatic  #31
137: new           #22
140: dup
141: invokespecial #23
144: ldc           #24
146: invokevirtual #25
149: aload_3
150: invokevirtual #25
153: ldc           #48
155: invokevirtual #25
158: invokevirtual #27
161: aload_3
162: ldc           #49
164: invokestatic  #28
167: new           #22
170: dup
171: invokespecial #23
174: ldc           #24
176: invokevirtual #25
179: aload         4
181: invokevirtual #25
184: ldc           #26
186: invokevirtual #25
189: invokevirtual #27
192: aload         4
194: ldc           #11
196: invokestatic  #28
199: new           #22
202: dup
203: invokespecial #23
206: ldc           #24
208: invokevirtual #25
211: aload         5
213: invokevirtual #25
216: ldc           #26
218: invokevirtual #25
221: invokevirtual #27
224: aload         5
226: ldc           #11
228: invokestatic  #28
231: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0998
Start line: 11191
End line: 0
Method source code: 
    public void test0998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0998");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.defaultDescPad = '4';
        helpFormatter0.setNewLine("");
        helpFormatter0.setSyntaxPrefix("");
        java.lang.String str10 = helpFormatter0.getSyntaxPrefix();
        helpFormatter0.setWidth((-2));
        java.lang.String str13 = helpFormatter0.getLongOptPrefix();
        int int14 = helpFormatter0.defaultWidth;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "--" + "'", str13, "--");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-2) + "'", int14 == (-2));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #604
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: bipush        52
47: putfield      #44
50: aload_1
51: ldc           #11
53: invokevirtual #88
56: aload_1
57: ldc           #11
59: invokevirtual #39
62: aload_1
63: invokevirtual #89
66: astore_3
67: aload_1
68: bipush        -2
70: invokevirtual #90
73: aload_1
74: invokevirtual #53
77: astore        4
79: aload_1
80: getfield      #57
83: istore        5
85: new           #22
88: dup
89: invokespecial #23
92: ldc           #24
94: invokevirtual #25
97: iload_2
98: invokevirtual #29
101: ldc           #30
103: invokevirtual #25
106: iconst_1
107: invokevirtual #29
110: ldc           #24
112: invokevirtual #25
115: invokevirtual #27
118: iload_2
119: iconst_1
120: if_icmpne     127
123: iconst_1
124: goto          128
127: iconst_0
128: invokestatic  #31
131: new           #22
134: dup
135: invokespecial #23
138: ldc           #24
140: invokevirtual #25
143: aload_3
144: invokevirtual #25
147: ldc           #26
149: invokevirtual #25
152: invokevirtual #27
155: aload_3
156: ldc           #11
158: invokestatic  #28
161: new           #22
164: dup
165: invokespecial #23
168: ldc           #24
170: invokevirtual #25
173: aload         4
175: invokevirtual #25
178: ldc           #62
180: invokevirtual #25
183: invokevirtual #27
186: aload         4
188: ldc           #63
190: invokestatic  #28
193: new           #22
196: dup
197: invokespecial #23
200: ldc           #24
202: invokevirtual #25
205: iload         5
207: invokevirtual #29
210: ldc           #30
212: invokevirtual #25
215: bipush        -2
217: invokevirtual #29
220: ldc           #24
222: invokevirtual #25
225: invokevirtual #27
228: iload         5
230: bipush        -2
232: if_icmpne     239
235: iconst_1
236: goto          240
239: iconst_0
240: invokestatic  #31
243: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test0999
Start line: 11211
End line: 0
Method source code: 
    public void test0999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0999");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        int int6 = helpFormatter0.defaultWidth;
        java.lang.String str7 = helpFormatter0.getLongOptPrefix();
        java.lang.String str8 = helpFormatter0.getLongOptPrefix();
        helpFormatter0.setLongOptSeparator("hi!");
        int int11 = helpFormatter0.getWidth();
        helpFormatter0.defaultWidth = (short) 0;
        java.lang.String str14 = helpFormatter0.getSyntaxPrefix();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "--" + "'", str5, "--");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 74 + "'", int6 == 74);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "--" + "'", str7, "--");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "--" + "'", str8, "--");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 74 + "'", int11 == 74);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "usage: " + "'", str14, "usage: ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #605
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: getfield      #42
48: astore_3
49: aload_1
50: getfield      #52
53: astore        4
55: aload_1
56: getfield      #57
59: istore        5
61: aload_1
62: invokevirtual #53
65: astore        6
67: aload_1
68: invokevirtual #53
71: astore        7
73: aload_1
74: ldc           #65
76: invokevirtual #74
79: aload_1
80: invokevirtual #66
83: istore        8
85: aload_1
86: iconst_0
87: putfield      #57
90: aload_1
91: invokevirtual #89
94: astore        9
96: new           #22
99: dup
100: invokespecial #23
103: ldc           #24
105: invokevirtual #25
108: iload_2
109: invokevirtual #29
112: ldc           #30
114: invokevirtual #25
117: iconst_1
118: invokevirtual #29
121: ldc           #24
123: invokevirtual #25
126: invokevirtual #27
129: iload_2
130: iconst_1
131: if_icmpne     138
134: iconst_1
135: goto          139
138: iconst_0
139: invokestatic  #31
142: new           #22
145: dup
146: invokespecial #23
149: ldc           #24
151: invokevirtual #25
154: aload_3
155: invokevirtual #25
158: ldc           #48
160: invokevirtual #25
163: invokevirtual #27
166: aload_3
167: ldc           #49
169: invokestatic  #28
172: new           #22
175: dup
176: invokespecial #23
179: ldc           #24
181: invokevirtual #25
184: aload         4
186: invokevirtual #25
189: ldc           #62
191: invokevirtual #25
194: invokevirtual #27
197: aload         4
199: ldc           #63
201: invokestatic  #28
204: new           #22
207: dup
208: invokespecial #23
211: ldc           #24
213: invokevirtual #25
216: iload         5
218: invokevirtual #29
221: ldc           #30
223: invokevirtual #25
226: bipush        74
228: invokevirtual #29
231: ldc           #24
233: invokevirtual #25
236: invokevirtual #27
239: iload         5
241: bipush        74
243: if_icmpne     250
246: iconst_1
247: goto          251
250: iconst_0
251: invokestatic  #31
254: new           #22
257: dup
258: invokespecial #23
261: ldc           #24
263: invokevirtual #25
266: aload         6
268: invokevirtual #25
271: ldc           #62
273: invokevirtual #25
276: invokevirtual #27
279: aload         6
281: ldc           #63
283: invokestatic  #28
286: new           #22
289: dup
290: invokespecial #23
293: ldc           #24
295: invokevirtual #25
298: aload         7
300: invokevirtual #25
303: ldc           #62
305: invokevirtual #25
308: invokevirtual #27
311: aload         7
313: ldc           #63
315: invokestatic  #28
318: new           #22
321: dup
322: invokespecial #23
325: ldc           #24
327: invokevirtual #25
330: iload         8
332: invokevirtual #29
335: ldc           #30
337: invokevirtual #25
340: bipush        74
342: invokevirtual #29
345: ldc           #24
347: invokevirtual #25
350: invokevirtual #27
353: iload         8
355: bipush        74
357: if_icmpne     364
360: iconst_1
361: goto          365
364: iconst_0
365: invokestatic  #31
368: new           #22
371: dup
372: invokespecial #23
375: ldc           #24
377: invokevirtual #25
380: aload         9
382: invokevirtual #25
385: ldc           #104
387: invokevirtual #25
390: invokevirtual #27
393: aload         9
395: ldc           #46
397: invokestatic  #28
400: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest1.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest1.class
Class name: RegressionTest1
Method name: test1000
Start line: 11237
End line: 0
Method source code: 
    public void test1000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test1000");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setLongOptPrefix(" ");
        int int7 = helpFormatter0.getDescPadding();
        helpFormatter0.setArgName("-");
        helpFormatter0.defaultLongOptPrefix = "";
        helpFormatter0.defaultSyntaxPrefix = "   ";
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 3 + "'", int7 == 3);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #606
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #35
37: istore_2
38: aload_1
39: ldc           #11
41: putfield      #36
44: aload_1
45: getfield      #42
48: astore_3
49: aload_1
50: ldc           #38
52: invokevirtual #43
55: aload_1
56: invokevirtual #13
59: istore        4
61: aload_1
62: ldc           #49
64: invokevirtual #59
67: aload_1
68: ldc           #11
70: putfield      #52
73: aload_1
74: ldc           #113
76: putfield      #45
79: new           #22
82: dup
83: invokespecial #23
86: ldc           #24
88: invokevirtual #25
91: iload_2
92: invokevirtual #29
95: ldc           #30
97: invokevirtual #25
100: iconst_1
101: invokevirtual #29
104: ldc           #24
106: invokevirtual #25
109: invokevirtual #27
112: iload_2
113: iconst_1
114: if_icmpne     121
117: iconst_1
118: goto          122
121: iconst_0
122: invokestatic  #31
125: new           #22
128: dup
129: invokespecial #23
132: ldc           #24
134: invokevirtual #25
137: aload_3
138: invokevirtual #25
141: ldc           #48
143: invokevirtual #25
146: invokevirtual #27
149: aload_3
150: ldc           #49
152: invokestatic  #28
155: new           #22
158: dup
159: invokespecial #23
162: ldc           #24
164: invokevirtual #25
167: iload         4
169: invokevirtual #29
172: ldc           #30
174: invokevirtual #25
177: iconst_3
178: invokevirtual #29
181: ldc           #24
183: invokevirtual #25
186: invokevirtual #27
189: iload         4
191: iconst_3
192: if_icmpne     199
195: iconst_1
196: goto          200
199: iconst_0
200: invokestatic  #31
203: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest2.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest2.class
Class name: RegressionTest2
Method name: test1001
Start line: 12
End line: 0
Method source code: 
    public void test1001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1001");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        helpFormatter0.defaultArgName = "hi!";
        helpFormatter0.setOptPrefix("hi!");
        int int10 = helpFormatter0.defaultLeftPad;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #6
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #10
36: istore_2
37: aload_1
38: ldc           #11
40: putfield      #12
43: aload_1
44: bipush        10
46: invokevirtual #13
49: aload_1
50: ldc           #14
52: putfield      #15
55: aload_1
56: ldc           #14
58: invokevirtual #16
61: aload_1
62: getfield      #17
65: istore_3
66: new           #18
69: dup
70: invokespecial #19
73: ldc           #20
75: invokevirtual #21
78: iload_2
79: invokevirtual #22
82: ldc           #23
84: invokevirtual #21
87: iconst_1
88: invokevirtual #22
91: ldc           #20
93: invokevirtual #21
96: invokevirtual #24
99: iload_2
100: iconst_1
101: if_icmpne     108
104: iconst_1
105: goto          109
108: iconst_0
109: invokestatic  #25
112: new           #18
115: dup
116: invokespecial #19
119: ldc           #20
121: invokevirtual #21
124: iload_3
125: invokevirtual #22
128: ldc           #23
130: invokevirtual #21
133: iconst_1
134: invokevirtual #22
137: ldc           #20
139: invokevirtual #21
142: invokevirtual #24
145: iload_3
146: iconst_1
147: if_icmpne     154
150: iconst_1
151: goto          155
154: iconst_0
155: invokestatic  #25
158: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest2.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest2.class
Class name: RegressionTest2
Method name: test1002
Start line: 27
End line: 0
Method source code: 
    public void test1002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1002");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str6 = helpFormatter0.getNewLine();
        java.util.Comparator comparator7 = helpFormatter0.getOptionComparator();
        org.apache.commons.cli.HelpFormatter helpFormatter8 = new org.apache.commons.cli.HelpFormatter();
        int int9 = helpFormatter8.getLeftPadding();
        helpFormatter8.defaultNewLine = "";
        java.lang.String str12 = helpFormatter8.defaultOptPrefix;
        helpFormatter8.setLongOptPrefix(" ");
        helpFormatter8.defaultDescPad = (short) 10;
        java.lang.String str17 = helpFormatter8.defaultArgName;
        java.util.Comparator comparator18 = helpFormatter8.optionComparator;
        helpFormatter0.setOptionComparator(comparator18);
        helpFormatter0.setLongOptSeparator("          ");
        helpFormatter0.setWidth(100);
        helpFormatter0.defaultWidth = (short) 100;
        java.lang.Class<?> wildcardClass26 = helpFormatter0.getClass();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\n" + "'", str6, "\n");
        org.junit.Assert.assertNotNull(comparator7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "-" + "'", str12, "-");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "arg" + "'", str17, "arg");
        org.junit.Assert.assertNotNull(comparator18);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #26
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: ldc           #11
35: invokevirtual #16
38: aload_1
39: ldc           #11
41: putfield      #27
44: aload_1
45: getfield      #27
48: astore_2
49: aload_1
50: invokevirtual #28
53: astore_3
54: aload_1
55: invokevirtual #29
58: astore        4
60: new           #8
63: dup
64: invokespecial #9
67: astore        5
69: aload         5
71: invokevirtual #10
74: istore        6
76: aload         5
78: ldc           #11
80: putfield      #12
83: aload         5
85: getfield      #30
88: astore        7
90: aload         5
92: ldc           #31
94: invokevirtual #32
97: aload         5
99: bipush        10
101: putfield      #33
104: aload         5
106: getfield      #15
109: astore        8
111: aload         5
113: getfield      #34
116: astore        9
118: aload_1
119: aload         9
121: invokevirtual #35
124: aload_1
125: ldc           #36
127: invokevirtual #37
130: aload_1
131: bipush        100
133: invokevirtual #38
136: aload_1
137: bipush        100
139: putfield      #39
142: aload_1
143: invokevirtual #40
146: astore        10
148: new           #18
151: dup
152: invokespecial #19
155: ldc           #20
157: invokevirtual #21
160: aload_2
161: invokevirtual #21
164: ldc           #41
166: invokevirtual #21
169: invokevirtual #24
172: aload_2
173: ldc           #11
175: invokestatic  #42
178: new           #18
181: dup
182: invokespecial #19
185: ldc           #20
187: invokevirtual #21
190: aload_3
191: invokevirtual #21
194: ldc           #43
196: invokevirtual #21
199: invokevirtual #24
202: aload_3
203: ldc           #44
205: invokestatic  #42
208: aload         4
210: invokestatic  #45
213: new           #18
216: dup
217: invokespecial #19
220: ldc           #20
222: invokevirtual #21
225: iload         6
227: invokevirtual #22
230: ldc           #23
232: invokevirtual #21
235: iconst_1
236: invokevirtual #22
239: ldc           #20
241: invokevirtual #21
244: invokevirtual #24
247: iload         6
249: iconst_1
250: if_icmpne     257
253: iconst_1
254: goto          258
257: iconst_0
258: invokestatic  #25
261: new           #18
264: dup
265: invokespecial #19
268: ldc           #20
270: invokevirtual #21
273: aload         7
275: invokevirtual #21
278: ldc           #46
280: invokevirtual #21
283: invokevirtual #24
286: aload         7
288: ldc           #47
290: invokestatic  #42
293: new           #18
296: dup
297: invokespecial #19
300: ldc           #20
302: invokevirtual #21
305: aload         8
307: invokevirtual #21
310: ldc           #48
312: invokevirtual #21
315: invokevirtual #24
318: aload         8
320: ldc           #49
322: invokestatic  #42
325: aload         9
327: invokestatic  #45
330: aload         10
332: invokestatic  #45
335: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest2.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest2.class
Class name: RegressionTest2
Method name: test1003
Start line: 60
End line: 0
Method source code: 
    public void test1003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1003");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        java.util.Comparator comparator6 = helpFormatter0.optionComparator;
        helpFormatter0.setDescPadding((int) (short) 10);
        int int9 = helpFormatter0.defaultLeftPad;
        helpFormatter0.defaultOptPrefix = "";
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(comparator6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #50
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #10
36: istore_2
37: aload_1
38: ldc           #11
40: putfield      #12
43: aload_1
44: bipush        10
46: invokevirtual #13
49: aload_1
50: getfield      #34
53: astore_3
54: aload_1
55: bipush        10
57: invokevirtual #13
60: aload_1
61: getfield      #17
64: istore        4
66: aload_1
67: ldc           #11
69: putfield      #30
72: new           #18
75: dup
76: invokespecial #19
79: ldc           #20
81: invokevirtual #21
84: iload_2
85: invokevirtual #22
88: ldc           #23
90: invokevirtual #21
93: iconst_1
94: invokevirtual #22
97: ldc           #20
99: invokevirtual #21
102: invokevirtual #24
105: iload_2
106: iconst_1
107: if_icmpne     114
110: iconst_1
111: goto          115
114: iconst_0
115: invokestatic  #25
118: aload_3
119: invokestatic  #45
122: new           #18
125: dup
126: invokespecial #19
129: ldc           #20
131: invokevirtual #21
134: iload         4
136: invokevirtual #22
139: ldc           #23
141: invokevirtual #21
144: iconst_1
145: invokevirtual #22
148: ldc           #20
150: invokevirtual #21
153: invokevirtual #24
156: iload         4
158: iconst_1
159: if_icmpne     166
162: iconst_1
163: goto          167
166: iconst_0
167: invokestatic  #25
170: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest2.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest2.class
Class name: RegressionTest2
Method name: test1004
Start line: 77
End line: 0
Method source code: 
    public void test1004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1004");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.getArgName();
        helpFormatter0.defaultNewLine = "\n";
        helpFormatter0.defaultLeftPad = (byte) -1;
        helpFormatter0.setLongOptSeparator("");
        org.apache.commons.cli.HelpFormatter helpFormatter9 = new org.apache.commons.cli.HelpFormatter();
        int int10 = helpFormatter9.getLeftPadding();
        helpFormatter9.defaultNewLine = "";
        helpFormatter9.setDescPadding(10);
        helpFormatter9.setSyntaxPrefix(" ");
        java.util.Comparator comparator17 = helpFormatter9.getOptionComparator();
        helpFormatter0.setOptionComparator(comparator17);
        java.lang.String str19 = helpFormatter0.getLongOptPrefix();
        helpFormatter0.setDescPadding((int) (short) 10);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "arg" + "'", str2, "arg");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(comparator17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "--" + "'", str19, "--");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #51
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #10
36: istore_2
37: aload_1
38: invokevirtual #52
41: astore_3
42: aload_1
43: ldc           #44
45: putfield      #12
48: aload_1
49: iconst_m1
50: putfield      #17
53: aload_1
54: ldc           #11
56: invokevirtual #37
59: new           #8
62: dup
63: invokespecial #9
66: astore        4
68: aload         4
70: invokevirtual #10
73: istore        5
75: aload         4
77: ldc           #11
79: putfield      #12
82: aload         4
84: bipush        10
86: invokevirtual #13
89: aload         4
91: ldc           #31
93: invokevirtual #53
96: aload         4
98: invokevirtual #29
101: astore        6
103: aload_1
104: aload         6
106: invokevirtual #35
109: aload_1
110: invokevirtual #54
113: astore        7
115: aload_1
116: bipush        10
118: invokevirtual #13
121: new           #18
124: dup
125: invokespecial #19
128: ldc           #20
130: invokevirtual #21
133: iload_2
134: invokevirtual #22
137: ldc           #23
139: invokevirtual #21
142: iconst_1
143: invokevirtual #22
146: ldc           #20
148: invokevirtual #21
151: invokevirtual #24
154: iload_2
155: iconst_1
156: if_icmpne     163
159: iconst_1
160: goto          164
163: iconst_0
164: invokestatic  #25
167: new           #18
170: dup
171: invokespecial #19
174: ldc           #20
176: invokevirtual #21
179: aload_3
180: invokevirtual #21
183: ldc           #48
185: invokevirtual #21
188: invokevirtual #24
191: aload_3
192: ldc           #49
194: invokestatic  #42
197: new           #18
200: dup
201: invokespecial #19
204: ldc           #20
206: invokevirtual #21
209: iload         5
211: invokevirtual #22
214: ldc           #23
216: invokevirtual #21
219: iconst_1
220: invokevirtual #22
223: ldc           #20
225: invokevirtual #21
228: invokevirtual #24
231: iload         5
233: iconst_1
234: if_icmpne     241
237: iconst_1
238: goto          242
241: iconst_0
242: invokestatic  #25
245: aload         6
247: invokestatic  #45
250: new           #18
253: dup
254: invokespecial #19
257: ldc           #20
259: invokevirtual #21
262: aload         7
264: invokevirtual #21
267: ldc           #55
269: invokevirtual #21
272: invokevirtual #24
275: aload         7
277: ldc           #56
279: invokestatic  #42
282: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest2.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest2.class
Class name: RegressionTest2
Method name: test1005
Start line: 103
End line: 0
Method source code: 
    public void test1005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1005");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.util.Comparator comparator1 = helpFormatter0.optionComparator;
        int int2 = helpFormatter0.getLeftPadding();
        int int3 = helpFormatter0.defaultLeftPad;
        java.lang.String str5 = helpFormatter0.createPadding((int) 'a');
        int int6 = helpFormatter0.defaultWidth;
        java.util.Comparator comparator7 = helpFormatter0.getOptionComparator();
        helpFormatter0.defaultSyntaxPrefix = "                                                                                                 ";
        org.junit.Assert.assertNotNull(comparator1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "                                                                                                 " + "'", str5, "                                                                                                 ");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 74 + "'", int6 == 74);
        org.junit.Assert.assertNotNull(comparator7);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #57
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: getfield      #34
36: astore_2
37: aload_1
38: invokevirtual #10
41: istore_3
42: aload_1
43: getfield      #17
46: istore        4
48: aload_1
49: bipush        97
51: invokevirtual #58
54: astore        5
56: aload_1
57: getfield      #39
60: istore        6
62: aload_1
63: invokevirtual #29
66: astore        7
68: aload_1
69: ldc           #59
71: putfield      #60
74: aload_2
75: invokestatic  #45
78: new           #18
81: dup
82: invokespecial #19
85: ldc           #20
87: invokevirtual #21
90: iload_3
91: invokevirtual #22
94: ldc           #23
96: invokevirtual #21
99: iconst_1
100: invokevirtual #22
103: ldc           #20
105: invokevirtual #21
108: invokevirtual #24
111: iload_3
112: iconst_1
113: if_icmpne     120
116: iconst_1
117: goto          121
120: iconst_0
121: invokestatic  #25
124: new           #18
127: dup
128: invokespecial #19
131: ldc           #20
133: invokevirtual #21
136: iload         4
138: invokevirtual #22
141: ldc           #23
143: invokevirtual #21
146: iconst_1
147: invokevirtual #22
150: ldc           #20
152: invokevirtual #21
155: invokevirtual #24
158: iload         4
160: iconst_1
161: if_icmpne     168
164: iconst_1
165: goto          169
168: iconst_0
169: invokestatic  #25
172: new           #18
175: dup
176: invokespecial #19
179: ldc           #20
181: invokevirtual #21
184: aload         5
186: invokevirtual #21
189: ldc           #61
191: invokevirtual #21
194: invokevirtual #24
197: aload         5
199: ldc           #59
201: invokestatic  #42
204: new           #18
207: dup
208: invokespecial #19
211: ldc           #20
213: invokevirtual #21
216: iload         6
218: invokevirtual #22
221: ldc           #23
223: invokevirtual #21
226: bipush        74
228: invokevirtual #22
231: ldc           #20
233: invokevirtual #21
236: invokevirtual #24
239: iload         6
241: bipush        74
243: if_icmpne     250
246: iconst_1
247: goto          251
250: iconst_0
251: invokestatic  #25
254: aload         7
256: invokestatic  #45
259: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest2.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest2.class
Class name: RegressionTest2
Method name: test1006
Start line: 123
End line: 0
Method source code: 
    public void test1006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1006");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        int int4 = helpFormatter0.defaultWidth;
        helpFormatter0.setOptPrefix("");
        helpFormatter0.setOptPrefix("arg");
        java.lang.String str9 = helpFormatter0.getLongOptSeparator();
        int int10 = helpFormatter0.defaultLeftPad;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 74 + "'", int4 == 74);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + " " + "'", str9, " ");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #62
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #10
36: istore_2
37: aload_1
38: ldc           #11
40: putfield      #12
43: aload_1
44: getfield      #39
47: istore_3
48: aload_1
49: ldc           #11
51: invokevirtual #16
54: aload_1
55: ldc           #49
57: invokevirtual #16
60: aload_1
61: invokevirtual #63
64: astore        4
66: aload_1
67: getfield      #17
70: istore        5
72: new           #18
75: dup
76: invokespecial #19
79: ldc           #20
81: invokevirtual #21
84: iload_2
85: invokevirtual #22
88: ldc           #23
90: invokevirtual #21
93: iconst_1
94: invokevirtual #22
97: ldc           #20
99: invokevirtual #21
102: invokevirtual #24
105: iload_2
106: iconst_1
107: if_icmpne     114
110: iconst_1
111: goto          115
114: iconst_0
115: invokestatic  #25
118: new           #18
121: dup
122: invokespecial #19
125: ldc           #20
127: invokevirtual #21
130: iload_3
131: invokevirtual #22
134: ldc           #23
136: invokevirtual #21
139: bipush        74
141: invokevirtual #22
144: ldc           #20
146: invokevirtual #21
149: invokevirtual #24
152: iload_3
153: bipush        74
155: if_icmpne     162
158: iconst_1
159: goto          163
162: iconst_0
163: invokestatic  #25
166: new           #18
169: dup
170: invokespecial #19
173: ldc           #20
175: invokevirtual #21
178: aload         4
180: invokevirtual #21
183: ldc           #64
185: invokevirtual #21
188: invokevirtual #24
191: aload         4
193: ldc           #31
195: invokestatic  #42
198: new           #18
201: dup
202: invokespecial #19
205: ldc           #20
207: invokevirtual #21
210: iload         5
212: invokevirtual #22
215: ldc           #23
217: invokevirtual #21
220: iconst_1
221: invokevirtual #22
224: ldc           #20
226: invokevirtual #21
229: invokevirtual #24
232: iload         5
234: iconst_1
235: if_icmpne     242
238: iconst_1
239: goto          243
242: iconst_0
243: invokestatic  #25
246: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest2.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest2.class
Class name: RegressionTest2
Method name: test1007
Start line: 141
End line: 0
Method source code: 
    public void test1007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1007");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultOptPrefix;
        int int6 = helpFormatter0.getDescPadding();
        java.lang.String str7 = helpFormatter0.defaultArgName;
        java.util.Comparator comparator8 = helpFormatter0.getOptionComparator();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 3 + "'", int6 == 3);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "arg" + "'", str7, "arg");
        org.junit.Assert.assertNotNull(comparator8);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #65
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: ldc           #11
35: invokevirtual #16
38: aload_1
39: ldc           #11
41: putfield      #27
44: aload_1
45: getfield      #30
48: astore_2
49: aload_1
50: invokevirtual #66
53: istore_3
54: aload_1
55: getfield      #15
58: astore        4
60: aload_1
61: invokevirtual #29
64: astore        5
66: new           #18
69: dup
70: invokespecial #19
73: ldc           #20
75: invokevirtual #21
78: aload_2
79: invokevirtual #21
82: ldc           #41
84: invokevirtual #21
87: invokevirtual #24
90: aload_2
91: ldc           #11
93: invokestatic  #42
96: new           #18
99: dup
100: invokespecial #19
103: ldc           #20
105: invokevirtual #21
108: iload_3
109: invokevirtual #22
112: ldc           #23
114: invokevirtual #21
117: iconst_3
118: invokevirtual #22
121: ldc           #20
123: invokevirtual #21
126: invokevirtual #24
129: iload_3
130: iconst_3
131: if_icmpne     138
134: iconst_1
135: goto          139
138: iconst_0
139: invokestatic  #25
142: new           #18
145: dup
146: invokespecial #19
149: ldc           #20
151: invokevirtual #21
154: aload         4
156: invokevirtual #21
159: ldc           #48
161: invokevirtual #21
164: invokevirtual #24
167: aload         4
169: ldc           #49
171: invokestatic  #42
174: aload         5
176: invokestatic  #45
179: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest2.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest2.class
Class name: RegressionTest2
Method name: test1008
Start line: 158
End line: 0
Method source code: 
    public void test1008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1008");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.lang.String str1 = helpFormatter0.defaultSyntaxPrefix;
        java.util.Comparator comparator2 = helpFormatter0.optionComparator;
        java.lang.String str3 = helpFormatter0.defaultArgName;
        java.util.Comparator comparator4 = helpFormatter0.optionComparator;
        helpFormatter0.defaultLeftPad = (byte) -1;
        java.lang.String str7 = helpFormatter0.getOptPrefix();
        java.lang.String str8 = helpFormatter0.getSyntaxPrefix();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "usage: " + "'", str1, "usage: ");
        org.junit.Assert.assertNotNull(comparator2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "arg" + "'", str3, "arg");
        org.junit.Assert.assertNotNull(comparator4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "-" + "'", str7, "-");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "usage: " + "'", str8, "usage: ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #67
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: getfield      #60
36: astore_2
37: aload_1
38: getfield      #34
41: astore_3
42: aload_1
43: getfield      #15
46: astore        4
48: aload_1
49: getfield      #34
52: astore        5
54: aload_1
55: iconst_m1
56: putfield      #17
59: aload_1
60: invokevirtual #68
63: astore        6
65: aload_1
66: invokevirtual #69
69: astore        7
71: new           #18
74: dup
75: invokespecial #19
78: ldc           #20
80: invokevirtual #21
83: aload_2
84: invokevirtual #21
87: ldc           #70
89: invokevirtual #21
92: invokevirtual #24
95: aload_2
96: ldc           #71
98: invokestatic  #42
101: aload_3
102: invokestatic  #45
105: new           #18
108: dup
109: invokespecial #19
112: ldc           #20
114: invokevirtual #21
117: aload         4
119: invokevirtual #21
122: ldc           #48
124: invokevirtual #21
127: invokevirtual #24
130: aload         4
132: ldc           #49
134: invokestatic  #42
137: aload         5
139: invokestatic  #45
142: new           #18
145: dup
146: invokespecial #19
149: ldc           #20
151: invokevirtual #21
154: aload         6
156: invokevirtual #21
159: ldc           #46
161: invokevirtual #21
164: invokevirtual #24
167: aload         6
169: ldc           #47
171: invokestatic  #42
174: new           #18
177: dup
178: invokespecial #19
181: ldc           #20
183: invokevirtual #21
186: aload         7
188: invokevirtual #21
191: ldc           #70
193: invokevirtual #21
196: invokevirtual #24
199: aload         7
201: ldc           #71
203: invokestatic  #42
206: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest2.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest2.class
Class name: RegressionTest2
Method name: test1009
Start line: 178
End line: 0
Method source code: 
    public void test1009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1009");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.lang.String str1 = helpFormatter0.getArgName();
        helpFormatter0.setSyntaxPrefix("--");
        int int4 = helpFormatter0.getDescPadding();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "arg" + "'", str1, "arg");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 3 + "'", int4 == 3);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #72
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #52
36: astore_2
37: aload_1
38: ldc           #56
40: invokevirtual #53
43: aload_1
44: invokevirtual #66
47: istore_3
48: new           #18
51: dup
52: invokespecial #19
55: ldc           #20
57: invokevirtual #21
60: aload_2
61: invokevirtual #21
64: ldc           #48
66: invokevirtual #21
69: invokevirtual #24
72: aload_2
73: ldc           #49
75: invokestatic  #42
78: new           #18
81: dup
82: invokespecial #19
85: ldc           #20
87: invokevirtual #21
90: iload_3
91: invokevirtual #22
94: ldc           #23
96: invokevirtual #21
99: iconst_3
100: invokevirtual #22
103: ldc           #20
105: invokevirtual #21
108: invokevirtual #24
111: iload_3
112: iconst_3
113: if_icmpne     120
116: iconst_1
117: goto          121
120: iconst_0
121: invokestatic  #25
124: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest2.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest2.class
Class name: RegressionTest2
Method name: test1010
Start line: 190
End line: 0
Method source code: 
    public void test1010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1010");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.defaultDescPad = '4';
        helpFormatter0.setNewLine("");
        helpFormatter0.setSyntaxPrefix("");
        java.lang.String str10 = helpFormatter0.getSyntaxPrefix();
        helpFormatter0.setWidth((-2));
        java.lang.String str13 = helpFormatter0.defaultNewLine;
        java.lang.String str14 = helpFormatter0.getArgName();
        java.lang.String str15 = helpFormatter0.getSyntaxPrefix();
        java.lang.String str16 = helpFormatter0.defaultArgName;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "arg" + "'", str14, "arg");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "arg" + "'", str16, "arg");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #73
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #10
36: istore_2
37: aload_1
38: ldc           #11
40: putfield      #12
43: aload_1
44: bipush        52
46: putfield      #33
49: aload_1
50: ldc           #11
52: invokevirtual #74
55: aload_1
56: ldc           #11
58: invokevirtual #53
61: aload_1
62: invokevirtual #69
65: astore_3
66: aload_1
67: bipush        -2
69: invokevirtual #38
72: aload_1
73: getfield      #12
76: astore        4
78: aload_1
79: invokevirtual #52
82: astore        5
84: aload_1
85: invokevirtual #69
88: astore        6
90: aload_1
91: getfield      #15
94: astore        7
96: new           #18
99: dup
100: invokespecial #19
103: ldc           #20
105: invokevirtual #21
108: iload_2
109: invokevirtual #22
112: ldc           #23
114: invokevirtual #21
117: iconst_1
118: invokevirtual #22
121: ldc           #20
123: invokevirtual #21
126: invokevirtual #24
129: iload_2
130: iconst_1
131: if_icmpne     138
134: iconst_1
135: goto          139
138: iconst_0
139: invokestatic  #25
142: new           #18
145: dup
146: invokespecial #19
149: ldc           #20
151: invokevirtual #21
154: aload_3
155: invokevirtual #21
158: ldc           #41
160: invokevirtual #21
163: invokevirtual #24
166: aload_3
167: ldc           #11
169: invokestatic  #42
172: new           #18
175: dup
176: invokespecial #19
179: ldc           #20
181: invokevirtual #21
184: aload         4
186: invokevirtual #21
189: ldc           #41
191: invokevirtual #21
194: invokevirtual #24
197: aload         4
199: ldc           #11
201: invokestatic  #42
204: new           #18
207: dup
208: invokespecial #19
211: ldc           #20
213: invokevirtual #21
216: aload         5
218: invokevirtual #21
221: ldc           #48
223: invokevirtual #21
226: invokevirtual #24
229: aload         5
231: ldc           #49
233: invokestatic  #42
236: new           #18
239: dup
240: invokespecial #19
243: ldc           #20
245: invokevirtual #21
248: aload         6
250: invokevirtual #21
253: ldc           #41
255: invokevirtual #21
258: invokevirtual #24
261: aload         6
263: ldc           #11
265: invokestatic  #42
268: new           #18
271: dup
272: invokespecial #19
275: ldc           #20
277: invokevirtual #21
280: aload         7
282: invokevirtual #21
285: ldc           #48
287: invokevirtual #21
290: invokevirtual #24
293: aload         7
295: ldc           #49
297: invokestatic  #42
300: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest2.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest2.class
Class name: RegressionTest2
Method name: test1011
Start line: 214
End line: 0
Method source code: 
    public void test1011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1011");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.defaultLongOptPrefix;
        helpFormatter0.defaultSyntaxPrefix = "--";
        java.lang.String str5 = helpFormatter0.defaultOptPrefix;
        java.lang.String str6 = helpFormatter0.defaultLongOptPrefix;
        int int10 = helpFormatter0.findWrapPos("\n", 1, 0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "--" + "'", str2, "--");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "-" + "'", str5, "-");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "--" + "'", str6, "--");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #75
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #10
36: istore_2
37: aload_1
38: getfield      #27
41: astore_3
42: aload_1
43: ldc           #56
45: putfield      #60
48: aload_1
49: getfield      #30
52: astore        4
54: aload_1
55: getfield      #27
58: astore        5
60: aload_1
61: ldc           #44
63: iconst_1
64: iconst_0
65: invokevirtual #76
68: istore        6
70: new           #18
73: dup
74: invokespecial #19
77: ldc           #20
79: invokevirtual #21
82: iload_2
83: invokevirtual #22
86: ldc           #23
88: invokevirtual #21
91: iconst_1
92: invokevirtual #22
95: ldc           #20
97: invokevirtual #21
100: invokevirtual #24
103: iload_2
104: iconst_1
105: if_icmpne     112
108: iconst_1
109: goto          113
112: iconst_0
113: invokestatic  #25
116: new           #18
119: dup
120: invokespecial #19
123: ldc           #20
125: invokevirtual #21
128: aload_3
129: invokevirtual #21
132: ldc           #55
134: invokevirtual #21
137: invokevirtual #24
140: aload_3
141: ldc           #56
143: invokestatic  #42
146: new           #18
149: dup
150: invokespecial #19
153: ldc           #20
155: invokevirtual #21
158: aload         4
160: invokevirtual #21
163: ldc           #46
165: invokevirtual #21
168: invokevirtual #24
171: aload         4
173: ldc           #47
175: invokestatic  #42
178: new           #18
181: dup
182: invokespecial #19
185: ldc           #20
187: invokevirtual #21
190: aload         5
192: invokevirtual #21
195: ldc           #55
197: invokevirtual #21
200: invokevirtual #24
203: aload         5
205: ldc           #56
207: invokestatic  #42
210: new           #18
213: dup
214: invokespecial #19
217: ldc           #20
219: invokevirtual #21
222: iload         6
224: invokevirtual #22
227: ldc           #23
229: invokevirtual #21
232: iconst_1
233: invokevirtual #22
236: ldc           #20
238: invokevirtual #21
241: invokevirtual #24
244: iload         6
246: iconst_1
247: if_icmpne     254
250: iconst_1
251: goto          255
254: iconst_0
255: invokestatic  #25
258: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest2.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest2.class
Class name: RegressionTest2
Method name: test1012
Start line: 232
End line: 0
Method source code: 
    public void test1012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1012");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        java.lang.String str6 = helpFormatter0.rtrim("");
        int int7 = helpFormatter0.getDescPadding();
        int int8 = helpFormatter0.getDescPadding();
        java.lang.String str9 = helpFormatter0.getArgName();
        helpFormatter0.setDescPadding(0);
        int int12 = helpFormatter0.defaultDescPad;
        java.lang.String str13 = helpFormatter0.getNewLine();
        java.lang.Class<?> wildcardClass14 = helpFormatter0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 3 + "'", int7 == 3);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 3 + "'", int8 == 3);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "arg" + "'", str9, "arg");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(wildcardClass14);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #77
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #10
36: istore_2
37: aload_1
38: ldc           #11
40: putfield      #12
43: aload_1
44: getfield      #30
47: astore_3
48: aload_1
49: ldc           #11
51: invokevirtual #78
54: astore        4
56: aload_1
57: invokevirtual #66
60: istore        5
62: aload_1
63: invokevirtual #66
66: istore        6
68: aload_1
69: invokevirtual #52
72: astore        7
74: aload_1
75: iconst_0
76: invokevirtual #13
79: aload_1
80: getfield      #33
83: istore        8
85: aload_1
86: invokevirtual #28
89: astore        9
91: aload_1
92: invokevirtual #40
95: astore        10
97: new           #18
100: dup
101: invokespecial #19
104: ldc           #20
106: invokevirtual #21
109: iload_2
110: invokevirtual #22
113: ldc           #23
115: invokevirtual #21
118: iconst_1
119: invokevirtual #22
122: ldc           #20
124: invokevirtual #21
127: invokevirtual #24
130: iload_2
131: iconst_1
132: if_icmpne     139
135: iconst_1
136: goto          140
139: iconst_0
140: invokestatic  #25
143: new           #18
146: dup
147: invokespecial #19
150: ldc           #20
152: invokevirtual #21
155: aload_3
156: invokevirtual #21
159: ldc           #46
161: invokevirtual #21
164: invokevirtual #24
167: aload_3
168: ldc           #47
170: invokestatic  #42
173: new           #18
176: dup
177: invokespecial #19
180: ldc           #20
182: invokevirtual #21
185: aload         4
187: invokevirtual #21
190: ldc           #41
192: invokevirtual #21
195: invokevirtual #24
198: aload         4
200: ldc           #11
202: invokestatic  #42
205: new           #18
208: dup
209: invokespecial #19
212: ldc           #20
214: invokevirtual #21
217: iload         5
219: invokevirtual #22
222: ldc           #23
224: invokevirtual #21
227: iconst_3
228: invokevirtual #22
231: ldc           #20
233: invokevirtual #21
236: invokevirtual #24
239: iload         5
241: iconst_3
242: if_icmpne     249
245: iconst_1
246: goto          250
249: iconst_0
250: invokestatic  #25
253: new           #18
256: dup
257: invokespecial #19
260: ldc           #20
262: invokevirtual #21
265: iload         6
267: invokevirtual #22
270: ldc           #23
272: invokevirtual #21
275: iconst_3
276: invokevirtual #22
279: ldc           #20
281: invokevirtual #21
284: invokevirtual #24
287: iload         6
289: iconst_3
290: if_icmpne     297
293: iconst_1
294: goto          298
297: iconst_0
298: invokestatic  #25
301: new           #18
304: dup
305: invokespecial #19
308: ldc           #20
310: invokevirtual #21
313: aload         7
315: invokevirtual #21
318: ldc           #48
320: invokevirtual #21
323: invokevirtual #24
326: aload         7
328: ldc           #49
330: invokestatic  #42
333: new           #18
336: dup
337: invokespecial #19
340: ldc           #20
342: invokevirtual #21
345: iload         8
347: invokevirtual #22
350: ldc           #23
352: invokevirtual #21
355: iconst_0
356: invokevirtual #22
359: ldc           #20
361: invokevirtual #21
364: invokevirtual #24
367: iload         8
369: ifne          376
372: iconst_1
373: goto          377
376: iconst_0
377: invokestatic  #25
380: new           #18
383: dup
384: invokespecial #19
387: ldc           #20
389: invokevirtual #21
392: aload         9
394: invokevirtual #21
397: ldc           #41
399: invokevirtual #21
402: invokevirtual #24
405: aload         9
407: ldc           #11
409: invokestatic  #42
412: aload         10
414: invokestatic  #45
417: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest2.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest2.class
Class name: RegressionTest2
Method name: test1013
Start line: 259
End line: 0
Method source code: 
    public void test1013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1013");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setLongOptPrefix(" ");
        int int7 = helpFormatter0.getDescPadding();
        int int8 = helpFormatter0.defaultLeftPad;
        java.lang.String str9 = helpFormatter0.getLongOptPrefix();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 3 + "'", int7 == 3);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + " " + "'", str9, " ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #79
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #10
36: istore_2
37: aload_1
38: ldc           #11
40: putfield      #12
43: aload_1
44: getfield      #30
47: astore_3
48: aload_1
49: ldc           #31
51: invokevirtual #32
54: aload_1
55: invokevirtual #66
58: istore        4
60: aload_1
61: getfield      #17
64: istore        5
66: aload_1
67: invokevirtual #54
70: astore        6
72: new           #18
75: dup
76: invokespecial #19
79: ldc           #20
81: invokevirtual #21
84: iload_2
85: invokevirtual #22
88: ldc           #23
90: invokevirtual #21
93: iconst_1
94: invokevirtual #22
97: ldc           #20
99: invokevirtual #21
102: invokevirtual #24
105: iload_2
106: iconst_1
107: if_icmpne     114
110: iconst_1
111: goto          115
114: iconst_0
115: invokestatic  #25
118: new           #18
121: dup
122: invokespecial #19
125: ldc           #20
127: invokevirtual #21
130: aload_3
131: invokevirtual #21
134: ldc           #46
136: invokevirtual #21
139: invokevirtual #24
142: aload_3
143: ldc           #47
145: invokestatic  #42
148: new           #18
151: dup
152: invokespecial #19
155: ldc           #20
157: invokevirtual #21
160: iload         4
162: invokevirtual #22
165: ldc           #23
167: invokevirtual #21
170: iconst_3
171: invokevirtual #22
174: ldc           #20
176: invokevirtual #21
179: invokevirtual #24
182: iload         4
184: iconst_3
185: if_icmpne     192
188: iconst_1
189: goto          193
192: iconst_0
193: invokestatic  #25
196: new           #18
199: dup
200: invokespecial #19
203: ldc           #20
205: invokevirtual #21
208: iload         5
210: invokevirtual #22
213: ldc           #23
215: invokevirtual #21
218: iconst_1
219: invokevirtual #22
222: ldc           #20
224: invokevirtual #21
227: invokevirtual #24
230: iload         5
232: iconst_1
233: if_icmpne     240
236: iconst_1
237: goto          241
240: iconst_0
241: invokestatic  #25
244: new           #18
247: dup
248: invokespecial #19
251: ldc           #20
253: invokevirtual #21
256: aload         6
258: invokevirtual #21
261: ldc           #64
263: invokevirtual #21
266: invokevirtual #24
269: aload         6
271: ldc           #31
273: invokestatic  #42
276: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest2.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest2.class
Class name: RegressionTest2
Method name: test1014
Start line: 278
End line: 0
Method source code: 
    public void test1014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1014");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        java.lang.String str3 = helpFormatter0.getLongOptSeparator();
        helpFormatter0.setWidth(0);
        helpFormatter0.defaultNewLine = "          ";
        java.lang.String str9 = helpFormatter0.createPadding(0);
        helpFormatter0.setDescPadding(74);
        org.apache.commons.cli.HelpFormatter helpFormatter12 = new org.apache.commons.cli.HelpFormatter();
        java.util.Comparator comparator13 = helpFormatter12.optionComparator;
        java.lang.String str14 = helpFormatter12.getLongOptPrefix();
        java.lang.String str15 = helpFormatter12.defaultArgName;
        helpFormatter12.setSyntaxPrefix("-");
        java.util.Comparator comparator18 = helpFormatter12.getOptionComparator();
        helpFormatter0.optionComparator = comparator18;
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + " " + "'", str3, " ");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(comparator13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "--" + "'", str14, "--");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "arg" + "'", str15, "arg");
        org.junit.Assert.assertNotNull(comparator18);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #80
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: ldc           #11
35: invokevirtual #16
38: aload_1
39: invokevirtual #63
42: astore_2
43: aload_1
44: iconst_0
45: invokevirtual #38
48: aload_1
49: ldc           #36
51: putfield      #12
54: aload_1
55: iconst_0
56: invokevirtual #58
59: astore_3
60: aload_1
61: bipush        74
63: invokevirtual #13
66: new           #8
69: dup
70: invokespecial #9
73: astore        4
75: aload         4
77: getfield      #34
80: astore        5
82: aload         4
84: invokevirtual #54
87: astore        6
89: aload         4
91: getfield      #15
94: astore        7
96: aload         4
98: ldc           #47
100: invokevirtual #53
103: aload         4
105: invokevirtual #29
108: astore        8
110: aload_1
111: aload         8
113: putfield      #34
116: new           #18
119: dup
120: invokespecial #19
123: ldc           #20
125: invokevirtual #21
128: aload_2
129: invokevirtual #21
132: ldc           #64
134: invokevirtual #21
137: invokevirtual #24
140: aload_2
141: ldc           #31
143: invokestatic  #42
146: new           #18
149: dup
150: invokespecial #19
153: ldc           #20
155: invokevirtual #21
158: aload_3
159: invokevirtual #21
162: ldc           #41
164: invokevirtual #21
167: invokevirtual #24
170: aload_3
171: ldc           #11
173: invokestatic  #42
176: aload         5
178: invokestatic  #45
181: new           #18
184: dup
185: invokespecial #19
188: ldc           #20
190: invokevirtual #21
193: aload         6
195: invokevirtual #21
198: ldc           #55
200: invokevirtual #21
203: invokevirtual #24
206: aload         6
208: ldc           #56
210: invokestatic  #42
213: new           #18
216: dup
217: invokespecial #19
220: ldc           #20
222: invokevirtual #21
225: aload         7
227: invokevirtual #21
230: ldc           #48
232: invokevirtual #21
235: invokevirtual #24
238: aload         7
240: ldc           #49
242: invokestatic  #42
245: aload         8
247: invokestatic  #45
250: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest2.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest2.class
Class name: RegressionTest2
Method name: test1015
Start line: 304
End line: 0
Method source code: 
    public void test1015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1015");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.defaultDescPad = '4';
        helpFormatter0.setNewLine("");
        helpFormatter0.setSyntaxPrefix("");
        java.lang.String str10 = helpFormatter0.getSyntaxPrefix();
        helpFormatter0.setWidth((-2));
        helpFormatter0.defaultOptPrefix = "usage: ";
        int int15 = helpFormatter0.getDescPadding();
        java.lang.String str16 = helpFormatter0.getArgName();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "arg" + "'", str16, "arg");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #81
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #10
36: istore_2
37: aload_1
38: ldc           #11
40: putfield      #12
43: aload_1
44: bipush        52
46: putfield      #33
49: aload_1
50: ldc           #11
52: invokevirtual #74
55: aload_1
56: ldc           #11
58: invokevirtual #53
61: aload_1
62: invokevirtual #69
65: astore_3
66: aload_1
67: bipush        -2
69: invokevirtual #38
72: aload_1
73: ldc           #71
75: putfield      #30
78: aload_1
79: invokevirtual #66
82: istore        4
84: aload_1
85: invokevirtual #52
88: astore        5
90: new           #18
93: dup
94: invokespecial #19
97: ldc           #20
99: invokevirtual #21
102: iload_2
103: invokevirtual #22
106: ldc           #23
108: invokevirtual #21
111: iconst_1
112: invokevirtual #22
115: ldc           #20
117: invokevirtual #21
120: invokevirtual #24
123: iload_2
124: iconst_1
125: if_icmpne     132
128: iconst_1
129: goto          133
132: iconst_0
133: invokestatic  #25
136: new           #18
139: dup
140: invokespecial #19
143: ldc           #20
145: invokevirtual #21
148: aload_3
149: invokevirtual #21
152: ldc           #41
154: invokevirtual #21
157: invokevirtual #24
160: aload_3
161: ldc           #11
163: invokestatic  #42
166: new           #18
169: dup
170: invokespecial #19
173: ldc           #20
175: invokevirtual #21
178: iload         4
180: invokevirtual #22
183: ldc           #23
185: invokevirtual #21
188: bipush        52
190: invokevirtual #22
193: ldc           #20
195: invokevirtual #21
198: invokevirtual #24
201: iload         4
203: bipush        52
205: if_icmpne     212
208: iconst_1
209: goto          213
212: iconst_0
213: invokestatic  #25
216: new           #18
219: dup
220: invokespecial #19
223: ldc           #20
225: invokevirtual #21
228: aload         5
230: invokevirtual #21
233: ldc           #48
235: invokevirtual #21
238: invokevirtual #24
241: aload         5
243: ldc           #49
245: invokestatic  #42
248: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest2.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest2.class
Class name: RegressionTest2
Method name: test1016
Start line: 325
End line: 0
Method source code: 
    public void test1016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1016");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.defaultDescPad = '4';
        helpFormatter0.setNewLine("");
        helpFormatter0.setSyntaxPrefix("");
        java.lang.String str10 = helpFormatter0.getSyntaxPrefix();
        helpFormatter0.setWidth((-2));
        helpFormatter0.defaultNewLine = "-";
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #82
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #10
36: istore_2
37: aload_1
38: ldc           #11
40: putfield      #12
43: aload_1
44: bipush        52
46: putfield      #33
49: aload_1
50: ldc           #11
52: invokevirtual #74
55: aload_1
56: ldc           #11
58: invokevirtual #53
61: aload_1
62: invokevirtual #69
65: astore_3
66: aload_1
67: bipush        -2
69: invokevirtual #38
72: aload_1
73: ldc           #47
75: putfield      #12
78: new           #18
81: dup
82: invokespecial #19
85: ldc           #20
87: invokevirtual #21
90: iload_2
91: invokevirtual #22
94: ldc           #23
96: invokevirtual #21
99: iconst_1
100: invokevirtual #22
103: ldc           #20
105: invokevirtual #21
108: invokevirtual #24
111: iload_2
112: iconst_1
113: if_icmpne     120
116: iconst_1
117: goto          121
120: iconst_0
121: invokestatic  #25
124: new           #18
127: dup
128: invokespecial #19
131: ldc           #20
133: invokevirtual #21
136: aload_3
137: invokevirtual #21
140: ldc           #41
142: invokevirtual #21
145: invokevirtual #24
148: aload_3
149: ldc           #11
151: invokestatic  #42
154: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest2.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest2.class
Class name: RegressionTest2
Method name: test1017
Start line: 342
End line: 0
Method source code: 
    public void test1017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1017");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str6 = helpFormatter0.getNewLine();
        java.lang.String str7 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setDescPadding(74);
        helpFormatter0.setLeftPadding(52);
        int int12 = helpFormatter0.defaultWidth;
        helpFormatter0.setDescPadding((int) (short) 0);
        java.util.Comparator comparator15 = helpFormatter0.getOptionComparator();
        helpFormatter0.setDescPadding((int) (byte) 1);
        helpFormatter0.defaultLongOptPrefix = "";
        org.apache.commons.cli.Options options22 = null;
        try {
            helpFormatter0.printHelp("", "", options22, "-");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: cmdLineSyntax not provided");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\n" + "'", str6, "\n");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 74 + "'", int12 == 74);
        org.junit.Assert.assertNotNull(comparator15);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #83
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: ldc           #11
35: invokevirtual #16
38: aload_1
39: ldc           #11
41: putfield      #27
44: aload_1
45: getfield      #27
48: astore_2
49: aload_1
50: invokevirtual #28
53: astore_3
54: aload_1
55: getfield      #30
58: astore        4
60: aload_1
61: bipush        74
63: invokevirtual #13
66: aload_1
67: bipush        52
69: invokevirtual #84
72: aload_1
73: getfield      #39
76: istore        5
78: aload_1
79: iconst_0
80: invokevirtual #13
83: aload_1
84: invokevirtual #29
87: astore        6
89: aload_1
90: iconst_1
91: invokevirtual #13
94: aload_1
95: ldc           #11
97: putfield      #27
100: aconst_null
101: astore        7
103: aload_1
104: ldc           #11
106: ldc           #11
108: aload         7
110: ldc           #47
112: invokevirtual #85
115: ldc           #86
117: invokestatic  #87
120: goto          125
123: astore        8
125: new           #18
128: dup
129: invokespecial #19
132: ldc           #20
134: invokevirtual #21
137: aload_2
138: invokevirtual #21
141: ldc           #41
143: invokevirtual #21
146: invokevirtual #24
149: aload_2
150: ldc           #11
152: invokestatic  #42
155: new           #18
158: dup
159: invokespecial #19
162: ldc           #20
164: invokevirtual #21
167: aload_3
168: invokevirtual #21
171: ldc           #43
173: invokevirtual #21
176: invokevirtual #24
179: aload_3
180: ldc           #44
182: invokestatic  #42
185: new           #18
188: dup
189: invokespecial #19
192: ldc           #20
194: invokevirtual #21
197: aload         4
199: invokevirtual #21
202: ldc           #41
204: invokevirtual #21
207: invokevirtual #24
210: aload         4
212: ldc           #11
214: invokestatic  #42
217: new           #18
220: dup
221: invokespecial #19
224: ldc           #20
226: invokevirtual #21
229: iload         5
231: invokevirtual #22
234: ldc           #23
236: invokevirtual #21
239: bipush        74
241: invokevirtual #22
244: ldc           #20
246: invokevirtual #21
249: invokevirtual #24
252: iload         5
254: bipush        74
256: if_icmpne     263
259: iconst_1
260: goto          264
263: iconst_0
264: invokestatic  #25
267: aload         6
269: invokestatic  #45
272: return
Exception table:
from    to  target type
103   120   123   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest2.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest2.class
Class name: RegressionTest2
Method name: test1018
Start line: 374
End line: 0
Method source code: 
    public void test1018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1018");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str6 = helpFormatter0.getNewLine();
        helpFormatter0.setSyntaxPrefix(" ");
        java.lang.String str9 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setNewLine("\n");
        helpFormatter0.setLongOptSeparator("--");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\n" + "'", str6, "\n");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #89
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: ldc           #11
35: invokevirtual #16
38: aload_1
39: ldc           #11
41: putfield      #27
44: aload_1
45: getfield      #27
48: astore_2
49: aload_1
50: invokevirtual #28
53: astore_3
54: aload_1
55: ldc           #31
57: invokevirtual #53
60: aload_1
61: getfield      #30
64: astore        4
66: aload_1
67: ldc           #44
69: invokevirtual #74
72: aload_1
73: ldc           #56
75: invokevirtual #37
78: new           #18
81: dup
82: invokespecial #19
85: ldc           #20
87: invokevirtual #21
90: aload_2
91: invokevirtual #21
94: ldc           #41
96: invokevirtual #21
99: invokevirtual #24
102: aload_2
103: ldc           #11
105: invokestatic  #42
108: new           #18
111: dup
112: invokespecial #19
115: ldc           #20
117: invokevirtual #21
120: aload_3
121: invokevirtual #21
124: ldc           #43
126: invokevirtual #21
129: invokevirtual #24
132: aload_3
133: ldc           #44
135: invokestatic  #42
138: new           #18
141: dup
142: invokespecial #19
145: ldc           #20
147: invokevirtual #21
150: aload         4
152: invokevirtual #21
155: ldc           #41
157: invokevirtual #21
160: invokevirtual #24
163: aload         4
165: ldc           #11
167: invokestatic  #42
170: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest2.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest2.class
Class name: RegressionTest2
Method name: test1019
Start line: 392
End line: 0
Method source code: 
    public void test1019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1019");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.lang.String str1 = helpFormatter0.defaultSyntaxPrefix;
        java.util.Comparator comparator2 = helpFormatter0.optionComparator;
        java.lang.String str3 = helpFormatter0.defaultArgName;
        java.util.Comparator comparator4 = helpFormatter0.optionComparator;
        helpFormatter0.defaultOptPrefix = "arg";
        helpFormatter0.defaultNewLine = "   ";
        org.apache.commons.cli.Options options11 = null;
        try {
            helpFormatter0.printHelp("                                                                                                    ", "arg", options11, "                                                    ", true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "usage: " + "'", str1, "usage: ");
        org.junit.Assert.assertNotNull(comparator2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "arg" + "'", str3, "arg");
        org.junit.Assert.assertNotNull(comparator4);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #90
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: getfield      #60
36: astore_2
37: aload_1
38: getfield      #34
41: astore_3
42: aload_1
43: getfield      #15
46: astore        4
48: aload_1
49: getfield      #34
52: astore        5
54: aload_1
55: ldc           #49
57: putfield      #30
60: aload_1
61: ldc           #91
63: putfield      #12
66: aconst_null
67: astore        6
69: aload_1
70: ldc           #92
72: ldc           #49
74: aload         6
76: ldc           #93
78: iconst_1
79: invokevirtual #94
82: ldc           #95
84: invokestatic  #87
87: goto          92
90: astore        7
92: new           #18
95: dup
96: invokespecial #19
99: ldc           #20
101: invokevirtual #21
104: aload_2
105: invokevirtual #21
108: ldc           #70
110: invokevirtual #21
113: invokevirtual #24
116: aload_2
117: ldc           #71
119: invokestatic  #42
122: aload_3
123: invokestatic  #45
126: new           #18
129: dup
130: invokespecial #19
133: ldc           #20
135: invokevirtual #21
138: aload         4
140: invokevirtual #21
143: ldc           #48
145: invokevirtual #21
148: invokevirtual #24
151: aload         4
153: ldc           #49
155: invokestatic  #42
158: aload         5
160: invokestatic  #45
163: return
Exception table:
from    to  target type
69    87    90   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest2.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest2.class
Class name: RegressionTest2
Method name: test1020
Start line: 417
End line: 0
Method source code: 
    public void test1020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1020");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        java.util.Comparator comparator6 = helpFormatter0.optionComparator;
        helpFormatter0.setDescPadding((int) (short) 10);
        java.lang.String str9 = helpFormatter0.defaultOptPrefix;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(comparator6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-" + "'", str9, "-");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #97
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #10
36: istore_2
37: aload_1
38: ldc           #11
40: putfield      #12
43: aload_1
44: bipush        10
46: invokevirtual #13
49: aload_1
50: getfield      #34
53: astore_3
54: aload_1
55: bipush        10
57: invokevirtual #13
60: aload_1
61: getfield      #30
64: astore        4
66: new           #18
69: dup
70: invokespecial #19
73: ldc           #20
75: invokevirtual #21
78: iload_2
79: invokevirtual #22
82: ldc           #23
84: invokevirtual #21
87: iconst_1
88: invokevirtual #22
91: ldc           #20
93: invokevirtual #21
96: invokevirtual #24
99: iload_2
100: iconst_1
101: if_icmpne     108
104: iconst_1
105: goto          109
108: iconst_0
109: invokestatic  #25
112: aload_3
113: invokestatic  #45
116: new           #18
119: dup
120: invokespecial #19
123: ldc           #20
125: invokevirtual #21
128: aload         4
130: invokevirtual #21
133: ldc           #46
135: invokevirtual #21
138: invokevirtual #24
141: aload         4
143: ldc           #47
145: invokestatic  #42
148: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest2.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest2.class
Class name: RegressionTest2
Method name: test1021
Start line: 433
End line: 0
Method source code: 
    public void test1021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1021");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        int int4 = helpFormatter0.defaultDescPad;
        helpFormatter0.defaultNewLine = " ";
        java.lang.String str7 = helpFormatter0.getSyntaxPrefix();
        java.util.Comparator comparator8 = helpFormatter0.getOptionComparator();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 3 + "'", int4 == 3);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "usage: " + "'", str7, "usage: ");
        org.junit.Assert.assertNotNull(comparator8);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #98
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #10
36: istore_2
37: aload_1
38: ldc           #11
40: putfield      #12
43: aload_1
44: getfield      #33
47: istore_3
48: aload_1
49: ldc           #31
51: putfield      #12
54: aload_1
55: invokevirtual #69
58: astore        4
60: aload_1
61: invokevirtual #29
64: astore        5
66: new           #18
69: dup
70: invokespecial #19
73: ldc           #20
75: invokevirtual #21
78: iload_2
79: invokevirtual #22
82: ldc           #23
84: invokevirtual #21
87: iconst_1
88: invokevirtual #22
91: ldc           #20
93: invokevirtual #21
96: invokevirtual #24
99: iload_2
100: iconst_1
101: if_icmpne     108
104: iconst_1
105: goto          109
108: iconst_0
109: invokestatic  #25
112: new           #18
115: dup
116: invokespecial #19
119: ldc           #20
121: invokevirtual #21
124: iload_3
125: invokevirtual #22
128: ldc           #23
130: invokevirtual #21
133: iconst_3
134: invokevirtual #22
137: ldc           #20
139: invokevirtual #21
142: invokevirtual #24
145: iload_3
146: iconst_3
147: if_icmpne     154
150: iconst_1
151: goto          155
154: iconst_0
155: invokestatic  #25
158: new           #18
161: dup
162: invokespecial #19
165: ldc           #20
167: invokevirtual #21
170: aload         4
172: invokevirtual #21
175: ldc           #70
177: invokevirtual #21
180: invokevirtual #24
183: aload         4
185: ldc           #71
187: invokestatic  #42
190: aload         5
192: invokestatic  #45
195: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest2.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest2.class
Class name: RegressionTest2
Method name: test1022
Start line: 450
End line: 0
Method source code: 
    public void test1022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1022");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        helpFormatter0.setSyntaxPrefix(" ");
        java.util.Comparator comparator8 = helpFormatter0.getOptionComparator();
        java.lang.String str10 = helpFormatter0.createPadding(1);
        java.lang.String str11 = helpFormatter0.getSyntaxPrefix();
        java.util.Comparator comparator12 = helpFormatter0.optionComparator;
        helpFormatter0.setOptPrefix("                                                    ");
        int int15 = helpFormatter0.defaultWidth;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(comparator8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + " " + "'", str10, " ");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + " " + "'", str11, " ");
        org.junit.Assert.assertNotNull(comparator12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 74 + "'", int15 == 74);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #99
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #10
36: istore_2
37: aload_1
38: ldc           #11
40: putfield      #12
43: aload_1
44: bipush        10
46: invokevirtual #13
49: aload_1
50: ldc           #31
52: invokevirtual #53
55: aload_1
56: invokevirtual #29
59: astore_3
60: aload_1
61: iconst_1
62: invokevirtual #58
65: astore        4
67: aload_1
68: invokevirtual #69
71: astore        5
73: aload_1
74: getfield      #34
77: astore        6
79: aload_1
80: ldc           #93
82: invokevirtual #16
85: aload_1
86: getfield      #39
89: istore        7
91: new           #18
94: dup
95: invokespecial #19
98: ldc           #20
100: invokevirtual #21
103: iload_2
104: invokevirtual #22
107: ldc           #23
109: invokevirtual #21
112: iconst_1
113: invokevirtual #22
116: ldc           #20
118: invokevirtual #21
121: invokevirtual #24
124: iload_2
125: iconst_1
126: if_icmpne     133
129: iconst_1
130: goto          134
133: iconst_0
134: invokestatic  #25
137: aload_3
138: invokestatic  #45
141: new           #18
144: dup
145: invokespecial #19
148: ldc           #20
150: invokevirtual #21
153: aload         4
155: invokevirtual #21
158: ldc           #64
160: invokevirtual #21
163: invokevirtual #24
166: aload         4
168: ldc           #31
170: invokestatic  #42
173: new           #18
176: dup
177: invokespecial #19
180: ldc           #20
182: invokevirtual #21
185: aload         5
187: invokevirtual #21
190: ldc           #64
192: invokevirtual #21
195: invokevirtual #24
198: aload         5
200: ldc           #31
202: invokestatic  #42
205: aload         6
207: invokestatic  #45
210: new           #18
213: dup
214: invokespecial #19
217: ldc           #20
219: invokevirtual #21
222: iload         7
224: invokevirtual #22
227: ldc           #23
229: invokevirtual #21
232: bipush        74
234: invokevirtual #22
237: ldc           #20
239: invokevirtual #21
242: invokevirtual #24
245: iload         7
247: bipush        74
249: if_icmpne     256
252: iconst_1
253: goto          257
256: iconst_0
257: invokestatic  #25
260: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest2.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest2.class
Class name: RegressionTest2
Method name: test1023
Start line: 473
End line: 0
Method source code: 
    public void test1023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1023");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        java.util.Comparator comparator6 = helpFormatter0.optionComparator;
        helpFormatter0.setLongOptPrefix("hi!");
        java.lang.String str9 = helpFormatter0.getLongOptSeparator();
        org.apache.commons.cli.HelpFormatter helpFormatter10 = new org.apache.commons.cli.HelpFormatter();
        int int11 = helpFormatter10.getLeftPadding();
        java.lang.String str12 = helpFormatter10.getArgName();
        helpFormatter10.setSyntaxPrefix("usage: ");
        org.apache.commons.cli.HelpFormatter helpFormatter15 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter15.setOptPrefix("");
        helpFormatter15.defaultLongOptPrefix = "";
        java.lang.String str20 = helpFormatter15.defaultLongOptPrefix;
        java.lang.String str21 = helpFormatter15.getNewLine();
        java.lang.String str22 = helpFormatter15.defaultOptPrefix;
        helpFormatter15.setDescPadding(74);
        java.util.Comparator comparator25 = helpFormatter15.getOptionComparator();
        helpFormatter10.optionComparator = comparator25;
        helpFormatter0.optionComparator = comparator25;
        helpFormatter0.setDescPadding((int) ' ');
        java.lang.String str31 = helpFormatter0.createPadding((int) (short) 10);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(comparator6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + " " + "'", str9, " ");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "arg" + "'", str12, "arg");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "\n" + "'", str21, "\n");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(comparator25);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "          " + "'", str31, "          ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #100
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #10
36: istore_2
37: aload_1
38: ldc           #11
40: putfield      #12
43: aload_1
44: bipush        10
46: invokevirtual #13
49: aload_1
50: getfield      #34
53: astore_3
54: aload_1
55: ldc           #14
57: invokevirtual #32
60: aload_1
61: invokevirtual #63
64: astore        4
66: new           #8
69: dup
70: invokespecial #9
73: astore        5
75: aload         5
77: invokevirtual #10
80: istore        6
82: aload         5
84: invokevirtual #52
87: astore        7
89: aload         5
91: ldc           #71
93: invokevirtual #53
96: new           #8
99: dup
100: invokespecial #9
103: astore        8
105: aload         8
107: ldc           #11
109: invokevirtual #16
112: aload         8
114: ldc           #11
116: putfield      #27
119: aload         8
121: getfield      #27
124: astore        9
126: aload         8
128: invokevirtual #28
131: astore        10
133: aload         8
135: getfield      #30
138: astore        11
140: aload         8
142: bipush        74
144: invokevirtual #13
147: aload         8
149: invokevirtual #29
152: astore        12
154: aload         5
156: aload         12
158: putfield      #34
161: aload_1
162: aload         12
164: putfield      #34
167: aload_1
168: bipush        32
170: invokevirtual #13
173: aload_1
174: bipush        10
176: invokevirtual #58
179: astore        13
181: new           #18
184: dup
185: invokespecial #19
188: ldc           #20
190: invokevirtual #21
193: iload_2
194: invokevirtual #22
197: ldc           #23
199: invokevirtual #21
202: iconst_1
203: invokevirtual #22
206: ldc           #20
208: invokevirtual #21
211: invokevirtual #24
214: iload_2
215: iconst_1
216: if_icmpne     223
219: iconst_1
220: goto          224
223: iconst_0
224: invokestatic  #25
227: aload_3
228: invokestatic  #45
231: new           #18
234: dup
235: invokespecial #19
238: ldc           #20
240: invokevirtual #21
243: aload         4
245: invokevirtual #21
248: ldc           #64
250: invokevirtual #21
253: invokevirtual #24
256: aload         4
258: ldc           #31
260: invokestatic  #42
263: new           #18
266: dup
267: invokespecial #19
270: ldc           #20
272: invokevirtual #21
275: iload         6
277: invokevirtual #22
280: ldc           #23
282: invokevirtual #21
285: iconst_1
286: invokevirtual #22
289: ldc           #20
291: invokevirtual #21
294: invokevirtual #24
297: iload         6
299: iconst_1
300: if_icmpne     307
303: iconst_1
304: goto          308
307: iconst_0
308: invokestatic  #25
311: new           #18
314: dup
315: invokespecial #19
318: ldc           #20
320: invokevirtual #21
323: aload         7
325: invokevirtual #21
328: ldc           #48
330: invokevirtual #21
333: invokevirtual #24
336: aload         7
338: ldc           #49
340: invokestatic  #42
343: new           #18
346: dup
347: invokespecial #19
350: ldc           #20
352: invokevirtual #21
355: aload         9
357: invokevirtual #21
360: ldc           #41
362: invokevirtual #21
365: invokevirtual #24
368: aload         9
370: ldc           #11
372: invokestatic  #42
375: new           #18
378: dup
379: invokespecial #19
382: ldc           #20
384: invokevirtual #21
387: aload         10
389: invokevirtual #21
392: ldc           #43
394: invokevirtual #21
397: invokevirtual #24
400: aload         10
402: ldc           #44
404: invokestatic  #42
407: new           #18
410: dup
411: invokespecial #19
414: ldc           #20
416: invokevirtual #21
419: aload         11
421: invokevirtual #21
424: ldc           #41
426: invokevirtual #21
429: invokevirtual #24
432: aload         11
434: ldc           #11
436: invokestatic  #42
439: aload         12
441: invokestatic  #45
444: new           #18
447: dup
448: invokespecial #19
451: ldc           #20
453: invokevirtual #21
456: aload         13
458: invokevirtual #21
461: ldc           #101
463: invokevirtual #21
466: invokevirtual #24
469: aload         13
471: ldc           #36
473: invokestatic  #42
476: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest2.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest2.class
Class name: RegressionTest2
Method name: test1024
Start line: 512
End line: 0
Method source code: 
    public void test1024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1024");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str6 = helpFormatter0.getNewLine();
        java.lang.String str7 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setDescPadding(74);
        java.util.Comparator comparator10 = helpFormatter0.getOptionComparator();
        java.lang.String str11 = helpFormatter0.getArgName();
        helpFormatter0.defaultArgName = "";
        helpFormatter0.defaultNewLine = "";
        java.io.PrintWriter printWriter16 = null;
        org.apache.commons.cli.Options options18 = null;
        try {
            helpFormatter0.printOptions(printWriter16, 0, options18, (-1), 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: null");
        } catch (java.lang.NegativeArraySizeException e) {
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\n" + "'", str6, "\n");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(comparator10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "arg" + "'", str11, "arg");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #102
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: ldc           #11
35: invokevirtual #16
38: aload_1
39: ldc           #11
41: putfield      #27
44: aload_1
45: getfield      #27
48: astore_2
49: aload_1
50: invokevirtual #28
53: astore_3
54: aload_1
55: getfield      #30
58: astore        4
60: aload_1
61: bipush        74
63: invokevirtual #13
66: aload_1
67: invokevirtual #29
70: astore        5
72: aload_1
73: invokevirtual #52
76: astore        6
78: aload_1
79: ldc           #11
81: putfield      #15
84: aload_1
85: ldc           #11
87: putfield      #12
90: aconst_null
91: astore        7
93: aconst_null
94: astore        8
96: aload_1
97: aload         7
99: iconst_0
100: aload         8
102: iconst_m1
103: iconst_0
104: invokevirtual #103
107: ldc           #104
109: invokestatic  #87
112: goto          117
115: astore        9
117: new           #18
120: dup
121: invokespecial #19
124: ldc           #20
126: invokevirtual #21
129: aload_2
130: invokevirtual #21
133: ldc           #41
135: invokevirtual #21
138: invokevirtual #24
141: aload_2
142: ldc           #11
144: invokestatic  #42
147: new           #18
150: dup
151: invokespecial #19
154: ldc           #20
156: invokevirtual #21
159: aload_3
160: invokevirtual #21
163: ldc           #43
165: invokevirtual #21
168: invokevirtual #24
171: aload_3
172: ldc           #44
174: invokestatic  #42
177: new           #18
180: dup
181: invokespecial #19
184: ldc           #20
186: invokevirtual #21
189: aload         4
191: invokevirtual #21
194: ldc           #41
196: invokevirtual #21
199: invokevirtual #24
202: aload         4
204: ldc           #11
206: invokestatic  #42
209: aload         5
211: invokestatic  #45
214: new           #18
217: dup
218: invokespecial #19
221: ldc           #20
223: invokevirtual #21
226: aload         6
228: invokevirtual #21
231: ldc           #48
233: invokevirtual #21
236: invokevirtual #24
239: aload         6
241: ldc           #49
243: invokestatic  #42
246: return
Exception table:
from    to  target type
96   112   115   Class java/lang/NegativeArraySizeException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest2.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest2.class
Class name: RegressionTest2
Method name: test1025
Start line: 543
End line: 0
Method source code: 
    public void test1025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1025");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        int int6 = helpFormatter0.defaultWidth;
        java.lang.String str7 = helpFormatter0.getLongOptPrefix();
        java.lang.String str8 = helpFormatter0.getLongOptPrefix();
        helpFormatter0.setLongOptSeparator("hi!");
        int int11 = helpFormatter0.getWidth();
        java.lang.String str12 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.defaultNewLine = "arg";
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "--" + "'", str5, "--");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 74 + "'", int6 == 74);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "--" + "'", str7, "--");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "--" + "'", str8, "--");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 74 + "'", int11 == 74);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "-" + "'", str12, "-");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #106
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #10
36: istore_2
37: aload_1
38: ldc           #11
40: putfield      #12
43: aload_1
44: getfield      #30
47: astore_3
48: aload_1
49: getfield      #27
52: astore        4
54: aload_1
55: getfield      #39
58: istore        5
60: aload_1
61: invokevirtual #54
64: astore        6
66: aload_1
67: invokevirtual #54
70: astore        7
72: aload_1
73: ldc           #14
75: invokevirtual #37
78: aload_1
79: invokevirtual #107
82: istore        8
84: aload_1
85: getfield      #30
88: astore        9
90: aload_1
91: ldc           #49
93: putfield      #12
96: new           #18
99: dup
100: invokespecial #19
103: ldc           #20
105: invokevirtual #21
108: iload_2
109: invokevirtual #22
112: ldc           #23
114: invokevirtual #21
117: iconst_1
118: invokevirtual #22
121: ldc           #20
123: invokevirtual #21
126: invokevirtual #24
129: iload_2
130: iconst_1
131: if_icmpne     138
134: iconst_1
135: goto          139
138: iconst_0
139: invokestatic  #25
142: new           #18
145: dup
146: invokespecial #19
149: ldc           #20
151: invokevirtual #21
154: aload_3
155: invokevirtual #21
158: ldc           #46
160: invokevirtual #21
163: invokevirtual #24
166: aload_3
167: ldc           #47
169: invokestatic  #42
172: new           #18
175: dup
176: invokespecial #19
179: ldc           #20
181: invokevirtual #21
184: aload         4
186: invokevirtual #21
189: ldc           #55
191: invokevirtual #21
194: invokevirtual #24
197: aload         4
199: ldc           #56
201: invokestatic  #42
204: new           #18
207: dup
208: invokespecial #19
211: ldc           #20
213: invokevirtual #21
216: iload         5
218: invokevirtual #22
221: ldc           #23
223: invokevirtual #21
226: bipush        74
228: invokevirtual #22
231: ldc           #20
233: invokevirtual #21
236: invokevirtual #24
239: iload         5
241: bipush        74
243: if_icmpne     250
246: iconst_1
247: goto          251
250: iconst_0
251: invokestatic  #25
254: new           #18
257: dup
258: invokespecial #19
261: ldc           #20
263: invokevirtual #21
266: aload         6
268: invokevirtual #21
271: ldc           #55
273: invokevirtual #21
276: invokevirtual #24
279: aload         6
281: ldc           #56
283: invokestatic  #42
286: new           #18
289: dup
290: invokespecial #19
293: ldc           #20
295: invokevirtual #21
298: aload         7
300: invokevirtual #21
303: ldc           #55
305: invokevirtual #21
308: invokevirtual #24
311: aload         7
313: ldc           #56
315: invokestatic  #42
318: new           #18
321: dup
322: invokespecial #19
325: ldc           #20
327: invokevirtual #21
330: iload         8
332: invokevirtual #22
335: ldc           #23
337: invokevirtual #21
340: bipush        74
342: invokevirtual #22
345: ldc           #20
347: invokevirtual #21
350: invokevirtual #24
353: iload         8
355: bipush        74
357: if_icmpne     364
360: iconst_1
361: goto          365
364: iconst_0
365: invokestatic  #25
368: new           #18
371: dup
372: invokespecial #19
375: ldc           #20
377: invokevirtual #21
380: aload         9
382: invokevirtual #21
385: ldc           #46
387: invokevirtual #21
390: invokevirtual #24
393: aload         9
395: ldc           #47
397: invokestatic  #42
400: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest2.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest2.class
Class name: RegressionTest2
Method name: test1026
Start line: 569
End line: 0
Method source code: 
    public void test1026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1026");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.getArgName();
        helpFormatter0.defaultNewLine = "\n";
        org.apache.commons.cli.HelpFormatter helpFormatter5 = new org.apache.commons.cli.HelpFormatter();
        int int6 = helpFormatter5.getLeftPadding();
        helpFormatter5.defaultNewLine = "";
        java.lang.String str9 = helpFormatter5.defaultOptPrefix;
        java.lang.String str11 = helpFormatter5.rtrim("");
        int int15 = helpFormatter5.findWrapPos(" ", (int) (byte) 10, (int) (short) 10);
        java.lang.String str16 = helpFormatter5.getLongOptPrefix();
        org.apache.commons.cli.HelpFormatter helpFormatter17 = new org.apache.commons.cli.HelpFormatter();
        int int18 = helpFormatter17.getLeftPadding();
        helpFormatter17.defaultNewLine = "";
        int int21 = helpFormatter17.defaultWidth;
        java.util.Comparator comparator22 = helpFormatter17.getOptionComparator();
        java.lang.String str23 = helpFormatter17.defaultOptPrefix;
        org.apache.commons.cli.HelpFormatter helpFormatter24 = new org.apache.commons.cli.HelpFormatter();
        int int25 = helpFormatter24.getLeftPadding();
        helpFormatter24.defaultNewLine = "";
        helpFormatter24.setDescPadding(10);
        helpFormatter24.setSyntaxPrefix(" ");
        int int32 = helpFormatter24.defaultLeftPad;
        helpFormatter24.setLeftPadding(1);
        java.util.Comparator comparator35 = helpFormatter24.optionComparator;
        helpFormatter17.setOptionComparator(comparator35);
        helpFormatter5.setOptionComparator(comparator35);
        helpFormatter0.optionComparator = comparator35;
        helpFormatter0.defaultArgName = " ";
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "arg" + "'", str2, "arg");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-" + "'", str9, "-");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "--" + "'", str16, "--");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 74 + "'", int21 == 74);
        org.junit.Assert.assertNotNull(comparator22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "-" + "'", str23, "-");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertNotNull(comparator35);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #108
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #10
36: istore_2
37: aload_1
38: invokevirtual #52
41: astore_3
42: aload_1
43: ldc           #44
45: putfield      #12
48: new           #8
51: dup
52: invokespecial #9
55: astore        4
57: aload         4
59: invokevirtual #10
62: istore        5
64: aload         4
66: ldc           #11
68: putfield      #12
71: aload         4
73: getfield      #30
76: astore        6
78: aload         4
80: ldc           #11
82: invokevirtual #78
85: astore        7
87: aload         4
89: ldc           #31
91: bipush        10
93: bipush        10
95: invokevirtual #76
98: istore        8
100: aload         4
102: invokevirtual #54
105: astore        9
107: new           #8
110: dup
111: invokespecial #9
114: astore        10
116: aload         10
118: invokevirtual #10
121: istore        11
123: aload         10
125: ldc           #11
127: putfield      #12
130: aload         10
132: getfield      #39
135: istore        12
137: aload         10
139: invokevirtual #29
142: astore        13
144: aload         10
146: getfield      #30
149: astore        14
151: new           #8
154: dup
155: invokespecial #9
158: astore        15
160: aload         15
162: invokevirtual #10
165: istore        16
167: aload         15
169: ldc           #11
171: putfield      #12
174: aload         15
176: bipush        10
178: invokevirtual #13
181: aload         15
183: ldc           #31
185: invokevirtual #53
188: aload         15
190: getfield      #17
193: istore        17
195: aload         15
197: iconst_1
198: invokevirtual #84
201: aload         15
203: getfield      #34
206: astore        18
208: aload         10
210: aload         18
212: invokevirtual #35
215: aload         4
217: aload         18
219: invokevirtual #35
222: aload_1
223: aload         18
225: putfield      #34
228: aload_1
229: ldc           #31
231: putfield      #15
234: new           #18
237: dup
238: invokespecial #19
241: ldc           #20
243: invokevirtual #21
246: iload_2
247: invokevirtual #22
250: ldc           #23
252: invokevirtual #21
255: iconst_1
256: invokevirtual #22
259: ldc           #20
261: invokevirtual #21
264: invokevirtual #24
267: iload_2
268: iconst_1
269: if_icmpne     276
272: iconst_1
273: goto          277
276: iconst_0
277: invokestatic  #25
280: new           #18
283: dup
284: invokespecial #19
287: ldc           #20
289: invokevirtual #21
292: aload_3
293: invokevirtual #21
296: ldc           #48
298: invokevirtual #21
301: invokevirtual #24
304: aload_3
305: ldc           #49
307: invokestatic  #42
310: new           #18
313: dup
314: invokespecial #19
317: ldc           #20
319: invokevirtual #21
322: iload         5
324: invokevirtual #22
327: ldc           #23
329: invokevirtual #21
332: iconst_1
333: invokevirtual #22
336: ldc           #20
338: invokevirtual #21
341: invokevirtual #24
344: iload         5
346: iconst_1
347: if_icmpne     354
350: iconst_1
351: goto          355
354: iconst_0
355: invokestatic  #25
358: new           #18
361: dup
362: invokespecial #19
365: ldc           #20
367: invokevirtual #21
370: aload         6
372: invokevirtual #21
375: ldc           #46
377: invokevirtual #21
380: invokevirtual #24
383: aload         6
385: ldc           #47
387: invokestatic  #42
390: new           #18
393: dup
394: invokespecial #19
397: ldc           #20
399: invokevirtual #21
402: aload         7
404: invokevirtual #21
407: ldc           #41
409: invokevirtual #21
412: invokevirtual #24
415: aload         7
417: ldc           #11
419: invokestatic  #42
422: new           #18
425: dup
426: invokespecial #19
429: ldc           #20
431: invokevirtual #21
434: iload         8
436: invokevirtual #22
439: ldc           #23
441: invokevirtual #21
444: iconst_m1
445: invokevirtual #22
448: ldc           #20
450: invokevirtual #21
453: invokevirtual #24
456: iload         8
458: iconst_m1
459: if_icmpne     466
462: iconst_1
463: goto          467
466: iconst_0
467: invokestatic  #25
470: new           #18
473: dup
474: invokespecial #19
477: ldc           #20
479: invokevirtual #21
482: aload         9
484: invokevirtual #21
487: ldc           #55
489: invokevirtual #21
492: invokevirtual #24
495: aload         9
497: ldc           #56
499: invokestatic  #42
502: new           #18
505: dup
506: invokespecial #19
509: ldc           #20
511: invokevirtual #21
514: iload         11
516: invokevirtual #22
519: ldc           #23
521: invokevirtual #21
524: iconst_1
525: invokevirtual #22
528: ldc           #20
530: invokevirtual #21
533: invokevirtual #24
536: iload         11
538: iconst_1
539: if_icmpne     546
542: iconst_1
543: goto          547
546: iconst_0
547: invokestatic  #25
550: new           #18
553: dup
554: invokespecial #19
557: ldc           #20
559: invokevirtual #21
562: iload         12
564: invokevirtual #22
567: ldc           #23
569: invokevirtual #21
572: bipush        74
574: invokevirtual #22
577: ldc           #20
579: invokevirtual #21
582: invokevirtual #24
585: iload         12
587: bipush        74
589: if_icmpne     596
592: iconst_1
593: goto          597
596: iconst_0
597: invokestatic  #25
600: aload         13
602: invokestatic  #45
605: new           #18
608: dup
609: invokespecial #19
612: ldc           #20
614: invokevirtual #21
617: aload         14
619: invokevirtual #21
622: ldc           #46
624: invokevirtual #21
627: invokevirtual #24
630: aload         14
632: ldc           #47
634: invokestatic  #42
637: new           #18
640: dup
641: invokespecial #19
644: ldc           #20
646: invokevirtual #21
649: iload         16
651: invokevirtual #22
654: ldc           #23
656: invokevirtual #21
659: iconst_1
660: invokevirtual #22
663: ldc           #20
665: invokevirtual #21
668: invokevirtual #24
671: iload         16
673: iconst_1
674: if_icmpne     681
677: iconst_1
678: goto          682
681: iconst_0
682: invokestatic  #25
685: new           #18
688: dup
689: invokespecial #19
692: ldc           #20
694: invokevirtual #21
697: iload         17
699: invokevirtual #22
702: ldc           #23
704: invokevirtual #21
707: iconst_1
708: invokevirtual #22
711: ldc           #20
713: invokevirtual #21
716: invokevirtual #24
719: iload         17
721: iconst_1
722: if_icmpne     729
725: iconst_1
726: goto          730
729: iconst_0
730: invokestatic  #25
733: aload         18
735: invokestatic  #45
738: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest2.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest2.class
Class name: RegressionTest2
Method name: test1027
Start line: 618
End line: 0
Method source code: 
    public void test1027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1027");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        int int6 = helpFormatter0.defaultWidth;
        java.lang.String str7 = helpFormatter0.defaultNewLine;
        java.io.PrintWriter printWriter8 = null;
        org.apache.commons.cli.Options options11 = null;
        try {
            helpFormatter0.printUsage(printWriter8, (int) '4', "                                                                                                    ", options11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "--" + "'", str5, "--");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 74 + "'", int6 == 74);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #109
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #10
36: istore_2
37: aload_1
38: ldc           #11
40: putfield      #12
43: aload_1
44: getfield      #30
47: astore_3
48: aload_1
49: getfield      #27
52: astore        4
54: aload_1
55: getfield      #39
58: istore        5
60: aload_1
61: getfield      #12
64: astore        6
66: aconst_null
67: astore        7
69: aconst_null
70: astore        8
72: aload_1
73: aload         7
75: bipush        52
77: ldc           #92
79: aload         8
81: invokevirtual #110
84: ldc           #95
86: invokestatic  #87
89: goto          94
92: astore        9
94: new           #18
97: dup
98: invokespecial #19
101: ldc           #20
103: invokevirtual #21
106: iload_2
107: invokevirtual #22
110: ldc           #23
112: invokevirtual #21
115: iconst_1
116: invokevirtual #22
119: ldc           #20
121: invokevirtual #21
124: invokevirtual #24
127: iload_2
128: iconst_1
129: if_icmpne     136
132: iconst_1
133: goto          137
136: iconst_0
137: invokestatic  #25
140: new           #18
143: dup
144: invokespecial #19
147: ldc           #20
149: invokevirtual #21
152: aload_3
153: invokevirtual #21
156: ldc           #46
158: invokevirtual #21
161: invokevirtual #24
164: aload_3
165: ldc           #47
167: invokestatic  #42
170: new           #18
173: dup
174: invokespecial #19
177: ldc           #20
179: invokevirtual #21
182: aload         4
184: invokevirtual #21
187: ldc           #55
189: invokevirtual #21
192: invokevirtual #24
195: aload         4
197: ldc           #56
199: invokestatic  #42
202: new           #18
205: dup
206: invokespecial #19
209: ldc           #20
211: invokevirtual #21
214: iload         5
216: invokevirtual #22
219: ldc           #23
221: invokevirtual #21
224: bipush        74
226: invokevirtual #22
229: ldc           #20
231: invokevirtual #21
234: invokevirtual #24
237: iload         5
239: bipush        74
241: if_icmpne     248
244: iconst_1
245: goto          249
248: iconst_0
249: invokestatic  #25
252: new           #18
255: dup
256: invokespecial #19
259: ldc           #20
261: invokevirtual #21
264: aload         6
266: invokevirtual #21
269: ldc           #41
271: invokevirtual #21
274: invokevirtual #24
277: aload         6
279: ldc           #11
281: invokestatic  #42
284: return
Exception table:
from    to  target type
72    89    92   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest2.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest2.class
Class name: RegressionTest2
Method name: test1028
Start line: 645
End line: 0
Method source code: 
    public void test1028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1028");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str6 = helpFormatter0.getNewLine();
        helpFormatter0.setSyntaxPrefix(" ");
        java.lang.String str9 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setArgName("          ");
        helpFormatter0.setArgName("          ");
        helpFormatter0.setDescPadding((int) (byte) 100);
        java.lang.Class<?> wildcardClass16 = helpFormatter0.getClass();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\n" + "'", str6, "\n");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(wildcardClass16);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #111
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: ldc           #11
35: invokevirtual #16
38: aload_1
39: ldc           #11
41: putfield      #27
44: aload_1
45: getfield      #27
48: astore_2
49: aload_1
50: invokevirtual #28
53: astore_3
54: aload_1
55: ldc           #31
57: invokevirtual #53
60: aload_1
61: getfield      #30
64: astore        4
66: aload_1
67: ldc           #36
69: invokevirtual #112
72: aload_1
73: ldc           #36
75: invokevirtual #112
78: aload_1
79: bipush        100
81: invokevirtual #13
84: aload_1
85: invokevirtual #40
88: astore        5
90: new           #18
93: dup
94: invokespecial #19
97: ldc           #20
99: invokevirtual #21
102: aload_2
103: invokevirtual #21
106: ldc           #41
108: invokevirtual #21
111: invokevirtual #24
114: aload_2
115: ldc           #11
117: invokestatic  #42
120: new           #18
123: dup
124: invokespecial #19
127: ldc           #20
129: invokevirtual #21
132: aload_3
133: invokevirtual #21
136: ldc           #43
138: invokevirtual #21
141: invokevirtual #24
144: aload_3
145: ldc           #44
147: invokestatic  #42
150: new           #18
153: dup
154: invokespecial #19
157: ldc           #20
159: invokevirtual #21
162: aload         4
164: invokevirtual #21
167: ldc           #41
169: invokevirtual #21
172: invokevirtual #24
175: aload         4
177: ldc           #11
179: invokestatic  #42
182: aload         5
184: invokestatic  #45
187: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest2.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest2.class
Class name: RegressionTest2
Method name: test1029
Start line: 666
End line: 0
Method source code: 
    public void test1029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1029");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.lang.String str1 = helpFormatter0.defaultSyntaxPrefix;
        java.util.Comparator comparator2 = helpFormatter0.optionComparator;
        java.lang.String str3 = helpFormatter0.defaultArgName;
        java.util.Comparator comparator4 = helpFormatter0.optionComparator;
        helpFormatter0.defaultOptPrefix = "arg";
        org.apache.commons.cli.Options options8 = null;
        try {
            helpFormatter0.printHelp("\n", options8, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "usage: " + "'", str1, "usage: ");
        org.junit.Assert.assertNotNull(comparator2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "arg" + "'", str3, "arg");
        org.junit.Assert.assertNotNull(comparator4);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #113
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: getfield      #60
36: astore_2
37: aload_1
38: getfield      #34
41: astore_3
42: aload_1
43: getfield      #15
46: astore        4
48: aload_1
49: getfield      #34
52: astore        5
54: aload_1
55: ldc           #49
57: putfield      #30
60: aconst_null
61: astore        6
63: aload_1
64: ldc           #44
66: aload         6
68: iconst_1
69: invokevirtual #114
72: ldc           #95
74: invokestatic  #87
77: goto          82
80: astore        7
82: new           #18
85: dup
86: invokespecial #19
89: ldc           #20
91: invokevirtual #21
94: aload_2
95: invokevirtual #21
98: ldc           #70
100: invokevirtual #21
103: invokevirtual #24
106: aload_2
107: ldc           #71
109: invokestatic  #42
112: aload_3
113: invokestatic  #45
116: new           #18
119: dup
120: invokespecial #19
123: ldc           #20
125: invokevirtual #21
128: aload         4
130: invokevirtual #21
133: ldc           #48
135: invokevirtual #21
138: invokevirtual #24
141: aload         4
143: ldc           #49
145: invokestatic  #42
148: aload         5
150: invokestatic  #45
153: return
Exception table:
from    to  target type
63    77    80   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest2.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest2.class
Class name: RegressionTest2
Method name: test1030
Start line: 690
End line: 0
Method source code: 
    public void test1030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1030");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        java.lang.String str6 = helpFormatter0.rtrim("");
        int int10 = helpFormatter0.findWrapPos(" ", (int) (byte) 10, (int) (short) 10);
        org.apache.commons.cli.HelpFormatter helpFormatter11 = new org.apache.commons.cli.HelpFormatter();
        int int12 = helpFormatter11.getLeftPadding();
        helpFormatter11.defaultNewLine = "";
        helpFormatter11.setDescPadding(10);
        helpFormatter11.setSyntaxPrefix(" ");
        java.util.Comparator comparator19 = helpFormatter11.getOptionComparator();
        java.lang.String str21 = helpFormatter11.createPadding(1);
        java.lang.String str22 = helpFormatter11.getSyntaxPrefix();
        java.util.Comparator comparator23 = helpFormatter11.optionComparator;
        helpFormatter0.setOptionComparator(comparator23);
        java.lang.String str26 = helpFormatter0.rtrim("                                                    ");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(comparator19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + " " + "'", str21, " ");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + " " + "'", str22, " ");
        org.junit.Assert.assertNotNull(comparator23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #115
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #10
36: istore_2
37: aload_1
38: ldc           #11
40: putfield      #12
43: aload_1
44: getfield      #30
47: astore_3
48: aload_1
49: ldc           #11
51: invokevirtual #78
54: astore        4
56: aload_1
57: ldc           #31
59: bipush        10
61: bipush        10
63: invokevirtual #76
66: istore        5
68: new           #8
71: dup
72: invokespecial #9
75: astore        6
77: aload         6
79: invokevirtual #10
82: istore        7
84: aload         6
86: ldc           #11
88: putfield      #12
91: aload         6
93: bipush        10
95: invokevirtual #13
98: aload         6
100: ldc           #31
102: invokevirtual #53
105: aload         6
107: invokevirtual #29
110: astore        8
112: aload         6
114: iconst_1
115: invokevirtual #58
118: astore        9
120: aload         6
122: invokevirtual #69
125: astore        10
127: aload         6
129: getfield      #34
132: astore        11
134: aload_1
135: aload         11
137: invokevirtual #35
140: aload_1
141: ldc           #93
143: invokevirtual #78
146: astore        12
148: new           #18
151: dup
152: invokespecial #19
155: ldc           #20
157: invokevirtual #21
160: iload_2
161: invokevirtual #22
164: ldc           #23
166: invokevirtual #21
169: iconst_1
170: invokevirtual #22
173: ldc           #20
175: invokevirtual #21
178: invokevirtual #24
181: iload_2
182: iconst_1
183: if_icmpne     190
186: iconst_1
187: goto          191
190: iconst_0
191: invokestatic  #25
194: new           #18
197: dup
198: invokespecial #19
201: ldc           #20
203: invokevirtual #21
206: aload_3
207: invokevirtual #21
210: ldc           #46
212: invokevirtual #21
215: invokevirtual #24
218: aload_3
219: ldc           #47
221: invokestatic  #42
224: new           #18
227: dup
228: invokespecial #19
231: ldc           #20
233: invokevirtual #21
236: aload         4
238: invokevirtual #21
241: ldc           #41
243: invokevirtual #21
246: invokevirtual #24
249: aload         4
251: ldc           #11
253: invokestatic  #42
256: new           #18
259: dup
260: invokespecial #19
263: ldc           #20
265: invokevirtual #21
268: iload         5
270: invokevirtual #22
273: ldc           #23
275: invokevirtual #21
278: iconst_m1
279: invokevirtual #22
282: ldc           #20
284: invokevirtual #21
287: invokevirtual #24
290: iload         5
292: iconst_m1
293: if_icmpne     300
296: iconst_1
297: goto          301
300: iconst_0
301: invokestatic  #25
304: new           #18
307: dup
308: invokespecial #19
311: ldc           #20
313: invokevirtual #21
316: iload         7
318: invokevirtual #22
321: ldc           #23
323: invokevirtual #21
326: iconst_1
327: invokevirtual #22
330: ldc           #20
332: invokevirtual #21
335: invokevirtual #24
338: iload         7
340: iconst_1
341: if_icmpne     348
344: iconst_1
345: goto          349
348: iconst_0
349: invokestatic  #25
352: aload         8
354: invokestatic  #45
357: new           #18
360: dup
361: invokespecial #19
364: ldc           #20
366: invokevirtual #21
369: aload         9
371: invokevirtual #21
374: ldc           #64
376: invokevirtual #21
379: invokevirtual #24
382: aload         9
384: ldc           #31
386: invokestatic  #42
389: new           #18
392: dup
393: invokespecial #19
396: ldc           #20
398: invokevirtual #21
401: aload         10
403: invokevirtual #21
406: ldc           #64
408: invokevirtual #21
411: invokevirtual #24
414: aload         10
416: ldc           #31
418: invokestatic  #42
421: aload         11
423: invokestatic  #45
426: new           #18
429: dup
430: invokespecial #19
433: ldc           #20
435: invokevirtual #21
438: aload         12
440: invokevirtual #21
443: ldc           #41
445: invokevirtual #21
448: invokevirtual #24
451: aload         12
453: ldc           #11
455: invokestatic  #42
458: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest2.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest2.class
Class name: RegressionTest2
Method name: test1031
Start line: 723
End line: 0
Method source code: 
    public void test1031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1031");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.util.Comparator comparator1 = helpFormatter0.optionComparator;
        int int2 = helpFormatter0.getLeftPadding();
        java.lang.String str4 = helpFormatter0.rtrim("-");
        int int5 = helpFormatter0.defaultLeftPad;
        java.lang.String str6 = helpFormatter0.getLongOptPrefix();
        helpFormatter0.defaultLeftPad = ' ';
        java.lang.String str10 = helpFormatter0.rtrim("usage:");
        java.lang.String str11 = helpFormatter0.getArgName();
        org.apache.commons.cli.HelpFormatter helpFormatter12 = new org.apache.commons.cli.HelpFormatter();
        int int13 = helpFormatter12.getLeftPadding();
        java.lang.String str14 = helpFormatter12.getArgName();
        helpFormatter12.setSyntaxPrefix("usage: ");
        org.apache.commons.cli.HelpFormatter helpFormatter17 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter17.setOptPrefix("");
        helpFormatter17.defaultLongOptPrefix = "";
        java.lang.String str22 = helpFormatter17.defaultLongOptPrefix;
        java.lang.String str23 = helpFormatter17.getNewLine();
        java.lang.String str24 = helpFormatter17.defaultOptPrefix;
        helpFormatter17.setDescPadding(74);
        java.util.Comparator comparator27 = helpFormatter17.getOptionComparator();
        helpFormatter12.optionComparator = comparator27;
        helpFormatter0.optionComparator = comparator27;
        org.junit.Assert.assertNotNull(comparator1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "--" + "'", str6, "--");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "usage:" + "'", str10, "usage:");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "arg" + "'", str11, "arg");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "arg" + "'", str14, "arg");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "\n" + "'", str23, "\n");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(comparator27);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #116
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: getfield      #34
36: astore_2
37: aload_1
38: invokevirtual #10
41: istore_3
42: aload_1
43: ldc           #47
45: invokevirtual #78
48: astore        4
50: aload_1
51: getfield      #17
54: istore        5
56: aload_1
57: invokevirtual #54
60: astore        6
62: aload_1
63: bipush        32
65: putfield      #17
68: aload_1
69: ldc           #117
71: invokevirtual #78
74: astore        7
76: aload_1
77: invokevirtual #52
80: astore        8
82: new           #8
85: dup
86: invokespecial #9
89: astore        9
91: aload         9
93: invokevirtual #10
96: istore        10
98: aload         9
100: invokevirtual #52
103: astore        11
105: aload         9
107: ldc           #71
109: invokevirtual #53
112: new           #8
115: dup
116: invokespecial #9
119: astore        12
121: aload         12
123: ldc           #11
125: invokevirtual #16
128: aload         12
130: ldc           #11
132: putfield      #27
135: aload         12
137: getfield      #27
140: astore        13
142: aload         12
144: invokevirtual #28
147: astore        14
149: aload         12
151: getfield      #30
154: astore        15
156: aload         12
158: bipush        74
160: invokevirtual #13
163: aload         12
165: invokevirtual #29
168: astore        16
170: aload         9
172: aload         16
174: putfield      #34
177: aload_1
178: aload         16
180: putfield      #34
183: aload_2
184: invokestatic  #45
187: new           #18
190: dup
191: invokespecial #19
194: ldc           #20
196: invokevirtual #21
199: iload_3
200: invokevirtual #22
203: ldc           #23
205: invokevirtual #21
208: iconst_1
209: invokevirtual #22
212: ldc           #20
214: invokevirtual #21
217: invokevirtual #24
220: iload_3
221: iconst_1
222: if_icmpne     229
225: iconst_1
226: goto          230
229: iconst_0
230: invokestatic  #25
233: new           #18
236: dup
237: invokespecial #19
240: ldc           #20
242: invokevirtual #21
245: aload         4
247: invokevirtual #21
250: ldc           #46
252: invokevirtual #21
255: invokevirtual #24
258: aload         4
260: ldc           #47
262: invokestatic  #42
265: new           #18
268: dup
269: invokespecial #19
272: ldc           #20
274: invokevirtual #21
277: iload         5
279: invokevirtual #22
282: ldc           #23
284: invokevirtual #21
287: iconst_1
288: invokevirtual #22
291: ldc           #20
293: invokevirtual #21
296: invokevirtual #24
299: iload         5
301: iconst_1
302: if_icmpne     309
305: iconst_1
306: goto          310
309: iconst_0
310: invokestatic  #25
313: new           #18
316: dup
317: invokespecial #19
320: ldc           #20
322: invokevirtual #21
325: aload         6
327: invokevirtual #21
330: ldc           #55
332: invokevirtual #21
335: invokevirtual #24
338: aload         6
340: ldc           #56
342: invokestatic  #42
345: new           #18
348: dup
349: invokespecial #19
352: ldc           #20
354: invokevirtual #21
357: aload         7
359: invokevirtual #21
362: ldc           #118
364: invokevirtual #21
367: invokevirtual #24
370: aload         7
372: ldc           #117
374: invokestatic  #42
377: new           #18
380: dup
381: invokespecial #19
384: ldc           #20
386: invokevirtual #21
389: aload         8
391: invokevirtual #21
394: ldc           #48
396: invokevirtual #21
399: invokevirtual #24
402: aload         8
404: ldc           #49
406: invokestatic  #42
409: new           #18
412: dup
413: invokespecial #19
416: ldc           #20
418: invokevirtual #21
421: iload         10
423: invokevirtual #22
426: ldc           #23
428: invokevirtual #21
431: iconst_1
432: invokevirtual #22
435: ldc           #20
437: invokevirtual #21
440: invokevirtual #24
443: iload         10
445: iconst_1
446: if_icmpne     453
449: iconst_1
450: goto          454
453: iconst_0
454: invokestatic  #25
457: new           #18
460: dup
461: invokespecial #19
464: ldc           #20
466: invokevirtual #21
469: aload         11
471: invokevirtual #21
474: ldc           #48
476: invokevirtual #21
479: invokevirtual #24
482: aload         11
484: ldc           #49
486: invokestatic  #42
489: new           #18
492: dup
493: invokespecial #19
496: ldc           #20
498: invokevirtual #21
501: aload         13
503: invokevirtual #21
506: ldc           #41
508: invokevirtual #21
511: invokevirtual #24
514: aload         13
516: ldc           #11
518: invokestatic  #42
521: new           #18
524: dup
525: invokespecial #19
528: ldc           #20
530: invokevirtual #21
533: aload         14
535: invokevirtual #21
538: ldc           #43
540: invokevirtual #21
543: invokevirtual #24
546: aload         14
548: ldc           #44
550: invokestatic  #42
553: new           #18
556: dup
557: invokespecial #19
560: ldc           #20
562: invokevirtual #21
565: aload         15
567: invokevirtual #21
570: ldc           #41
572: invokevirtual #21
575: invokevirtual #24
578: aload         15
580: ldc           #11
582: invokestatic  #42
585: aload         16
587: invokestatic  #45
590: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest2.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest2.class
Class name: RegressionTest2
Method name: test1032
Start line: 765
End line: 0
Method source code: 
    public void test1032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1032");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        java.util.Comparator comparator6 = helpFormatter0.optionComparator;
        helpFormatter0.setLongOptPrefix("hi!");
        java.lang.String str9 = helpFormatter0.getLongOptSeparator();
        java.io.PrintWriter printWriter10 = null;
        try {
            helpFormatter0.printWrapped(printWriter10, (int) (short) 100, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(comparator6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + " " + "'", str9, " ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #119
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #10
36: istore_2
37: aload_1
38: ldc           #11
40: putfield      #12
43: aload_1
44: bipush        10
46: invokevirtual #13
49: aload_1
50: getfield      #34
53: astore_3
54: aload_1
55: ldc           #14
57: invokevirtual #32
60: aload_1
61: invokevirtual #63
64: astore        4
66: aconst_null
67: astore        5
69: aload_1
70: aload         5
72: bipush        100
74: ldc           #11
76: invokevirtual #120
79: ldc           #95
81: invokestatic  #87
84: goto          89
87: astore        6
89: new           #18
92: dup
93: invokespecial #19
96: ldc           #20
98: invokevirtual #21
101: iload_2
102: invokevirtual #22
105: ldc           #23
107: invokevirtual #21
110: iconst_1
111: invokevirtual #22
114: ldc           #20
116: invokevirtual #21
119: invokevirtual #24
122: iload_2
123: iconst_1
124: if_icmpne     131
127: iconst_1
128: goto          132
131: iconst_0
132: invokestatic  #25
135: aload_3
136: invokestatic  #45
139: new           #18
142: dup
143: invokespecial #19
146: ldc           #20
148: invokevirtual #21
151: aload         4
153: invokevirtual #21
156: ldc           #64
158: invokevirtual #21
161: invokevirtual #24
164: aload         4
166: ldc           #31
168: invokestatic  #42
171: return
Exception table:
from    to  target type
69    84    87   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest2.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest2.class
Class name: RegressionTest2
Method name: test1033
Start line: 789
End line: 0
Method source code: 
    public void test1033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1033");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        int int9 = helpFormatter0.findWrapPos(" ", (int) (byte) 10, (int) '4');
        helpFormatter0.defaultOptPrefix = "arg";
        int int12 = helpFormatter0.defaultLeftPad;
        org.apache.commons.cli.Options options14 = null;
        try {
            helpFormatter0.printHelp("                                                                                                 ", options14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #121
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: ldc           #11
35: invokevirtual #16
38: aload_1
39: ldc           #11
41: putfield      #27
44: aload_1
45: getfield      #27
48: astore_2
49: aload_1
50: ldc           #31
52: bipush        10
54: bipush        52
56: invokevirtual #76
59: istore_3
60: aload_1
61: ldc           #49
63: putfield      #30
66: aload_1
67: getfield      #17
70: istore        4
72: aconst_null
73: astore        5
75: aload_1
76: ldc           #59
78: aload         5
80: invokevirtual #122
83: ldc           #95
85: invokestatic  #87
88: goto          93
91: astore        6
93: new           #18
96: dup
97: invokespecial #19
100: ldc           #20
102: invokevirtual #21
105: aload_2
106: invokevirtual #21
109: ldc           #41
111: invokevirtual #21
114: invokevirtual #24
117: aload_2
118: ldc           #11
120: invokestatic  #42
123: new           #18
126: dup
127: invokespecial #19
130: ldc           #20
132: invokevirtual #21
135: iload_3
136: invokevirtual #22
139: ldc           #23
141: invokevirtual #21
144: iconst_m1
145: invokevirtual #22
148: ldc           #20
150: invokevirtual #21
153: invokevirtual #24
156: iload_3
157: iconst_m1
158: if_icmpne     165
161: iconst_1
162: goto          166
165: iconst_0
166: invokestatic  #25
169: new           #18
172: dup
173: invokespecial #19
176: ldc           #20
178: invokevirtual #21
181: iload         4
183: invokevirtual #22
186: ldc           #23
188: invokevirtual #21
191: iconst_1
192: invokevirtual #22
195: ldc           #20
197: invokevirtual #21
200: invokevirtual #24
203: iload         4
205: iconst_1
206: if_icmpne     213
209: iconst_1
210: goto          214
213: iconst_0
214: invokestatic  #25
217: return
Exception table:
from    to  target type
75    88    91   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest2.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest2.class
Class name: RegressionTest2
Method name: test1034
Start line: 813
End line: 0
Method source code: 
    public void test1034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1034");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        java.lang.String str6 = helpFormatter0.getOptPrefix();
        java.lang.String str7 = helpFormatter0.getNewLine();
        helpFormatter0.defaultOptPrefix = "";
        helpFormatter0.setNewLine("");
        java.lang.String str12 = helpFormatter0.getArgName();
        java.lang.String str13 = helpFormatter0.getSyntaxPrefix();
        java.lang.String str14 = helpFormatter0.getSyntaxPrefix();
        int int15 = helpFormatter0.getLeftPadding();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "-" + "'", str6, "-");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "arg" + "'", str12, "arg");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "usage: " + "'", str13, "usage: ");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "usage: " + "'", str14, "usage: ");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #123
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #10
36: istore_2
37: aload_1
38: ldc           #11
40: putfield      #12
43: aload_1
44: bipush        10
46: invokevirtual #13
49: aload_1
50: invokevirtual #68
53: astore_3
54: aload_1
55: invokevirtual #28
58: astore        4
60: aload_1
61: ldc           #11
63: putfield      #30
66: aload_1
67: ldc           #11
69: invokevirtual #74
72: aload_1
73: invokevirtual #52
76: astore        5
78: aload_1
79: invokevirtual #69
82: astore        6
84: aload_1
85: invokevirtual #69
88: astore        7
90: aload_1
91: invokevirtual #10
94: istore        8
96: new           #18
99: dup
100: invokespecial #19
103: ldc           #20
105: invokevirtual #21
108: iload_2
109: invokevirtual #22
112: ldc           #23
114: invokevirtual #21
117: iconst_1
118: invokevirtual #22
121: ldc           #20
123: invokevirtual #21
126: invokevirtual #24
129: iload_2
130: iconst_1
131: if_icmpne     138
134: iconst_1
135: goto          139
138: iconst_0
139: invokestatic  #25
142: new           #18
145: dup
146: invokespecial #19
149: ldc           #20
151: invokevirtual #21
154: aload_3
155: invokevirtual #21
158: ldc           #46
160: invokevirtual #21
163: invokevirtual #24
166: aload_3
167: ldc           #47
169: invokestatic  #42
172: new           #18
175: dup
176: invokespecial #19
179: ldc           #20
181: invokevirtual #21
184: aload         4
186: invokevirtual #21
189: ldc           #41
191: invokevirtual #21
194: invokevirtual #24
197: aload         4
199: ldc           #11
201: invokestatic  #42
204: new           #18
207: dup
208: invokespecial #19
211: ldc           #20
213: invokevirtual #21
216: aload         5
218: invokevirtual #21
221: ldc           #48
223: invokevirtual #21
226: invokevirtual #24
229: aload         5
231: ldc           #49
233: invokestatic  #42
236: new           #18
239: dup
240: invokespecial #19
243: ldc           #20
245: invokevirtual #21
248: aload         6
250: invokevirtual #21
253: ldc           #70
255: invokevirtual #21
258: invokevirtual #24
261: aload         6
263: ldc           #71
265: invokestatic  #42
268: new           #18
271: dup
272: invokespecial #19
275: ldc           #20
277: invokevirtual #21
280: aload         7
282: invokevirtual #21
285: ldc           #70
287: invokevirtual #21
290: invokevirtual #24
293: aload         7
295: ldc           #71
297: invokestatic  #42
300: new           #18
303: dup
304: invokespecial #19
307: ldc           #20
309: invokevirtual #21
312: iload         8
314: invokevirtual #22
317: ldc           #23
319: invokevirtual #21
322: iconst_1
323: invokevirtual #22
326: ldc           #20
328: invokevirtual #21
331: invokevirtual #24
334: iload         8
336: iconst_1
337: if_icmpne     344
340: iconst_1
341: goto          345
344: iconst_0
345: invokestatic  #25
348: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest2.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest2.class
Class name: RegressionTest2
Method name: test1035
Start line: 838
End line: 0
Method source code: 
    public void test1035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1035");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultOptPrefix;
        java.lang.String str6 = helpFormatter0.getLongOptPrefix();
        helpFormatter0.defaultArgName = "                                                                                                 ";
        int int9 = helpFormatter0.defaultLeftPad;
        helpFormatter0.setLongOptSeparator(" ");
        org.apache.commons.cli.HelpFormatter helpFormatter12 = new org.apache.commons.cli.HelpFormatter();
        int int13 = helpFormatter12.getLeftPadding();
        helpFormatter12.defaultNewLine = "";
        helpFormatter12.setDescPadding(10);
        java.lang.String str18 = helpFormatter12.getLongOptSeparator();
        java.lang.String str19 = helpFormatter12.getNewLine();
        org.apache.commons.cli.HelpFormatter helpFormatter20 = new org.apache.commons.cli.HelpFormatter();
        int int21 = helpFormatter20.getLeftPadding();
        helpFormatter20.defaultNewLine = "";
        helpFormatter20.setDescPadding(10);
        java.lang.String str26 = helpFormatter20.getLongOptSeparator();
        java.lang.String str27 = helpFormatter20.getLongOptSeparator();
        java.lang.String str29 = helpFormatter20.createPadding((int) (byte) 1);
        java.lang.String str30 = helpFormatter20.defaultOptPrefix;
        java.util.Comparator comparator31 = helpFormatter20.optionComparator;
        helpFormatter12.optionComparator = comparator31;
        helpFormatter0.optionComparator = comparator31;
        java.lang.String str34 = helpFormatter0.defaultLongOptPrefix;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + " " + "'", str18, " ");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + " " + "'", str26, " ");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + " " + "'", str27, " ");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + " " + "'", str29, " ");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "-" + "'", str30, "-");
        org.junit.Assert.assertNotNull(comparator31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #124
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: ldc           #11
35: invokevirtual #16
38: aload_1
39: ldc           #11
41: putfield      #27
44: aload_1
45: getfield      #30
48: astore_2
49: aload_1
50: invokevirtual #54
53: astore_3
54: aload_1
55: ldc           #59
57: putfield      #15
60: aload_1
61: getfield      #17
64: istore        4
66: aload_1
67: ldc           #31
69: invokevirtual #37
72: new           #8
75: dup
76: invokespecial #9
79: astore        5
81: aload         5
83: invokevirtual #10
86: istore        6
88: aload         5
90: ldc           #11
92: putfield      #12
95: aload         5
97: bipush        10
99: invokevirtual #13
102: aload         5
104: invokevirtual #63
107: astore        7
109: aload         5
111: invokevirtual #28
114: astore        8
116: new           #8
119: dup
120: invokespecial #9
123: astore        9
125: aload         9
127: invokevirtual #10
130: istore        10
132: aload         9
134: ldc           #11
136: putfield      #12
139: aload         9
141: bipush        10
143: invokevirtual #13
146: aload         9
148: invokevirtual #63
151: astore        11
153: aload         9
155: invokevirtual #63
158: astore        12
160: aload         9
162: iconst_1
163: invokevirtual #58
166: astore        13
168: aload         9
170: getfield      #30
173: astore        14
175: aload         9
177: getfield      #34
180: astore        15
182: aload         5
184: aload         15
186: putfield      #34
189: aload_1
190: aload         15
192: putfield      #34
195: aload_1
196: getfield      #27
199: astore        16
201: new           #18
204: dup
205: invokespecial #19
208: ldc           #20
210: invokevirtual #21
213: aload_2
214: invokevirtual #21
217: ldc           #41
219: invokevirtual #21
222: invokevirtual #24
225: aload_2
226: ldc           #11
228: invokestatic  #42
231: new           #18
234: dup
235: invokespecial #19
238: ldc           #20
240: invokevirtual #21
243: aload_3
244: invokevirtual #21
247: ldc           #41
249: invokevirtual #21
252: invokevirtual #24
255: aload_3
256: ldc           #11
258: invokestatic  #42
261: new           #18
264: dup
265: invokespecial #19
268: ldc           #20
270: invokevirtual #21
273: iload         4
275: invokevirtual #22
278: ldc           #23
280: invokevirtual #21
283: iconst_1
284: invokevirtual #22
287: ldc           #20
289: invokevirtual #21
292: invokevirtual #24
295: iload         4
297: iconst_1
298: if_icmpne     305
301: iconst_1
302: goto          306
305: iconst_0
306: invokestatic  #25
309: new           #18
312: dup
313: invokespecial #19
316: ldc           #20
318: invokevirtual #21
321: iload         6
323: invokevirtual #22
326: ldc           #23
328: invokevirtual #21
331: iconst_1
332: invokevirtual #22
335: ldc           #20
337: invokevirtual #21
340: invokevirtual #24
343: iload         6
345: iconst_1
346: if_icmpne     353
349: iconst_1
350: goto          354
353: iconst_0
354: invokestatic  #25
357: new           #18
360: dup
361: invokespecial #19
364: ldc           #20
366: invokevirtual #21
369: aload         7
371: invokevirtual #21
374: ldc           #64
376: invokevirtual #21
379: invokevirtual #24
382: aload         7
384: ldc           #31
386: invokestatic  #42
389: new           #18
392: dup
393: invokespecial #19
396: ldc           #20
398: invokevirtual #21
401: aload         8
403: invokevirtual #21
406: ldc           #41
408: invokevirtual #21
411: invokevirtual #24
414: aload         8
416: ldc           #11
418: invokestatic  #42
421: new           #18
424: dup
425: invokespecial #19
428: ldc           #20
430: invokevirtual #21
433: iload         10
435: invokevirtual #22
438: ldc           #23
440: invokevirtual #21
443: iconst_1
444: invokevirtual #22
447: ldc           #20
449: invokevirtual #21
452: invokevirtual #24
455: iload         10
457: iconst_1
458: if_icmpne     465
461: iconst_1
462: goto          466
465: iconst_0
466: invokestatic  #25
469: new           #18
472: dup
473: invokespecial #19
476: ldc           #20
478: invokevirtual #21
481: aload         11
483: invokevirtual #21
486: ldc           #64
488: invokevirtual #21
491: invokevirtual #24
494: aload         11
496: ldc           #31
498: invokestatic  #42
501: new           #18
504: dup
505: invokespecial #19
508: ldc           #20
510: invokevirtual #21
513: aload         12
515: invokevirtual #21
518: ldc           #64
520: invokevirtual #21
523: invokevirtual #24
526: aload         12
528: ldc           #31
530: invokestatic  #42
533: new           #18
536: dup
537: invokespecial #19
540: ldc           #20
542: invokevirtual #21
545: aload         13
547: invokevirtual #21
550: ldc           #64
552: invokevirtual #21
555: invokevirtual #24
558: aload         13
560: ldc           #31
562: invokestatic  #42
565: new           #18
568: dup
569: invokespecial #19
572: ldc           #20
574: invokevirtual #21
577: aload         14
579: invokevirtual #21
582: ldc           #46
584: invokevirtual #21
587: invokevirtual #24
590: aload         14
592: ldc           #47
594: invokestatic  #42
597: aload         15
599: invokestatic  #45
602: new           #18
605: dup
606: invokespecial #19
609: ldc           #20
611: invokevirtual #21
614: aload         16
616: invokevirtual #21
619: ldc           #41
621: invokevirtual #21
624: invokevirtual #24
627: aload         16
629: ldc           #11
631: invokestatic  #42
634: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest2.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest2.class
Class name: RegressionTest2
Method name: test1036
Start line: 883
End line: 0
Method source code: 
    public void test1036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1036");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.getArgName();
        helpFormatter0.defaultNewLine = "\n";
        helpFormatter0.defaultLeftPad = (byte) -1;
        helpFormatter0.setLongOptSeparator("");
        helpFormatter0.setLongOptSeparator("-");
        java.lang.String str11 = helpFormatter0.getSyntaxPrefix();
        helpFormatter0.defaultDescPad = (byte) 1;
        helpFormatter0.defaultNewLine = "          ";
        int int16 = helpFormatter0.getWidth();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "arg" + "'", str2, "arg");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "usage: " + "'", str11, "usage: ");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 74 + "'", int16 == 74);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #125
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #10
36: istore_2
37: aload_1
38: invokevirtual #52
41: astore_3
42: aload_1
43: ldc           #44
45: putfield      #12
48: aload_1
49: iconst_m1
50: putfield      #17
53: aload_1
54: ldc           #11
56: invokevirtual #37
59: aload_1
60: ldc           #47
62: invokevirtual #37
65: aload_1
66: invokevirtual #69
69: astore        4
71: aload_1
72: iconst_1
73: putfield      #33
76: aload_1
77: ldc           #36
79: putfield      #12
82: aload_1
83: invokevirtual #107
86: istore        5
88: new           #18
91: dup
92: invokespecial #19
95: ldc           #20
97: invokevirtual #21
100: iload_2
101: invokevirtual #22
104: ldc           #23
106: invokevirtual #21
109: iconst_1
110: invokevirtual #22
113: ldc           #20
115: invokevirtual #21
118: invokevirtual #24
121: iload_2
122: iconst_1
123: if_icmpne     130
126: iconst_1
127: goto          131
130: iconst_0
131: invokestatic  #25
134: new           #18
137: dup
138: invokespecial #19
141: ldc           #20
143: invokevirtual #21
146: aload_3
147: invokevirtual #21
150: ldc           #48
152: invokevirtual #21
155: invokevirtual #24
158: aload_3
159: ldc           #49
161: invokestatic  #42
164: new           #18
167: dup
168: invokespecial #19
171: ldc           #20
173: invokevirtual #21
176: aload         4
178: invokevirtual #21
181: ldc           #70
183: invokevirtual #21
186: invokevirtual #24
189: aload         4
191: ldc           #71
193: invokestatic  #42
196: new           #18
199: dup
200: invokespecial #19
203: ldc           #20
205: invokevirtual #21
208: iload         5
210: invokevirtual #22
213: ldc           #23
215: invokevirtual #21
218: bipush        74
220: invokevirtual #22
223: ldc           #20
225: invokevirtual #21
228: invokevirtual #24
231: iload         5
233: bipush        74
235: if_icmpne     242
238: iconst_1
239: goto          243
242: iconst_0
243: invokestatic  #25
246: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest2.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest2.class
Class name: RegressionTest2
Method name: test1037
Start line: 904
End line: 0
Method source code: 
    public void test1037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1037");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        helpFormatter0.setSyntaxPrefix(" ");
        int int8 = helpFormatter0.defaultLeftPad;
        helpFormatter0.setLeftPadding(1);
        java.lang.String str11 = helpFormatter0.getLongOptPrefix();
        java.lang.StringBuffer stringBuffer12 = null;
        org.apache.commons.cli.Options options14 = null;
        try {
            java.lang.StringBuffer stringBuffer17 = helpFormatter0.renderOptions(stringBuffer12, (int) (short) -1, options14, (int) ' ', (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "--" + "'", str11, "--");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #126
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #10
36: istore_2
37: aload_1
38: ldc           #11
40: putfield      #12
43: aload_1
44: bipush        10
46: invokevirtual #13
49: aload_1
50: ldc           #31
52: invokevirtual #53
55: aload_1
56: getfield      #17
59: istore_3
60: aload_1
61: iconst_1
62: invokevirtual #84
65: aload_1
66: invokevirtual #54
69: astore        4
71: aconst_null
72: astore        5
74: aconst_null
75: astore        6
77: aload_1
78: aload         5
80: iconst_m1
81: aload         6
83: bipush        32
85: bipush        97
87: invokevirtual #127
90: astore        7
92: ldc           #95
94: invokestatic  #87
97: goto          102
100: astore        7
102: new           #18
105: dup
106: invokespecial #19
109: ldc           #20
111: invokevirtual #21
114: iload_2
115: invokevirtual #22
118: ldc           #23
120: invokevirtual #21
123: iconst_1
124: invokevirtual #22
127: ldc           #20
129: invokevirtual #21
132: invokevirtual #24
135: iload_2
136: iconst_1
137: if_icmpne     144
140: iconst_1
141: goto          145
144: iconst_0
145: invokestatic  #25
148: new           #18
151: dup
152: invokespecial #19
155: ldc           #20
157: invokevirtual #21
160: iload_3
161: invokevirtual #22
164: ldc           #23
166: invokevirtual #21
169: iconst_1
170: invokevirtual #22
173: ldc           #20
175: invokevirtual #21
178: invokevirtual #24
181: iload_3
182: iconst_1
183: if_icmpne     190
186: iconst_1
187: goto          191
190: iconst_0
191: invokestatic  #25
194: new           #18
197: dup
198: invokespecial #19
201: ldc           #20
203: invokevirtual #21
206: aload         4
208: invokevirtual #21
211: ldc           #55
213: invokevirtual #21
216: invokevirtual #24
219: aload         4
221: ldc           #56
223: invokestatic  #42
226: return
Exception table:
from    to  target type
77    97   100   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest2.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest2.class
Class name: RegressionTest2
Method name: test1038
Start line: 930
End line: 0
Method source code: 
    public void test1038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1038");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        int int4 = helpFormatter0.defaultWidth;
        helpFormatter0.setOptPrefix("");
        helpFormatter0.setOptPrefix("arg");
        helpFormatter0.setWidth(0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 74 + "'", int4 == 74);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #128
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #10
36: istore_2
37: aload_1
38: ldc           #11
40: putfield      #12
43: aload_1
44: getfield      #39
47: istore_3
48: aload_1
49: ldc           #11
51: invokevirtual #16
54: aload_1
55: ldc           #49
57: invokevirtual #16
60: aload_1
61: iconst_0
62: invokevirtual #38
65: new           #18
68: dup
69: invokespecial #19
72: ldc           #20
74: invokevirtual #21
77: iload_2
78: invokevirtual #22
81: ldc           #23
83: invokevirtual #21
86: iconst_1
87: invokevirtual #22
90: ldc           #20
92: invokevirtual #21
95: invokevirtual #24
98: iload_2
99: iconst_1
100: if_icmpne     107
103: iconst_1
104: goto          108
107: iconst_0
108: invokestatic  #25
111: new           #18
114: dup
115: invokespecial #19
118: ldc           #20
120: invokevirtual #21
123: iload_3
124: invokevirtual #22
127: ldc           #23
129: invokevirtual #21
132: bipush        74
134: invokevirtual #22
137: ldc           #20
139: invokevirtual #21
142: invokevirtual #24
145: iload_3
146: bipush        74
148: if_icmpne     155
151: iconst_1
152: goto          156
155: iconst_0
156: invokestatic  #25
159: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest2.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest2.class
Class name: RegressionTest2
Method name: test1039
Start line: 945
End line: 0
Method source code: 
    public void test1039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1039");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.util.Comparator comparator1 = helpFormatter0.optionComparator;
        helpFormatter0.defaultArgName = "";
        helpFormatter0.defaultNewLine = "\n";
        helpFormatter0.setLeftPadding((int) (short) 0);
        org.junit.Assert.assertNotNull(comparator1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #129
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: getfield      #34
36: astore_2
37: aload_1
38: ldc           #11
40: putfield      #15
43: aload_1
44: ldc           #44
46: putfield      #12
49: aload_1
50: iconst_0
51: invokevirtual #84
54: aload_2
55: invokestatic  #45
58: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest2.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest2.class
Class name: RegressionTest2
Method name: test1040
Start line: 957
End line: 0
Method source code: 
    public void test1040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1040");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        int int4 = helpFormatter0.defaultDescPad;
        helpFormatter0.setWidth((int) '#');
        helpFormatter0.setArgName("");
        int int9 = helpFormatter0.defaultWidth;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 3 + "'", int4 == 3);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 35 + "'", int9 == 35);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #130
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #10
36: istore_2
37: aload_1
38: ldc           #11
40: putfield      #12
43: aload_1
44: getfield      #33
47: istore_3
48: aload_1
49: bipush        35
51: invokevirtual #38
54: aload_1
55: ldc           #11
57: invokevirtual #112
60: aload_1
61: getfield      #39
64: istore        4
66: new           #18
69: dup
70: invokespecial #19
73: ldc           #20
75: invokevirtual #21
78: iload_2
79: invokevirtual #22
82: ldc           #23
84: invokevirtual #21
87: iconst_1
88: invokevirtual #22
91: ldc           #20
93: invokevirtual #21
96: invokevirtual #24
99: iload_2
100: iconst_1
101: if_icmpne     108
104: iconst_1
105: goto          109
108: iconst_0
109: invokestatic  #25
112: new           #18
115: dup
116: invokespecial #19
119: ldc           #20
121: invokevirtual #21
124: iload_3
125: invokevirtual #22
128: ldc           #23
130: invokevirtual #21
133: iconst_3
134: invokevirtual #22
137: ldc           #20
139: invokevirtual #21
142: invokevirtual #24
145: iload_3
146: iconst_3
147: if_icmpne     154
150: iconst_1
151: goto          155
154: iconst_0
155: invokestatic  #25
158: new           #18
161: dup
162: invokespecial #19
165: ldc           #20
167: invokevirtual #21
170: iload         4
172: invokevirtual #22
175: ldc           #23
177: invokevirtual #21
180: bipush        35
182: invokevirtual #22
185: ldc           #20
187: invokevirtual #21
190: invokevirtual #24
193: iload         4
195: bipush        35
197: if_icmpne     204
200: iconst_1
201: goto          205
204: iconst_0
205: invokestatic  #25
208: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest2.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest2.class
Class name: RegressionTest2
Method name: test1041
Start line: 973
End line: 0
Method source code: 
    public void test1041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1041");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        java.util.Comparator comparator6 = helpFormatter0.optionComparator;
        helpFormatter0.setLongOptPrefix("hi!");
        java.lang.String str9 = helpFormatter0.getLongOptSeparator();
        org.apache.commons.cli.HelpFormatter helpFormatter10 = new org.apache.commons.cli.HelpFormatter();
        int int11 = helpFormatter10.getLeftPadding();
        java.lang.String str12 = helpFormatter10.getArgName();
        helpFormatter10.setSyntaxPrefix("usage: ");
        org.apache.commons.cli.HelpFormatter helpFormatter15 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter15.setOptPrefix("");
        helpFormatter15.defaultLongOptPrefix = "";
        java.lang.String str20 = helpFormatter15.defaultLongOptPrefix;
        java.lang.String str21 = helpFormatter15.getNewLine();
        java.lang.String str22 = helpFormatter15.defaultOptPrefix;
        helpFormatter15.setDescPadding(74);
        java.util.Comparator comparator25 = helpFormatter15.getOptionComparator();
        helpFormatter10.optionComparator = comparator25;
        helpFormatter0.optionComparator = comparator25;
        helpFormatter0.setDescPadding((int) ' ');
        helpFormatter0.setDescPadding(0);
        helpFormatter0.defaultNewLine = "--";
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(comparator6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + " " + "'", str9, " ");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "arg" + "'", str12, "arg");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "\n" + "'", str21, "\n");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(comparator25);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #131
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #10
36: istore_2
37: aload_1
38: ldc           #11
40: putfield      #12
43: aload_1
44: bipush        10
46: invokevirtual #13
49: aload_1
50: getfield      #34
53: astore_3
54: aload_1
55: ldc           #14
57: invokevirtual #32
60: aload_1
61: invokevirtual #63
64: astore        4
66: new           #8
69: dup
70: invokespecial #9
73: astore        5
75: aload         5
77: invokevirtual #10
80: istore        6
82: aload         5
84: invokevirtual #52
87: astore        7
89: aload         5
91: ldc           #71
93: invokevirtual #53
96: new           #8
99: dup
100: invokespecial #9
103: astore        8
105: aload         8
107: ldc           #11
109: invokevirtual #16
112: aload         8
114: ldc           #11
116: putfield      #27
119: aload         8
121: getfield      #27
124: astore        9
126: aload         8
128: invokevirtual #28
131: astore        10
133: aload         8
135: getfield      #30
138: astore        11
140: aload         8
142: bipush        74
144: invokevirtual #13
147: aload         8
149: invokevirtual #29
152: astore        12
154: aload         5
156: aload         12
158: putfield      #34
161: aload_1
162: aload         12
164: putfield      #34
167: aload_1
168: bipush        32
170: invokevirtual #13
173: aload_1
174: iconst_0
175: invokevirtual #13
178: aload_1
179: ldc           #56
181: putfield      #12
184: new           #18
187: dup
188: invokespecial #19
191: ldc           #20
193: invokevirtual #21
196: iload_2
197: invokevirtual #22
200: ldc           #23
202: invokevirtual #21
205: iconst_1
206: invokevirtual #22
209: ldc           #20
211: invokevirtual #21
214: invokevirtual #24
217: iload_2
218: iconst_1
219: if_icmpne     226
222: iconst_1
223: goto          227
226: iconst_0
227: invokestatic  #25
230: aload_3
231: invokestatic  #45
234: new           #18
237: dup
238: invokespecial #19
241: ldc           #20
243: invokevirtual #21
246: aload         4
248: invokevirtual #21
251: ldc           #64
253: invokevirtual #21
256: invokevirtual #24
259: aload         4
261: ldc           #31
263: invokestatic  #42
266: new           #18
269: dup
270: invokespecial #19
273: ldc           #20
275: invokevirtual #21
278: iload         6
280: invokevirtual #22
283: ldc           #23
285: invokevirtual #21
288: iconst_1
289: invokevirtual #22
292: ldc           #20
294: invokevirtual #21
297: invokevirtual #24
300: iload         6
302: iconst_1
303: if_icmpne     310
306: iconst_1
307: goto          311
310: iconst_0
311: invokestatic  #25
314: new           #18
317: dup
318: invokespecial #19
321: ldc           #20
323: invokevirtual #21
326: aload         7
328: invokevirtual #21
331: ldc           #48
333: invokevirtual #21
336: invokevirtual #24
339: aload         7
341: ldc           #49
343: invokestatic  #42
346: new           #18
349: dup
350: invokespecial #19
353: ldc           #20
355: invokevirtual #21
358: aload         9
360: invokevirtual #21
363: ldc           #41
365: invokevirtual #21
368: invokevirtual #24
371: aload         9
373: ldc           #11
375: invokestatic  #42
378: new           #18
381: dup
382: invokespecial #19
385: ldc           #20
387: invokevirtual #21
390: aload         10
392: invokevirtual #21
395: ldc           #43
397: invokevirtual #21
400: invokevirtual #24
403: aload         10
405: ldc           #44
407: invokestatic  #42
410: new           #18
413: dup
414: invokespecial #19
417: ldc           #20
419: invokevirtual #21
422: aload         11
424: invokevirtual #21
427: ldc           #41
429: invokevirtual #21
432: invokevirtual #24
435: aload         11
437: ldc           #11
439: invokestatic  #42
442: aload         12
444: invokestatic  #45
447: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest2.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest2.class
Class name: RegressionTest2
Method name: test1042
Start line: 1012
End line: 0
Method source code: 
    public void test1042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1042");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        java.lang.String str3 = helpFormatter0.getLongOptSeparator();
        helpFormatter0.defaultDescPad = 0;
        java.lang.String str6 = helpFormatter0.getOptPrefix();
        int int7 = helpFormatter0.getDescPadding();
        helpFormatter0.setLeftPadding((int) '#');
        java.lang.String str10 = helpFormatter0.defaultLongOptPrefix;
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + " " + "'", str3, " ");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "--" + "'", str10, "--");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #132
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: ldc           #11
35: invokevirtual #16
38: aload_1
39: invokevirtual #63
42: astore_2
43: aload_1
44: iconst_0
45: putfield      #33
48: aload_1
49: invokevirtual #68
52: astore_3
53: aload_1
54: invokevirtual #66
57: istore        4
59: aload_1
60: bipush        35
62: invokevirtual #84
65: aload_1
66: getfield      #27
69: astore        5
71: new           #18
74: dup
75: invokespecial #19
78: ldc           #20
80: invokevirtual #21
83: aload_2
84: invokevirtual #21
87: ldc           #64
89: invokevirtual #21
92: invokevirtual #24
95: aload_2
96: ldc           #31
98: invokestatic  #42
101: new           #18
104: dup
105: invokespecial #19
108: ldc           #20
110: invokevirtual #21
113: aload_3
114: invokevirtual #21
117: ldc           #41
119: invokevirtual #21
122: invokevirtual #24
125: aload_3
126: ldc           #11
128: invokestatic  #42
131: new           #18
134: dup
135: invokespecial #19
138: ldc           #20
140: invokevirtual #21
143: iload         4
145: invokevirtual #22
148: ldc           #23
150: invokevirtual #21
153: iconst_0
154: invokevirtual #22
157: ldc           #20
159: invokevirtual #21
162: invokevirtual #24
165: iload         4
167: ifne          174
170: iconst_1
171: goto          175
174: iconst_0
175: invokestatic  #25
178: new           #18
181: dup
182: invokespecial #19
185: ldc           #20
187: invokevirtual #21
190: aload         5
192: invokevirtual #21
195: ldc           #55
197: invokevirtual #21
200: invokevirtual #24
203: aload         5
205: ldc           #56
207: invokestatic  #42
210: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest2.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest2.class
Class name: RegressionTest2
Method name: test1043
Start line: 1030
End line: 0
Method source code: 
    public void test1043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1043");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        helpFormatter0.setSyntaxPrefix(" ");
        java.lang.String str8 = helpFormatter0.defaultSyntaxPrefix;
        helpFormatter0.setLongOptSeparator("          ");
        java.lang.String str12 = helpFormatter0.createPadding(0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + " " + "'", str8, " ");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #133
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #10
36: istore_2
37: aload_1
38: ldc           #11
40: putfield      #12
43: aload_1
44: bipush        10
46: invokevirtual #13
49: aload_1
50: ldc           #31
52: invokevirtual #53
55: aload_1
56: getfield      #60
59: astore_3
60: aload_1
61: ldc           #36
63: invokevirtual #37
66: aload_1
67: iconst_0
68: invokevirtual #58
71: astore        4
73: new           #18
76: dup
77: invokespecial #19
80: ldc           #20
82: invokevirtual #21
85: iload_2
86: invokevirtual #22
89: ldc           #23
91: invokevirtual #21
94: iconst_1
95: invokevirtual #22
98: ldc           #20
100: invokevirtual #21
103: invokevirtual #24
106: iload_2
107: iconst_1
108: if_icmpne     115
111: iconst_1
112: goto          116
115: iconst_0
116: invokestatic  #25
119: new           #18
122: dup
123: invokespecial #19
126: ldc           #20
128: invokevirtual #21
131: aload_3
132: invokevirtual #21
135: ldc           #64
137: invokevirtual #21
140: invokevirtual #24
143: aload_3
144: ldc           #31
146: invokestatic  #42
149: new           #18
152: dup
153: invokespecial #19
156: ldc           #20
158: invokevirtual #21
161: aload         4
163: invokevirtual #21
166: ldc           #41
168: invokevirtual #21
171: invokevirtual #24
174: aload         4
176: ldc           #11
178: invokestatic  #42
181: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest2.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest2.class
Class name: RegressionTest2
Method name: test1044
Start line: 1047
End line: 0
Method source code: 
    public void test1044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1044");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.defaultDescPad = '4';
        helpFormatter0.setNewLine("");
        helpFormatter0.defaultWidth = '4';
        org.apache.commons.cli.HelpFormatter helpFormatter10 = new org.apache.commons.cli.HelpFormatter();
        int int11 = helpFormatter10.getLeftPadding();
        java.lang.String str12 = helpFormatter10.defaultLongOptPrefix;
        java.lang.String str13 = helpFormatter10.getOptPrefix();
        java.util.Comparator comparator14 = helpFormatter10.optionComparator;
        java.util.Comparator comparator15 = helpFormatter10.optionComparator;
        helpFormatter0.optionComparator = comparator15;
        helpFormatter0.defaultNewLine = "                                                                                                 ";
        java.lang.StringBuffer stringBuffer19 = null;
        try {
            java.lang.StringBuffer stringBuffer23 = helpFormatter0.renderWrappedText(stringBuffer19, 0, (int) (byte) 100, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "--" + "'", str12, "--");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "-" + "'", str13, "-");
        org.junit.Assert.assertNotNull(comparator14);
        org.junit.Assert.assertNotNull(comparator15);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #134
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #10
36: istore_2
37: aload_1
38: ldc           #11
40: putfield      #12
43: aload_1
44: bipush        52
46: putfield      #33
49: aload_1
50: ldc           #11
52: invokevirtual #74
55: aload_1
56: bipush        52
58: putfield      #39
61: new           #8
64: dup
65: invokespecial #9
68: astore_3
69: aload_3
70: invokevirtual #10
73: istore        4
75: aload_3
76: getfield      #27
79: astore        5
81: aload_3
82: invokevirtual #68
85: astore        6
87: aload_3
88: getfield      #34
91: astore        7
93: aload_3
94: getfield      #34
97: astore        8
99: aload_1
100: aload         8
102: putfield      #34
105: aload_1
106: ldc           #59
108: putfield      #12
111: aconst_null
112: astore        9
114: aload_1
115: aload         9
117: iconst_0
118: bipush        100
120: ldc           #11
122: invokevirtual #135
125: astore        10
127: ldc           #95
129: invokestatic  #87
132: goto          137
135: astore        10
137: new           #18
140: dup
141: invokespecial #19
144: ldc           #20
146: invokevirtual #21
149: iload_2
150: invokevirtual #22
153: ldc           #23
155: invokevirtual #21
158: iconst_1
159: invokevirtual #22
162: ldc           #20
164: invokevirtual #21
167: invokevirtual #24
170: iload_2
171: iconst_1
172: if_icmpne     179
175: iconst_1
176: goto          180
179: iconst_0
180: invokestatic  #25
183: new           #18
186: dup
187: invokespecial #19
190: ldc           #20
192: invokevirtual #21
195: iload         4
197: invokevirtual #22
200: ldc           #23
202: invokevirtual #21
205: iconst_1
206: invokevirtual #22
209: ldc           #20
211: invokevirtual #21
214: invokevirtual #24
217: iload         4
219: iconst_1
220: if_icmpne     227
223: iconst_1
224: goto          228
227: iconst_0
228: invokestatic  #25
231: new           #18
234: dup
235: invokespecial #19
238: ldc           #20
240: invokevirtual #21
243: aload         5
245: invokevirtual #21
248: ldc           #55
250: invokevirtual #21
253: invokevirtual #24
256: aload         5
258: ldc           #56
260: invokestatic  #42
263: new           #18
266: dup
267: invokespecial #19
270: ldc           #20
272: invokevirtual #21
275: aload         6
277: invokevirtual #21
280: ldc           #46
282: invokevirtual #21
285: invokevirtual #24
288: aload         6
290: ldc           #47
292: invokestatic  #42
295: aload         7
297: invokestatic  #45
300: aload         8
302: invokestatic  #45
305: return
Exception table:
from    to  target type
114   132   135   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest2.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest2.class
Class name: RegressionTest2
Method name: test1045
Start line: 1081
End line: 0
Method source code: 
    public void test1045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1045");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.setWidth(1);
        java.lang.String str5 = helpFormatter0.getNewLine();
        java.lang.String str6 = helpFormatter0.defaultArgName;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\n" + "'", str5, "\n");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "arg" + "'", str6, "arg");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #136
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: ldc           #11
35: invokevirtual #16
38: aload_1
39: iconst_1
40: invokevirtual #38
43: aload_1
44: invokevirtual #28
47: astore_2
48: aload_1
49: getfield      #15
52: astore_3
53: new           #18
56: dup
57: invokespecial #19
60: ldc           #20
62: invokevirtual #21
65: aload_2
66: invokevirtual #21
69: ldc           #43
71: invokevirtual #21
74: invokevirtual #24
77: aload_2
78: ldc           #44
80: invokestatic  #42
83: new           #18
86: dup
87: invokespecial #19
90: ldc           #20
92: invokevirtual #21
95: aload_3
96: invokevirtual #21
99: ldc           #48
101: invokevirtual #21
104: invokevirtual #24
107: aload_3
108: ldc           #49
110: invokestatic  #42
113: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest2.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest2.class
Class name: RegressionTest2
Method name: test1046
Start line: 1094
End line: 0
Method source code: 
    public void test1046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1046");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setLongOptPrefix(" ");
        helpFormatter0.defaultDescPad = (short) 10;
        helpFormatter0.setLongOptPrefix("--");
        java.lang.String str11 = helpFormatter0.getLongOptSeparator();
        helpFormatter0.setDescPadding((-2));
        java.io.PrintWriter printWriter14 = null;
        try {
            helpFormatter0.printWrapped(printWriter14, (int) ' ', 0, "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + " " + "'", str11, " ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #137
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #10
36: istore_2
37: aload_1
38: ldc           #11
40: putfield      #12
43: aload_1
44: getfield      #30
47: astore_3
48: aload_1
49: ldc           #31
51: invokevirtual #32
54: aload_1
55: bipush        10
57: putfield      #33
60: aload_1
61: ldc           #56
63: invokevirtual #32
66: aload_1
67: invokevirtual #63
70: astore        4
72: aload_1
73: bipush        -2
75: invokevirtual #13
78: aconst_null
79: astore        5
81: aload_1
82: aload         5
84: bipush        32
86: iconst_0
87: ldc           #14
89: invokevirtual #138
92: ldc           #95
94: invokestatic  #87
97: goto          102
100: astore        6
102: new           #18
105: dup
106: invokespecial #19
109: ldc           #20
111: invokevirtual #21
114: iload_2
115: invokevirtual #22
118: ldc           #23
120: invokevirtual #21
123: iconst_1
124: invokevirtual #22
127: ldc           #20
129: invokevirtual #21
132: invokevirtual #24
135: iload_2
136: iconst_1
137: if_icmpne     144
140: iconst_1
141: goto          145
144: iconst_0
145: invokestatic  #25
148: new           #18
151: dup
152: invokespecial #19
155: ldc           #20
157: invokevirtual #21
160: aload_3
161: invokevirtual #21
164: ldc           #46
166: invokevirtual #21
169: invokevirtual #24
172: aload_3
173: ldc           #47
175: invokestatic  #42
178: new           #18
181: dup
182: invokespecial #19
185: ldc           #20
187: invokevirtual #21
190: aload         4
192: invokevirtual #21
195: ldc           #64
197: invokevirtual #21
200: invokevirtual #24
203: aload         4
205: ldc           #31
207: invokestatic  #42
210: return
Exception table:
from    to  target type
81    97   100   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest2.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest2.class
Class name: RegressionTest2
Method name: test1047
Start line: 1120
End line: 0
Method source code: 
    public void test1047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1047");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str3 = helpFormatter0.getOptPrefix();
        int int4 = helpFormatter0.defaultDescPad;
        int int5 = helpFormatter0.defaultLeftPad;
        int int6 = helpFormatter0.defaultLeftPad;
        int int10 = helpFormatter0.findWrapPos("                                                                                                 ", (int) (byte) 100, (-2));
        int int14 = helpFormatter0.findWrapPos("", 100, 74);
        java.lang.String str15 = helpFormatter0.defaultSyntaxPrefix;
        java.lang.StringBuffer stringBuffer16 = null;
        try {
            java.lang.StringBuffer stringBuffer20 = helpFormatter0.renderWrappedText(stringBuffer16, 3, (int) (short) 10, "          ");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "--" + "'", str2, "--");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "-" + "'", str3, "-");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 3 + "'", int4 == 3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "usage: " + "'", str15, "usage: ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #139
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #10
36: istore_2
37: aload_1
38: getfield      #27
41: astore_3
42: aload_1
43: invokevirtual #68
46: astore        4
48: aload_1
49: getfield      #33
52: istore        5
54: aload_1
55: getfield      #17
58: istore        6
60: aload_1
61: getfield      #17
64: istore        7
66: aload_1
67: ldc           #59
69: bipush        100
71: bipush        -2
73: invokevirtual #76
76: istore        8
78: aload_1
79: ldc           #11
81: bipush        100
83: bipush        74
85: invokevirtual #76
88: istore        9
90: aload_1
91: getfield      #60
94: astore        10
96: aconst_null
97: astore        11
99: aload_1
100: aload         11
102: iconst_3
103: bipush        10
105: ldc           #36
107: invokevirtual #135
110: astore        12
112: ldc           #95
114: invokestatic  #87
117: goto          122
120: astore        12
122: new           #18
125: dup
126: invokespecial #19
129: ldc           #20
131: invokevirtual #21
134: iload_2
135: invokevirtual #22
138: ldc           #23
140: invokevirtual #21
143: iconst_1
144: invokevirtual #22
147: ldc           #20
149: invokevirtual #21
152: invokevirtual #24
155: iload_2
156: iconst_1
157: if_icmpne     164
160: iconst_1
161: goto          165
164: iconst_0
165: invokestatic  #25
168: new           #18
171: dup
172: invokespecial #19
175: ldc           #20
177: invokevirtual #21
180: aload_3
181: invokevirtual #21
184: ldc           #55
186: invokevirtual #21
189: invokevirtual #24
192: aload_3
193: ldc           #56
195: invokestatic  #42
198: new           #18
201: dup
202: invokespecial #19
205: ldc           #20
207: invokevirtual #21
210: aload         4
212: invokevirtual #21
215: ldc           #46
217: invokevirtual #21
220: invokevirtual #24
223: aload         4
225: ldc           #47
227: invokestatic  #42
230: new           #18
233: dup
234: invokespecial #19
237: ldc           #20
239: invokevirtual #21
242: iload         5
244: invokevirtual #22
247: ldc           #23
249: invokevirtual #21
252: iconst_3
253: invokevirtual #22
256: ldc           #20
258: invokevirtual #21
261: invokevirtual #24
264: iload         5
266: iconst_3
267: if_icmpne     274
270: iconst_1
271: goto          275
274: iconst_0
275: invokestatic  #25
278: new           #18
281: dup
282: invokespecial #19
285: ldc           #20
287: invokevirtual #21
290: iload         6
292: invokevirtual #22
295: ldc           #23
297: invokevirtual #21
300: iconst_1
301: invokevirtual #22
304: ldc           #20
306: invokevirtual #21
309: invokevirtual #24
312: iload         6
314: iconst_1
315: if_icmpne     322
318: iconst_1
319: goto          323
322: iconst_0
323: invokestatic  #25
326: new           #18
329: dup
330: invokespecial #19
333: ldc           #20
335: invokevirtual #21
338: iload         7
340: invokevirtual #22
343: ldc           #23
345: invokevirtual #21
348: iconst_1
349: invokevirtual #22
352: ldc           #20
354: invokevirtual #21
357: invokevirtual #24
360: iload         7
362: iconst_1
363: if_icmpne     370
366: iconst_1
367: goto          371
370: iconst_0
371: invokestatic  #25
374: new           #18
377: dup
378: invokespecial #19
381: ldc           #20
383: invokevirtual #21
386: iload         8
388: invokevirtual #22
391: ldc           #23
393: invokevirtual #21
396: iconst_m1
397: invokevirtual #22
400: ldc           #20
402: invokevirtual #21
405: invokevirtual #24
408: iload         8
410: iconst_m1
411: if_icmpne     418
414: iconst_1
415: goto          419
418: iconst_0
419: invokestatic  #25
422: new           #18
425: dup
426: invokespecial #19
429: ldc           #20
431: invokevirtual #21
434: iload         9
436: invokevirtual #22
439: ldc           #23
441: invokevirtual #21
444: iconst_m1
445: invokevirtual #22
448: ldc           #20
450: invokevirtual #21
453: invokevirtual #24
456: iload         9
458: iconst_m1
459: if_icmpne     466
462: iconst_1
463: goto          467
466: iconst_0
467: invokestatic  #25
470: new           #18
473: dup
474: invokespecial #19
477: ldc           #20
479: invokevirtual #21
482: aload         10
484: invokevirtual #21
487: ldc           #70
489: invokevirtual #21
492: invokevirtual #24
495: aload         10
497: ldc           #71
499: invokestatic  #42
502: return
Exception table:
from    to  target type
99   117   120   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest2.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest2.class
Class name: RegressionTest2
Method name: test1048
Start line: 1153
End line: 0
Method source code: 
    public void test1048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1048");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.defaultDescPad = '4';
        helpFormatter0.setNewLine("");
        helpFormatter0.setLongOptPrefix(" ");
        java.lang.String str10 = helpFormatter0.getLongOptPrefix();
        java.lang.String str12 = helpFormatter0.createPadding(100);
        java.lang.String str13 = helpFormatter0.getLongOptPrefix();
        helpFormatter0.setLongOptPrefix("-");
        java.lang.String str16 = helpFormatter0.getSyntaxPrefix();
        helpFormatter0.setLeftPadding((int) (byte) 1);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + " " + "'", str10, " ");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "                                                                                                    " + "'", str12, "                                                                                                    ");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + " " + "'", str13, " ");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "usage: " + "'", str16, "usage: ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #140
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #10
36: istore_2
37: aload_1
38: ldc           #11
40: putfield      #12
43: aload_1
44: bipush        52
46: putfield      #33
49: aload_1
50: ldc           #11
52: invokevirtual #74
55: aload_1
56: ldc           #31
58: invokevirtual #32
61: aload_1
62: invokevirtual #54
65: astore_3
66: aload_1
67: bipush        100
69: invokevirtual #58
72: astore        4
74: aload_1
75: invokevirtual #54
78: astore        5
80: aload_1
81: ldc           #47
83: invokevirtual #32
86: aload_1
87: invokevirtual #69
90: astore        6
92: aload_1
93: iconst_1
94: invokevirtual #84
97: new           #18
100: dup
101: invokespecial #19
104: ldc           #20
106: invokevirtual #21
109: iload_2
110: invokevirtual #22
113: ldc           #23
115: invokevirtual #21
118: iconst_1
119: invokevirtual #22
122: ldc           #20
124: invokevirtual #21
127: invokevirtual #24
130: iload_2
131: iconst_1
132: if_icmpne     139
135: iconst_1
136: goto          140
139: iconst_0
140: invokestatic  #25
143: new           #18
146: dup
147: invokespecial #19
150: ldc           #20
152: invokevirtual #21
155: aload_3
156: invokevirtual #21
159: ldc           #64
161: invokevirtual #21
164: invokevirtual #24
167: aload_3
168: ldc           #31
170: invokestatic  #42
173: new           #18
176: dup
177: invokespecial #19
180: ldc           #20
182: invokevirtual #21
185: aload         4
187: invokevirtual #21
190: ldc           #141
192: invokevirtual #21
195: invokevirtual #24
198: aload         4
200: ldc           #92
202: invokestatic  #42
205: new           #18
208: dup
209: invokespecial #19
212: ldc           #20
214: invokevirtual #21
217: aload         5
219: invokevirtual #21
222: ldc           #64
224: invokevirtual #21
227: invokevirtual #24
230: aload         5
232: ldc           #31
234: invokestatic  #42
237: new           #18
240: dup
241: invokespecial #19
244: ldc           #20
246: invokevirtual #21
249: aload         6
251: invokevirtual #21
254: ldc           #70
256: invokevirtual #21
259: invokevirtual #24
262: aload         6
264: ldc           #71
266: invokestatic  #42
269: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest2.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest2.class
Class name: RegressionTest2
Method name: test1049
Start line: 1176
End line: 0
Method source code: 
    public void test1049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1049");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setLongOptPrefix(" ");
        helpFormatter0.defaultDescPad = (short) 10;
        helpFormatter0.setLongOptPrefix("--");
        int int11 = helpFormatter0.getDescPadding();
        java.io.PrintWriter printWriter12 = null;
        org.apache.commons.cli.Options options16 = null;
        try {
            helpFormatter0.printHelp(printWriter12, 3, "                                                    ", "                                ", options16, (int) (byte) 1, (-2), "--", true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 10 + "'", int11 == 10);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #142
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #10
36: istore_2
37: aload_1
38: ldc           #11
40: putfield      #12
43: aload_1
44: getfield      #30
47: astore_3
48: aload_1
49: ldc           #31
51: invokevirtual #32
54: aload_1
55: bipush        10
57: putfield      #33
60: aload_1
61: ldc           #56
63: invokevirtual #32
66: aload_1
67: invokevirtual #66
70: istore        4
72: aconst_null
73: astore        5
75: aconst_null
76: astore        6
78: aload_1
79: aload         5
81: iconst_3
82: ldc           #93
84: ldc           #143
86: aload         6
88: iconst_1
89: bipush        -2
91: ldc           #56
93: iconst_1
94: invokevirtual #144
97: ldc           #95
99: invokestatic  #87
102: goto          107
105: astore        7
107: new           #18
110: dup
111: invokespecial #19
114: ldc           #20
116: invokevirtual #21
119: iload_2
120: invokevirtual #22
123: ldc           #23
125: invokevirtual #21
128: iconst_1
129: invokevirtual #22
132: ldc           #20
134: invokevirtual #21
137: invokevirtual #24
140: iload_2
141: iconst_1
142: if_icmpne     149
145: iconst_1
146: goto          150
149: iconst_0
150: invokestatic  #25
153: new           #18
156: dup
157: invokespecial #19
160: ldc           #20
162: invokevirtual #21
165: aload_3
166: invokevirtual #21
169: ldc           #46
171: invokevirtual #21
174: invokevirtual #24
177: aload_3
178: ldc           #47
180: invokestatic  #42
183: new           #18
186: dup
187: invokespecial #19
190: ldc           #20
192: invokevirtual #21
195: iload         4
197: invokevirtual #22
200: ldc           #23
202: invokevirtual #21
205: bipush        10
207: invokevirtual #22
210: ldc           #20
212: invokevirtual #21
215: invokevirtual #24
218: iload         4
220: bipush        10
222: if_icmpne     229
225: iconst_1
226: goto          230
229: iconst_0
230: invokestatic  #25
233: return
Exception table:
from    to  target type
78   102   105   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest2.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest2.class
Class name: RegressionTest2
Method name: test1050
Start line: 1202
End line: 0
Method source code: 
    public void test1050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1050");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        java.lang.String str6 = helpFormatter0.rtrim("");
        java.lang.String str7 = helpFormatter0.getNewLine();
        org.apache.commons.cli.HelpFormatter helpFormatter8 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter8.setOptPrefix("");
        helpFormatter8.defaultLongOptPrefix = "";
        java.lang.String str13 = helpFormatter8.defaultLongOptPrefix;
        java.lang.String str14 = helpFormatter8.getNewLine();
        helpFormatter8.setSyntaxPrefix(" ");
        java.lang.String str17 = helpFormatter8.defaultOptPrefix;
        helpFormatter8.setNewLine("\n");
        org.apache.commons.cli.HelpFormatter helpFormatter20 = new org.apache.commons.cli.HelpFormatter();
        int int21 = helpFormatter20.getLeftPadding();
        helpFormatter20.defaultNewLine = "";
        java.lang.String str24 = helpFormatter20.defaultOptPrefix;
        java.lang.String str26 = helpFormatter20.rtrim("");
        int int27 = helpFormatter20.getDescPadding();
        int int28 = helpFormatter20.getDescPadding();
        java.lang.String str29 = helpFormatter20.getArgName();
        helpFormatter20.setDescPadding(0);
        helpFormatter20.defaultDescPad = (short) 100;
        java.util.Comparator comparator34 = helpFormatter20.optionComparator;
        helpFormatter8.setOptionComparator(comparator34);
        helpFormatter0.optionComparator = comparator34;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\n" + "'", str14, "\n");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "-" + "'", str24, "-");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 3 + "'", int27 == 3);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 3 + "'", int28 == 3);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "arg" + "'", str29, "arg");
        org.junit.Assert.assertNotNull(comparator34);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #145
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #10
36: istore_2
37: aload_1
38: ldc           #11
40: putfield      #12
43: aload_1
44: getfield      #30
47: astore_3
48: aload_1
49: ldc           #11
51: invokevirtual #78
54: astore        4
56: aload_1
57: invokevirtual #28
60: astore        5
62: new           #8
65: dup
66: invokespecial #9
69: astore        6
71: aload         6
73: ldc           #11
75: invokevirtual #16
78: aload         6
80: ldc           #11
82: putfield      #27
85: aload         6
87: getfield      #27
90: astore        7
92: aload         6
94: invokevirtual #28
97: astore        8
99: aload         6
101: ldc           #31
103: invokevirtual #53
106: aload         6
108: getfield      #30
111: astore        9
113: aload         6
115: ldc           #44
117: invokevirtual #74
120: new           #8
123: dup
124: invokespecial #9
127: astore        10
129: aload         10
131: invokevirtual #10
134: istore        11
136: aload         10
138: ldc           #11
140: putfield      #12
143: aload         10
145: getfield      #30
148: astore        12
150: aload         10
152: ldc           #11
154: invokevirtual #78
157: astore        13
159: aload         10
161: invokevirtual #66
164: istore        14
166: aload         10
168: invokevirtual #66
171: istore        15
173: aload         10
175: invokevirtual #52
178: astore        16
180: aload         10
182: iconst_0
183: invokevirtual #13
186: aload         10
188: bipush        100
190: putfield      #33
193: aload         10
195: getfield      #34
198: astore        17
200: aload         6
202: aload         17
204: invokevirtual #35
207: aload_1
208: aload         17
210: putfield      #34
213: new           #18
216: dup
217: invokespecial #19
220: ldc           #20
222: invokevirtual #21
225: iload_2
226: invokevirtual #22
229: ldc           #23
231: invokevirtual #21
234: iconst_1
235: invokevirtual #22
238: ldc           #20
240: invokevirtual #21
243: invokevirtual #24
246: iload_2
247: iconst_1
248: if_icmpne     255
251: iconst_1
252: goto          256
255: iconst_0
256: invokestatic  #25
259: new           #18
262: dup
263: invokespecial #19
266: ldc           #20
268: invokevirtual #21
271: aload_3
272: invokevirtual #21
275: ldc           #46
277: invokevirtual #21
280: invokevirtual #24
283: aload_3
284: ldc           #47
286: invokestatic  #42
289: new           #18
292: dup
293: invokespecial #19
296: ldc           #20
298: invokevirtual #21
301: aload         4
303: invokevirtual #21
306: ldc           #41
308: invokevirtual #21
311: invokevirtual #24
314: aload         4
316: ldc           #11
318: invokestatic  #42
321: new           #18
324: dup
325: invokespecial #19
328: ldc           #20
330: invokevirtual #21
333: aload         5
335: invokevirtual #21
338: ldc           #41
340: invokevirtual #21
343: invokevirtual #24
346: aload         5
348: ldc           #11
350: invokestatic  #42
353: new           #18
356: dup
357: invokespecial #19
360: ldc           #20
362: invokevirtual #21
365: aload         7
367: invokevirtual #21
370: ldc           #41
372: invokevirtual #21
375: invokevirtual #24
378: aload         7
380: ldc           #11
382: invokestatic  #42
385: new           #18
388: dup
389: invokespecial #19
392: ldc           #20
394: invokevirtual #21
397: aload         8
399: invokevirtual #21
402: ldc           #43
404: invokevirtual #21
407: invokevirtual #24
410: aload         8
412: ldc           #44
414: invokestatic  #42
417: new           #18
420: dup
421: invokespecial #19
424: ldc           #20
426: invokevirtual #21
429: aload         9
431: invokevirtual #21
434: ldc           #41
436: invokevirtual #21
439: invokevirtual #24
442: aload         9
444: ldc           #11
446: invokestatic  #42
449: new           #18
452: dup
453: invokespecial #19
456: ldc           #20
458: invokevirtual #21
461: iload         11
463: invokevirtual #22
466: ldc           #23
468: invokevirtual #21
471: iconst_1
472: invokevirtual #22
475: ldc           #20
477: invokevirtual #21
480: invokevirtual #24
483: iload         11
485: iconst_1
486: if_icmpne     493
489: iconst_1
490: goto          494
493: iconst_0
494: invokestatic  #25
497: new           #18
500: dup
501: invokespecial #19
504: ldc           #20
506: invokevirtual #21
509: aload         12
511: invokevirtual #21
514: ldc           #46
516: invokevirtual #21
519: invokevirtual #24
522: aload         12
524: ldc           #47
526: invokestatic  #42
529: new           #18
532: dup
533: invokespecial #19
536: ldc           #20
538: invokevirtual #21
541: aload         13
543: invokevirtual #21
546: ldc           #41
548: invokevirtual #21
551: invokevirtual #24
554: aload         13
556: ldc           #11
558: invokestatic  #42
561: new           #18
564: dup
565: invokespecial #19
568: ldc           #20
570: invokevirtual #21
573: iload         14
575: invokevirtual #22
578: ldc           #23
580: invokevirtual #21
583: iconst_3
584: invokevirtual #22
587: ldc           #20
589: invokevirtual #21
592: invokevirtual #24
595: iload         14
597: iconst_3
598: if_icmpne     605
601: iconst_1
602: goto          606
605: iconst_0
606: invokestatic  #25
609: new           #18
612: dup
613: invokespecial #19
616: ldc           #20
618: invokevirtual #21
621: iload         15
623: invokevirtual #22
626: ldc           #23
628: invokevirtual #21
631: iconst_3
632: invokevirtual #22
635: ldc           #20
637: invokevirtual #21
640: invokevirtual #24
643: iload         15
645: iconst_3
646: if_icmpne     653
649: iconst_1
650: goto          654
653: iconst_0
654: invokestatic  #25
657: new           #18
660: dup
661: invokespecial #19
664: ldc           #20
666: invokevirtual #21
669: aload         16
671: invokevirtual #21
674: ldc           #48
676: invokevirtual #21
679: invokevirtual #24
682: aload         16
684: ldc           #49
686: invokestatic  #42
689: aload         17
691: invokestatic  #45
694: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest2.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest2.class
Class name: RegressionTest2
Method name: test1051
Start line: 1249
End line: 0
Method source code: 
    public void test1051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1051");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        java.lang.String str6 = helpFormatter0.rtrim("");
        java.lang.String str7 = helpFormatter0.getNewLine();
        java.lang.String str8 = helpFormatter0.defaultLongOptPrefix;
        int int9 = helpFormatter0.defaultLeftPad;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "--" + "'", str8, "--");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #146
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #10
36: istore_2
37: aload_1
38: ldc           #11
40: putfield      #12
43: aload_1
44: getfield      #30
47: astore_3
48: aload_1
49: ldc           #11
51: invokevirtual #78
54: astore        4
56: aload_1
57: invokevirtual #28
60: astore        5
62: aload_1
63: getfield      #27
66: astore        6
68: aload_1
69: getfield      #17
72: istore        7
74: new           #18
77: dup
78: invokespecial #19
81: ldc           #20
83: invokevirtual #21
86: iload_2
87: invokevirtual #22
90: ldc           #23
92: invokevirtual #21
95: iconst_1
96: invokevirtual #22
99: ldc           #20
101: invokevirtual #21
104: invokevirtual #24
107: iload_2
108: iconst_1
109: if_icmpne     116
112: iconst_1
113: goto          117
116: iconst_0
117: invokestatic  #25
120: new           #18
123: dup
124: invokespecial #19
127: ldc           #20
129: invokevirtual #21
132: aload_3
133: invokevirtual #21
136: ldc           #46
138: invokevirtual #21
141: invokevirtual #24
144: aload_3
145: ldc           #47
147: invokestatic  #42
150: new           #18
153: dup
154: invokespecial #19
157: ldc           #20
159: invokevirtual #21
162: aload         4
164: invokevirtual #21
167: ldc           #41
169: invokevirtual #21
172: invokevirtual #24
175: aload         4
177: ldc           #11
179: invokestatic  #42
182: new           #18
185: dup
186: invokespecial #19
189: ldc           #20
191: invokevirtual #21
194: aload         5
196: invokevirtual #21
199: ldc           #41
201: invokevirtual #21
204: invokevirtual #24
207: aload         5
209: ldc           #11
211: invokestatic  #42
214: new           #18
217: dup
218: invokespecial #19
221: ldc           #20
223: invokevirtual #21
226: aload         6
228: invokevirtual #21
231: ldc           #55
233: invokevirtual #21
236: invokevirtual #24
239: aload         6
241: ldc           #56
243: invokestatic  #42
246: new           #18
249: dup
250: invokespecial #19
253: ldc           #20
255: invokevirtual #21
258: iload         7
260: invokevirtual #22
263: ldc           #23
265: invokevirtual #21
268: iconst_1
269: invokevirtual #22
272: ldc           #20
274: invokevirtual #21
277: invokevirtual #24
280: iload         7
282: iconst_1
283: if_icmpne     290
286: iconst_1
287: goto          291
290: iconst_0
291: invokestatic  #25
294: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest2.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest2.class
Class name: RegressionTest2
Method name: test1052
Start line: 1269
End line: 0
Method source code: 
    public void test1052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1052");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        java.lang.String str6 = helpFormatter0.getOptPrefix();
        java.lang.String str7 = helpFormatter0.getNewLine();
        helpFormatter0.defaultOptPrefix = "";
        helpFormatter0.setNewLine("");
        java.lang.String str12 = helpFormatter0.getArgName();
        java.lang.String str13 = helpFormatter0.getSyntaxPrefix();
        java.lang.String str14 = helpFormatter0.getSyntaxPrefix();
        int int18 = helpFormatter0.findWrapPos("", (int) (short) 10, (int) (byte) 1);
        java.io.PrintWriter printWriter19 = null;
        try {
            helpFormatter0.printWrapped(printWriter19, 1, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "-" + "'", str6, "-");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "arg" + "'", str12, "arg");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "usage: " + "'", str13, "usage: ");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "usage: " + "'", str14, "usage: ");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #147
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #10
36: istore_2
37: aload_1
38: ldc           #11
40: putfield      #12
43: aload_1
44: bipush        10
46: invokevirtual #13
49: aload_1
50: invokevirtual #68
53: astore_3
54: aload_1
55: invokevirtual #28
58: astore        4
60: aload_1
61: ldc           #11
63: putfield      #30
66: aload_1
67: ldc           #11
69: invokevirtual #74
72: aload_1
73: invokevirtual #52
76: astore        5
78: aload_1
79: invokevirtual #69
82: astore        6
84: aload_1
85: invokevirtual #69
88: astore        7
90: aload_1
91: ldc           #11
93: bipush        10
95: iconst_1
96: invokevirtual #76
99: istore        8
101: aconst_null
102: astore        9
104: aload_1
105: aload         9
107: iconst_1
108: ldc           #11
110: invokevirtual #120
113: ldc           #95
115: invokestatic  #87
118: goto          123
121: astore        10
123: new           #18
126: dup
127: invokespecial #19
130: ldc           #20
132: invokevirtual #21
135: iload_2
136: invokevirtual #22
139: ldc           #23
141: invokevirtual #21
144: iconst_1
145: invokevirtual #22
148: ldc           #20
150: invokevirtual #21
153: invokevirtual #24
156: iload_2
157: iconst_1
158: if_icmpne     165
161: iconst_1
162: goto          166
165: iconst_0
166: invokestatic  #25
169: new           #18
172: dup
173: invokespecial #19
176: ldc           #20
178: invokevirtual #21
181: aload_3
182: invokevirtual #21
185: ldc           #46
187: invokevirtual #21
190: invokevirtual #24
193: aload_3
194: ldc           #47
196: invokestatic  #42
199: new           #18
202: dup
203: invokespecial #19
206: ldc           #20
208: invokevirtual #21
211: aload         4
213: invokevirtual #21
216: ldc           #41
218: invokevirtual #21
221: invokevirtual #24
224: aload         4
226: ldc           #11
228: invokestatic  #42
231: new           #18
234: dup
235: invokespecial #19
238: ldc           #20
240: invokevirtual #21
243: aload         5
245: invokevirtual #21
248: ldc           #48
250: invokevirtual #21
253: invokevirtual #24
256: aload         5
258: ldc           #49
260: invokestatic  #42
263: new           #18
266: dup
267: invokespecial #19
270: ldc           #20
272: invokevirtual #21
275: aload         6
277: invokevirtual #21
280: ldc           #70
282: invokevirtual #21
285: invokevirtual #24
288: aload         6
290: ldc           #71
292: invokestatic  #42
295: new           #18
298: dup
299: invokespecial #19
302: ldc           #20
304: invokevirtual #21
307: aload         7
309: invokevirtual #21
312: ldc           #70
314: invokevirtual #21
317: invokevirtual #24
320: aload         7
322: ldc           #71
324: invokestatic  #42
327: new           #18
330: dup
331: invokespecial #19
334: ldc           #20
336: invokevirtual #21
339: iload         8
341: invokevirtual #22
344: ldc           #23
346: invokevirtual #21
349: iconst_m1
350: invokevirtual #22
353: ldc           #20
355: invokevirtual #21
358: invokevirtual #24
361: iload         8
363: iconst_m1
364: if_icmpne     371
367: iconst_1
368: goto          372
371: iconst_0
372: invokestatic  #25
375: return
Exception table:
from    to  target type
104   118   121   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest2.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest2.class
Class name: RegressionTest2
Method name: test1053
Start line: 1302
End line: 0
Method source code: 
    public void test1053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1053");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str6 = helpFormatter0.getNewLine();
        java.lang.String str7 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setDescPadding(74);
        helpFormatter0.setLeftPadding(52);
        int int12 = helpFormatter0.defaultWidth;
        helpFormatter0.setDescPadding((int) (short) 0);
        java.util.Comparator comparator15 = helpFormatter0.getOptionComparator();
        helpFormatter0.defaultLeftPad = 0;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\n" + "'", str6, "\n");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 74 + "'", int12 == 74);
        org.junit.Assert.assertNotNull(comparator15);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #148
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: ldc           #11
35: invokevirtual #16
38: aload_1
39: ldc           #11
41: putfield      #27
44: aload_1
45: getfield      #27
48: astore_2
49: aload_1
50: invokevirtual #28
53: astore_3
54: aload_1
55: getfield      #30
58: astore        4
60: aload_1
61: bipush        74
63: invokevirtual #13
66: aload_1
67: bipush        52
69: invokevirtual #84
72: aload_1
73: getfield      #39
76: istore        5
78: aload_1
79: iconst_0
80: invokevirtual #13
83: aload_1
84: invokevirtual #29
87: astore        6
89: aload_1
90: iconst_0
91: putfield      #17
94: new           #18
97: dup
98: invokespecial #19
101: ldc           #20
103: invokevirtual #21
106: aload_2
107: invokevirtual #21
110: ldc           #41
112: invokevirtual #21
115: invokevirtual #24
118: aload_2
119: ldc           #11
121: invokestatic  #42
124: new           #18
127: dup
128: invokespecial #19
131: ldc           #20
133: invokevirtual #21
136: aload_3
137: invokevirtual #21
140: ldc           #43
142: invokevirtual #21
145: invokevirtual #24
148: aload_3
149: ldc           #44
151: invokestatic  #42
154: new           #18
157: dup
158: invokespecial #19
161: ldc           #20
163: invokevirtual #21
166: aload         4
168: invokevirtual #21
171: ldc           #41
173: invokevirtual #21
176: invokevirtual #24
179: aload         4
181: ldc           #11
183: invokestatic  #42
186: new           #18
189: dup
190: invokespecial #19
193: ldc           #20
195: invokevirtual #21
198: iload         5
200: invokevirtual #22
203: ldc           #23
205: invokevirtual #21
208: bipush        74
210: invokevirtual #22
213: ldc           #20
215: invokevirtual #21
218: invokevirtual #24
221: iload         5
223: bipush        74
225: if_icmpne     232
228: iconst_1
229: goto          233
232: iconst_0
233: invokestatic  #25
236: aload         6
238: invokestatic  #45
241: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest2.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest2.class
Class name: RegressionTest2
Method name: test1054
Start line: 1325
End line: 0
Method source code: 
    public void test1054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1054");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.util.Comparator comparator1 = helpFormatter0.optionComparator;
        java.lang.String str3 = helpFormatter0.rtrim("");
        int int4 = helpFormatter0.getDescPadding();
        java.lang.String str5 = helpFormatter0.defaultSyntaxPrefix;
        java.lang.StringBuffer stringBuffer6 = null;
        try {
            java.lang.StringBuffer stringBuffer10 = helpFormatter0.renderWrappedText(stringBuffer6, (int) '#', (int) (byte) 1, "                                                                                                 ");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(comparator1);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 3 + "'", int4 == 3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "usage: " + "'", str5, "usage: ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #149
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: getfield      #34
36: astore_2
37: aload_1
38: ldc           #11
40: invokevirtual #78
43: astore_3
44: aload_1
45: invokevirtual #66
48: istore        4
50: aload_1
51: getfield      #60
54: astore        5
56: aconst_null
57: astore        6
59: aload_1
60: aload         6
62: bipush        35
64: iconst_1
65: ldc           #59
67: invokevirtual #135
70: astore        7
72: ldc           #95
74: invokestatic  #87
77: goto          82
80: astore        7
82: aload_2
83: invokestatic  #45
86: new           #18
89: dup
90: invokespecial #19
93: ldc           #20
95: invokevirtual #21
98: aload_3
99: invokevirtual #21
102: ldc           #41
104: invokevirtual #21
107: invokevirtual #24
110: aload_3
111: ldc           #11
113: invokestatic  #42
116: new           #18
119: dup
120: invokespecial #19
123: ldc           #20
125: invokevirtual #21
128: iload         4
130: invokevirtual #22
133: ldc           #23
135: invokevirtual #21
138: iconst_3
139: invokevirtual #22
142: ldc           #20
144: invokevirtual #21
147: invokevirtual #24
150: iload         4
152: iconst_3
153: if_icmpne     160
156: iconst_1
157: goto          161
160: iconst_0
161: invokestatic  #25
164: new           #18
167: dup
168: invokespecial #19
171: ldc           #20
173: invokevirtual #21
176: aload         5
178: invokevirtual #21
181: ldc           #70
183: invokevirtual #21
186: invokevirtual #24
189: aload         5
191: ldc           #71
193: invokestatic  #42
196: return
Exception table:
from    to  target type
59    77    80   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest2.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest2.class
Class name: RegressionTest2
Method name: test1055
Start line: 1348
End line: 0
Method source code: 
    public void test1055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1055");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str6 = helpFormatter0.defaultArgName;
        java.lang.String str7 = helpFormatter0.getNewLine();
        int int8 = helpFormatter0.defaultWidth;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "arg" + "'", str6, "arg");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\n" + "'", str7, "\n");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 74 + "'", int8 == 74);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #150
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: ldc           #11
35: invokevirtual #16
38: aload_1
39: ldc           #11
41: putfield      #27
44: aload_1
45: getfield      #27
48: astore_2
49: aload_1
50: getfield      #15
53: astore_3
54: aload_1
55: invokevirtual #28
58: astore        4
60: aload_1
61: getfield      #39
64: istore        5
66: new           #18
69: dup
70: invokespecial #19
73: ldc           #20
75: invokevirtual #21
78: aload_2
79: invokevirtual #21
82: ldc           #41
84: invokevirtual #21
87: invokevirtual #24
90: aload_2
91: ldc           #11
93: invokestatic  #42
96: new           #18
99: dup
100: invokespecial #19
103: ldc           #20
105: invokevirtual #21
108: aload_3
109: invokevirtual #21
112: ldc           #48
114: invokevirtual #21
117: invokevirtual #24
120: aload_3
121: ldc           #49
123: invokestatic  #42
126: new           #18
129: dup
130: invokespecial #19
133: ldc           #20
135: invokevirtual #21
138: aload         4
140: invokevirtual #21
143: ldc           #43
145: invokevirtual #21
148: invokevirtual #24
151: aload         4
153: ldc           #44
155: invokestatic  #42
158: new           #18
161: dup
162: invokespecial #19
165: ldc           #20
167: invokevirtual #21
170: iload         5
172: invokevirtual #22
175: ldc           #23
177: invokevirtual #21
180: bipush        74
182: invokevirtual #22
185: ldc           #20
187: invokevirtual #21
190: invokevirtual #24
193: iload         5
195: bipush        74
197: if_icmpne     204
200: iconst_1
201: goto          205
204: iconst_0
205: invokestatic  #25
208: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest2.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest2.class
Class name: RegressionTest2
Method name: test1056
Start line: 1365
End line: 0
Method source code: 
    public void test1056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1056");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.defaultDescPad = '4';
        helpFormatter0.setNewLine("");
        helpFormatter0.defaultDescPad = 'a';
        java.lang.String str10 = helpFormatter0.defaultNewLine;
        int int11 = helpFormatter0.getDescPadding();
        java.io.PrintWriter printWriter12 = null;
        try {
            helpFormatter0.printWrapped(printWriter12, 97, (int) (short) 100, "arg");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 97 + "'", int11 == 97);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #151
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #10
36: istore_2
37: aload_1
38: ldc           #11
40: putfield      #12
43: aload_1
44: bipush        52
46: putfield      #33
49: aload_1
50: ldc           #11
52: invokevirtual #74
55: aload_1
56: bipush        97
58: putfield      #33
61: aload_1
62: getfield      #12
65: astore_3
66: aload_1
67: invokevirtual #66
70: istore        4
72: aconst_null
73: astore        5
75: aload_1
76: aload         5
78: bipush        97
80: bipush        100
82: ldc           #49
84: invokevirtual #138
87: ldc           #95
89: invokestatic  #87
92: goto          97
95: astore        6
97: new           #18
100: dup
101: invokespecial #19
104: ldc           #20
106: invokevirtual #21
109: iload_2
110: invokevirtual #22
113: ldc           #23
115: invokevirtual #21
118: iconst_1
119: invokevirtual #22
122: ldc           #20
124: invokevirtual #21
127: invokevirtual #24
130: iload_2
131: iconst_1
132: if_icmpne     139
135: iconst_1
136: goto          140
139: iconst_0
140: invokestatic  #25
143: new           #18
146: dup
147: invokespecial #19
150: ldc           #20
152: invokevirtual #21
155: aload_3
156: invokevirtual #21
159: ldc           #41
161: invokevirtual #21
164: invokevirtual #24
167: aload_3
168: ldc           #11
170: invokestatic  #42
173: new           #18
176: dup
177: invokespecial #19
180: ldc           #20
182: invokevirtual #21
185: iload         4
187: invokevirtual #22
190: ldc           #23
192: invokevirtual #21
195: bipush        97
197: invokevirtual #22
200: ldc           #20
202: invokevirtual #21
205: invokevirtual #24
208: iload         4
210: bipush        97
212: if_icmpne     219
215: iconst_1
216: goto          220
219: iconst_0
220: invokestatic  #25
223: return
Exception table:
from    to  target type
75    92    95   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest2.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest2.class
Class name: RegressionTest2
Method name: test1057
Start line: 1390
End line: 0
Method source code: 
    public void test1057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1057");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.defaultArgName;
        java.lang.String str3 = helpFormatter0.defaultNewLine;
        helpFormatter0.defaultLeftPad = 10;
        int int9 = helpFormatter0.findWrapPos("                                                                                                 ", (int) (short) 0, (int) (short) 10);
        java.lang.String str10 = helpFormatter0.defaultArgName;
        org.apache.commons.cli.Options options14 = null;
        try {
            helpFormatter0.printHelp(52, "\n", "                                ", options14, "                                ");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "arg" + "'", str2, "arg");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\n" + "'", str3, "\n");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10 + "'", int9 == 10);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "arg" + "'", str10, "arg");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #152
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #10
36: istore_2
37: aload_1
38: getfield      #15
41: astore_3
42: aload_1
43: getfield      #12
46: astore        4
48: aload_1
49: bipush        10
51: putfield      #17
54: aload_1
55: ldc           #59
57: iconst_0
58: bipush        10
60: invokevirtual #76
63: istore        5
65: aload_1
66: getfield      #15
69: astore        6
71: aconst_null
72: astore        7
74: aload_1
75: bipush        52
77: ldc           #44
79: ldc           #143
81: aload         7
83: ldc           #143
85: invokevirtual #153
88: ldc           #95
90: invokestatic  #87
93: goto          98
96: astore        8
98: new           #18
101: dup
102: invokespecial #19
105: ldc           #20
107: invokevirtual #21
110: iload_2
111: invokevirtual #22
114: ldc           #23
116: invokevirtual #21
119: iconst_1
120: invokevirtual #22
123: ldc           #20
125: invokevirtual #21
128: invokevirtual #24
131: iload_2
132: iconst_1
133: if_icmpne     140
136: iconst_1
137: goto          141
140: iconst_0
141: invokestatic  #25
144: new           #18
147: dup
148: invokespecial #19
151: ldc           #20
153: invokevirtual #21
156: aload_3
157: invokevirtual #21
160: ldc           #48
162: invokevirtual #21
165: invokevirtual #24
168: aload_3
169: ldc           #49
171: invokestatic  #42
174: new           #18
177: dup
178: invokespecial #19
181: ldc           #20
183: invokevirtual #21
186: aload         4
188: invokevirtual #21
191: ldc           #43
193: invokevirtual #21
196: invokevirtual #24
199: aload         4
201: ldc           #44
203: invokestatic  #42
206: new           #18
209: dup
210: invokespecial #19
213: ldc           #20
215: invokevirtual #21
218: iload         5
220: invokevirtual #22
223: ldc           #23
225: invokevirtual #21
228: bipush        10
230: invokevirtual #22
233: ldc           #20
235: invokevirtual #21
238: invokevirtual #24
241: iload         5
243: bipush        10
245: if_icmpne     252
248: iconst_1
249: goto          253
252: iconst_0
253: invokestatic  #25
256: new           #18
259: dup
260: invokespecial #19
263: ldc           #20
265: invokevirtual #21
268: aload         6
270: invokevirtual #21
273: ldc           #48
275: invokevirtual #21
278: invokevirtual #24
281: aload         6
283: ldc           #49
285: invokestatic  #42
288: return
Exception table:
from    to  target type
74    93    96   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest2.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest2.class
Class name: RegressionTest2
Method name: test1058
Start line: 1416
End line: 0
Method source code: 
    public void test1058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1058");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.util.Comparator comparator1 = helpFormatter0.optionComparator;
        int int2 = helpFormatter0.getLeftPadding();
        int int3 = helpFormatter0.defaultLeftPad;
        helpFormatter0.defaultOptPrefix = "";
        java.lang.String str6 = helpFormatter0.defaultArgName;
        org.junit.Assert.assertNotNull(comparator1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "arg" + "'", str6, "arg");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #154
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: getfield      #34
36: astore_2
37: aload_1
38: invokevirtual #10
41: istore_3
42: aload_1
43: getfield      #17
46: istore        4
48: aload_1
49: ldc           #11
51: putfield      #30
54: aload_1
55: getfield      #15
58: astore        5
60: aload_2
61: invokestatic  #45
64: new           #18
67: dup
68: invokespecial #19
71: ldc           #20
73: invokevirtual #21
76: iload_3
77: invokevirtual #22
80: ldc           #23
82: invokevirtual #21
85: iconst_1
86: invokevirtual #22
89: ldc           #20
91: invokevirtual #21
94: invokevirtual #24
97: iload_3
98: iconst_1
99: if_icmpne     106
102: iconst_1
103: goto          107
106: iconst_0
107: invokestatic  #25
110: new           #18
113: dup
114: invokespecial #19
117: ldc           #20
119: invokevirtual #21
122: iload         4
124: invokevirtual #22
127: ldc           #23
129: invokevirtual #21
132: iconst_1
133: invokevirtual #22
136: ldc           #20
138: invokevirtual #21
141: invokevirtual #24
144: iload         4
146: iconst_1
147: if_icmpne     154
150: iconst_1
151: goto          155
154: iconst_0
155: invokestatic  #25
158: new           #18
161: dup
162: invokespecial #19
165: ldc           #20
167: invokevirtual #21
170: aload         5
172: invokevirtual #21
175: ldc           #48
177: invokevirtual #21
180: invokevirtual #24
183: aload         5
185: ldc           #49
187: invokestatic  #42
190: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest2.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest2.class
Class name: RegressionTest2
Method name: test1059
Start line: 1432
End line: 0
Method source code: 
    public void test1059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1059");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.util.Comparator comparator1 = helpFormatter0.optionComparator;
        java.lang.String str2 = helpFormatter0.getLongOptPrefix();
        java.lang.String str3 = helpFormatter0.defaultArgName;
        helpFormatter0.setSyntaxPrefix("-");
        java.util.Comparator comparator6 = helpFormatter0.getOptionComparator();
        helpFormatter0.defaultNewLine = "usage:";
        org.junit.Assert.assertNotNull(comparator1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "--" + "'", str2, "--");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "arg" + "'", str3, "arg");
        org.junit.Assert.assertNotNull(comparator6);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #155
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: getfield      #34
36: astore_2
37: aload_1
38: invokevirtual #54
41: astore_3
42: aload_1
43: getfield      #15
46: astore        4
48: aload_1
49: ldc           #47
51: invokevirtual #53
54: aload_1
55: invokevirtual #29
58: astore        5
60: aload_1
61: ldc           #117
63: putfield      #12
66: aload_2
67: invokestatic  #45
70: new           #18
73: dup
74: invokespecial #19
77: ldc           #20
79: invokevirtual #21
82: aload_3
83: invokevirtual #21
86: ldc           #55
88: invokevirtual #21
91: invokevirtual #24
94: aload_3
95: ldc           #56
97: invokestatic  #42
100: new           #18
103: dup
104: invokespecial #19
107: ldc           #20
109: invokevirtual #21
112: aload         4
114: invokevirtual #21
117: ldc           #48
119: invokevirtual #21
122: invokevirtual #24
125: aload         4
127: ldc           #49
129: invokestatic  #42
132: aload         5
134: invokestatic  #45
137: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest2.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest2.class
Class name: RegressionTest2
Method name: test1060
Start line: 1449
End line: 0
Method source code: 
    public void test1060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1060");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        int int6 = helpFormatter0.defaultWidth;
        java.lang.String str7 = helpFormatter0.getLongOptPrefix();
        java.lang.String str8 = helpFormatter0.getLongOptPrefix();
        helpFormatter0.setLongOptSeparator("hi!");
        int int11 = helpFormatter0.getWidth();
        java.lang.String str12 = helpFormatter0.defaultLongOptPrefix;
        java.util.Comparator comparator13 = helpFormatter0.getOptionComparator();
        int int14 = helpFormatter0.defaultDescPad;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "--" + "'", str5, "--");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 74 + "'", int6 == 74);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "--" + "'", str7, "--");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "--" + "'", str8, "--");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 74 + "'", int11 == 74);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "--" + "'", str12, "--");
        org.junit.Assert.assertNotNull(comparator13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 3 + "'", int14 == 3);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #156
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #10
36: istore_2
37: aload_1
38: ldc           #11
40: putfield      #12
43: aload_1
44: getfield      #30
47: astore_3
48: aload_1
49: getfield      #27
52: astore        4
54: aload_1
55: getfield      #39
58: istore        5
60: aload_1
61: invokevirtual #54
64: astore        6
66: aload_1
67: invokevirtual #54
70: astore        7
72: aload_1
73: ldc           #14
75: invokevirtual #37
78: aload_1
79: invokevirtual #107
82: istore        8
84: aload_1
85: getfield      #27
88: astore        9
90: aload_1
91: invokevirtual #29
94: astore        10
96: aload_1
97: getfield      #33
100: istore        11
102: new           #18
105: dup
106: invokespecial #19
109: ldc           #20
111: invokevirtual #21
114: iload_2
115: invokevirtual #22
118: ldc           #23
120: invokevirtual #21
123: iconst_1
124: invokevirtual #22
127: ldc           #20
129: invokevirtual #21
132: invokevirtual #24
135: iload_2
136: iconst_1
137: if_icmpne     144
140: iconst_1
141: goto          145
144: iconst_0
145: invokestatic  #25
148: new           #18
151: dup
152: invokespecial #19
155: ldc           #20
157: invokevirtual #21
160: aload_3
161: invokevirtual #21
164: ldc           #46
166: invokevirtual #21
169: invokevirtual #24
172: aload_3
173: ldc           #47
175: invokestatic  #42
178: new           #18
181: dup
182: invokespecial #19
185: ldc           #20
187: invokevirtual #21
190: aload         4
192: invokevirtual #21
195: ldc           #55
197: invokevirtual #21
200: invokevirtual #24
203: aload         4
205: ldc           #56
207: invokestatic  #42
210: new           #18
213: dup
214: invokespecial #19
217: ldc           #20
219: invokevirtual #21
222: iload         5
224: invokevirtual #22
227: ldc           #23
229: invokevirtual #21
232: bipush        74
234: invokevirtual #22
237: ldc           #20
239: invokevirtual #21
242: invokevirtual #24
245: iload         5
247: bipush        74
249: if_icmpne     256
252: iconst_1
253: goto          257
256: iconst_0
257: invokestatic  #25
260: new           #18
263: dup
264: invokespecial #19
267: ldc           #20
269: invokevirtual #21
272: aload         6
274: invokevirtual #21
277: ldc           #55
279: invokevirtual #21
282: invokevirtual #24
285: aload         6
287: ldc           #56
289: invokestatic  #42
292: new           #18
295: dup
296: invokespecial #19
299: ldc           #20
301: invokevirtual #21
304: aload         7
306: invokevirtual #21
309: ldc           #55
311: invokevirtual #21
314: invokevirtual #24
317: aload         7
319: ldc           #56
321: invokestatic  #42
324: new           #18
327: dup
328: invokespecial #19
331: ldc           #20
333: invokevirtual #21
336: iload         8
338: invokevirtual #22
341: ldc           #23
343: invokevirtual #21
346: bipush        74
348: invokevirtual #22
351: ldc           #20
353: invokevirtual #21
356: invokevirtual #24
359: iload         8
361: bipush        74
363: if_icmpne     370
366: iconst_1
367: goto          371
370: iconst_0
371: invokestatic  #25
374: new           #18
377: dup
378: invokespecial #19
381: ldc           #20
383: invokevirtual #21
386: aload         9
388: invokevirtual #21
391: ldc           #55
393: invokevirtual #21
396: invokevirtual #24
399: aload         9
401: ldc           #56
403: invokestatic  #42
406: aload         10
408: invokestatic  #45
411: new           #18
414: dup
415: invokespecial #19
418: ldc           #20
420: invokevirtual #21
423: iload         11
425: invokevirtual #22
428: ldc           #23
430: invokevirtual #21
433: iconst_3
434: invokevirtual #22
437: ldc           #20
439: invokevirtual #21
442: invokevirtual #24
445: iload         11
447: iconst_3
448: if_icmpne     455
451: iconst_1
452: goto          456
455: iconst_0
456: invokestatic  #25
459: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest2.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest2.class
Class name: RegressionTest2
Method name: test1061
Start line: 1478
End line: 0
Method source code: 
    public void test1061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1061");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setLongOptPrefix(" ");
        java.lang.String str7 = helpFormatter0.getLongOptPrefix();
        helpFormatter0.setNewLine("usage: ");
        helpFormatter0.setOptPrefix(" ");
        org.apache.commons.cli.Options options15 = null;
        try {
            helpFormatter0.printHelp(74, "                                                                                                 ", "                                ", options15, "arg", false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + " " + "'", str7, " ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #157
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #10
36: istore_2
37: aload_1
38: ldc           #11
40: putfield      #12
43: aload_1
44: getfield      #30
47: astore_3
48: aload_1
49: ldc           #31
51: invokevirtual #32
54: aload_1
55: invokevirtual #54
58: astore        4
60: aload_1
61: ldc           #71
63: invokevirtual #74
66: aload_1
67: ldc           #31
69: invokevirtual #16
72: aconst_null
73: astore        5
75: aload_1
76: bipush        74
78: ldc           #59
80: ldc           #143
82: aload         5
84: ldc           #49
86: iconst_0
87: invokevirtual #158
90: ldc           #95
92: invokestatic  #87
95: goto          100
98: astore        6
100: new           #18
103: dup
104: invokespecial #19
107: ldc           #20
109: invokevirtual #21
112: iload_2
113: invokevirtual #22
116: ldc           #23
118: invokevirtual #21
121: iconst_1
122: invokevirtual #22
125: ldc           #20
127: invokevirtual #21
130: invokevirtual #24
133: iload_2
134: iconst_1
135: if_icmpne     142
138: iconst_1
139: goto          143
142: iconst_0
143: invokestatic  #25
146: new           #18
149: dup
150: invokespecial #19
153: ldc           #20
155: invokevirtual #21
158: aload_3
159: invokevirtual #21
162: ldc           #46
164: invokevirtual #21
167: invokevirtual #24
170: aload_3
171: ldc           #47
173: invokestatic  #42
176: new           #18
179: dup
180: invokespecial #19
183: ldc           #20
185: invokevirtual #21
188: aload         4
190: invokevirtual #21
193: ldc           #64
195: invokevirtual #21
198: invokevirtual #24
201: aload         4
203: ldc           #31
205: invokestatic  #42
208: return
Exception table:
from    to  target type
75    95    98   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest2.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest2.class
Class name: RegressionTest2
Method name: test1062
Start line: 1503
End line: 0
Method source code: 
    public void test1062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1062");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str6 = helpFormatter0.getNewLine();
        java.util.Comparator comparator7 = helpFormatter0.getOptionComparator();
        org.apache.commons.cli.HelpFormatter helpFormatter8 = new org.apache.commons.cli.HelpFormatter();
        int int9 = helpFormatter8.getLeftPadding();
        helpFormatter8.defaultNewLine = "";
        java.lang.String str12 = helpFormatter8.defaultOptPrefix;
        helpFormatter8.setLongOptPrefix(" ");
        helpFormatter8.defaultDescPad = (short) 10;
        java.lang.String str17 = helpFormatter8.defaultArgName;
        java.util.Comparator comparator18 = helpFormatter8.optionComparator;
        helpFormatter0.setOptionComparator(comparator18);
        helpFormatter0.defaultSyntaxPrefix = "                                                                                                 ";
        org.apache.commons.cli.HelpFormatter helpFormatter22 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter22.setOptPrefix("");
        helpFormatter22.defaultLongOptPrefix = "";
        java.lang.String str27 = helpFormatter22.defaultLongOptPrefix;
        helpFormatter22.defaultDescPad = 0;
        org.apache.commons.cli.HelpFormatter helpFormatter30 = new org.apache.commons.cli.HelpFormatter();
        java.util.Comparator comparator31 = helpFormatter30.optionComparator;
        int int32 = helpFormatter30.getLeftPadding();
        int int33 = helpFormatter30.defaultLeftPad;
        java.lang.String str35 = helpFormatter30.createPadding((int) 'a');
        org.apache.commons.cli.HelpFormatter helpFormatter36 = new org.apache.commons.cli.HelpFormatter();
        int int37 = helpFormatter36.getLeftPadding();
        helpFormatter36.defaultNewLine = "";
        helpFormatter36.defaultDescPad = '4';
        helpFormatter36.setNewLine("");
        int int47 = helpFormatter36.findWrapPos("\n", (int) ' ', 3);
        java.util.Comparator comparator48 = helpFormatter36.optionComparator;
        helpFormatter30.setOptionComparator(comparator48);
        helpFormatter22.setOptionComparator(comparator48);
        helpFormatter0.setOptionComparator(comparator48);
        helpFormatter0.defaultDescPad = (byte) 10;
        helpFormatter0.setSyntaxPrefix("\n");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\n" + "'", str6, "\n");
        org.junit.Assert.assertNotNull(comparator7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "-" + "'", str12, "-");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "arg" + "'", str17, "arg");
        org.junit.Assert.assertNotNull(comparator18);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(comparator31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "                                                                                                 " + "'", str35, "                                                                                                 ");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(comparator48);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #159
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: ldc           #11
35: invokevirtual #16
38: aload_1
39: ldc           #11
41: putfield      #27
44: aload_1
45: getfield      #27
48: astore_2
49: aload_1
50: invokevirtual #28
53: astore_3
54: aload_1
55: invokevirtual #29
58: astore        4
60: new           #8
63: dup
64: invokespecial #9
67: astore        5
69: aload         5
71: invokevirtual #10
74: istore        6
76: aload         5
78: ldc           #11
80: putfield      #12
83: aload         5
85: getfield      #30
88: astore        7
90: aload         5
92: ldc           #31
94: invokevirtual #32
97: aload         5
99: bipush        10
101: putfield      #33
104: aload         5
106: getfield      #15
109: astore        8
111: aload         5
113: getfield      #34
116: astore        9
118: aload_1
119: aload         9
121: invokevirtual #35
124: aload_1
125: ldc           #59
127: putfield      #60
130: new           #8
133: dup
134: invokespecial #9
137: astore        10
139: aload         10
141: ldc           #11
143: invokevirtual #16
146: aload         10
148: ldc           #11
150: putfield      #27
153: aload         10
155: getfield      #27
158: astore        11
160: aload         10
162: iconst_0
163: putfield      #33
166: new           #8
169: dup
170: invokespecial #9
173: astore        12
175: aload         12
177: getfield      #34
180: astore        13
182: aload         12
184: invokevirtual #10
187: istore        14
189: aload         12
191: getfield      #17
194: istore        15
196: aload         12
198: bipush        97
200: invokevirtual #58
203: astore        16
205: new           #8
208: dup
209: invokespecial #9
212: astore        17
214: aload         17
216: invokevirtual #10
219: istore        18
221: aload         17
223: ldc           #11
225: putfield      #12
228: aload         17
230: bipush        52
232: putfield      #33
235: aload         17
237: ldc           #11
239: invokevirtual #74
242: aload         17
244: ldc           #44
246: bipush        32
248: iconst_3
249: invokevirtual #76
252: istore        19
254: aload         17
256: getfield      #34
259: astore        20
261: aload         12
263: aload         20
265: invokevirtual #35
268: aload         10
270: aload         20
272: invokevirtual #35
275: aload_1
276: aload         20
278: invokevirtual #35
281: aload_1
282: bipush        10
284: putfield      #33
287: aload_1
288: ldc           #44
290: invokevirtual #53
293: new           #18
296: dup
297: invokespecial #19
300: ldc           #20
302: invokevirtual #21
305: aload_2
306: invokevirtual #21
309: ldc           #41
311: invokevirtual #21
314: invokevirtual #24
317: aload_2
318: ldc           #11
320: invokestatic  #42
323: new           #18
326: dup
327: invokespecial #19
330: ldc           #20
332: invokevirtual #21
335: aload_3
336: invokevirtual #21
339: ldc           #43
341: invokevirtual #21
344: invokevirtual #24
347: aload_3
348: ldc           #44
350: invokestatic  #42
353: aload         4
355: invokestatic  #45
358: new           #18
361: dup
362: invokespecial #19
365: ldc           #20
367: invokevirtual #21
370: iload         6
372: invokevirtual #22
375: ldc           #23
377: invokevirtual #21
380: iconst_1
381: invokevirtual #22
384: ldc           #20
386: invokevirtual #21
389: invokevirtual #24
392: iload         6
394: iconst_1
395: if_icmpne     402
398: iconst_1
399: goto          403
402: iconst_0
403: invokestatic  #25
406: new           #18
409: dup
410: invokespecial #19
413: ldc           #20
415: invokevirtual #21
418: aload         7
420: invokevirtual #21
423: ldc           #46
425: invokevirtual #21
428: invokevirtual #24
431: aload         7
433: ldc           #47
435: invokestatic  #42
438: new           #18
441: dup
442: invokespecial #19
445: ldc           #20
447: invokevirtual #21
450: aload         8
452: invokevirtual #21
455: ldc           #48
457: invokevirtual #21
460: invokevirtual #24
463: aload         8
465: ldc           #49
467: invokestatic  #42
470: aload         9
472: invokestatic  #45
475: new           #18
478: dup
479: invokespecial #19
482: ldc           #20
484: invokevirtual #21
487: aload         11
489: invokevirtual #21
492: ldc           #41
494: invokevirtual #21
497: invokevirtual #24
500: aload         11
502: ldc           #11
504: invokestatic  #42
507: aload         13
509: invokestatic  #45
512: new           #18
515: dup
516: invokespecial #19
519: ldc           #20
521: invokevirtual #21
524: iload         14
526: invokevirtual #22
529: ldc           #23
531: invokevirtual #21
534: iconst_1
535: invokevirtual #22
538: ldc           #20
540: invokevirtual #21
543: invokevirtual #24
546: iload         14
548: iconst_1
549: if_icmpne     556
552: iconst_1
553: goto          557
556: iconst_0
557: invokestatic  #25
560: new           #18
563: dup
564: invokespecial #19
567: ldc           #20
569: invokevirtual #21
572: iload         15
574: invokevirtual #22
577: ldc           #23
579: invokevirtual #21
582: iconst_1
583: invokevirtual #22
586: ldc           #20
588: invokevirtual #21
591: invokevirtual #24
594: iload         15
596: iconst_1
597: if_icmpne     604
600: iconst_1
601: goto          605
604: iconst_0
605: invokestatic  #25
608: new           #18
611: dup
612: invokespecial #19
615: ldc           #20
617: invokevirtual #21
620: aload         16
622: invokevirtual #21
625: ldc           #61
627: invokevirtual #21
630: invokevirtual #24
633: aload         16
635: ldc           #59
637: invokestatic  #42
640: new           #18
643: dup
644: invokespecial #19
647: ldc           #20
649: invokevirtual #21
652: iload         18
654: invokevirtual #22
657: ldc           #23
659: invokevirtual #21
662: iconst_1
663: invokevirtual #22
666: ldc           #20
668: invokevirtual #21
671: invokevirtual #24
674: iload         18
676: iconst_1
677: if_icmpne     684
680: iconst_1
681: goto          685
684: iconst_0
685: invokestatic  #25
688: new           #18
691: dup
692: invokespecial #19
695: ldc           #20
697: invokevirtual #21
700: iload         19
702: invokevirtual #22
705: ldc           #23
707: invokevirtual #21
710: iconst_m1
711: invokevirtual #22
714: ldc           #20
716: invokevirtual #21
719: invokevirtual #24
722: iload         19
724: iconst_m1
725: if_icmpne     732
728: iconst_1
729: goto          733
732: iconst_0
733: invokestatic  #25
736: aload         20
738: invokestatic  #45
741: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest2.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest2.class
Class name: RegressionTest2
Method name: test1063
Start line: 1562
End line: 0
Method source code: 
    public void test1063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1063");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str6 = helpFormatter0.getNewLine();
        helpFormatter0.setSyntaxPrefix(" ");
        java.lang.String str9 = helpFormatter0.defaultOptPrefix;
        java.util.Comparator comparator10 = helpFormatter0.getOptionComparator();
        int int11 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "--";
        java.lang.Class<?> wildcardClass14 = helpFormatter0.getClass();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\n" + "'", str6, "\n");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(comparator10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #160
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: ldc           #11
35: invokevirtual #16
38: aload_1
39: ldc           #11
41: putfield      #27
44: aload_1
45: getfield      #27
48: astore_2
49: aload_1
50: invokevirtual #28
53: astore_3
54: aload_1
55: ldc           #31
57: invokevirtual #53
60: aload_1
61: getfield      #30
64: astore        4
66: aload_1
67: invokevirtual #29
70: astore        5
72: aload_1
73: invokevirtual #10
76: istore        6
78: aload_1
79: ldc           #56
81: putfield      #12
84: aload_1
85: invokevirtual #40
88: astore        7
90: new           #18
93: dup
94: invokespecial #19
97: ldc           #20
99: invokevirtual #21
102: aload_2
103: invokevirtual #21
106: ldc           #41
108: invokevirtual #21
111: invokevirtual #24
114: aload_2
115: ldc           #11
117: invokestatic  #42
120: new           #18
123: dup
124: invokespecial #19
127: ldc           #20
129: invokevirtual #21
132: aload_3
133: invokevirtual #21
136: ldc           #43
138: invokevirtual #21
141: invokevirtual #24
144: aload_3
145: ldc           #44
147: invokestatic  #42
150: new           #18
153: dup
154: invokespecial #19
157: ldc           #20
159: invokevirtual #21
162: aload         4
164: invokevirtual #21
167: ldc           #41
169: invokevirtual #21
172: invokevirtual #24
175: aload         4
177: ldc           #11
179: invokestatic  #42
182: aload         5
184: invokestatic  #45
187: new           #18
190: dup
191: invokespecial #19
194: ldc           #20
196: invokevirtual #21
199: iload         6
201: invokevirtual #22
204: ldc           #23
206: invokevirtual #21
209: iconst_1
210: invokevirtual #22
213: ldc           #20
215: invokevirtual #21
218: invokevirtual #24
221: iload         6
223: iconst_1
224: if_icmpne     231
227: iconst_1
228: goto          232
231: iconst_0
232: invokestatic  #25
235: aload         7
237: invokestatic  #45
240: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest2.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest2.class
Class name: RegressionTest2
Method name: test1064
Start line: 1585
End line: 0
Method source code: 
    public void test1064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1064");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.defaultLongOptPrefix = "hi!";
        java.lang.String str3 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str4 = helpFormatter0.getLongOptPrefix();
        java.lang.String str5 = helpFormatter0.getNewLine();
        helpFormatter0.defaultWidth = 100;
        int int8 = helpFormatter0.getDescPadding();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!" + "'", str3, "hi!");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\n" + "'", str5, "\n");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 3 + "'", int8 == 3);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #161
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: ldc           #14
35: putfield      #27
38: aload_1
39: getfield      #27
42: astore_2
43: aload_1
44: invokevirtual #54
47: astore_3
48: aload_1
49: invokevirtual #28
52: astore        4
54: aload_1
55: bipush        100
57: putfield      #39
60: aload_1
61: invokevirtual #66
64: istore        5
66: new           #18
69: dup
70: invokespecial #19
73: ldc           #20
75: invokevirtual #21
78: aload_2
79: invokevirtual #21
82: ldc           #162
84: invokevirtual #21
87: invokevirtual #24
90: aload_2
91: ldc           #14
93: invokestatic  #42
96: new           #18
99: dup
100: invokespecial #19
103: ldc           #20
105: invokevirtual #21
108: aload_3
109: invokevirtual #21
112: ldc           #162
114: invokevirtual #21
117: invokevirtual #24
120: aload_3
121: ldc           #14
123: invokestatic  #42
126: new           #18
129: dup
130: invokespecial #19
133: ldc           #20
135: invokevirtual #21
138: aload         4
140: invokevirtual #21
143: ldc           #43
145: invokevirtual #21
148: invokevirtual #24
151: aload         4
153: ldc           #44
155: invokestatic  #42
158: new           #18
161: dup
162: invokespecial #19
165: ldc           #20
167: invokevirtual #21
170: iload         5
172: invokevirtual #22
175: ldc           #23
177: invokevirtual #21
180: iconst_3
181: invokevirtual #22
184: ldc           #20
186: invokevirtual #21
189: invokevirtual #24
192: iload         5
194: iconst_3
195: if_icmpne     202
198: iconst_1
199: goto          203
202: iconst_0
203: invokestatic  #25
206: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0001
Start line: 12
End line: 0
Method source code: 
    public void test0001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0001");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        org.apache.commons.cli.Options options5 = null;
        try {
            helpFormatter0.printHelp("usage: ", "", options5, "usage: ");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #6
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: ldc           #10
35: invokevirtual #11
38: aconst_null
39: astore_2
40: aload_1
41: ldc           #12
43: ldc           #10
45: aload_2
46: ldc           #12
48: invokevirtual #13
51: ldc           #14
53: invokestatic  #15
56: goto          60
59: astore_3
60: return
Exception table:
from    to  target type
40    56    59   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0002
Start line: 28
End line: 0
Method source code: 
    public void test0002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0002");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.io.PrintWriter printWriter1 = null;
        org.apache.commons.cli.Options options3 = null;
        try {
            helpFormatter0.printOptions(printWriter1, 3, options3, (int) (short) -1, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: null");
        } catch (java.lang.NegativeArraySizeException e) {
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #17
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aconst_null
33: astore_2
34: aconst_null
35: astore_3
36: aload_1
37: aload_2
38: iconst_3
39: aload_3
40: iconst_m1
41: iconst_1
42: invokevirtual #18
45: ldc           #19
47: invokestatic  #15
50: goto          55
53: astore        4
55: return
Exception table:
from    to  target type
36    50    53   Class java/lang/NegativeArraySizeException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0003
Start line: 44
End line: 0
Method source code: 
    public void test0003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0003");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        org.apache.commons.cli.Options options7 = null;
        try {
            helpFormatter0.printHelp((int) '4', "", " ", options7, "hi!", false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: cmdLineSyntax not provided");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #21
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #22
36: istore_2
37: aload_1
38: ldc           #10
40: putfield      #23
43: aconst_null
44: astore_3
45: aload_1
46: bipush        52
48: ldc           #10
50: ldc           #24
52: aload_3
53: ldc           #25
55: iconst_0
56: invokevirtual #26
59: ldc           #27
61: invokestatic  #15
64: goto          69
67: astore        4
69: new           #29
72: dup
73: invokespecial #30
76: ldc           #31
78: invokevirtual #32
81: iload_2
82: invokevirtual #33
85: ldc           #34
87: invokevirtual #32
90: iconst_1
91: invokevirtual #33
94: ldc           #31
96: invokevirtual #32
99: invokevirtual #35
102: iload_2
103: iconst_1
104: if_icmpne     111
107: iconst_1
108: goto          112
111: iconst_0
112: invokestatic  #36
115: return
Exception table:
from    to  target type
45    64    67   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0004
Start line: 62
End line: 0
Method source code: 
    public void test0004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0004");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        helpFormatter0.setSyntaxPrefix(" ");
        java.io.PrintWriter printWriter8 = null;
        org.apache.commons.cli.Options options12 = null;
        try {
            helpFormatter0.printHelp(printWriter8, (int) (byte) 1, "usage: ", "hi!", options12, (int) (short) 1, (int) ' ', "", true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #37
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #22
36: istore_2
37: aload_1
38: ldc           #10
40: putfield      #23
43: aload_1
44: bipush        10
46: invokevirtual #38
49: aload_1
50: ldc           #24
52: invokevirtual #39
55: aconst_null
56: astore_3
57: aconst_null
58: astore        4
60: aload_1
61: aload_3
62: iconst_1
63: ldc           #12
65: ldc           #25
67: aload         4
69: iconst_1
70: bipush        32
72: ldc           #10
74: iconst_1
75: invokevirtual #40
78: ldc           #14
80: invokestatic  #15
83: goto          88
86: astore        5
88: new           #29
91: dup
92: invokespecial #30
95: ldc           #31
97: invokevirtual #32
100: iload_2
101: invokevirtual #33
104: ldc           #34
106: invokevirtual #32
109: iconst_1
110: invokevirtual #33
113: ldc           #31
115: invokevirtual #32
118: invokevirtual #35
121: iload_2
122: iconst_1
123: if_icmpne     130
126: iconst_1
127: goto          131
130: iconst_0
131: invokestatic  #36
134: return
Exception table:
from    to  target type
60    83    86   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0005
Start line: 83
End line: 0
Method source code: 
    public void test0005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0005");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.io.PrintWriter printWriter2 = null;
        org.apache.commons.cli.Options options6 = null;
        try {
            helpFormatter0.printHelp(printWriter2, (int) '4', "", " ", options6, (int) ' ', (int) (short) 1, "");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: cmdLineSyntax not provided");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #41
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #22
36: istore_2
37: aconst_null
38: astore_3
39: aconst_null
40: astore        4
42: aload_1
43: aload_3
44: bipush        52
46: ldc           #10
48: ldc           #24
50: aload         4
52: bipush        32
54: iconst_1
55: ldc           #10
57: invokevirtual #42
60: ldc           #27
62: invokestatic  #15
65: goto          70
68: astore        5
70: new           #29
73: dup
74: invokespecial #30
77: ldc           #31
79: invokevirtual #32
82: iload_2
83: invokevirtual #33
86: ldc           #34
88: invokevirtual #32
91: iconst_1
92: invokevirtual #33
95: ldc           #31
97: invokevirtual #32
100: invokevirtual #35
103: iload_2
104: iconst_1
105: if_icmpne     112
108: iconst_1
109: goto          113
112: iconst_0
113: invokestatic  #36
116: return
Exception table:
from    to  target type
42    65    68   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0006
Start line: 101
End line: 0
Method source code: 
    public void test0006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0006");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        org.apache.commons.cli.Options options9 = null;
        try {
            helpFormatter0.printHelp((int) (byte) 10, "--", "--", options9, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #43
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #22
36: istore_2
37: aload_1
38: ldc           #10
40: putfield      #23
43: aload_1
44: bipush        10
46: invokevirtual #38
49: aconst_null
50: astore_3
51: aload_1
52: bipush        10
54: ldc           #44
56: ldc           #44
58: aload_3
59: ldc           #10
61: invokevirtual #45
64: ldc           #14
66: invokestatic  #15
69: goto          74
72: astore        4
74: new           #29
77: dup
78: invokespecial #30
81: ldc           #31
83: invokevirtual #32
86: iload_2
87: invokevirtual #33
90: ldc           #34
92: invokevirtual #32
95: iconst_1
96: invokevirtual #33
99: ldc           #31
101: invokevirtual #32
104: invokevirtual #35
107: iload_2
108: iconst_1
109: if_icmpne     116
112: iconst_1
113: goto          117
116: iconst_0
117: invokestatic  #36
120: return
Exception table:
from    to  target type
51    69    72   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0007
Start line: 120
End line: 0
Method source code: 
    public void test0007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0007");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.util.Comparator comparator1 = helpFormatter0.optionComparator;
        java.lang.String str2 = helpFormatter0.getLongOptPrefix();
        helpFormatter0.setLongOptPrefix("");
        org.apache.commons.cli.Options options6 = null;
        try {
            helpFormatter0.printHelp(" ", options6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(comparator1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "--" + "'", str2, "--");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #46
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: getfield      #47
36: astore_2
37: aload_1
38: invokevirtual #48
41: astore_3
42: aload_1
43: ldc           #10
45: invokevirtual #49
48: aconst_null
49: astore        4
51: aload_1
52: ldc           #24
54: aload         4
56: invokevirtual #50
59: ldc           #14
61: invokestatic  #15
64: goto          69
67: astore        5
69: aload_2
70: invokestatic  #51
73: new           #29
76: dup
77: invokespecial #30
80: ldc           #31
82: invokevirtual #32
85: aload_3
86: invokevirtual #32
89: ldc           #52
91: invokevirtual #32
94: invokevirtual #35
97: aload_3
98: ldc           #44
100: invokestatic  #53
103: return
Exception table:
from    to  target type
51    64    67   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0008
Start line: 140
End line: 0
Method source code: 
    public void test0008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0008");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.Class<?> wildcardClass5 = helpFormatter0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass5);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #54
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: ldc           #10
35: invokevirtual #11
38: aload_1
39: ldc           #10
41: putfield      #55
44: aload_1
45: invokevirtual #56
48: astore_2
49: aload_2
50: invokestatic  #51
53: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0009
Start line: 151
End line: 0
Method source code: 
    public void test0009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0009");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.io.PrintWriter printWriter2 = null;
        org.apache.commons.cli.Options options4 = null;
        try {
            helpFormatter0.printOptions(printWriter2, (int) (byte) 10, options4, (int) (byte) 100, 3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #57
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #22
36: istore_2
37: aconst_null
38: astore_3
39: aconst_null
40: astore        4
42: aload_1
43: aload_3
44: bipush        10
46: aload         4
48: bipush        100
50: iconst_3
51: invokevirtual #18
54: ldc           #14
56: invokestatic  #15
59: goto          64
62: astore        5
64: new           #29
67: dup
68: invokespecial #30
71: ldc           #31
73: invokevirtual #32
76: iload_2
77: invokevirtual #33
80: ldc           #34
82: invokevirtual #32
85: iconst_1
86: invokevirtual #33
89: ldc           #31
91: invokevirtual #32
94: invokevirtual #35
97: iload_2
98: iconst_1
99: if_icmpne     106
102: iconst_1
103: goto          107
106: iconst_0
107: invokestatic  #36
110: return
Exception table:
from    to  target type
42    59    62   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0010
Start line: 169
End line: 0
Method source code: 
    public void test0010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0010");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.util.Comparator comparator1 = helpFormatter0.optionComparator;
        java.lang.String str2 = helpFormatter0.getLongOptPrefix();
        helpFormatter0.setLongOptPrefix("");
        org.apache.commons.cli.Options options8 = null;
        try {
            helpFormatter0.printHelp(0, "", "", options8, " ", false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: cmdLineSyntax not provided");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(comparator1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "--" + "'", str2, "--");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #58
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: getfield      #47
36: astore_2
37: aload_1
38: invokevirtual #48
41: astore_3
42: aload_1
43: ldc           #10
45: invokevirtual #49
48: aconst_null
49: astore        4
51: aload_1
52: iconst_0
53: ldc           #10
55: ldc           #10
57: aload         4
59: ldc           #24
61: iconst_0
62: invokevirtual #26
65: ldc           #27
67: invokestatic  #15
70: goto          75
73: astore        5
75: aload_2
76: invokestatic  #51
79: new           #29
82: dup
83: invokespecial #30
86: ldc           #31
88: invokevirtual #32
91: aload_3
92: invokevirtual #32
95: ldc           #52
97: invokevirtual #32
100: invokevirtual #35
103: aload_3
104: ldc           #44
106: invokestatic  #53
109: return
Exception table:
from    to  target type
51    70    73   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0011
Start line: 189
End line: 0
Method source code: 
    public void test0011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0011");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.util.Comparator comparator1 = helpFormatter0.optionComparator;
        int int2 = helpFormatter0.getLeftPadding();
        int int3 = helpFormatter0.defaultLeftPad;
        java.io.PrintWriter printWriter4 = null;
        try {
            helpFormatter0.printWrapped(printWriter4, (int) ' ', 3, "--");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(comparator1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #59
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: getfield      #47
36: astore_2
37: aload_1
38: invokevirtual #22
41: istore_3
42: aload_1
43: getfield      #60
46: istore        4
48: aconst_null
49: astore        5
51: aload_1
52: aload         5
54: bipush        32
56: iconst_3
57: ldc           #44
59: invokevirtual #61
62: ldc           #14
64: invokestatic  #15
67: goto          72
70: astore        6
72: aload_2
73: invokestatic  #51
76: new           #29
79: dup
80: invokespecial #30
83: ldc           #31
85: invokevirtual #32
88: iload_3
89: invokevirtual #33
92: ldc           #34
94: invokevirtual #32
97: iconst_1
98: invokevirtual #33
101: ldc           #31
103: invokevirtual #32
106: invokevirtual #35
109: iload_3
110: iconst_1
111: if_icmpne     118
114: iconst_1
115: goto          119
118: iconst_0
119: invokestatic  #36
122: new           #29
125: dup
126: invokespecial #30
129: ldc           #31
131: invokevirtual #32
134: iload         4
136: invokevirtual #33
139: ldc           #34
141: invokevirtual #32
144: iconst_1
145: invokevirtual #33
148: ldc           #31
150: invokevirtual #32
153: invokevirtual #35
156: iload         4
158: iconst_1
159: if_icmpne     166
162: iconst_1
163: goto          167
166: iconst_0
167: invokestatic  #36
170: return
Exception table:
from    to  target type
51    67    70   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0012
Start line: 210
End line: 0
Method source code: 
    public void test0012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0012");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        java.lang.String str6 = helpFormatter0.rtrim("");
        org.apache.commons.cli.Options options10 = null;
        try {
            helpFormatter0.printHelp((int) (short) -1, "\n", "", options10, "hi!", false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #62
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #22
36: istore_2
37: aload_1
38: ldc           #10
40: putfield      #23
43: aload_1
44: getfield      #63
47: astore_3
48: aload_1
49: ldc           #10
51: invokevirtual #64
54: astore        4
56: aconst_null
57: astore        5
59: aload_1
60: iconst_m1
61: ldc           #65
63: ldc           #10
65: aload         5
67: ldc           #25
69: iconst_0
70: invokevirtual #26
73: ldc           #14
75: invokestatic  #15
78: goto          83
81: astore        6
83: new           #29
86: dup
87: invokespecial #30
90: ldc           #31
92: invokevirtual #32
95: iload_2
96: invokevirtual #33
99: ldc           #34
101: invokevirtual #32
104: iconst_1
105: invokevirtual #33
108: ldc           #31
110: invokevirtual #32
113: invokevirtual #35
116: iload_2
117: iconst_1
118: if_icmpne     125
121: iconst_1
122: goto          126
125: iconst_0
126: invokestatic  #36
129: new           #29
132: dup
133: invokespecial #30
136: ldc           #31
138: invokevirtual #32
141: aload_3
142: invokevirtual #32
145: ldc           #66
147: invokevirtual #32
150: invokevirtual #35
153: aload_3
154: ldc           #67
156: invokestatic  #53
159: new           #29
162: dup
163: invokespecial #30
166: ldc           #31
168: invokevirtual #32
171: aload         4
173: invokevirtual #32
176: ldc           #68
178: invokevirtual #32
181: invokevirtual #35
184: aload         4
186: ldc           #10
188: invokestatic  #53
191: return
Exception table:
from    to  target type
59    78    81   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0013
Start line: 232
End line: 0
Method source code: 
    public void test0013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0013");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        java.lang.StringBuffer stringBuffer3 = null;
        try {
            java.lang.StringBuffer stringBuffer7 = helpFormatter0.renderWrappedText(stringBuffer3, 3, (int) (short) 10, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #69
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: ldc           #10
35: invokevirtual #11
38: aconst_null
39: astore_2
40: aload_1
41: aload_2
42: iconst_3
43: bipush        10
45: ldc           #10
47: invokevirtual #70
50: astore_3
51: ldc           #14
53: invokestatic  #15
56: goto          60
59: astore_3
60: return
Exception table:
from    to  target type
40    56    59   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0014
Start line: 248
End line: 0
Method source code: 
    public void test0014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0014");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str6 = helpFormatter0.getNewLine();
        org.apache.commons.cli.Options options9 = null;
        try {
            helpFormatter0.printHelp("usage: ", "\n", options9, "", true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\n" + "'", str6, "\n");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #71
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: ldc           #10
35: invokevirtual #11
38: aload_1
39: ldc           #10
41: putfield      #55
44: aload_1
45: getfield      #55
48: astore_2
49: aload_1
50: invokevirtual #72
53: astore_3
54: aconst_null
55: astore        4
57: aload_1
58: ldc           #12
60: ldc           #65
62: aload         4
64: ldc           #10
66: iconst_1
67: invokevirtual #73
70: ldc           #14
72: invokestatic  #15
75: goto          80
78: astore        5
80: new           #29
83: dup
84: invokespecial #30
87: ldc           #31
89: invokevirtual #32
92: aload_2
93: invokevirtual #32
96: ldc           #68
98: invokevirtual #32
101: invokevirtual #35
104: aload_2
105: ldc           #10
107: invokestatic  #53
110: new           #29
113: dup
114: invokespecial #30
117: ldc           #31
119: invokevirtual #32
122: aload_3
123: invokevirtual #32
126: ldc           #74
128: invokevirtual #32
131: invokevirtual #35
134: aload_3
135: ldc           #65
137: invokestatic  #53
140: return
Exception table:
from    to  target type
57    75    78   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0015
Start line: 269
End line: 0
Method source code: 
    public void test0015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0015");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setLongOptPrefix(" ");
        helpFormatter0.defaultDescPad = (short) 10;
        java.lang.String str9 = helpFormatter0.defaultArgName;
        org.apache.commons.cli.Options options11 = null;
        try {
            helpFormatter0.printHelp("hi!", options11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "arg" + "'", str9, "arg");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #75
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #22
36: istore_2
37: aload_1
38: ldc           #10
40: putfield      #23
43: aload_1
44: getfield      #63
47: astore_3
48: aload_1
49: ldc           #24
51: invokevirtual #49
54: aload_1
55: bipush        10
57: putfield      #76
60: aload_1
61: getfield      #77
64: astore        4
66: aconst_null
67: astore        5
69: aload_1
70: ldc           #25
72: aload         5
74: invokevirtual #50
77: ldc           #14
79: invokestatic  #15
82: goto          87
85: astore        6
87: new           #29
90: dup
91: invokespecial #30
94: ldc           #31
96: invokevirtual #32
99: iload_2
100: invokevirtual #33
103: ldc           #34
105: invokevirtual #32
108: iconst_1
109: invokevirtual #33
112: ldc           #31
114: invokevirtual #32
117: invokevirtual #35
120: iload_2
121: iconst_1
122: if_icmpne     129
125: iconst_1
126: goto          130
129: iconst_0
130: invokestatic  #36
133: new           #29
136: dup
137: invokespecial #30
140: ldc           #31
142: invokevirtual #32
145: aload_3
146: invokevirtual #32
149: ldc           #66
151: invokevirtual #32
154: invokevirtual #35
157: aload_3
158: ldc           #67
160: invokestatic  #53
163: new           #29
166: dup
167: invokespecial #30
170: ldc           #31
172: invokevirtual #32
175: aload         4
177: invokevirtual #32
180: ldc           #78
182: invokevirtual #32
185: invokevirtual #35
188: aload         4
190: ldc           #79
192: invokestatic  #53
195: return
Exception table:
from    to  target type
69    82    85   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0016
Start line: 293
End line: 0
Method source code: 
    public void test0016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0016");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.util.Comparator comparator1 = helpFormatter0.optionComparator;
        java.io.PrintWriter printWriter2 = null;
        try {
            helpFormatter0.printWrapped(printWriter2, (int) (byte) 0, (int) (byte) -1, "\n");
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: null");
        } catch (java.lang.NegativeArraySizeException e) {
        }
        org.junit.Assert.assertNotNull(comparator1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #80
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: getfield      #47
36: astore_2
37: aconst_null
38: astore_3
39: aload_1
40: aload_3
41: iconst_0
42: iconst_m1
43: ldc           #65
45: invokevirtual #61
48: ldc           #19
50: invokestatic  #15
53: goto          58
56: astore        4
58: aload_2
59: invokestatic  #51
62: return
Exception table:
from    to  target type
39    53    56   Class java/lang/NegativeArraySizeException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0017
Start line: 310
End line: 0
Method source code: 
    public void test0017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0017");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        java.io.PrintWriter printWriter6 = null;
        try {
            helpFormatter0.printWrapped(printWriter6, (int) ' ', "arg");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #81
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #22
36: istore_2
37: aload_1
38: ldc           #10
40: putfield      #23
43: aload_1
44: bipush        10
46: invokevirtual #38
49: aconst_null
50: astore_3
51: aload_1
52: aload_3
53: bipush        32
55: ldc           #79
57: invokevirtual #82
60: ldc           #14
62: invokestatic  #15
65: goto          70
68: astore        4
70: new           #29
73: dup
74: invokespecial #30
77: ldc           #31
79: invokevirtual #32
82: iload_2
83: invokevirtual #33
86: ldc           #34
88: invokevirtual #32
91: iconst_1
92: invokevirtual #33
95: ldc           #31
97: invokevirtual #32
100: invokevirtual #35
103: iload_2
104: iconst_1
105: if_icmpne     112
108: iconst_1
109: goto          113
112: iconst_0
113: invokestatic  #36
116: return
Exception table:
from    to  target type
51    65    68   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0018
Start line: 329
End line: 0
Method source code: 
    public void test0018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0018");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str6 = helpFormatter0.getNewLine();
        java.io.PrintWriter printWriter7 = null;
        try {
            helpFormatter0.printWrapped(printWriter7, (int) (short) -1, (int) (short) -1, "--");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\n" + "'", str6, "\n");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #83
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: ldc           #10
35: invokevirtual #11
38: aload_1
39: ldc           #10
41: putfield      #55
44: aload_1
45: getfield      #55
48: astore_2
49: aload_1
50: invokevirtual #72
53: astore_3
54: aconst_null
55: astore        4
57: aload_1
58: aload         4
60: iconst_m1
61: iconst_m1
62: ldc           #44
64: invokevirtual #61
67: ldc           #14
69: invokestatic  #15
72: goto          77
75: astore        5
77: new           #29
80: dup
81: invokespecial #30
84: ldc           #31
86: invokevirtual #32
89: aload_2
90: invokevirtual #32
93: ldc           #68
95: invokevirtual #32
98: invokevirtual #35
101: aload_2
102: ldc           #10
104: invokestatic  #53
107: new           #29
110: dup
111: invokespecial #30
114: ldc           #31
116: invokevirtual #32
119: aload_3
120: invokevirtual #32
123: ldc           #74
125: invokevirtual #32
128: invokevirtual #35
131: aload_3
132: ldc           #65
134: invokestatic  #53
137: return
Exception table:
from    to  target type
57    72    75   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0019
Start line: 350
End line: 0
Method source code: 
    public void test0019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0019");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        java.io.PrintWriter printWriter6 = null;
        org.apache.commons.cli.Options options10 = null;
        try {
            helpFormatter0.printHelp(printWriter6, (int) ' ', "-", "arg", options10, 0, (int) (byte) -1, "\n", false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #84
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: ldc           #10
35: invokevirtual #11
38: aload_1
39: ldc           #10
41: putfield      #55
44: aload_1
45: getfield      #55
48: astore_2
49: aconst_null
50: astore_3
51: aconst_null
52: astore        4
54: aload_1
55: aload_3
56: bipush        32
58: ldc           #67
60: ldc           #79
62: aload         4
64: iconst_0
65: iconst_m1
66: ldc           #65
68: iconst_0
69: invokevirtual #40
72: ldc           #14
74: invokestatic  #15
77: goto          82
80: astore        5
82: new           #29
85: dup
86: invokespecial #30
89: ldc           #31
91: invokevirtual #32
94: aload_2
95: invokevirtual #32
98: ldc           #68
100: invokevirtual #32
103: invokevirtual #35
106: aload_2
107: ldc           #10
109: invokestatic  #53
112: return
Exception table:
from    to  target type
54    77    80   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0020
Start line: 370
End line: 0
Method source code: 
    public void test0020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0020");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        java.lang.String str6 = helpFormatter0.getLongOptSeparator();
        java.io.PrintWriter printWriter7 = null;
        try {
            helpFormatter0.printUsage(printWriter7, (int) (short) 100, "usage: ");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + " " + "'", str6, " ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #85
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #22
36: istore_2
37: aload_1
38: ldc           #10
40: putfield      #23
43: aload_1
44: bipush        10
46: invokevirtual #38
49: aload_1
50: invokevirtual #86
53: astore_3
54: aconst_null
55: astore        4
57: aload_1
58: aload         4
60: bipush        100
62: ldc           #12
64: invokevirtual #87
67: ldc           #14
69: invokestatic  #15
72: goto          77
75: astore        5
77: new           #29
80: dup
81: invokespecial #30
84: ldc           #31
86: invokevirtual #32
89: iload_2
90: invokevirtual #33
93: ldc           #34
95: invokevirtual #32
98: iconst_1
99: invokevirtual #33
102: ldc           #31
104: invokevirtual #32
107: invokevirtual #35
110: iload_2
111: iconst_1
112: if_icmpne     119
115: iconst_1
116: goto          120
119: iconst_0
120: invokestatic  #36
123: new           #29
126: dup
127: invokespecial #30
130: ldc           #31
132: invokevirtual #32
135: aload_3
136: invokevirtual #32
139: ldc           #88
141: invokevirtual #32
144: invokevirtual #35
147: aload_3
148: ldc           #24
150: invokestatic  #53
153: return
Exception table:
from    to  target type
57    72    75   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0021
Start line: 391
End line: 0
Method source code: 
    public void test0021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0021");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        java.io.PrintWriter printWriter3 = null;
        org.apache.commons.cli.Options options7 = null;
        try {
            helpFormatter0.printHelp(printWriter3, (int) (byte) 100, "\n", "\n", options7, (int) (byte) 0, (int) (byte) 100, "usage: ", false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #89
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: ldc           #10
35: invokevirtual #11
38: aconst_null
39: astore_2
40: aconst_null
41: astore_3
42: aload_1
43: aload_2
44: bipush        100
46: ldc           #65
48: ldc           #65
50: aload_3
51: iconst_0
52: bipush        100
54: ldc           #12
56: iconst_0
57: invokevirtual #40
60: ldc           #14
62: invokestatic  #15
65: goto          70
68: astore        4
70: return
Exception table:
from    to  target type
42    65    68   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0022
Start line: 408
End line: 0
Method source code: 
    public void test0022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0022");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setLongOptPrefix(" ");
        helpFormatter0.defaultDescPad = (short) 10;
        helpFormatter0.setLongOptSeparator("");
        org.apache.commons.cli.Options options13 = null;
        try {
            helpFormatter0.printHelp("\n", "", options13, " ");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #90
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #22
36: istore_2
37: aload_1
38: ldc           #10
40: putfield      #23
43: aload_1
44: getfield      #63
47: astore_3
48: aload_1
49: ldc           #24
51: invokevirtual #49
54: aload_1
55: bipush        10
57: putfield      #76
60: aload_1
61: ldc           #10
63: invokevirtual #91
66: aconst_null
67: astore        4
69: aload_1
70: ldc           #65
72: ldc           #10
74: aload         4
76: ldc           #24
78: invokevirtual #13
81: ldc           #14
83: invokestatic  #15
86: goto          91
89: astore        5
91: new           #29
94: dup
95: invokespecial #30
98: ldc           #31
100: invokevirtual #32
103: iload_2
104: invokevirtual #33
107: ldc           #34
109: invokevirtual #32
112: iconst_1
113: invokevirtual #33
116: ldc           #31
118: invokevirtual #32
121: invokevirtual #35
124: iload_2
125: iconst_1
126: if_icmpne     133
129: iconst_1
130: goto          134
133: iconst_0
134: invokestatic  #36
137: new           #29
140: dup
141: invokespecial #30
144: ldc           #31
146: invokevirtual #32
149: aload_3
150: invokevirtual #32
153: ldc           #66
155: invokevirtual #32
158: invokevirtual #35
161: aload_3
162: ldc           #67
164: invokestatic  #53
167: return
Exception table:
from    to  target type
69    86    89   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0023
Start line: 431
End line: 0
Method source code: 
    public void test0023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0023");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        helpFormatter0.defaultDescPad = 0;
        try {
            int int11 = helpFormatter0.findWrapPos("", (int) (short) 0, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #92
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: ldc           #10
35: invokevirtual #11
38: aload_1
39: ldc           #10
41: putfield      #55
44: aload_1
45: getfield      #55
48: astore_2
49: aload_1
50: iconst_0
51: putfield      #76
54: aload_1
55: ldc           #10
57: iconst_0
58: iconst_m1
59: invokevirtual #93
62: istore_3
63: ldc           #94
65: invokestatic  #15
68: goto          72
71: astore_3
72: new           #29
75: dup
76: invokespecial #30
79: ldc           #31
81: invokevirtual #32
84: aload_2
85: invokevirtual #32
88: ldc           #68
90: invokevirtual #32
93: invokevirtual #35
96: aload_2
97: ldc           #10
99: invokestatic  #53
102: return
Exception table:
from    to  target type
54    68    71   Class java/lang/StringIndexOutOfBoundsException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0024
Start line: 450
End line: 0
Method source code: 
    public void test0024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0024");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.lang.String str1 = helpFormatter0.defaultSyntaxPrefix;
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.cli.Options options4 = null;
        try {
            java.lang.StringBuffer stringBuffer7 = helpFormatter0.renderOptions(stringBuffer2, 1, options4, (int) (short) -1, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: null");
        } catch (java.lang.NegativeArraySizeException e) {
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "usage: " + "'", str1, "usage: ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #96
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: getfield      #97
36: astore_2
37: aconst_null
38: astore_3
39: aconst_null
40: astore        4
42: aload_1
43: aload_3
44: iconst_1
45: aload         4
47: iconst_m1
48: iconst_1
49: invokevirtual #98
52: astore        5
54: ldc           #19
56: invokestatic  #15
59: goto          64
62: astore        5
64: new           #29
67: dup
68: invokespecial #30
71: ldc           #31
73: invokevirtual #32
76: aload_2
77: invokevirtual #32
80: ldc           #99
82: invokevirtual #32
85: invokevirtual #35
88: aload_2
89: ldc           #12
91: invokestatic  #53
94: return
Exception table:
from    to  target type
42    59    62   Class java/lang/NegativeArraySizeException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0025
Start line: 468
End line: 0
Method source code: 
    public void test0025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0025");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        java.lang.String str6 = helpFormatter0.getLongOptSeparator();
        java.lang.String str7 = helpFormatter0.getLongOptSeparator();
        java.lang.String str8 = helpFormatter0.defaultArgName;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + " " + "'", str6, " ");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + " " + "'", str7, " ");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "arg" + "'", str8, "arg");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #100
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #22
36: istore_2
37: aload_1
38: ldc           #10
40: putfield      #23
43: aload_1
44: bipush        10
46: invokevirtual #38
49: aload_1
50: invokevirtual #86
53: astore_3
54: aload_1
55: invokevirtual #86
58: astore        4
60: aload_1
61: getfield      #77
64: astore        5
66: new           #29
69: dup
70: invokespecial #30
73: ldc           #31
75: invokevirtual #32
78: iload_2
79: invokevirtual #33
82: ldc           #34
84: invokevirtual #32
87: iconst_1
88: invokevirtual #33
91: ldc           #31
93: invokevirtual #32
96: invokevirtual #35
99: iload_2
100: iconst_1
101: if_icmpne     108
104: iconst_1
105: goto          109
108: iconst_0
109: invokestatic  #36
112: new           #29
115: dup
116: invokespecial #30
119: ldc           #31
121: invokevirtual #32
124: aload_3
125: invokevirtual #32
128: ldc           #88
130: invokevirtual #32
133: invokevirtual #35
136: aload_3
137: ldc           #24
139: invokestatic  #53
142: new           #29
145: dup
146: invokespecial #30
149: ldc           #31
151: invokevirtual #32
154: aload         4
156: invokevirtual #32
159: ldc           #88
161: invokevirtual #32
164: invokevirtual #35
167: aload         4
169: ldc           #24
171: invokestatic  #53
174: new           #29
177: dup
178: invokespecial #30
181: ldc           #31
183: invokevirtual #32
186: aload         5
188: invokevirtual #32
191: ldc           #78
193: invokevirtual #32
196: invokevirtual #35
199: aload         5
201: ldc           #79
203: invokestatic  #53
206: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0026
Start line: 485
End line: 0
Method source code: 
    public void test0026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0026");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.lang.String str1 = helpFormatter0.getSyntaxPrefix();
        org.apache.commons.cli.Options options5 = null;
        try {
            helpFormatter0.printHelp((int) 'a', "usage: ", "", options5, "\n", true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "usage: " + "'", str1, "usage: ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #101
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #102
36: astore_2
37: aconst_null
38: astore_3
39: aload_1
40: bipush        97
42: ldc           #12
44: ldc           #10
46: aload_3
47: ldc           #65
49: iconst_1
50: invokevirtual #26
53: ldc           #14
55: invokestatic  #15
58: goto          63
61: astore        4
63: new           #29
66: dup
67: invokespecial #30
70: ldc           #31
72: invokevirtual #32
75: aload_2
76: invokevirtual #32
79: ldc           #99
81: invokevirtual #32
84: invokevirtual #35
87: aload_2
88: ldc           #12
90: invokestatic  #53
93: return
Exception table:
from    to  target type
39    58    61   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0027
Start line: 502
End line: 0
Method source code: 
    public void test0027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0027");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.getArgName();
        helpFormatter0.defaultNewLine = "\n";
        java.lang.StringBuffer stringBuffer5 = null;
        org.apache.commons.cli.Options options7 = null;
        try {
            java.lang.StringBuffer stringBuffer10 = helpFormatter0.renderOptions(stringBuffer5, 74, options7, 3, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: null");
        } catch (java.lang.NegativeArraySizeException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "arg" + "'", str2, "arg");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #103
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #22
36: istore_2
37: aload_1
38: invokevirtual #104
41: astore_3
42: aload_1
43: ldc           #65
45: putfield      #23
48: aconst_null
49: astore        4
51: aconst_null
52: astore        5
54: aload_1
55: aload         4
57: bipush        74
59: aload         5
61: iconst_3
62: iconst_m1
63: invokevirtual #98
66: astore        6
68: ldc           #19
70: invokestatic  #15
73: goto          78
76: astore        6
78: new           #29
81: dup
82: invokespecial #30
85: ldc           #31
87: invokevirtual #32
90: iload_2
91: invokevirtual #33
94: ldc           #34
96: invokevirtual #32
99: iconst_1
100: invokevirtual #33
103: ldc           #31
105: invokevirtual #32
108: invokevirtual #35
111: iload_2
112: iconst_1
113: if_icmpne     120
116: iconst_1
117: goto          121
120: iconst_0
121: invokestatic  #36
124: new           #29
127: dup
128: invokespecial #30
131: ldc           #31
133: invokevirtual #32
136: aload_3
137: invokevirtual #32
140: ldc           #78
142: invokevirtual #32
145: invokevirtual #35
148: aload_3
149: ldc           #79
151: invokestatic  #53
154: return
Exception table:
from    to  target type
54    73    76   Class java/lang/NegativeArraySizeException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0028
Start line: 523
End line: 0
Method source code: 
    public void test0028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0028");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str6 = helpFormatter0.getNewLine();
        java.util.Comparator comparator7 = helpFormatter0.getOptionComparator();
        java.lang.Class<?> wildcardClass8 = comparator7.getClass();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\n" + "'", str6, "\n");
        org.junit.Assert.assertNotNull(comparator7);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #105
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: ldc           #10
35: invokevirtual #11
38: aload_1
39: ldc           #10
41: putfield      #55
44: aload_1
45: getfield      #55
48: astore_2
49: aload_1
50: invokevirtual #72
53: astore_3
54: aload_1
55: invokevirtual #106
58: astore        4
60: aload         4
62: invokevirtual #56
65: astore        5
67: new           #29
70: dup
71: invokespecial #30
74: ldc           #31
76: invokevirtual #32
79: aload_2
80: invokevirtual #32
83: ldc           #68
85: invokevirtual #32
88: invokevirtual #35
91: aload_2
92: ldc           #10
94: invokestatic  #53
97: new           #29
100: dup
101: invokespecial #30
104: ldc           #31
106: invokevirtual #32
109: aload_3
110: invokevirtual #32
113: ldc           #74
115: invokevirtual #32
118: invokevirtual #35
121: aload_3
122: ldc           #65
124: invokestatic  #53
127: aload         4
129: invokestatic  #51
132: aload         5
134: invokestatic  #51
137: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0029
Start line: 540
End line: 0
Method source code: 
    public void test0029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0029");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        helpFormatter0.setSyntaxPrefix(" ");
        java.util.Comparator comparator8 = helpFormatter0.getOptionComparator();
        java.lang.String str10 = helpFormatter0.createPadding(1);
        org.apache.commons.cli.Options options12 = null;
        try {
            helpFormatter0.printHelp("", options12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: cmdLineSyntax not provided");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(comparator8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + " " + "'", str10, " ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #107
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #22
36: istore_2
37: aload_1
38: ldc           #10
40: putfield      #23
43: aload_1
44: bipush        10
46: invokevirtual #38
49: aload_1
50: ldc           #24
52: invokevirtual #39
55: aload_1
56: invokevirtual #106
59: astore_3
60: aload_1
61: iconst_1
62: invokevirtual #108
65: astore        4
67: aconst_null
68: astore        5
70: aload_1
71: ldc           #10
73: aload         5
75: invokevirtual #50
78: ldc           #27
80: invokestatic  #15
83: goto          88
86: astore        6
88: new           #29
91: dup
92: invokespecial #30
95: ldc           #31
97: invokevirtual #32
100: iload_2
101: invokevirtual #33
104: ldc           #34
106: invokevirtual #32
109: iconst_1
110: invokevirtual #33
113: ldc           #31
115: invokevirtual #32
118: invokevirtual #35
121: iload_2
122: iconst_1
123: if_icmpne     130
126: iconst_1
127: goto          131
130: iconst_0
131: invokestatic  #36
134: aload_3
135: invokestatic  #51
138: new           #29
141: dup
142: invokespecial #30
145: ldc           #31
147: invokevirtual #32
150: aload         4
152: invokevirtual #32
155: ldc           #88
157: invokevirtual #32
160: invokevirtual #35
163: aload         4
165: ldc           #24
167: invokestatic  #53
170: return
Exception table:
from    to  target type
70    83    86   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0030
Start line: 564
End line: 0
Method source code: 
    public void test0030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0030");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        int int4 = helpFormatter0.defaultWidth;
        java.lang.StringBuffer stringBuffer5 = null;
        org.apache.commons.cli.Options options7 = null;
        try {
            java.lang.StringBuffer stringBuffer10 = helpFormatter0.renderOptions(stringBuffer5, 0, options7, (int) '#', (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: null");
        } catch (java.lang.NegativeArraySizeException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 74 + "'", int4 == 74);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #109
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #22
36: istore_2
37: aload_1
38: ldc           #10
40: putfield      #23
43: aload_1
44: getfield      #110
47: istore_3
48: aconst_null
49: astore        4
51: aconst_null
52: astore        5
54: aload_1
55: aload         4
57: iconst_0
58: aload         5
60: bipush        35
62: iconst_m1
63: invokevirtual #98
66: astore        6
68: ldc           #19
70: invokestatic  #15
73: goto          78
76: astore        6
78: new           #29
81: dup
82: invokespecial #30
85: ldc           #31
87: invokevirtual #32
90: iload_2
91: invokevirtual #33
94: ldc           #34
96: invokevirtual #32
99: iconst_1
100: invokevirtual #33
103: ldc           #31
105: invokevirtual #32
108: invokevirtual #35
111: iload_2
112: iconst_1
113: if_icmpne     120
116: iconst_1
117: goto          121
120: iconst_0
121: invokestatic  #36
124: new           #29
127: dup
128: invokespecial #30
131: ldc           #31
133: invokevirtual #32
136: iload_3
137: invokevirtual #33
140: ldc           #34
142: invokevirtual #32
145: bipush        74
147: invokevirtual #33
150: ldc           #31
152: invokevirtual #32
155: invokevirtual #35
158: iload_3
159: bipush        74
161: if_icmpne     168
164: iconst_1
165: goto          169
168: iconst_0
169: invokestatic  #36
172: return
Exception table:
from    to  target type
54    73    76   Class java/lang/NegativeArraySizeException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0031
Start line: 585
End line: 0
Method source code: 
    public void test0031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0031");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setLongOptPrefix(" ");
        helpFormatter0.defaultDescPad = (short) 10;
        java.lang.String str9 = helpFormatter0.defaultArgName;
        helpFormatter0.setSyntaxPrefix("");
        java.lang.Class<?> wildcardClass12 = helpFormatter0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "arg" + "'", str9, "arg");
        org.junit.Assert.assertNotNull(wildcardClass12);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #111
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #22
36: istore_2
37: aload_1
38: ldc           #10
40: putfield      #23
43: aload_1
44: getfield      #63
47: astore_3
48: aload_1
49: ldc           #24
51: invokevirtual #49
54: aload_1
55: bipush        10
57: putfield      #76
60: aload_1
61: getfield      #77
64: astore        4
66: aload_1
67: ldc           #10
69: invokevirtual #39
72: aload_1
73: invokevirtual #56
76: astore        5
78: new           #29
81: dup
82: invokespecial #30
85: ldc           #31
87: invokevirtual #32
90: iload_2
91: invokevirtual #33
94: ldc           #34
96: invokevirtual #32
99: iconst_1
100: invokevirtual #33
103: ldc           #31
105: invokevirtual #32
108: invokevirtual #35
111: iload_2
112: iconst_1
113: if_icmpne     120
116: iconst_1
117: goto          121
120: iconst_0
121: invokestatic  #36
124: new           #29
127: dup
128: invokespecial #30
131: ldc           #31
133: invokevirtual #32
136: aload_3
137: invokevirtual #32
140: ldc           #66
142: invokevirtual #32
145: invokevirtual #35
148: aload_3
149: ldc           #67
151: invokestatic  #53
154: new           #29
157: dup
158: invokespecial #30
161: ldc           #31
163: invokevirtual #32
166: aload         4
168: invokevirtual #32
171: ldc           #78
173: invokevirtual #32
176: invokevirtual #35
179: aload         4
181: ldc           #79
183: invokestatic  #53
186: aload         5
188: invokestatic  #51
191: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0032
Start line: 604
End line: 0
Method source code: 
    public void test0032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0032");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        org.apache.commons.cli.Options options7 = null;
        try {
            helpFormatter0.printHelp("", options7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: cmdLineSyntax not provided");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "--" + "'", str5, "--");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #112
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #22
36: istore_2
37: aload_1
38: ldc           #10
40: putfield      #23
43: aload_1
44: getfield      #63
47: astore_3
48: aload_1
49: getfield      #55
52: astore        4
54: aconst_null
55: astore        5
57: aload_1
58: ldc           #10
60: aload         5
62: invokevirtual #50
65: ldc           #27
67: invokestatic  #15
70: goto          75
73: astore        6
75: new           #29
78: dup
79: invokespecial #30
82: ldc           #31
84: invokevirtual #32
87: iload_2
88: invokevirtual #33
91: ldc           #34
93: invokevirtual #32
96: iconst_1
97: invokevirtual #33
100: ldc           #31
102: invokevirtual #32
105: invokevirtual #35
108: iload_2
109: iconst_1
110: if_icmpne     117
113: iconst_1
114: goto          118
117: iconst_0
118: invokestatic  #36
121: new           #29
124: dup
125: invokespecial #30
128: ldc           #31
130: invokevirtual #32
133: aload_3
134: invokevirtual #32
137: ldc           #66
139: invokevirtual #32
142: invokevirtual #35
145: aload_3
146: ldc           #67
148: invokestatic  #53
151: new           #29
154: dup
155: invokespecial #30
158: ldc           #31
160: invokevirtual #32
163: aload         4
165: invokevirtual #32
168: ldc           #52
170: invokevirtual #32
173: invokevirtual #35
176: aload         4
178: ldc           #44
180: invokestatic  #53
183: return
Exception table:
from    to  target type
57    70    73   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0033
Start line: 626
End line: 0
Method source code: 
    public void test0033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0033");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setLongOptPrefix(" ");
        helpFormatter0.defaultDescPad = (short) 10;
        java.lang.String str9 = helpFormatter0.defaultArgName;
        org.apache.commons.cli.Options options13 = null;
        try {
            helpFormatter0.printHelp((int) (short) 10, "          ", "          ", options13, "-");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "arg" + "'", str9, "arg");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #113
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #22
36: istore_2
37: aload_1
38: ldc           #10
40: putfield      #23
43: aload_1
44: getfield      #63
47: astore_3
48: aload_1
49: ldc           #24
51: invokevirtual #49
54: aload_1
55: bipush        10
57: putfield      #76
60: aload_1
61: getfield      #77
64: astore        4
66: aconst_null
67: astore        5
69: aload_1
70: bipush        10
72: ldc           #114
74: ldc           #114
76: aload         5
78: ldc           #67
80: invokevirtual #45
83: ldc           #14
85: invokestatic  #15
88: goto          93
91: astore        6
93: new           #29
96: dup
97: invokespecial #30
100: ldc           #31
102: invokevirtual #32
105: iload_2
106: invokevirtual #33
109: ldc           #34
111: invokevirtual #32
114: iconst_1
115: invokevirtual #33
118: ldc           #31
120: invokevirtual #32
123: invokevirtual #35
126: iload_2
127: iconst_1
128: if_icmpne     135
131: iconst_1
132: goto          136
135: iconst_0
136: invokestatic  #36
139: new           #29
142: dup
143: invokespecial #30
146: ldc           #31
148: invokevirtual #32
151: aload_3
152: invokevirtual #32
155: ldc           #66
157: invokevirtual #32
160: invokevirtual #35
163: aload_3
164: ldc           #67
166: invokestatic  #53
169: new           #29
172: dup
173: invokespecial #30
176: ldc           #31
178: invokevirtual #32
181: aload         4
183: invokevirtual #32
186: ldc           #78
188: invokevirtual #32
191: invokevirtual #35
194: aload         4
196: ldc           #79
198: invokestatic  #53
201: return
Exception table:
from    to  target type
69    88    91   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0034
Start line: 650
End line: 0
Method source code: 
    public void test0034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0034");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        java.lang.String str6 = helpFormatter0.rtrim("");
        int int10 = helpFormatter0.findWrapPos(" ", (int) (byte) 10, (int) (short) 10);
        java.io.PrintWriter printWriter11 = null;
        org.apache.commons.cli.Options options13 = null;
        try {
            helpFormatter0.printOptions(printWriter11, (-1), options13, 3, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #115
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #22
36: istore_2
37: aload_1
38: ldc           #10
40: putfield      #23
43: aload_1
44: getfield      #63
47: astore_3
48: aload_1
49: ldc           #10
51: invokevirtual #64
54: astore        4
56: aload_1
57: ldc           #24
59: bipush        10
61: bipush        10
63: invokevirtual #93
66: istore        5
68: aconst_null
69: astore        6
71: aconst_null
72: astore        7
74: aload_1
75: aload         6
77: iconst_m1
78: aload         7
80: iconst_3
81: bipush        52
83: invokevirtual #18
86: ldc           #14
88: invokestatic  #15
91: goto          96
94: astore        8
96: new           #29
99: dup
100: invokespecial #30
103: ldc           #31
105: invokevirtual #32
108: iload_2
109: invokevirtual #33
112: ldc           #34
114: invokevirtual #32
117: iconst_1
118: invokevirtual #33
121: ldc           #31
123: invokevirtual #32
126: invokevirtual #35
129: iload_2
130: iconst_1
131: if_icmpne     138
134: iconst_1
135: goto          139
138: iconst_0
139: invokestatic  #36
142: new           #29
145: dup
146: invokespecial #30
149: ldc           #31
151: invokevirtual #32
154: aload_3
155: invokevirtual #32
158: ldc           #66
160: invokevirtual #32
163: invokevirtual #35
166: aload_3
167: ldc           #67
169: invokestatic  #53
172: new           #29
175: dup
176: invokespecial #30
179: ldc           #31
181: invokevirtual #32
184: aload         4
186: invokevirtual #32
189: ldc           #68
191: invokevirtual #32
194: invokevirtual #35
197: aload         4
199: ldc           #10
201: invokestatic  #53
204: new           #29
207: dup
208: invokespecial #30
211: ldc           #31
213: invokevirtual #32
216: iload         5
218: invokevirtual #33
221: ldc           #34
223: invokevirtual #32
226: iconst_m1
227: invokevirtual #33
230: ldc           #31
232: invokevirtual #32
235: invokevirtual #35
238: iload         5
240: iconst_m1
241: if_icmpne     248
244: iconst_1
245: goto          249
248: iconst_0
249: invokestatic  #36
252: return
Exception table:
from    to  target type
74    91    94   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0035
Start line: 675
End line: 0
Method source code: 
    public void test0035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0035");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setLongOptPrefix(" ");
        helpFormatter0.defaultDescPad = (short) 10;
        helpFormatter0.setLongOptSeparator("");
        helpFormatter0.defaultLongOptPrefix = "--";
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #116
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #22
36: istore_2
37: aload_1
38: ldc           #10
40: putfield      #23
43: aload_1
44: getfield      #63
47: astore_3
48: aload_1
49: ldc           #24
51: invokevirtual #49
54: aload_1
55: bipush        10
57: putfield      #76
60: aload_1
61: ldc           #10
63: invokevirtual #91
66: aload_1
67: ldc           #44
69: putfield      #55
72: new           #29
75: dup
76: invokespecial #30
79: ldc           #31
81: invokevirtual #32
84: iload_2
85: invokevirtual #33
88: ldc           #34
90: invokevirtual #32
93: iconst_1
94: invokevirtual #33
97: ldc           #31
99: invokevirtual #32
102: invokevirtual #35
105: iload_2
106: iconst_1
107: if_icmpne     114
110: iconst_1
111: goto          115
114: iconst_0
115: invokestatic  #36
118: new           #29
121: dup
122: invokespecial #30
125: ldc           #31
127: invokevirtual #32
130: aload_3
131: invokevirtual #32
134: ldc           #66
136: invokevirtual #32
139: invokevirtual #35
142: aload_3
143: ldc           #67
145: invokestatic  #53
148: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0036
Start line: 691
End line: 0
Method source code: 
    public void test0036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0036");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        java.lang.String str6 = helpFormatter0.rtrim("");
        int int7 = helpFormatter0.getDescPadding();
        org.apache.commons.cli.Options options10 = null;
        try {
            helpFormatter0.printHelp("arg", "--", options10, "arg");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 3 + "'", int7 == 3);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #117
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #22
36: istore_2
37: aload_1
38: ldc           #10
40: putfield      #23
43: aload_1
44: getfield      #63
47: astore_3
48: aload_1
49: ldc           #10
51: invokevirtual #64
54: astore        4
56: aload_1
57: invokevirtual #118
60: istore        5
62: aconst_null
63: astore        6
65: aload_1
66: ldc           #79
68: ldc           #44
70: aload         6
72: ldc           #79
74: invokevirtual #13
77: ldc           #14
79: invokestatic  #15
82: goto          87
85: astore        7
87: new           #29
90: dup
91: invokespecial #30
94: ldc           #31
96: invokevirtual #32
99: iload_2
100: invokevirtual #33
103: ldc           #34
105: invokevirtual #32
108: iconst_1
109: invokevirtual #33
112: ldc           #31
114: invokevirtual #32
117: invokevirtual #35
120: iload_2
121: iconst_1
122: if_icmpne     129
125: iconst_1
126: goto          130
129: iconst_0
130: invokestatic  #36
133: new           #29
136: dup
137: invokespecial #30
140: ldc           #31
142: invokevirtual #32
145: aload_3
146: invokevirtual #32
149: ldc           #66
151: invokevirtual #32
154: invokevirtual #35
157: aload_3
158: ldc           #67
160: invokestatic  #53
163: new           #29
166: dup
167: invokespecial #30
170: ldc           #31
172: invokevirtual #32
175: aload         4
177: invokevirtual #32
180: ldc           #68
182: invokevirtual #32
185: invokevirtual #35
188: aload         4
190: ldc           #10
192: invokestatic  #53
195: new           #29
198: dup
199: invokespecial #30
202: ldc           #31
204: invokevirtual #32
207: iload         5
209: invokevirtual #33
212: ldc           #34
214: invokevirtual #32
217: iconst_3
218: invokevirtual #33
221: ldc           #31
223: invokevirtual #32
226: invokevirtual #35
229: iload         5
231: iconst_3
232: if_icmpne     239
235: iconst_1
236: goto          240
239: iconst_0
240: invokestatic  #36
243: return
Exception table:
from    to  target type
65    82    85   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0037
Start line: 715
End line: 0
Method source code: 
    public void test0037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0037");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setLongOptPrefix(" ");
        helpFormatter0.defaultDescPad = (short) 10;
        java.lang.String str9 = helpFormatter0.defaultArgName;
        org.apache.commons.cli.Options options12 = null;
        try {
            helpFormatter0.printHelp("--", "-", options12, "\n");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "arg" + "'", str9, "arg");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #119
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #22
36: istore_2
37: aload_1
38: ldc           #10
40: putfield      #23
43: aload_1
44: getfield      #63
47: astore_3
48: aload_1
49: ldc           #24
51: invokevirtual #49
54: aload_1
55: bipush        10
57: putfield      #76
60: aload_1
61: getfield      #77
64: astore        4
66: aconst_null
67: astore        5
69: aload_1
70: ldc           #44
72: ldc           #67
74: aload         5
76: ldc           #65
78: invokevirtual #13
81: ldc           #14
83: invokestatic  #15
86: goto          91
89: astore        6
91: new           #29
94: dup
95: invokespecial #30
98: ldc           #31
100: invokevirtual #32
103: iload_2
104: invokevirtual #33
107: ldc           #34
109: invokevirtual #32
112: iconst_1
113: invokevirtual #33
116: ldc           #31
118: invokevirtual #32
121: invokevirtual #35
124: iload_2
125: iconst_1
126: if_icmpne     133
129: iconst_1
130: goto          134
133: iconst_0
134: invokestatic  #36
137: new           #29
140: dup
141: invokespecial #30
144: ldc           #31
146: invokevirtual #32
149: aload_3
150: invokevirtual #32
153: ldc           #66
155: invokevirtual #32
158: invokevirtual #35
161: aload_3
162: ldc           #67
164: invokestatic  #53
167: new           #29
170: dup
171: invokespecial #30
174: ldc           #31
176: invokevirtual #32
179: aload         4
181: invokevirtual #32
184: ldc           #78
186: invokevirtual #32
189: invokevirtual #35
192: aload         4
194: ldc           #79
196: invokestatic  #53
199: return
Exception table:
from    to  target type
69    86    89   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0038
Start line: 739
End line: 0
Method source code: 
    public void test0038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0038");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        int int6 = helpFormatter0.getLeftPadding();
        org.apache.commons.cli.Options options9 = null;
        try {
            helpFormatter0.printHelp("-", "-", options9, "arg");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #120
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: ldc           #10
35: invokevirtual #11
38: aload_1
39: ldc           #10
41: putfield      #55
44: aload_1
45: getfield      #55
48: astore_2
49: aload_1
50: invokevirtual #22
53: istore_3
54: aconst_null
55: astore        4
57: aload_1
58: ldc           #67
60: ldc           #67
62: aload         4
64: ldc           #79
66: invokevirtual #13
69: ldc           #14
71: invokestatic  #15
74: goto          79
77: astore        5
79: new           #29
82: dup
83: invokespecial #30
86: ldc           #31
88: invokevirtual #32
91: aload_2
92: invokevirtual #32
95: ldc           #68
97: invokevirtual #32
100: invokevirtual #35
103: aload_2
104: ldc           #10
106: invokestatic  #53
109: new           #29
112: dup
113: invokespecial #30
116: ldc           #31
118: invokevirtual #32
121: iload_3
122: invokevirtual #33
125: ldc           #34
127: invokevirtual #32
130: iconst_1
131: invokevirtual #33
134: ldc           #31
136: invokevirtual #32
139: invokevirtual #35
142: iload_3
143: iconst_1
144: if_icmpne     151
147: iconst_1
148: goto          152
151: iconst_0
152: invokestatic  #36
155: return
Exception table:
from    to  target type
57    74    77   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0039
Start line: 760
End line: 0
Method source code: 
    public void test0039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0039");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        java.lang.String str6 = helpFormatter0.getLongOptSeparator();
        org.apache.commons.cli.Options options9 = null;
        try {
            helpFormatter0.printHelp("-", "", options9, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + " " + "'", str6, " ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #121
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #22
36: istore_2
37: aload_1
38: ldc           #10
40: putfield      #23
43: aload_1
44: bipush        10
46: invokevirtual #38
49: aload_1
50: invokevirtual #86
53: astore_3
54: aconst_null
55: astore        4
57: aload_1
58: ldc           #67
60: ldc           #10
62: aload         4
64: ldc           #10
66: invokevirtual #13
69: ldc           #14
71: invokestatic  #15
74: goto          79
77: astore        5
79: new           #29
82: dup
83: invokespecial #30
86: ldc           #31
88: invokevirtual #32
91: iload_2
92: invokevirtual #33
95: ldc           #34
97: invokevirtual #32
100: iconst_1
101: invokevirtual #33
104: ldc           #31
106: invokevirtual #32
109: invokevirtual #35
112: iload_2
113: iconst_1
114: if_icmpne     121
117: iconst_1
118: goto          122
121: iconst_0
122: invokestatic  #36
125: new           #29
128: dup
129: invokespecial #30
132: ldc           #31
134: invokevirtual #32
137: aload_3
138: invokevirtual #32
141: ldc           #88
143: invokevirtual #32
146: invokevirtual #35
149: aload_3
150: ldc           #24
152: invokestatic  #53
155: return
Exception table:
from    to  target type
57    74    77   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0040
Start line: 781
End line: 0
Method source code: 
    public void test0040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0040");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        java.lang.String str6 = helpFormatter0.getOptPrefix();
        java.io.PrintWriter printWriter7 = null;
        org.apache.commons.cli.Options options11 = null;
        try {
            helpFormatter0.printHelp(printWriter7, 10, "", "arg", options11, (int) (byte) -1, (int) '4', "hi!", true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: cmdLineSyntax not provided");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "-" + "'", str6, "-");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #122
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #22
36: istore_2
37: aload_1
38: ldc           #10
40: putfield      #23
43: aload_1
44: bipush        10
46: invokevirtual #38
49: aload_1
50: invokevirtual #123
53: astore_3
54: aconst_null
55: astore        4
57: aconst_null
58: astore        5
60: aload_1
61: aload         4
63: bipush        10
65: ldc           #10
67: ldc           #79
69: aload         5
71: iconst_m1
72: bipush        52
74: ldc           #25
76: iconst_1
77: invokevirtual #40
80: ldc           #27
82: invokestatic  #15
85: goto          90
88: astore        6
90: new           #29
93: dup
94: invokespecial #30
97: ldc           #31
99: invokevirtual #32
102: iload_2
103: invokevirtual #33
106: ldc           #34
108: invokevirtual #32
111: iconst_1
112: invokevirtual #33
115: ldc           #31
117: invokevirtual #32
120: invokevirtual #35
123: iload_2
124: iconst_1
125: if_icmpne     132
128: iconst_1
129: goto          133
132: iconst_0
133: invokestatic  #36
136: new           #29
139: dup
140: invokespecial #30
143: ldc           #31
145: invokevirtual #32
148: aload_3
149: invokevirtual #32
152: ldc           #66
154: invokevirtual #32
157: invokevirtual #35
160: aload_3
161: ldc           #67
163: invokestatic  #53
166: return
Exception table:
from    to  target type
60    85    88   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0041
Start line: 803
End line: 0
Method source code: 
    public void test0041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0041");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        helpFormatter0.defaultArgName = "hi!";
        org.apache.commons.cli.Options options10 = null;
        try {
            helpFormatter0.printHelp("          ", "hi!", options10, "usage: ", true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #124
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #22
36: istore_2
37: aload_1
38: ldc           #10
40: putfield      #23
43: aload_1
44: bipush        10
46: invokevirtual #38
49: aload_1
50: ldc           #25
52: putfield      #77
55: aconst_null
56: astore_3
57: aload_1
58: ldc           #114
60: ldc           #25
62: aload_3
63: ldc           #12
65: iconst_1
66: invokevirtual #73
69: ldc           #14
71: invokestatic  #15
74: goto          79
77: astore        4
79: new           #29
82: dup
83: invokespecial #30
86: ldc           #31
88: invokevirtual #32
91: iload_2
92: invokevirtual #33
95: ldc           #34
97: invokevirtual #32
100: iconst_1
101: invokevirtual #33
104: ldc           #31
106: invokevirtual #32
109: invokevirtual #35
112: iload_2
113: iconst_1
114: if_icmpne     121
117: iconst_1
118: goto          122
121: iconst_0
122: invokestatic  #36
125: return
Exception table:
from    to  target type
57    74    77   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0042
Start line: 823
End line: 0
Method source code: 
    public void test0042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0042");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultOptPrefix;
        java.io.PrintWriter printWriter6 = null;
        org.apache.commons.cli.Options options8 = null;
        try {
            helpFormatter0.printOptions(printWriter6, 0, options8, (int) (byte) 100, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #125
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: ldc           #10
35: invokevirtual #11
38: aload_1
39: ldc           #10
41: putfield      #55
44: aload_1
45: getfield      #63
48: astore_2
49: aconst_null
50: astore_3
51: aconst_null
52: astore        4
54: aload_1
55: aload_3
56: iconst_0
57: aload         4
59: bipush        100
61: bipush        97
63: invokevirtual #18
66: ldc           #14
68: invokestatic  #15
71: goto          76
74: astore        5
76: new           #29
79: dup
80: invokespecial #30
83: ldc           #31
85: invokevirtual #32
88: aload_2
89: invokevirtual #32
92: ldc           #68
94: invokevirtual #32
97: invokevirtual #35
100: aload_2
101: ldc           #10
103: invokestatic  #53
106: return
Exception table:
from    to  target type
54    71    74   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0043
Start line: 843
End line: 0
Method source code: 
    public void test0043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0043");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        helpFormatter0.setSyntaxPrefix(" ");
        java.util.Comparator comparator8 = helpFormatter0.getOptionComparator();
        java.lang.String str10 = helpFormatter0.createPadding(1);
        java.lang.String str11 = helpFormatter0.getSyntaxPrefix();
        java.io.PrintWriter printWriter12 = null;
        org.apache.commons.cli.Options options15 = null;
        try {
            helpFormatter0.printUsage(printWriter12, (int) '#', "", options15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(comparator8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + " " + "'", str10, " ");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + " " + "'", str11, " ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #126
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #22
36: istore_2
37: aload_1
38: ldc           #10
40: putfield      #23
43: aload_1
44: bipush        10
46: invokevirtual #38
49: aload_1
50: ldc           #24
52: invokevirtual #39
55: aload_1
56: invokevirtual #106
59: astore_3
60: aload_1
61: iconst_1
62: invokevirtual #108
65: astore        4
67: aload_1
68: invokevirtual #102
71: astore        5
73: aconst_null
74: astore        6
76: aconst_null
77: astore        7
79: aload_1
80: aload         6
82: bipush        35
84: ldc           #10
86: aload         7
88: invokevirtual #127
91: ldc           #14
93: invokestatic  #15
96: goto          101
99: astore        8
101: new           #29
104: dup
105: invokespecial #30
108: ldc           #31
110: invokevirtual #32
113: iload_2
114: invokevirtual #33
117: ldc           #34
119: invokevirtual #32
122: iconst_1
123: invokevirtual #33
126: ldc           #31
128: invokevirtual #32
131: invokevirtual #35
134: iload_2
135: iconst_1
136: if_icmpne     143
139: iconst_1
140: goto          144
143: iconst_0
144: invokestatic  #36
147: aload_3
148: invokestatic  #51
151: new           #29
154: dup
155: invokespecial #30
158: ldc           #31
160: invokevirtual #32
163: aload         4
165: invokevirtual #32
168: ldc           #88
170: invokevirtual #32
173: invokevirtual #35
176: aload         4
178: ldc           #24
180: invokestatic  #53
183: new           #29
186: dup
187: invokespecial #30
190: ldc           #31
192: invokevirtual #32
195: aload         5
197: invokevirtual #32
200: ldc           #88
202: invokevirtual #32
205: invokevirtual #35
208: aload         5
210: ldc           #24
212: invokestatic  #53
215: return
Exception table:
from    to  target type
79    96    99   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0044
Start line: 870
End line: 0
Method source code: 
    public void test0044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0044");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        java.lang.String str6 = helpFormatter0.rtrim("");
        java.lang.String str8 = helpFormatter0.rtrim("-");
        helpFormatter0.defaultOptPrefix = "--";
        helpFormatter0.defaultDescPad = 0;
        int int13 = helpFormatter0.getWidth();
        java.lang.String str14 = helpFormatter0.getArgName();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "-" + "'", str8, "-");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 74 + "'", int13 == 74);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "arg" + "'", str14, "arg");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #128
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #22
36: istore_2
37: aload_1
38: ldc           #10
40: putfield      #23
43: aload_1
44: getfield      #63
47: astore_3
48: aload_1
49: ldc           #10
51: invokevirtual #64
54: astore        4
56: aload_1
57: ldc           #67
59: invokevirtual #64
62: astore        5
64: aload_1
65: ldc           #44
67: putfield      #63
70: aload_1
71: iconst_0
72: putfield      #76
75: aload_1
76: invokevirtual #129
79: istore        6
81: aload_1
82: invokevirtual #104
85: astore        7
87: new           #29
90: dup
91: invokespecial #30
94: ldc           #31
96: invokevirtual #32
99: iload_2
100: invokevirtual #33
103: ldc           #34
105: invokevirtual #32
108: iconst_1
109: invokevirtual #33
112: ldc           #31
114: invokevirtual #32
117: invokevirtual #35
120: iload_2
121: iconst_1
122: if_icmpne     129
125: iconst_1
126: goto          130
129: iconst_0
130: invokestatic  #36
133: new           #29
136: dup
137: invokespecial #30
140: ldc           #31
142: invokevirtual #32
145: aload_3
146: invokevirtual #32
149: ldc           #66
151: invokevirtual #32
154: invokevirtual #35
157: aload_3
158: ldc           #67
160: invokestatic  #53
163: new           #29
166: dup
167: invokespecial #30
170: ldc           #31
172: invokevirtual #32
175: aload         4
177: invokevirtual #32
180: ldc           #68
182: invokevirtual #32
185: invokevirtual #35
188: aload         4
190: ldc           #10
192: invokestatic  #53
195: new           #29
198: dup
199: invokespecial #30
202: ldc           #31
204: invokevirtual #32
207: aload         5
209: invokevirtual #32
212: ldc           #66
214: invokevirtual #32
217: invokevirtual #35
220: aload         5
222: ldc           #67
224: invokestatic  #53
227: new           #29
230: dup
231: invokespecial #30
234: ldc           #31
236: invokevirtual #32
239: iload         6
241: invokevirtual #33
244: ldc           #34
246: invokevirtual #32
249: bipush        74
251: invokevirtual #33
254: ldc           #31
256: invokevirtual #32
259: invokevirtual #35
262: iload         6
264: bipush        74
266: if_icmpne     273
269: iconst_1
270: goto          274
273: iconst_0
274: invokestatic  #36
277: new           #29
280: dup
281: invokespecial #30
284: ldc           #31
286: invokevirtual #32
289: aload         7
291: invokevirtual #32
294: ldc           #78
296: invokevirtual #32
299: invokevirtual #35
302: aload         7
304: ldc           #79
306: invokestatic  #53
309: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0045
Start line: 892
End line: 0
Method source code: 
    public void test0045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0045");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setNewLine(" ");
        java.lang.StringBuffer stringBuffer7 = null;
        try {
            java.lang.StringBuffer stringBuffer11 = helpFormatter0.renderWrappedText(stringBuffer7, (int) (short) 10, (int) (short) -1, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #130
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #22
36: istore_2
37: aload_1
38: ldc           #10
40: putfield      #23
43: aload_1
44: getfield      #63
47: astore_3
48: aload_1
49: ldc           #24
51: invokevirtual #131
54: aconst_null
55: astore        4
57: aload_1
58: aload         4
60: bipush        10
62: iconst_m1
63: ldc           #10
65: invokevirtual #70
68: astore        5
70: ldc           #14
72: invokestatic  #15
75: goto          80
78: astore        5
80: new           #29
83: dup
84: invokespecial #30
87: ldc           #31
89: invokevirtual #32
92: iload_2
93: invokevirtual #33
96: ldc           #34
98: invokevirtual #32
101: iconst_1
102: invokevirtual #33
105: ldc           #31
107: invokevirtual #32
110: invokevirtual #35
113: iload_2
114: iconst_1
115: if_icmpne     122
118: iconst_1
119: goto          123
122: iconst_0
123: invokestatic  #36
126: new           #29
129: dup
130: invokespecial #30
133: ldc           #31
135: invokevirtual #32
138: aload_3
139: invokevirtual #32
142: ldc           #66
144: invokevirtual #32
147: invokevirtual #35
150: aload_3
151: ldc           #67
153: invokestatic  #53
156: return
Exception table:
from    to  target type
57    75    78   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0046
Start line: 913
End line: 0
Method source code: 
    public void test0046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0046");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.util.Comparator comparator1 = helpFormatter0.optionComparator;
        int int2 = helpFormatter0.getLeftPadding();
        int int6 = helpFormatter0.findWrapPos("-", 100, (-1));
        java.io.PrintWriter printWriter7 = null;
        try {
            helpFormatter0.printWrapped(printWriter7, (int) '4', 0, "\n");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(comparator1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #132
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: getfield      #47
36: astore_2
37: aload_1
38: invokevirtual #22
41: istore_3
42: aload_1
43: ldc           #67
45: bipush        100
47: iconst_m1
48: invokevirtual #93
51: istore        4
53: aconst_null
54: astore        5
56: aload_1
57: aload         5
59: bipush        52
61: iconst_0
62: ldc           #65
64: invokevirtual #61
67: ldc           #14
69: invokestatic  #15
72: goto          77
75: astore        6
77: aload_2
78: invokestatic  #51
81: new           #29
84: dup
85: invokespecial #30
88: ldc           #31
90: invokevirtual #32
93: iload_3
94: invokevirtual #33
97: ldc           #34
99: invokevirtual #32
102: iconst_1
103: invokevirtual #33
106: ldc           #31
108: invokevirtual #32
111: invokevirtual #35
114: iload_3
115: iconst_1
116: if_icmpne     123
119: iconst_1
120: goto          124
123: iconst_0
124: invokestatic  #36
127: new           #29
130: dup
131: invokespecial #30
134: ldc           #31
136: invokevirtual #32
139: iload         4
141: invokevirtual #33
144: ldc           #34
146: invokevirtual #32
149: iconst_m1
150: invokevirtual #33
153: ldc           #31
155: invokevirtual #32
158: invokevirtual #35
161: iload         4
163: iconst_m1
164: if_icmpne     171
167: iconst_1
168: goto          172
171: iconst_0
172: invokestatic  #36
175: return
Exception table:
from    to  target type
56    72    75   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0047
Start line: 934
End line: 0
Method source code: 
    public void test0047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0047");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.getArgName();
        java.io.PrintWriter printWriter5 = null;
        org.apache.commons.cli.Options options8 = null;
        try {
            helpFormatter0.printUsage(printWriter5, 3, "          ", options8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "arg" + "'", str4, "arg");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #133
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #22
36: istore_2
37: aload_1
38: ldc           #10
40: putfield      #23
43: aload_1
44: invokevirtual #104
47: astore_3
48: aconst_null
49: astore        4
51: aconst_null
52: astore        5
54: aload_1
55: aload         4
57: iconst_3
58: ldc           #114
60: aload         5
62: invokevirtual #127
65: ldc           #14
67: invokestatic  #15
70: goto          75
73: astore        6
75: new           #29
78: dup
79: invokespecial #30
82: ldc           #31
84: invokevirtual #32
87: iload_2
88: invokevirtual #33
91: ldc           #34
93: invokevirtual #32
96: iconst_1
97: invokevirtual #33
100: ldc           #31
102: invokevirtual #32
105: invokevirtual #35
108: iload_2
109: iconst_1
110: if_icmpne     117
113: iconst_1
114: goto          118
117: iconst_0
118: invokestatic  #36
121: new           #29
124: dup
125: invokespecial #30
128: ldc           #31
130: invokevirtual #32
133: aload_3
134: invokevirtual #32
137: ldc           #78
139: invokevirtual #32
142: invokevirtual #35
145: aload_3
146: ldc           #79
148: invokestatic  #53
151: return
Exception table:
from    to  target type
54    70    73   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0048
Start line: 955
End line: 0
Method source code: 
    public void test0048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0048");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.defaultDescPad = '4';
        helpFormatter0.setNewLine("");
        helpFormatter0.defaultWidth = '4';
        org.apache.commons.cli.Options options11 = null;
        try {
            helpFormatter0.printHelp("-", options11, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #134
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #22
36: istore_2
37: aload_1
38: ldc           #10
40: putfield      #23
43: aload_1
44: bipush        52
46: putfield      #76
49: aload_1
50: ldc           #10
52: invokevirtual #131
55: aload_1
56: bipush        52
58: putfield      #110
61: aconst_null
62: astore_3
63: aload_1
64: ldc           #67
66: aload_3
67: iconst_1
68: invokevirtual #135
71: ldc           #14
73: invokestatic  #15
76: goto          81
79: astore        4
81: new           #29
84: dup
85: invokespecial #30
88: ldc           #31
90: invokevirtual #32
93: iload_2
94: invokevirtual #33
97: ldc           #34
99: invokevirtual #32
102: iconst_1
103: invokevirtual #33
106: ldc           #31
108: invokevirtual #32
111: invokevirtual #35
114: iload_2
115: iconst_1
116: if_icmpne     123
119: iconst_1
120: goto          124
123: iconst_0
124: invokestatic  #36
127: return
Exception table:
from    to  target type
63    76    79   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0049
Start line: 976
End line: 0
Method source code: 
    public void test0049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0049");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        java.lang.String str6 = helpFormatter0.rtrim("");
        java.lang.String str8 = helpFormatter0.rtrim("-");
        helpFormatter0.defaultOptPrefix = "--";
        helpFormatter0.defaultDescPad = 0;
        int int13 = helpFormatter0.getWidth();
        org.apache.commons.cli.Options options16 = null;
        try {
            helpFormatter0.printHelp("\n", "arg", options16, "arg", false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "-" + "'", str8, "-");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 74 + "'", int13 == 74);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #136
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #22
36: istore_2
37: aload_1
38: ldc           #10
40: putfield      #23
43: aload_1
44: getfield      #63
47: astore_3
48: aload_1
49: ldc           #10
51: invokevirtual #64
54: astore        4
56: aload_1
57: ldc           #67
59: invokevirtual #64
62: astore        5
64: aload_1
65: ldc           #44
67: putfield      #63
70: aload_1
71: iconst_0
72: putfield      #76
75: aload_1
76: invokevirtual #129
79: istore        6
81: aconst_null
82: astore        7
84: aload_1
85: ldc           #65
87: ldc           #79
89: aload         7
91: ldc           #79
93: iconst_0
94: invokevirtual #73
97: ldc           #14
99: invokestatic  #15
102: goto          107
105: astore        8
107: new           #29
110: dup
111: invokespecial #30
114: ldc           #31
116: invokevirtual #32
119: iload_2
120: invokevirtual #33
123: ldc           #34
125: invokevirtual #32
128: iconst_1
129: invokevirtual #33
132: ldc           #31
134: invokevirtual #32
137: invokevirtual #35
140: iload_2
141: iconst_1
142: if_icmpne     149
145: iconst_1
146: goto          150
149: iconst_0
150: invokestatic  #36
153: new           #29
156: dup
157: invokespecial #30
160: ldc           #31
162: invokevirtual #32
165: aload_3
166: invokevirtual #32
169: ldc           #66
171: invokevirtual #32
174: invokevirtual #35
177: aload_3
178: ldc           #67
180: invokestatic  #53
183: new           #29
186: dup
187: invokespecial #30
190: ldc           #31
192: invokevirtual #32
195: aload         4
197: invokevirtual #32
200: ldc           #68
202: invokevirtual #32
205: invokevirtual #35
208: aload         4
210: ldc           #10
212: invokestatic  #53
215: new           #29
218: dup
219: invokespecial #30
222: ldc           #31
224: invokevirtual #32
227: aload         5
229: invokevirtual #32
232: ldc           #66
234: invokevirtual #32
237: invokevirtual #35
240: aload         5
242: ldc           #67
244: invokestatic  #53
247: new           #29
250: dup
251: invokespecial #30
254: ldc           #31
256: invokevirtual #32
259: iload         6
261: invokevirtual #33
264: ldc           #34
266: invokevirtual #32
269: bipush        74
271: invokevirtual #33
274: ldc           #31
276: invokevirtual #32
279: invokevirtual #35
282: iload         6
284: bipush        74
286: if_icmpne     293
289: iconst_1
290: goto          294
293: iconst_0
294: invokestatic  #36
297: return
Exception table:
from    to  target type
84   102   105   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0050
Start line: 1004
End line: 0
Method source code: 
    public void test0050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0050");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setLongOptPrefix(" ");
        helpFormatter0.defaultDescPad = (short) 10;
        helpFormatter0.setLongOptPrefix("--");
        java.lang.String str11 = helpFormatter0.defaultOptPrefix;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "-" + "'", str11, "-");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #137
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #22
36: istore_2
37: aload_1
38: ldc           #10
40: putfield      #23
43: aload_1
44: getfield      #63
47: astore_3
48: aload_1
49: ldc           #24
51: invokevirtual #49
54: aload_1
55: bipush        10
57: putfield      #76
60: aload_1
61: ldc           #44
63: invokevirtual #49
66: aload_1
67: getfield      #63
70: astore        4
72: new           #29
75: dup
76: invokespecial #30
79: ldc           #31
81: invokevirtual #32
84: iload_2
85: invokevirtual #33
88: ldc           #34
90: invokevirtual #32
93: iconst_1
94: invokevirtual #33
97: ldc           #31
99: invokevirtual #32
102: invokevirtual #35
105: iload_2
106: iconst_1
107: if_icmpne     114
110: iconst_1
111: goto          115
114: iconst_0
115: invokestatic  #36
118: new           #29
121: dup
122: invokespecial #30
125: ldc           #31
127: invokevirtual #32
130: aload_3
131: invokevirtual #32
134: ldc           #66
136: invokevirtual #32
139: invokevirtual #35
142: aload_3
143: ldc           #67
145: invokestatic  #53
148: new           #29
151: dup
152: invokespecial #30
155: ldc           #31
157: invokevirtual #32
160: aload         4
162: invokevirtual #32
165: ldc           #66
167: invokevirtual #32
170: invokevirtual #35
173: aload         4
175: ldc           #67
177: invokestatic  #53
180: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0051
Start line: 1021
End line: 0
Method source code: 
    public void test0051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0051");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setLongOptPrefix(" ");
        org.apache.commons.cli.Options options8 = null;
        try {
            helpFormatter0.printHelp("          ", options8, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #138
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #22
36: istore_2
37: aload_1
38: ldc           #10
40: putfield      #23
43: aload_1
44: getfield      #63
47: astore_3
48: aload_1
49: ldc           #24
51: invokevirtual #49
54: aconst_null
55: astore        4
57: aload_1
58: ldc           #114
60: aload         4
62: iconst_0
63: invokevirtual #135
66: ldc           #14
68: invokestatic  #15
71: goto          76
74: astore        5
76: new           #29
79: dup
80: invokespecial #30
83: ldc           #31
85: invokevirtual #32
88: iload_2
89: invokevirtual #33
92: ldc           #34
94: invokevirtual #32
97: iconst_1
98: invokevirtual #33
101: ldc           #31
103: invokevirtual #32
106: invokevirtual #35
109: iload_2
110: iconst_1
111: if_icmpne     118
114: iconst_1
115: goto          119
118: iconst_0
119: invokestatic  #36
122: new           #29
125: dup
126: invokespecial #30
129: ldc           #31
131: invokevirtual #32
134: aload_3
135: invokevirtual #32
138: ldc           #66
140: invokevirtual #32
143: invokevirtual #35
146: aload_3
147: ldc           #67
149: invokestatic  #53
152: return
Exception table:
from    to  target type
57    71    74   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0052
Start line: 1042
End line: 0
Method source code: 
    public void test0052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0052");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        java.lang.String str6 = helpFormatter0.getLongOptSeparator();
        org.apache.commons.cli.Options options8 = null;
        try {
            helpFormatter0.printHelp("", options8, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: cmdLineSyntax not provided");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + " " + "'", str6, " ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #139
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #22
36: istore_2
37: aload_1
38: ldc           #10
40: putfield      #23
43: aload_1
44: bipush        10
46: invokevirtual #38
49: aload_1
50: invokevirtual #86
53: astore_3
54: aconst_null
55: astore        4
57: aload_1
58: ldc           #10
60: aload         4
62: iconst_0
63: invokevirtual #135
66: ldc           #27
68: invokestatic  #15
71: goto          76
74: astore        5
76: new           #29
79: dup
80: invokespecial #30
83: ldc           #31
85: invokevirtual #32
88: iload_2
89: invokevirtual #33
92: ldc           #34
94: invokevirtual #32
97: iconst_1
98: invokevirtual #33
101: ldc           #31
103: invokevirtual #32
106: invokevirtual #35
109: iload_2
110: iconst_1
111: if_icmpne     118
114: iconst_1
115: goto          119
118: iconst_0
119: invokestatic  #36
122: new           #29
125: dup
126: invokespecial #30
129: ldc           #31
131: invokevirtual #32
134: aload_3
135: invokevirtual #32
138: ldc           #88
140: invokevirtual #32
143: invokevirtual #35
146: aload_3
147: ldc           #24
149: invokestatic  #53
152: return
Exception table:
from    to  target type
57    71    74   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0053
Start line: 1063
End line: 0
Method source code: 
    public void test0053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0053");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        helpFormatter0.defaultArgName = "hi!";
        helpFormatter0.setOptPrefix("                                                                                                 ");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #140
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #22
36: istore_2
37: aload_1
38: ldc           #10
40: putfield      #23
43: aload_1
44: bipush        10
46: invokevirtual #38
49: aload_1
50: ldc           #25
52: putfield      #77
55: aload_1
56: ldc           #141
58: invokevirtual #11
61: new           #29
64: dup
65: invokespecial #30
68: ldc           #31
70: invokevirtual #32
73: iload_2
74: invokevirtual #33
77: ldc           #34
79: invokevirtual #32
82: iconst_1
83: invokevirtual #33
86: ldc           #31
88: invokevirtual #32
91: invokevirtual #35
94: iload_2
95: iconst_1
96: if_icmpne     103
99: iconst_1
100: goto          104
103: iconst_0
104: invokestatic  #36
107: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0054
Start line: 1076
End line: 0
Method source code: 
    public void test0054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0054");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        java.lang.String str6 = helpFormatter0.rtrim("");
        int int7 = helpFormatter0.getDescPadding();
        org.apache.commons.cli.Options options11 = null;
        try {
            helpFormatter0.printHelp(100, "          ", "-", options11, "--", false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 3 + "'", int7 == 3);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #142
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #22
36: istore_2
37: aload_1
38: ldc           #10
40: putfield      #23
43: aload_1
44: getfield      #63
47: astore_3
48: aload_1
49: ldc           #10
51: invokevirtual #64
54: astore        4
56: aload_1
57: invokevirtual #118
60: istore        5
62: aconst_null
63: astore        6
65: aload_1
66: bipush        100
68: ldc           #114
70: ldc           #67
72: aload         6
74: ldc           #44
76: iconst_0
77: invokevirtual #26
80: ldc           #14
82: invokestatic  #15
85: goto          90
88: astore        7
90: new           #29
93: dup
94: invokespecial #30
97: ldc           #31
99: invokevirtual #32
102: iload_2
103: invokevirtual #33
106: ldc           #34
108: invokevirtual #32
111: iconst_1
112: invokevirtual #33
115: ldc           #31
117: invokevirtual #32
120: invokevirtual #35
123: iload_2
124: iconst_1
125: if_icmpne     132
128: iconst_1
129: goto          133
132: iconst_0
133: invokestatic  #36
136: new           #29
139: dup
140: invokespecial #30
143: ldc           #31
145: invokevirtual #32
148: aload_3
149: invokevirtual #32
152: ldc           #66
154: invokevirtual #32
157: invokevirtual #35
160: aload_3
161: ldc           #67
163: invokestatic  #53
166: new           #29
169: dup
170: invokespecial #30
173: ldc           #31
175: invokevirtual #32
178: aload         4
180: invokevirtual #32
183: ldc           #68
185: invokevirtual #32
188: invokevirtual #35
191: aload         4
193: ldc           #10
195: invokestatic  #53
198: new           #29
201: dup
202: invokespecial #30
205: ldc           #31
207: invokevirtual #32
210: iload         5
212: invokevirtual #33
215: ldc           #34
217: invokevirtual #32
220: iconst_3
221: invokevirtual #33
224: ldc           #31
226: invokevirtual #32
229: invokevirtual #35
232: iload         5
234: iconst_3
235: if_icmpne     242
238: iconst_1
239: goto          243
242: iconst_0
243: invokestatic  #36
246: return
Exception table:
from    to  target type
65    85    88   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0055
Start line: 1100
End line: 0
Method source code: 
    public void test0055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0055");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        org.apache.commons.cli.Options options8 = null;
        try {
            helpFormatter0.printHelp((int) '#', "-", "          ", options8, "hi!", true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #143
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: ldc           #10
35: invokevirtual #11
38: aload_1
39: ldc           #10
41: putfield      #55
44: aconst_null
45: astore_2
46: aload_1
47: bipush        35
49: ldc           #67
51: ldc           #114
53: aload_2
54: ldc           #25
56: iconst_1
57: invokevirtual #26
60: ldc           #14
62: invokestatic  #15
65: goto          69
68: astore_3
69: return
Exception table:
from    to  target type
46    65    68   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0056
Start line: 1117
End line: 0
Method source code: 
    public void test0056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0056");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setLongOptPrefix(" ");
        java.lang.String str7 = helpFormatter0.getLongOptPrefix();
        java.lang.StringBuffer stringBuffer8 = null;
        org.apache.commons.cli.Options options10 = null;
        try {
            java.lang.StringBuffer stringBuffer13 = helpFormatter0.renderOptions(stringBuffer8, 10, options10, 0, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + " " + "'", str7, " ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #144
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #22
36: istore_2
37: aload_1
38: ldc           #10
40: putfield      #23
43: aload_1
44: getfield      #63
47: astore_3
48: aload_1
49: ldc           #24
51: invokevirtual #49
54: aload_1
55: invokevirtual #48
58: astore        4
60: aconst_null
61: astore        5
63: aconst_null
64: astore        6
66: aload_1
67: aload         5
69: bipush        10
71: aload         6
73: iconst_0
74: bipush        100
76: invokevirtual #98
79: astore        7
81: ldc           #14
83: invokestatic  #15
86: goto          91
89: astore        7
91: new           #29
94: dup
95: invokespecial #30
98: ldc           #31
100: invokevirtual #32
103: iload_2
104: invokevirtual #33
107: ldc           #34
109: invokevirtual #32
112: iconst_1
113: invokevirtual #33
116: ldc           #31
118: invokevirtual #32
121: invokevirtual #35
124: iload_2
125: iconst_1
126: if_icmpne     133
129: iconst_1
130: goto          134
133: iconst_0
134: invokestatic  #36
137: new           #29
140: dup
141: invokespecial #30
144: ldc           #31
146: invokevirtual #32
149: aload_3
150: invokevirtual #32
153: ldc           #66
155: invokevirtual #32
158: invokevirtual #35
161: aload_3
162: ldc           #67
164: invokestatic  #53
167: new           #29
170: dup
171: invokespecial #30
174: ldc           #31
176: invokevirtual #32
179: aload         4
181: invokevirtual #32
184: ldc           #88
186: invokevirtual #32
189: invokevirtual #35
192: aload         4
194: ldc           #24
196: invokestatic  #53
199: return
Exception table:
from    to  target type
66    86    89   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0057
Start line: 1141
End line: 0
Method source code: 
    public void test0057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0057");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.util.Comparator comparator1 = helpFormatter0.optionComparator;
        java.lang.String str3 = helpFormatter0.rtrim("");
        helpFormatter0.setLongOptSeparator(" ");
        helpFormatter0.setArgName("--");
        java.io.PrintWriter printWriter8 = null;
        try {
            helpFormatter0.printWrapped(printWriter8, (int) (short) 1, "          ");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(comparator1);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #145
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: getfield      #47
36: astore_2
37: aload_1
38: ldc           #10
40: invokevirtual #64
43: astore_3
44: aload_1
45: ldc           #24
47: invokevirtual #91
50: aload_1
51: ldc           #44
53: invokevirtual #146
56: aconst_null
57: astore        4
59: aload_1
60: aload         4
62: iconst_1
63: ldc           #114
65: invokevirtual #82
68: ldc           #14
70: invokestatic  #15
73: goto          78
76: astore        5
78: aload_2
79: invokestatic  #51
82: new           #29
85: dup
86: invokespecial #30
89: ldc           #31
91: invokevirtual #32
94: aload_3
95: invokevirtual #32
98: ldc           #68
100: invokevirtual #32
103: invokevirtual #35
106: aload_3
107: ldc           #10
109: invokestatic  #53
112: return
Exception table:
from    to  target type
59    73    76   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0058
Start line: 1162
End line: 0
Method source code: 
    public void test0058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0058");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        helpFormatter0.setArgName("--");
        java.io.PrintWriter printWriter8 = null;
        try {
            helpFormatter0.printWrapped(printWriter8, (int) (byte) 10, (int) (byte) 1, "usage: ");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #147
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: ldc           #10
35: invokevirtual #11
38: aload_1
39: ldc           #10
41: putfield      #55
44: aload_1
45: getfield      #55
48: astore_2
49: aload_1
50: ldc           #44
52: invokevirtual #146
55: aconst_null
56: astore_3
57: aload_1
58: aload_3
59: bipush        10
61: iconst_1
62: ldc           #12
64: invokevirtual #61
67: ldc           #14
69: invokestatic  #15
72: goto          77
75: astore        4
77: new           #29
80: dup
81: invokespecial #30
84: ldc           #31
86: invokevirtual #32
89: aload_2
90: invokevirtual #32
93: ldc           #68
95: invokevirtual #32
98: invokevirtual #35
101: aload_2
102: ldc           #10
104: invokestatic  #53
107: return
Exception table:
from    to  target type
57    72    75   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0059
Start line: 1182
End line: 0
Method source code: 
    public void test0059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0059");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setLongOptPrefix(" ");
        helpFormatter0.defaultDescPad = (short) 10;
        java.lang.StringBuffer stringBuffer9 = null;
        try {
            java.lang.StringBuffer stringBuffer13 = helpFormatter0.renderWrappedText(stringBuffer9, 74, 3, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #148
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #22
36: istore_2
37: aload_1
38: ldc           #10
40: putfield      #23
43: aload_1
44: getfield      #63
47: astore_3
48: aload_1
49: ldc           #24
51: invokevirtual #49
54: aload_1
55: bipush        10
57: putfield      #76
60: aconst_null
61: astore        4
63: aload_1
64: aload         4
66: bipush        74
68: iconst_3
69: ldc           #10
71: invokevirtual #70
74: astore        5
76: ldc           #14
78: invokestatic  #15
81: goto          86
84: astore        5
86: new           #29
89: dup
90: invokespecial #30
93: ldc           #31
95: invokevirtual #32
98: iload_2
99: invokevirtual #33
102: ldc           #34
104: invokevirtual #32
107: iconst_1
108: invokevirtual #33
111: ldc           #31
113: invokevirtual #32
116: invokevirtual #35
119: iload_2
120: iconst_1
121: if_icmpne     128
124: iconst_1
125: goto          129
128: iconst_0
129: invokestatic  #36
132: new           #29
135: dup
136: invokespecial #30
139: ldc           #31
141: invokevirtual #32
144: aload_3
145: invokevirtual #32
148: ldc           #66
150: invokevirtual #32
153: invokevirtual #35
156: aload_3
157: ldc           #67
159: invokestatic  #53
162: return
Exception table:
from    to  target type
63    81    84   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0060
Start line: 1204
End line: 0
Method source code: 
    public void test0060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0060");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.util.Comparator comparator1 = helpFormatter0.optionComparator;
        java.lang.String str2 = helpFormatter0.getLongOptPrefix();
        helpFormatter0.setLongOptPrefix("");
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        org.junit.Assert.assertNotNull(comparator1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "--" + "'", str2, "--");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #149
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: getfield      #47
36: astore_2
37: aload_1
38: invokevirtual #48
41: astore_3
42: aload_1
43: ldc           #10
45: invokevirtual #49
48: aload_1
49: getfield      #55
52: astore        4
54: aload_2
55: invokestatic  #51
58: new           #29
61: dup
62: invokespecial #30
65: ldc           #31
67: invokevirtual #32
70: aload_3
71: invokevirtual #32
74: ldc           #52
76: invokevirtual #32
79: invokevirtual #35
82: aload_3
83: ldc           #44
85: invokestatic  #53
88: new           #29
91: dup
92: invokespecial #30
95: ldc           #31
97: invokevirtual #32
100: aload         4
102: invokevirtual #32
105: ldc           #68
107: invokevirtual #32
110: invokevirtual #35
113: aload         4
115: ldc           #10
117: invokestatic  #53
120: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0061
Start line: 1218
End line: 0
Method source code: 
    public void test0061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0061");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        org.apache.commons.cli.Options options4 = null;
        try {
            helpFormatter0.printHelp("                                                                                                 ", "", options4, "-", false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #150
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #22
36: istore_2
37: aconst_null
38: astore_3
39: aload_1
40: ldc           #141
42: ldc           #10
44: aload_3
45: ldc           #67
47: iconst_0
48: invokevirtual #73
51: ldc           #14
53: invokestatic  #15
56: goto          61
59: astore        4
61: new           #29
64: dup
65: invokespecial #30
68: ldc           #31
70: invokevirtual #32
73: iload_2
74: invokevirtual #33
77: ldc           #34
79: invokevirtual #32
82: iconst_1
83: invokevirtual #33
86: ldc           #31
88: invokevirtual #32
91: invokevirtual #35
94: iload_2
95: iconst_1
96: if_icmpne     103
99: iconst_1
100: goto          104
103: iconst_0
104: invokestatic  #36
107: return
Exception table:
from    to  target type
39    56    59   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0062
Start line: 1235
End line: 0
Method source code: 
    public void test0062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0062");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.util.Comparator comparator1 = helpFormatter0.optionComparator;
        int int2 = helpFormatter0.getLeftPadding();
        org.apache.commons.cli.HelpFormatter helpFormatter3 = new org.apache.commons.cli.HelpFormatter();
        java.util.Comparator comparator4 = helpFormatter3.optionComparator;
        java.lang.String str6 = helpFormatter3.rtrim("");
        helpFormatter3.setLongOptSeparator(" ");
        org.apache.commons.cli.HelpFormatter helpFormatter9 = new org.apache.commons.cli.HelpFormatter();
        int int10 = helpFormatter9.getLeftPadding();
        helpFormatter9.defaultNewLine = "";
        helpFormatter9.defaultDescPad = '4';
        helpFormatter9.setNewLine("");
        int int20 = helpFormatter9.findWrapPos("\n", (int) ' ', 3);
        java.util.Comparator comparator21 = helpFormatter9.optionComparator;
        helpFormatter3.setOptionComparator(comparator21);
        helpFormatter0.optionComparator = comparator21;
        org.junit.Assert.assertNotNull(comparator1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(comparator4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(comparator21);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #151
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: getfield      #47
36: astore_2
37: aload_1
38: invokevirtual #22
41: istore_3
42: new           #8
45: dup
46: invokespecial #9
49: astore        4
51: aload         4
53: getfield      #47
56: astore        5
58: aload         4
60: ldc           #10
62: invokevirtual #64
65: astore        6
67: aload         4
69: ldc           #24
71: invokevirtual #91
74: new           #8
77: dup
78: invokespecial #9
81: astore        7
83: aload         7
85: invokevirtual #22
88: istore        8
90: aload         7
92: ldc           #10
94: putfield      #23
97: aload         7
99: bipush        52
101: putfield      #76
104: aload         7
106: ldc           #10
108: invokevirtual #131
111: aload         7
113: ldc           #65
115: bipush        32
117: iconst_3
118: invokevirtual #93
121: istore        9
123: aload         7
125: getfield      #47
128: astore        10
130: aload         4
132: aload         10
134: invokevirtual #152
137: aload_1
138: aload         10
140: putfield      #47
143: aload_2
144: invokestatic  #51
147: new           #29
150: dup
151: invokespecial #30
154: ldc           #31
156: invokevirtual #32
159: iload_3
160: invokevirtual #33
163: ldc           #34
165: invokevirtual #32
168: iconst_1
169: invokevirtual #33
172: ldc           #31
174: invokevirtual #32
177: invokevirtual #35
180: iload_3
181: iconst_1
182: if_icmpne     189
185: iconst_1
186: goto          190
189: iconst_0
190: invokestatic  #36
193: aload         5
195: invokestatic  #51
198: new           #29
201: dup
202: invokespecial #30
205: ldc           #31
207: invokevirtual #32
210: aload         6
212: invokevirtual #32
215: ldc           #68
217: invokevirtual #32
220: invokevirtual #35
223: aload         6
225: ldc           #10
227: invokestatic  #53
230: new           #29
233: dup
234: invokespecial #30
237: ldc           #31
239: invokevirtual #32
242: iload         8
244: invokevirtual #33
247: ldc           #34
249: invokevirtual #32
252: iconst_1
253: invokevirtual #33
256: ldc           #31
258: invokevirtual #32
261: invokevirtual #35
264: iload         8
266: iconst_1
267: if_icmpne     274
270: iconst_1
271: goto          275
274: iconst_0
275: invokestatic  #36
278: new           #29
281: dup
282: invokespecial #30
285: ldc           #31
287: invokevirtual #32
290: iload         9
292: invokevirtual #33
295: ldc           #34
297: invokevirtual #32
300: iconst_m1
301: invokevirtual #33
304: ldc           #31
306: invokevirtual #32
309: invokevirtual #35
312: iload         9
314: iconst_m1
315: if_icmpne     322
318: iconst_1
319: goto          323
322: iconst_0
323: invokestatic  #36
326: aload         10
328: invokestatic  #51
331: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0063
Start line: 1264
End line: 0
Method source code: 
    public void test0063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0063");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.util.Comparator comparator1 = helpFormatter0.optionComparator;
        java.lang.String str2 = helpFormatter0.getLongOptPrefix();
        helpFormatter0.setLongOptPrefix("");
        org.apache.commons.cli.Options options7 = null;
        try {
            helpFormatter0.printHelp("usage: ", "", options7, "          ", false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(comparator1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "--" + "'", str2, "--");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #153
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: getfield      #47
36: astore_2
37: aload_1
38: invokevirtual #48
41: astore_3
42: aload_1
43: ldc           #10
45: invokevirtual #49
48: aconst_null
49: astore        4
51: aload_1
52: ldc           #12
54: ldc           #10
56: aload         4
58: ldc           #114
60: iconst_0
61: invokevirtual #73
64: ldc           #14
66: invokestatic  #15
69: goto          74
72: astore        5
74: aload_2
75: invokestatic  #51
78: new           #29
81: dup
82: invokespecial #30
85: ldc           #31
87: invokevirtual #32
90: aload_3
91: invokevirtual #32
94: ldc           #52
96: invokevirtual #32
99: invokevirtual #35
102: aload_3
103: ldc           #44
105: invokestatic  #53
108: return
Exception table:
from    to  target type
51    69    72   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0064
Start line: 1284
End line: 0
Method source code: 
    public void test0064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0064");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str6 = helpFormatter0.getNewLine();
        java.lang.String str7 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setDescPadding(74);
        java.util.Comparator comparator10 = helpFormatter0.getOptionComparator();
        java.lang.StringBuffer stringBuffer11 = null;
        try {
            java.lang.StringBuffer stringBuffer15 = helpFormatter0.renderWrappedText(stringBuffer11, (int) '4', (-2), " ");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\n" + "'", str6, "\n");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(comparator10);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #154
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: ldc           #10
35: invokevirtual #11
38: aload_1
39: ldc           #10
41: putfield      #55
44: aload_1
45: getfield      #55
48: astore_2
49: aload_1
50: invokevirtual #72
53: astore_3
54: aload_1
55: getfield      #63
58: astore        4
60: aload_1
61: bipush        74
63: invokevirtual #38
66: aload_1
67: invokevirtual #106
70: astore        5
72: aconst_null
73: astore        6
75: aload_1
76: aload         6
78: bipush        52
80: bipush        -2
82: ldc           #24
84: invokevirtual #70
87: astore        7
89: ldc           #14
91: invokestatic  #15
94: goto          99
97: astore        7
99: new           #29
102: dup
103: invokespecial #30
106: ldc           #31
108: invokevirtual #32
111: aload_2
112: invokevirtual #32
115: ldc           #68
117: invokevirtual #32
120: invokevirtual #35
123: aload_2
124: ldc           #10
126: invokestatic  #53
129: new           #29
132: dup
133: invokespecial #30
136: ldc           #31
138: invokevirtual #32
141: aload_3
142: invokevirtual #32
145: ldc           #74
147: invokevirtual #32
150: invokevirtual #35
153: aload_3
154: ldc           #65
156: invokestatic  #53
159: new           #29
162: dup
163: invokespecial #30
166: ldc           #31
168: invokevirtual #32
171: aload         4
173: invokevirtual #32
176: ldc           #68
178: invokevirtual #32
181: invokevirtual #35
184: aload         4
186: ldc           #10
188: invokestatic  #53
191: aload         5
193: invokestatic  #51
196: return
Exception table:
from    to  target type
75    94    97   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0065
Start line: 1310
End line: 0
Method source code: 
    public void test0065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0065");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.getArgName();
        helpFormatter0.setSyntaxPrefix("usage: ");
        java.lang.String str5 = helpFormatter0.defaultSyntaxPrefix;
        helpFormatter0.setWidth(0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "arg" + "'", str2, "arg");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "usage: " + "'", str5, "usage: ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #155
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #22
36: istore_2
37: aload_1
38: invokevirtual #104
41: astore_3
42: aload_1
43: ldc           #12
45: invokevirtual #39
48: aload_1
49: getfield      #97
52: astore        4
54: aload_1
55: iconst_0
56: invokevirtual #156
59: new           #29
62: dup
63: invokespecial #30
66: ldc           #31
68: invokevirtual #32
71: iload_2
72: invokevirtual #33
75: ldc           #34
77: invokevirtual #32
80: iconst_1
81: invokevirtual #33
84: ldc           #31
86: invokevirtual #32
89: invokevirtual #35
92: iload_2
93: iconst_1
94: if_icmpne     101
97: iconst_1
98: goto          102
101: iconst_0
102: invokestatic  #36
105: new           #29
108: dup
109: invokespecial #30
112: ldc           #31
114: invokevirtual #32
117: aload_3
118: invokevirtual #32
121: ldc           #78
123: invokevirtual #32
126: invokevirtual #35
129: aload_3
130: ldc           #79
132: invokestatic  #53
135: new           #29
138: dup
139: invokespecial #30
142: ldc           #31
144: invokevirtual #32
147: aload         4
149: invokevirtual #32
152: ldc           #99
154: invokevirtual #32
157: invokevirtual #35
160: aload         4
162: ldc           #12
164: invokestatic  #53
167: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0066
Start line: 1325
End line: 0
Method source code: 
    public void test0066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0066");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        java.lang.String str6 = helpFormatter0.rtrim("");
        helpFormatter0.defaultDescPad = (byte) 1;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #157
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #22
36: istore_2
37: aload_1
38: ldc           #10
40: putfield      #23
43: aload_1
44: getfield      #63
47: astore_3
48: aload_1
49: ldc           #10
51: invokevirtual #64
54: astore        4
56: aload_1
57: iconst_1
58: putfield      #76
61: new           #29
64: dup
65: invokespecial #30
68: ldc           #31
70: invokevirtual #32
73: iload_2
74: invokevirtual #33
77: ldc           #34
79: invokevirtual #32
82: iconst_1
83: invokevirtual #33
86: ldc           #31
88: invokevirtual #32
91: invokevirtual #35
94: iload_2
95: iconst_1
96: if_icmpne     103
99: iconst_1
100: goto          104
103: iconst_0
104: invokestatic  #36
107: new           #29
110: dup
111: invokespecial #30
114: ldc           #31
116: invokevirtual #32
119: aload_3
120: invokevirtual #32
123: ldc           #66
125: invokevirtual #32
128: invokevirtual #35
131: aload_3
132: ldc           #67
134: invokestatic  #53
137: new           #29
140: dup
141: invokespecial #30
144: ldc           #31
146: invokevirtual #32
149: aload         4
151: invokevirtual #32
154: ldc           #68
156: invokevirtual #32
159: invokevirtual #35
162: aload         4
164: ldc           #10
166: invokestatic  #53
169: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0067
Start line: 1340
End line: 0
Method source code: 
    public void test0067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0067");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.lang.StringBuffer stringBuffer1 = null;
        org.apache.commons.cli.Options options3 = null;
        try {
            java.lang.StringBuffer stringBuffer6 = helpFormatter0.renderOptions(stringBuffer1, (-2), options3, (int) (short) 0, (-2));
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: null");
        } catch (java.lang.NegativeArraySizeException e) {
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #158
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aconst_null
33: astore_2
34: aconst_null
35: astore_3
36: aload_1
37: aload_2
38: bipush        -2
40: aload_3
41: iconst_0
42: bipush        -2
44: invokevirtual #98
47: astore        4
49: ldc           #19
51: invokestatic  #15
54: goto          59
57: astore        4
59: return
Exception table:
from    to  target type
36    54    57   Class java/lang/NegativeArraySizeException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0068
Start line: 1356
End line: 0
Method source code: 
    public void test0068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0068");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str6 = helpFormatter0.getNewLine();
        helpFormatter0.setSyntaxPrefix(" ");
        java.io.PrintWriter printWriter9 = null;
        try {
            helpFormatter0.printWrapped(printWriter9, (int) '#', "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\n" + "'", str6, "\n");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #159
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: ldc           #10
35: invokevirtual #11
38: aload_1
39: ldc           #10
41: putfield      #55
44: aload_1
45: getfield      #55
48: astore_2
49: aload_1
50: invokevirtual #72
53: astore_3
54: aload_1
55: ldc           #24
57: invokevirtual #39
60: aconst_null
61: astore        4
63: aload_1
64: aload         4
66: bipush        35
68: ldc           #10
70: invokevirtual #82
73: ldc           #14
75: invokestatic  #15
78: goto          83
81: astore        5
83: new           #29
86: dup
87: invokespecial #30
90: ldc           #31
92: invokevirtual #32
95: aload_2
96: invokevirtual #32
99: ldc           #68
101: invokevirtual #32
104: invokevirtual #35
107: aload_2
108: ldc           #10
110: invokestatic  #53
113: new           #29
116: dup
117: invokespecial #30
120: ldc           #31
122: invokevirtual #32
125: aload_3
126: invokevirtual #32
129: ldc           #74
131: invokevirtual #32
134: invokevirtual #35
137: aload_3
138: ldc           #65
140: invokestatic  #53
143: return
Exception table:
from    to  target type
63    78    81   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0069
Start line: 1378
End line: 0
Method source code: 
    public void test0069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0069");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str3 = helpFormatter0.getOptPrefix();
        int int4 = helpFormatter0.defaultDescPad;
        org.apache.commons.cli.Options options7 = null;
        try {
            helpFormatter0.printHelp(" ", "", options7, "                                                                                                 ", false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "--" + "'", str2, "--");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "-" + "'", str3, "-");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 3 + "'", int4 == 3);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #160
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #22
36: istore_2
37: aload_1
38: getfield      #55
41: astore_3
42: aload_1
43: invokevirtual #123
46: astore        4
48: aload_1
49: getfield      #76
52: istore        5
54: aconst_null
55: astore        6
57: aload_1
58: ldc           #24
60: ldc           #10
62: aload         6
64: ldc           #141
66: iconst_0
67: invokevirtual #73
70: ldc           #14
72: invokestatic  #15
75: goto          80
78: astore        7
80: new           #29
83: dup
84: invokespecial #30
87: ldc           #31
89: invokevirtual #32
92: iload_2
93: invokevirtual #33
96: ldc           #34
98: invokevirtual #32
101: iconst_1
102: invokevirtual #33
105: ldc           #31
107: invokevirtual #32
110: invokevirtual #35
113: iload_2
114: iconst_1
115: if_icmpne     122
118: iconst_1
119: goto          123
122: iconst_0
123: invokestatic  #36
126: new           #29
129: dup
130: invokespecial #30
133: ldc           #31
135: invokevirtual #32
138: aload_3
139: invokevirtual #32
142: ldc           #52
144: invokevirtual #32
147: invokevirtual #35
150: aload_3
151: ldc           #44
153: invokestatic  #53
156: new           #29
159: dup
160: invokespecial #30
163: ldc           #31
165: invokevirtual #32
168: aload         4
170: invokevirtual #32
173: ldc           #66
175: invokevirtual #32
178: invokevirtual #35
181: aload         4
183: ldc           #67
185: invokestatic  #53
188: new           #29
191: dup
192: invokespecial #30
195: ldc           #31
197: invokevirtual #32
200: iload         5
202: invokevirtual #33
205: ldc           #34
207: invokevirtual #32
210: iconst_3
211: invokevirtual #33
214: ldc           #31
216: invokevirtual #32
219: invokevirtual #35
222: iload         5
224: iconst_3
225: if_icmpne     232
228: iconst_1
229: goto          233
232: iconst_0
233: invokestatic  #36
236: return
Exception table:
from    to  target type
57    75    78   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0070
Start line: 1401
End line: 0
Method source code: 
    public void test0070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0070");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.getArgName();
        helpFormatter0.defaultNewLine = "\n";
        helpFormatter0.defaultLeftPad = (byte) -1;
        org.apache.commons.cli.Options options8 = null;
        try {
            helpFormatter0.printHelp("          ", options8);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: null");
        } catch (java.lang.NegativeArraySizeException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "arg" + "'", str2, "arg");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #161
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #22
36: istore_2
37: aload_1
38: invokevirtual #104
41: astore_3
42: aload_1
43: ldc           #65
45: putfield      #23
48: aload_1
49: iconst_m1
50: putfield      #60
53: aconst_null
54: astore        4
56: aload_1
57: ldc           #114
59: aload         4
61: invokevirtual #50
64: ldc           #19
66: invokestatic  #15
69: goto          74
72: astore        5
74: new           #29
77: dup
78: invokespecial #30
81: ldc           #31
83: invokevirtual #32
86: iload_2
87: invokevirtual #33
90: ldc           #34
92: invokevirtual #32
95: iconst_1
96: invokevirtual #33
99: ldc           #31
101: invokevirtual #32
104: invokevirtual #35
107: iload_2
108: iconst_1
109: if_icmpne     116
112: iconst_1
113: goto          117
116: iconst_0
117: invokestatic  #36
120: new           #29
123: dup
124: invokespecial #30
127: ldc           #31
129: invokevirtual #32
132: aload_3
133: invokevirtual #32
136: ldc           #78
138: invokevirtual #32
141: invokevirtual #35
144: aload_3
145: ldc           #79
147: invokestatic  #53
150: return
Exception table:
from    to  target type
56    69    72   Class java/lang/NegativeArraySizeException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0071
Start line: 1422
End line: 0
Method source code: 
    public void test0071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0071");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str3 = helpFormatter0.getOptPrefix();
        java.util.Comparator comparator4 = helpFormatter0.optionComparator;
        java.io.PrintWriter printWriter5 = null;
        try {
            helpFormatter0.printWrapped(printWriter5, (int) 'a', "usage: ");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "--" + "'", str2, "--");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "-" + "'", str3, "-");
        org.junit.Assert.assertNotNull(comparator4);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #162
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #22
36: istore_2
37: aload_1
38: getfield      #55
41: astore_3
42: aload_1
43: invokevirtual #123
46: astore        4
48: aload_1
49: getfield      #47
52: astore        5
54: aconst_null
55: astore        6
57: aload_1
58: aload         6
60: bipush        97
62: ldc           #12
64: invokevirtual #82
67: ldc           #14
69: invokestatic  #15
72: goto          77
75: astore        7
77: new           #29
80: dup
81: invokespecial #30
84: ldc           #31
86: invokevirtual #32
89: iload_2
90: invokevirtual #33
93: ldc           #34
95: invokevirtual #32
98: iconst_1
99: invokevirtual #33
102: ldc           #31
104: invokevirtual #32
107: invokevirtual #35
110: iload_2
111: iconst_1
112: if_icmpne     119
115: iconst_1
116: goto          120
119: iconst_0
120: invokestatic  #36
123: new           #29
126: dup
127: invokespecial #30
130: ldc           #31
132: invokevirtual #32
135: aload_3
136: invokevirtual #32
139: ldc           #52
141: invokevirtual #32
144: invokevirtual #35
147: aload_3
148: ldc           #44
150: invokestatic  #53
153: new           #29
156: dup
157: invokespecial #30
160: ldc           #31
162: invokevirtual #32
165: aload         4
167: invokevirtual #32
170: ldc           #66
172: invokevirtual #32
175: invokevirtual #35
178: aload         4
180: ldc           #67
182: invokestatic  #53
185: aload         5
187: invokestatic  #51
190: return
Exception table:
from    to  target type
57    72    75   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0072
Start line: 1445
End line: 0
Method source code: 
    public void test0072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0072");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        int int6 = helpFormatter0.getLeftPadding();
        helpFormatter0.setLongOptSeparator("\n");
        org.apache.commons.cli.Options options10 = null;
        try {
            helpFormatter0.printHelp("", options10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: cmdLineSyntax not provided");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #163
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: ldc           #10
35: invokevirtual #11
38: aload_1
39: ldc           #10
41: putfield      #55
44: aload_1
45: getfield      #55
48: astore_2
49: aload_1
50: invokevirtual #22
53: istore_3
54: aload_1
55: ldc           #65
57: invokevirtual #91
60: aconst_null
61: astore        4
63: aload_1
64: ldc           #10
66: aload         4
68: invokevirtual #50
71: ldc           #27
73: invokestatic  #15
76: goto          81
79: astore        5
81: new           #29
84: dup
85: invokespecial #30
88: ldc           #31
90: invokevirtual #32
93: aload_2
94: invokevirtual #32
97: ldc           #68
99: invokevirtual #32
102: invokevirtual #35
105: aload_2
106: ldc           #10
108: invokestatic  #53
111: new           #29
114: dup
115: invokespecial #30
118: ldc           #31
120: invokevirtual #32
123: iload_3
124: invokevirtual #33
127: ldc           #34
129: invokevirtual #32
132: iconst_1
133: invokevirtual #33
136: ldc           #31
138: invokevirtual #32
141: invokevirtual #35
144: iload_3
145: iconst_1
146: if_icmpne     153
149: iconst_1
150: goto          154
153: iconst_0
154: invokestatic  #36
157: return
Exception table:
from    to  target type
63    76    79   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0073
Start line: 1467
End line: 0
Method source code: 
    public void test0073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0073");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.util.Comparator comparator1 = helpFormatter0.optionComparator;
        java.lang.String str3 = helpFormatter0.rtrim("");
        java.io.PrintWriter printWriter4 = null;
        try {
            helpFormatter0.printWrapped(printWriter4, (int) (short) 100, (int) (short) 10, " ");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(comparator1);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #164
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: getfield      #47
36: astore_2
37: aload_1
38: ldc           #10
40: invokevirtual #64
43: astore_3
44: aconst_null
45: astore        4
47: aload_1
48: aload         4
50: bipush        100
52: bipush        10
54: ldc           #24
56: invokevirtual #61
59: ldc           #14
61: invokestatic  #15
64: goto          69
67: astore        5
69: aload_2
70: invokestatic  #51
73: new           #29
76: dup
77: invokespecial #30
80: ldc           #31
82: invokevirtual #32
85: aload_3
86: invokevirtual #32
89: ldc           #68
91: invokevirtual #32
94: invokevirtual #35
97: aload_3
98: ldc           #10
100: invokestatic  #53
103: return
Exception table:
from    to  target type
47    64    67   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0074
Start line: 1486
End line: 0
Method source code: 
    public void test0074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0074");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        java.lang.String str6 = helpFormatter0.rtrim("");
        java.lang.String str8 = helpFormatter0.rtrim("-");
        helpFormatter0.defaultOptPrefix = "--";
        helpFormatter0.defaultDescPad = 0;
        helpFormatter0.setLongOptPrefix("");
        org.apache.commons.cli.Options options16 = null;
        try {
            helpFormatter0.printHelp(" ", options16, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "-" + "'", str8, "-");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #165
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #22
36: istore_2
37: aload_1
38: ldc           #10
40: putfield      #23
43: aload_1
44: getfield      #63
47: astore_3
48: aload_1
49: ldc           #10
51: invokevirtual #64
54: astore        4
56: aload_1
57: ldc           #67
59: invokevirtual #64
62: astore        5
64: aload_1
65: ldc           #44
67: putfield      #63
70: aload_1
71: iconst_0
72: putfield      #76
75: aload_1
76: ldc           #10
78: invokevirtual #49
81: aconst_null
82: astore        6
84: aload_1
85: ldc           #24
87: aload         6
89: iconst_1
90: invokevirtual #135
93: ldc           #14
95: invokestatic  #15
98: goto          103
101: astore        7
103: new           #29
106: dup
107: invokespecial #30
110: ldc           #31
112: invokevirtual #32
115: iload_2
116: invokevirtual #33
119: ldc           #34
121: invokevirtual #32
124: iconst_1
125: invokevirtual #33
128: ldc           #31
130: invokevirtual #32
133: invokevirtual #35
136: iload_2
137: iconst_1
138: if_icmpne     145
141: iconst_1
142: goto          146
145: iconst_0
146: invokestatic  #36
149: new           #29
152: dup
153: invokespecial #30
156: ldc           #31
158: invokevirtual #32
161: aload_3
162: invokevirtual #32
165: ldc           #66
167: invokevirtual #32
170: invokevirtual #35
173: aload_3
174: ldc           #67
176: invokestatic  #53
179: new           #29
182: dup
183: invokespecial #30
186: ldc           #31
188: invokevirtual #32
191: aload         4
193: invokevirtual #32
196: ldc           #68
198: invokevirtual #32
201: invokevirtual #35
204: aload         4
206: ldc           #10
208: invokestatic  #53
211: new           #29
214: dup
215: invokespecial #30
218: ldc           #31
220: invokevirtual #32
223: aload         5
225: invokevirtual #32
228: ldc           #66
230: invokevirtual #32
233: invokevirtual #35
236: aload         5
238: ldc           #67
240: invokestatic  #53
243: return
Exception table:
from    to  target type
84    98   101   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0075
Start line: 1513
End line: 0
Method source code: 
    public void test0075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0075");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str3 = helpFormatter0.getOptPrefix();
        int int4 = helpFormatter0.defaultDescPad;
        int int5 = helpFormatter0.defaultLeftPad;
        int int6 = helpFormatter0.defaultLeftPad;
        int int10 = helpFormatter0.findWrapPos("                                                                                                 ", (int) (byte) 100, (-2));
        java.io.PrintWriter printWriter11 = null;
        org.apache.commons.cli.Options options15 = null;
        try {
            helpFormatter0.printHelp(printWriter11, (int) (byte) 10, "          ", "", options15, (-1), (int) (short) 100, "usage: ", false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "--" + "'", str2, "--");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "-" + "'", str3, "-");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 3 + "'", int4 == 3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #166
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #22
36: istore_2
37: aload_1
38: getfield      #55
41: astore_3
42: aload_1
43: invokevirtual #123
46: astore        4
48: aload_1
49: getfield      #76
52: istore        5
54: aload_1
55: getfield      #60
58: istore        6
60: aload_1
61: getfield      #60
64: istore        7
66: aload_1
67: ldc           #141
69: bipush        100
71: bipush        -2
73: invokevirtual #93
76: istore        8
78: aconst_null
79: astore        9
81: aconst_null
82: astore        10
84: aload_1
85: aload         9
87: bipush        10
89: ldc           #114
91: ldc           #10
93: aload         10
95: iconst_m1
96: bipush        100
98: ldc           #12
100: iconst_0
101: invokevirtual #40
104: ldc           #14
106: invokestatic  #15
109: goto          114
112: astore        11
114: new           #29
117: dup
118: invokespecial #30
121: ldc           #31
123: invokevirtual #32
126: iload_2
127: invokevirtual #33
130: ldc           #34
132: invokevirtual #32
135: iconst_1
136: invokevirtual #33
139: ldc           #31
141: invokevirtual #32
144: invokevirtual #35
147: iload_2
148: iconst_1
149: if_icmpne     156
152: iconst_1
153: goto          157
156: iconst_0
157: invokestatic  #36
160: new           #29
163: dup
164: invokespecial #30
167: ldc           #31
169: invokevirtual #32
172: aload_3
173: invokevirtual #32
176: ldc           #52
178: invokevirtual #32
181: invokevirtual #35
184: aload_3
185: ldc           #44
187: invokestatic  #53
190: new           #29
193: dup
194: invokespecial #30
197: ldc           #31
199: invokevirtual #32
202: aload         4
204: invokevirtual #32
207: ldc           #66
209: invokevirtual #32
212: invokevirtual #35
215: aload         4
217: ldc           #67
219: invokestatic  #53
222: new           #29
225: dup
226: invokespecial #30
229: ldc           #31
231: invokevirtual #32
234: iload         5
236: invokevirtual #33
239: ldc           #34
241: invokevirtual #32
244: iconst_3
245: invokevirtual #33
248: ldc           #31
250: invokevirtual #32
253: invokevirtual #35
256: iload         5
258: iconst_3
259: if_icmpne     266
262: iconst_1
263: goto          267
266: iconst_0
267: invokestatic  #36
270: new           #29
273: dup
274: invokespecial #30
277: ldc           #31
279: invokevirtual #32
282: iload         6
284: invokevirtual #33
287: ldc           #34
289: invokevirtual #32
292: iconst_1
293: invokevirtual #33
296: ldc           #31
298: invokevirtual #32
301: invokevirtual #35
304: iload         6
306: iconst_1
307: if_icmpne     314
310: iconst_1
311: goto          315
314: iconst_0
315: invokestatic  #36
318: new           #29
321: dup
322: invokespecial #30
325: ldc           #31
327: invokevirtual #32
330: iload         7
332: invokevirtual #33
335: ldc           #34
337: invokevirtual #32
340: iconst_1
341: invokevirtual #33
344: ldc           #31
346: invokevirtual #32
349: invokevirtual #35
352: iload         7
354: iconst_1
355: if_icmpne     362
358: iconst_1
359: goto          363
362: iconst_0
363: invokestatic  #36
366: new           #29
369: dup
370: invokespecial #30
373: ldc           #31
375: invokevirtual #32
378: iload         8
380: invokevirtual #33
383: ldc           #34
385: invokevirtual #32
388: iconst_m1
389: invokevirtual #33
392: ldc           #31
394: invokevirtual #32
397: invokevirtual #35
400: iload         8
402: iconst_m1
403: if_icmpne     410
406: iconst_1
407: goto          411
410: iconst_0
411: invokestatic  #36
414: return
Exception table:
from    to  target type
84   109   112   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0076
Start line: 1543
End line: 0
Method source code: 
    public void test0076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0076");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        helpFormatter0.setWidth(1);
        java.io.PrintWriter printWriter8 = null;
        org.apache.commons.cli.Options options10 = null;
        try {
            helpFormatter0.printOptions(printWriter8, 0, options10, (int) '4', (-2));
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: null");
        } catch (java.lang.NegativeArraySizeException e) {
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #167
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: ldc           #10
35: invokevirtual #11
38: aload_1
39: ldc           #10
41: putfield      #55
44: aload_1
45: getfield      #55
48: astore_2
49: aload_1
50: iconst_1
51: invokevirtual #156
54: aconst_null
55: astore_3
56: aconst_null
57: astore        4
59: aload_1
60: aload_3
61: iconst_0
62: aload         4
64: bipush        52
66: bipush        -2
68: invokevirtual #18
71: ldc           #19
73: invokestatic  #15
76: goto          81
79: astore        5
81: new           #29
84: dup
85: invokespecial #30
88: ldc           #31
90: invokevirtual #32
93: aload_2
94: invokevirtual #32
97: ldc           #68
99: invokevirtual #32
102: invokevirtual #35
105: aload_2
106: ldc           #10
108: invokestatic  #53
111: return
Exception table:
from    to  target type
59    76    79   Class java/lang/NegativeArraySizeException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0077
Start line: 1564
End line: 0
Method source code: 
    public void test0077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0077");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        helpFormatter0.defaultArgName = "hi!";
        java.util.Comparator comparator8 = helpFormatter0.getOptionComparator();
        java.lang.Class<?> wildcardClass9 = helpFormatter0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(comparator8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #168
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #22
36: istore_2
37: aload_1
38: ldc           #10
40: putfield      #23
43: aload_1
44: bipush        10
46: invokevirtual #38
49: aload_1
50: ldc           #25
52: putfield      #77
55: aload_1
56: invokevirtual #106
59: astore_3
60: aload_1
61: invokevirtual #56
64: astore        4
66: new           #29
69: dup
70: invokespecial #30
73: ldc           #31
75: invokevirtual #32
78: iload_2
79: invokevirtual #33
82: ldc           #34
84: invokevirtual #32
87: iconst_1
88: invokevirtual #33
91: ldc           #31
93: invokevirtual #32
96: invokevirtual #35
99: iload_2
100: iconst_1
101: if_icmpne     108
104: iconst_1
105: goto          109
108: iconst_0
109: invokestatic  #36
112: aload_3
113: invokestatic  #51
116: aload         4
118: invokestatic  #51
121: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0078
Start line: 1580
End line: 0
Method source code: 
    public void test0078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0078");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        helpFormatter0.defaultArgName = "hi!";
        helpFormatter0.defaultWidth = 1;
        try {
            int int13 = helpFormatter0.findWrapPos("hi!", (int) (byte) 1, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #169
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #22
36: istore_2
37: aload_1
38: ldc           #10
40: putfield      #23
43: aload_1
44: bipush        10
46: invokevirtual #38
49: aload_1
50: ldc           #25
52: putfield      #77
55: aload_1
56: iconst_1
57: putfield      #110
60: aload_1
61: ldc           #25
63: iconst_1
64: iconst_m1
65: invokevirtual #93
68: istore_3
69: ldc           #94
71: invokestatic  #15
74: goto          78
77: astore_3
78: new           #29
81: dup
82: invokespecial #30
85: ldc           #31
87: invokevirtual #32
90: iload_2
91: invokevirtual #33
94: ldc           #34
96: invokevirtual #32
99: iconst_1
100: invokevirtual #33
103: ldc           #31
105: invokevirtual #32
108: invokevirtual #35
111: iload_2
112: iconst_1
113: if_icmpne     120
116: iconst_1
117: goto          121
120: iconst_0
121: invokestatic  #36
124: return
Exception table:
from    to  target type
60    74    77   Class java/lang/StringIndexOutOfBoundsException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0079
Start line: 1600
End line: 0
Method source code: 
    public void test0079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0079");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str6 = helpFormatter0.getNewLine();
        java.lang.String str7 = helpFormatter0.defaultOptPrefix;
        org.apache.commons.cli.Options options10 = null;
        try {
            helpFormatter0.printHelp("          ", "arg", options10, "--");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\n" + "'", str6, "\n");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #170
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: ldc           #10
35: invokevirtual #11
38: aload_1
39: ldc           #10
41: putfield      #55
44: aload_1
45: getfield      #55
48: astore_2
49: aload_1
50: invokevirtual #72
53: astore_3
54: aload_1
55: getfield      #63
58: astore        4
60: aconst_null
61: astore        5
63: aload_1
64: ldc           #114
66: ldc           #79
68: aload         5
70: ldc           #44
72: invokevirtual #13
75: ldc           #14
77: invokestatic  #15
80: goto          85
83: astore        6
85: new           #29
88: dup
89: invokespecial #30
92: ldc           #31
94: invokevirtual #32
97: aload_2
98: invokevirtual #32
101: ldc           #68
103: invokevirtual #32
106: invokevirtual #35
109: aload_2
110: ldc           #10
112: invokestatic  #53
115: new           #29
118: dup
119: invokespecial #30
122: ldc           #31
124: invokevirtual #32
127: aload_3
128: invokevirtual #32
131: ldc           #74
133: invokevirtual #32
136: invokevirtual #35
139: aload_3
140: ldc           #65
142: invokestatic  #53
145: new           #29
148: dup
149: invokespecial #30
152: ldc           #31
154: invokevirtual #32
157: aload         4
159: invokevirtual #32
162: ldc           #68
164: invokevirtual #32
167: invokevirtual #35
170: aload         4
172: ldc           #10
174: invokestatic  #53
177: return
Exception table:
from    to  target type
63    80    83   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0080
Start line: 1623
End line: 0
Method source code: 
    public void test0080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0080");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setLongOptPrefix(" ");
        helpFormatter0.defaultDescPad = (short) 10;
        java.lang.String str9 = helpFormatter0.defaultArgName;
        helpFormatter0.setSyntaxPrefix("");
        helpFormatter0.defaultOptPrefix = "                                                                                                 ";
        helpFormatter0.setLongOptPrefix("          ");
        org.apache.commons.cli.Options options19 = null;
        try {
            helpFormatter0.printHelp(3, "--", "hi!", options19, "          ");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "arg" + "'", str9, "arg");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #171
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #22
36: istore_2
37: aload_1
38: ldc           #10
40: putfield      #23
43: aload_1
44: getfield      #63
47: astore_3
48: aload_1
49: ldc           #24
51: invokevirtual #49
54: aload_1
55: bipush        10
57: putfield      #76
60: aload_1
61: getfield      #77
64: astore        4
66: aload_1
67: ldc           #10
69: invokevirtual #39
72: aload_1
73: ldc           #141
75: putfield      #63
78: aload_1
79: ldc           #114
81: invokevirtual #49
84: aconst_null
85: astore        5
87: aload_1
88: iconst_3
89: ldc           #44
91: ldc           #25
93: aload         5
95: ldc           #114
97: invokevirtual #45
100: ldc           #14
102: invokestatic  #15
105: goto          110
108: astore        6
110: new           #29
113: dup
114: invokespecial #30
117: ldc           #31
119: invokevirtual #32
122: iload_2
123: invokevirtual #33
126: ldc           #34
128: invokevirtual #32
131: iconst_1
132: invokevirtual #33
135: ldc           #31
137: invokevirtual #32
140: invokevirtual #35
143: iload_2
144: iconst_1
145: if_icmpne     152
148: iconst_1
149: goto          153
152: iconst_0
153: invokestatic  #36
156: new           #29
159: dup
160: invokespecial #30
163: ldc           #31
165: invokevirtual #32
168: aload_3
169: invokevirtual #32
172: ldc           #66
174: invokevirtual #32
177: invokevirtual #35
180: aload_3
181: ldc           #67
183: invokestatic  #53
186: new           #29
189: dup
190: invokespecial #30
193: ldc           #31
195: invokevirtual #32
198: aload         4
200: invokevirtual #32
203: ldc           #78
205: invokevirtual #32
208: invokevirtual #35
211: aload         4
213: ldc           #79
215: invokestatic  #53
218: return
Exception table:
from    to  target type
87   105   108   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0081
Start line: 1650
End line: 0
Method source code: 
    public void test0081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0081");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str3 = helpFormatter0.getOptPrefix();
        int int4 = helpFormatter0.defaultDescPad;
        int int5 = helpFormatter0.defaultLeftPad;
        int int6 = helpFormatter0.defaultLeftPad;
        int int10 = helpFormatter0.findWrapPos("                                                                                                 ", (int) (byte) 100, (-2));
        java.io.PrintWriter printWriter11 = null;
        org.apache.commons.cli.Options options14 = null;
        try {
            helpFormatter0.printUsage(printWriter11, (int) '#', "hi!", options14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "--" + "'", str2, "--");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "-" + "'", str3, "-");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 3 + "'", int4 == 3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #172
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #22
36: istore_2
37: aload_1
38: getfield      #55
41: astore_3
42: aload_1
43: invokevirtual #123
46: astore        4
48: aload_1
49: getfield      #76
52: istore        5
54: aload_1
55: getfield      #60
58: istore        6
60: aload_1
61: getfield      #60
64: istore        7
66: aload_1
67: ldc           #141
69: bipush        100
71: bipush        -2
73: invokevirtual #93
76: istore        8
78: aconst_null
79: astore        9
81: aconst_null
82: astore        10
84: aload_1
85: aload         9
87: bipush        35
89: ldc           #25
91: aload         10
93: invokevirtual #127
96: ldc           #14
98: invokestatic  #15
101: goto          106
104: astore        11
106: new           #29
109: dup
110: invokespecial #30
113: ldc           #31
115: invokevirtual #32
118: iload_2
119: invokevirtual #33
122: ldc           #34
124: invokevirtual #32
127: iconst_1
128: invokevirtual #33
131: ldc           #31
133: invokevirtual #32
136: invokevirtual #35
139: iload_2
140: iconst_1
141: if_icmpne     148
144: iconst_1
145: goto          149
148: iconst_0
149: invokestatic  #36
152: new           #29
155: dup
156: invokespecial #30
159: ldc           #31
161: invokevirtual #32
164: aload_3
165: invokevirtual #32
168: ldc           #52
170: invokevirtual #32
173: invokevirtual #35
176: aload_3
177: ldc           #44
179: invokestatic  #53
182: new           #29
185: dup
186: invokespecial #30
189: ldc           #31
191: invokevirtual #32
194: aload         4
196: invokevirtual #32
199: ldc           #66
201: invokevirtual #32
204: invokevirtual #35
207: aload         4
209: ldc           #67
211: invokestatic  #53
214: new           #29
217: dup
218: invokespecial #30
221: ldc           #31
223: invokevirtual #32
226: iload         5
228: invokevirtual #33
231: ldc           #34
233: invokevirtual #32
236: iconst_3
237: invokevirtual #33
240: ldc           #31
242: invokevirtual #32
245: invokevirtual #35
248: iload         5
250: iconst_3
251: if_icmpne     258
254: iconst_1
255: goto          259
258: iconst_0
259: invokestatic  #36
262: new           #29
265: dup
266: invokespecial #30
269: ldc           #31
271: invokevirtual #32
274: iload         6
276: invokevirtual #33
279: ldc           #34
281: invokevirtual #32
284: iconst_1
285: invokevirtual #33
288: ldc           #31
290: invokevirtual #32
293: invokevirtual #35
296: iload         6
298: iconst_1
299: if_icmpne     306
302: iconst_1
303: goto          307
306: iconst_0
307: invokestatic  #36
310: new           #29
313: dup
314: invokespecial #30
317: ldc           #31
319: invokevirtual #32
322: iload         7
324: invokevirtual #33
327: ldc           #34
329: invokevirtual #32
332: iconst_1
333: invokevirtual #33
336: ldc           #31
338: invokevirtual #32
341: invokevirtual #35
344: iload         7
346: iconst_1
347: if_icmpne     354
350: iconst_1
351: goto          355
354: iconst_0
355: invokestatic  #36
358: new           #29
361: dup
362: invokespecial #30
365: ldc           #31
367: invokevirtual #32
370: iload         8
372: invokevirtual #33
375: ldc           #34
377: invokevirtual #32
380: iconst_m1
381: invokevirtual #33
384: ldc           #31
386: invokevirtual #32
389: invokevirtual #35
392: iload         8
394: iconst_m1
395: if_icmpne     402
398: iconst_1
399: goto          403
402: iconst_0
403: invokestatic  #36
406: return
Exception table:
from    to  target type
84   101   104   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0082
Start line: 1680
End line: 0
Method source code: 
    public void test0082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0082");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        java.lang.String str6 = helpFormatter0.rtrim("");
        java.lang.String str8 = helpFormatter0.rtrim("-");
        helpFormatter0.defaultOptPrefix = "--";
        helpFormatter0.defaultDescPad = 0;
        int int13 = helpFormatter0.getWidth();
        java.io.PrintWriter printWriter14 = null;
        org.apache.commons.cli.Options options16 = null;
        try {
            helpFormatter0.printOptions(printWriter14, (int) (short) 1, options16, (int) (byte) 100, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "-" + "'", str8, "-");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 74 + "'", int13 == 74);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #173
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #22
36: istore_2
37: aload_1
38: ldc           #10
40: putfield      #23
43: aload_1
44: getfield      #63
47: astore_3
48: aload_1
49: ldc           #10
51: invokevirtual #64
54: astore        4
56: aload_1
57: ldc           #67
59: invokevirtual #64
62: astore        5
64: aload_1
65: ldc           #44
67: putfield      #63
70: aload_1
71: iconst_0
72: putfield      #76
75: aload_1
76: invokevirtual #129
79: istore        6
81: aconst_null
82: astore        7
84: aconst_null
85: astore        8
87: aload_1
88: aload         7
90: iconst_1
91: aload         8
93: bipush        100
95: bipush        35
97: invokevirtual #18
100: ldc           #14
102: invokestatic  #15
105: goto          110
108: astore        9
110: new           #29
113: dup
114: invokespecial #30
117: ldc           #31
119: invokevirtual #32
122: iload_2
123: invokevirtual #33
126: ldc           #34
128: invokevirtual #32
131: iconst_1
132: invokevirtual #33
135: ldc           #31
137: invokevirtual #32
140: invokevirtual #35
143: iload_2
144: iconst_1
145: if_icmpne     152
148: iconst_1
149: goto          153
152: iconst_0
153: invokestatic  #36
156: new           #29
159: dup
160: invokespecial #30
163: ldc           #31
165: invokevirtual #32
168: aload_3
169: invokevirtual #32
172: ldc           #66
174: invokevirtual #32
177: invokevirtual #35
180: aload_3
181: ldc           #67
183: invokestatic  #53
186: new           #29
189: dup
190: invokespecial #30
193: ldc           #31
195: invokevirtual #32
198: aload         4
200: invokevirtual #32
203: ldc           #68
205: invokevirtual #32
208: invokevirtual #35
211: aload         4
213: ldc           #10
215: invokestatic  #53
218: new           #29
221: dup
222: invokespecial #30
225: ldc           #31
227: invokevirtual #32
230: aload         5
232: invokevirtual #32
235: ldc           #66
237: invokevirtual #32
240: invokevirtual #35
243: aload         5
245: ldc           #67
247: invokestatic  #53
250: new           #29
253: dup
254: invokespecial #30
257: ldc           #31
259: invokevirtual #32
262: iload         6
264: invokevirtual #33
267: ldc           #34
269: invokevirtual #32
272: bipush        74
274: invokevirtual #33
277: ldc           #31
279: invokevirtual #32
282: invokevirtual #35
285: iload         6
287: bipush        74
289: if_icmpne     296
292: iconst_1
293: goto          297
296: iconst_0
297: invokestatic  #36
300: return
Exception table:
from    to  target type
87   105   108   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0083
Start line: 1709
End line: 0
Method source code: 
    public void test0083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0083");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str3 = helpFormatter0.getOptPrefix();
        java.io.PrintWriter printWriter4 = null;
        org.apache.commons.cli.Options options8 = null;
        try {
            helpFormatter0.printHelp(printWriter4, (int) (byte) -1, "--", "\n", options8, 3, 0, "                                                                                                 ", false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "--" + "'", str2, "--");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "-" + "'", str3, "-");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #174
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #22
36: istore_2
37: aload_1
38: getfield      #55
41: astore_3
42: aload_1
43: invokevirtual #123
46: astore        4
48: aconst_null
49: astore        5
51: aconst_null
52: astore        6
54: aload_1
55: aload         5
57: iconst_m1
58: ldc           #44
60: ldc           #65
62: aload         6
64: iconst_3
65: iconst_0
66: ldc           #141
68: iconst_0
69: invokevirtual #40
72: ldc           #14
74: invokestatic  #15
77: goto          82
80: astore        7
82: new           #29
85: dup
86: invokespecial #30
89: ldc           #31
91: invokevirtual #32
94: iload_2
95: invokevirtual #33
98: ldc           #34
100: invokevirtual #32
103: iconst_1
104: invokevirtual #33
107: ldc           #31
109: invokevirtual #32
112: invokevirtual #35
115: iload_2
116: iconst_1
117: if_icmpne     124
120: iconst_1
121: goto          125
124: iconst_0
125: invokestatic  #36
128: new           #29
131: dup
132: invokespecial #30
135: ldc           #31
137: invokevirtual #32
140: aload_3
141: invokevirtual #32
144: ldc           #52
146: invokevirtual #32
149: invokevirtual #35
152: aload_3
153: ldc           #44
155: invokestatic  #53
158: new           #29
161: dup
162: invokespecial #30
165: ldc           #31
167: invokevirtual #32
170: aload         4
172: invokevirtual #32
175: ldc           #66
177: invokevirtual #32
180: invokevirtual #35
183: aload         4
185: ldc           #67
187: invokestatic  #53
190: return
Exception table:
from    to  target type
54    77    80   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0084
Start line: 1731
End line: 0
Method source code: 
    public void test0084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0084");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        helpFormatter0.setSyntaxPrefix(" ");
        org.apache.commons.cli.Options options9 = null;
        try {
            helpFormatter0.printHelp("--", options9, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #175
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #22
36: istore_2
37: aload_1
38: ldc           #10
40: putfield      #23
43: aload_1
44: bipush        10
46: invokevirtual #38
49: aload_1
50: ldc           #24
52: invokevirtual #39
55: aconst_null
56: astore_3
57: aload_1
58: ldc           #44
60: aload_3
61: iconst_0
62: invokevirtual #135
65: ldc           #14
67: invokestatic  #15
70: goto          75
73: astore        4
75: new           #29
78: dup
79: invokespecial #30
82: ldc           #31
84: invokevirtual #32
87: iload_2
88: invokevirtual #33
91: ldc           #34
93: invokevirtual #32
96: iconst_1
97: invokevirtual #33
100: ldc           #31
102: invokevirtual #32
105: invokevirtual #35
108: iload_2
109: iconst_1
110: if_icmpne     117
113: iconst_1
114: goto          118
117: iconst_0
118: invokestatic  #36
121: return
Exception table:
from    to  target type
57    70    73   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0085
Start line: 1751
End line: 0
Method source code: 
    public void test0085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0085");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.defaultDescPad = '4';
        helpFormatter0.setNewLine("");
        helpFormatter0.setSyntaxPrefix("");
        java.lang.String str10 = helpFormatter0.getSyntaxPrefix();
        java.io.PrintWriter printWriter11 = null;
        try {
            helpFormatter0.printWrapped(printWriter11, (int) 'a', "-");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #176
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #22
36: istore_2
37: aload_1
38: ldc           #10
40: putfield      #23
43: aload_1
44: bipush        52
46: putfield      #76
49: aload_1
50: ldc           #10
52: invokevirtual #131
55: aload_1
56: ldc           #10
58: invokevirtual #39
61: aload_1
62: invokevirtual #102
65: astore_3
66: aconst_null
67: astore        4
69: aload_1
70: aload         4
72: bipush        97
74: ldc           #67
76: invokevirtual #82
79: ldc           #14
81: invokestatic  #15
84: goto          89
87: astore        5
89: new           #29
92: dup
93: invokespecial #30
96: ldc           #31
98: invokevirtual #32
101: iload_2
102: invokevirtual #33
105: ldc           #34
107: invokevirtual #32
110: iconst_1
111: invokevirtual #33
114: ldc           #31
116: invokevirtual #32
119: invokevirtual #35
122: iload_2
123: iconst_1
124: if_icmpne     131
127: iconst_1
128: goto          132
131: iconst_0
132: invokestatic  #36
135: new           #29
138: dup
139: invokespecial #30
142: ldc           #31
144: invokevirtual #32
147: aload_3
148: invokevirtual #32
151: ldc           #68
153: invokevirtual #32
156: invokevirtual #35
159: aload_3
160: ldc           #10
162: invokestatic  #53
165: return
Exception table:
from    to  target type
69    84    87   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0086
Start line: 1774
End line: 0
Method source code: 
    public void test0086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0086");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.defaultDescPad = '4';
        helpFormatter0.setNewLine("");
        helpFormatter0.setSyntaxPrefix("");
        java.lang.String str10 = helpFormatter0.getSyntaxPrefix();
        helpFormatter0.setWidth((-2));
        org.apache.commons.cli.Options options15 = null;
        try {
            helpFormatter0.printHelp("                                                                                                 ", " ", options15, "usage: ", false);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #177
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #22
36: istore_2
37: aload_1
38: ldc           #10
40: putfield      #23
43: aload_1
44: bipush        52
46: putfield      #76
49: aload_1
50: ldc           #10
52: invokevirtual #131
55: aload_1
56: ldc           #10
58: invokevirtual #39
61: aload_1
62: invokevirtual #102
65: astore_3
66: aload_1
67: bipush        -2
69: invokevirtual #156
72: aconst_null
73: astore        4
75: aload_1
76: ldc           #141
78: ldc           #24
80: aload         4
82: ldc           #12
84: iconst_0
85: invokevirtual #73
88: ldc           #178
90: invokestatic  #15
93: goto          98
96: astore        5
98: new           #29
101: dup
102: invokespecial #30
105: ldc           #31
107: invokevirtual #32
110: iload_2
111: invokevirtual #33
114: ldc           #34
116: invokevirtual #32
119: iconst_1
120: invokevirtual #33
123: ldc           #31
125: invokevirtual #32
128: invokevirtual #35
131: iload_2
132: iconst_1
133: if_icmpne     140
136: iconst_1
137: goto          141
140: iconst_0
141: invokestatic  #36
144: new           #29
147: dup
148: invokespecial #30
151: ldc           #31
153: invokevirtual #32
156: aload_3
157: invokevirtual #32
160: ldc           #68
162: invokevirtual #32
165: invokevirtual #35
168: aload_3
169: ldc           #10
171: invokestatic  #53
174: return
Exception table:
from    to  target type
75    93    96   Class java/lang/StringIndexOutOfBoundsException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0087
Start line: 1798
End line: 0
Method source code: 
    public void test0087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0087");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.lang.String str1 = helpFormatter0.getArgName();
        helpFormatter0.setSyntaxPrefix("--");
        org.apache.commons.cli.Options options6 = null;
        try {
            helpFormatter0.printHelp("", "                                                                                                 ", options6, "");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: cmdLineSyntax not provided");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "arg" + "'", str1, "arg");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #179
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #104
36: astore_2
37: aload_1
38: ldc           #44
40: invokevirtual #39
43: aconst_null
44: astore_3
45: aload_1
46: ldc           #10
48: ldc           #141
50: aload_3
51: ldc           #10
53: invokevirtual #13
56: ldc           #27
58: invokestatic  #15
61: goto          66
64: astore        4
66: new           #29
69: dup
70: invokespecial #30
73: ldc           #31
75: invokevirtual #32
78: aload_2
79: invokevirtual #32
82: ldc           #78
84: invokevirtual #32
87: invokevirtual #35
90: aload_2
91: ldc           #79
93: invokestatic  #53
96: return
Exception table:
from    to  target type
45    61    64   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0088
Start line: 1816
End line: 0
Method source code: 
    public void test0088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0088");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str6 = helpFormatter0.getNewLine();
        java.util.Comparator comparator7 = helpFormatter0.getOptionComparator();
        org.apache.commons.cli.HelpFormatter helpFormatter8 = new org.apache.commons.cli.HelpFormatter();
        int int9 = helpFormatter8.getLeftPadding();
        helpFormatter8.defaultNewLine = "";
        java.lang.String str12 = helpFormatter8.defaultOptPrefix;
        helpFormatter8.setLongOptPrefix(" ");
        helpFormatter8.defaultDescPad = (short) 10;
        java.lang.String str17 = helpFormatter8.defaultArgName;
        java.util.Comparator comparator18 = helpFormatter8.optionComparator;
        helpFormatter0.setOptionComparator(comparator18);
        helpFormatter0.defaultSyntaxPrefix = "                                                                                                 ";
        java.io.PrintWriter printWriter22 = null;
        org.apache.commons.cli.Options options26 = null;
        try {
            helpFormatter0.printHelp(printWriter22, 10, "usage: ", "usage: ", options26, 3, 10, " ");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\n" + "'", str6, "\n");
        org.junit.Assert.assertNotNull(comparator7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "-" + "'", str12, "-");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "arg" + "'", str17, "arg");
        org.junit.Assert.assertNotNull(comparator18);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #180
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: ldc           #10
35: invokevirtual #11
38: aload_1
39: ldc           #10
41: putfield      #55
44: aload_1
45: getfield      #55
48: astore_2
49: aload_1
50: invokevirtual #72
53: astore_3
54: aload_1
55: invokevirtual #106
58: astore        4
60: new           #8
63: dup
64: invokespecial #9
67: astore        5
69: aload         5
71: invokevirtual #22
74: istore        6
76: aload         5
78: ldc           #10
80: putfield      #23
83: aload         5
85: getfield      #63
88: astore        7
90: aload         5
92: ldc           #24
94: invokevirtual #49
97: aload         5
99: bipush        10
101: putfield      #76
104: aload         5
106: getfield      #77
109: astore        8
111: aload         5
113: getfield      #47
116: astore        9
118: aload_1
119: aload         9
121: invokevirtual #152
124: aload_1
125: ldc           #141
127: putfield      #97
130: aconst_null
131: astore        10
133: aconst_null
134: astore        11
136: aload_1
137: aload         10
139: bipush        10
141: ldc           #12
143: ldc           #12
145: aload         11
147: iconst_3
148: bipush        10
150: ldc           #24
152: invokevirtual #42
155: ldc           #14
157: invokestatic  #15
160: goto          165
163: astore        12
165: new           #29
168: dup
169: invokespecial #30
172: ldc           #31
174: invokevirtual #32
177: aload_2
178: invokevirtual #32
181: ldc           #68
183: invokevirtual #32
186: invokevirtual #35
189: aload_2
190: ldc           #10
192: invokestatic  #53
195: new           #29
198: dup
199: invokespecial #30
202: ldc           #31
204: invokevirtual #32
207: aload_3
208: invokevirtual #32
211: ldc           #74
213: invokevirtual #32
216: invokevirtual #35
219: aload_3
220: ldc           #65
222: invokestatic  #53
225: aload         4
227: invokestatic  #51
230: new           #29
233: dup
234: invokespecial #30
237: ldc           #31
239: invokevirtual #32
242: iload         6
244: invokevirtual #33
247: ldc           #34
249: invokevirtual #32
252: iconst_1
253: invokevirtual #33
256: ldc           #31
258: invokevirtual #32
261: invokevirtual #35
264: iload         6
266: iconst_1
267: if_icmpne     274
270: iconst_1
271: goto          275
274: iconst_0
275: invokestatic  #36
278: new           #29
281: dup
282: invokespecial #30
285: ldc           #31
287: invokevirtual #32
290: aload         7
292: invokevirtual #32
295: ldc           #66
297: invokevirtual #32
300: invokevirtual #35
303: aload         7
305: ldc           #67
307: invokestatic  #53
310: new           #29
313: dup
314: invokespecial #30
317: ldc           #31
319: invokevirtual #32
322: aload         8
324: invokevirtual #32
327: ldc           #78
329: invokevirtual #32
332: invokevirtual #35
335: aload         8
337: ldc           #79
339: invokestatic  #53
342: aload         9
344: invokestatic  #51
347: return
Exception table:
from    to  target type
136   160   163   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0089
Start line: 1854
End line: 0
Method source code: 
    public void test0089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0089");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.getArgName();
        java.io.PrintWriter printWriter3 = null;
        org.apache.commons.cli.Options options7 = null;
        try {
            helpFormatter0.printHelp(printWriter3, 74, "-", "--", options7, (int) (short) -1, (int) (byte) -1, "--");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "arg" + "'", str2, "arg");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #181
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #22
36: istore_2
37: aload_1
38: invokevirtual #104
41: astore_3
42: aconst_null
43: astore        4
45: aconst_null
46: astore        5
48: aload_1
49: aload         4
51: bipush        74
53: ldc           #67
55: ldc           #44
57: aload         5
59: iconst_m1
60: iconst_m1
61: ldc           #44
63: invokevirtual #42
66: ldc           #14
68: invokestatic  #15
71: goto          76
74: astore        6
76: new           #29
79: dup
80: invokespecial #30
83: ldc           #31
85: invokevirtual #32
88: iload_2
89: invokevirtual #33
92: ldc           #34
94: invokevirtual #32
97: iconst_1
98: invokevirtual #33
101: ldc           #31
103: invokevirtual #32
106: invokevirtual #35
109: iload_2
110: iconst_1
111: if_icmpne     118
114: iconst_1
115: goto          119
118: iconst_0
119: invokestatic  #36
122: new           #29
125: dup
126: invokespecial #30
129: ldc           #31
131: invokevirtual #32
134: aload_3
135: invokevirtual #32
138: ldc           #78
140: invokevirtual #32
143: invokevirtual #35
146: aload_3
147: ldc           #79
149: invokestatic  #53
152: return
Exception table:
from    to  target type
48    71    74   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0090
Start line: 1874
End line: 0
Method source code: 
    public void test0090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0090");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.defaultLongOptPrefix;
        int int6 = helpFormatter0.findWrapPos("--", (int) (byte) -1, 0);
        org.apache.commons.cli.Options options10 = null;
        try {
            helpFormatter0.printHelp(10, "                                                                                                 ", "arg", options10, "usage: ");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "--" + "'", str2, "--");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #182
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #22
36: istore_2
37: aload_1
38: getfield      #55
41: astore_3
42: aload_1
43: ldc           #44
45: iconst_m1
46: iconst_0
47: invokevirtual #93
50: istore        4
52: aconst_null
53: astore        5
55: aload_1
56: bipush        10
58: ldc           #141
60: ldc           #79
62: aload         5
64: ldc           #12
66: invokevirtual #45
69: ldc           #14
71: invokestatic  #15
74: goto          79
77: astore        6
79: new           #29
82: dup
83: invokespecial #30
86: ldc           #31
88: invokevirtual #32
91: iload_2
92: invokevirtual #33
95: ldc           #34
97: invokevirtual #32
100: iconst_1
101: invokevirtual #33
104: ldc           #31
106: invokevirtual #32
109: invokevirtual #35
112: iload_2
113: iconst_1
114: if_icmpne     121
117: iconst_1
118: goto          122
121: iconst_0
122: invokestatic  #36
125: new           #29
128: dup
129: invokespecial #30
132: ldc           #31
134: invokevirtual #32
137: aload_3
138: invokevirtual #32
141: ldc           #52
143: invokevirtual #32
146: invokevirtual #35
149: aload_3
150: ldc           #44
152: invokestatic  #53
155: new           #29
158: dup
159: invokespecial #30
162: ldc           #31
164: invokevirtual #32
167: iload         4
169: invokevirtual #33
172: ldc           #34
174: invokevirtual #32
177: iconst_m1
178: invokevirtual #33
181: ldc           #31
183: invokevirtual #32
186: invokevirtual #35
189: iload         4
191: iconst_m1
192: if_icmpne     199
195: iconst_1
196: goto          200
199: iconst_0
200: invokestatic  #36
203: return
Exception table:
from    to  target type
55    74    77   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0091
Start line: 1895
End line: 0
Method source code: 
    public void test0091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0091");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setLongOptPrefix(" ");
        helpFormatter0.defaultDescPad = (short) 10;
        java.lang.String str9 = helpFormatter0.defaultArgName;
        java.lang.StringBuffer stringBuffer10 = null;
        org.apache.commons.cli.Options options12 = null;
        try {
            java.lang.StringBuffer stringBuffer15 = helpFormatter0.renderOptions(stringBuffer10, (int) 'a', options12, (int) (byte) -1, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: null");
        } catch (java.lang.NegativeArraySizeException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "arg" + "'", str9, "arg");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #183
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #22
36: istore_2
37: aload_1
38: ldc           #10
40: putfield      #23
43: aload_1
44: getfield      #63
47: astore_3
48: aload_1
49: ldc           #24
51: invokevirtual #49
54: aload_1
55: bipush        10
57: putfield      #76
60: aload_1
61: getfield      #77
64: astore        4
66: aconst_null
67: astore        5
69: aconst_null
70: astore        6
72: aload_1
73: aload         5
75: bipush        97
77: aload         6
79: iconst_m1
80: bipush        10
82: invokevirtual #98
85: astore        7
87: ldc           #19
89: invokestatic  #15
92: goto          97
95: astore        7
97: new           #29
100: dup
101: invokespecial #30
104: ldc           #31
106: invokevirtual #32
109: iload_2
110: invokevirtual #33
113: ldc           #34
115: invokevirtual #32
118: iconst_1
119: invokevirtual #33
122: ldc           #31
124: invokevirtual #32
127: invokevirtual #35
130: iload_2
131: iconst_1
132: if_icmpne     139
135: iconst_1
136: goto          140
139: iconst_0
140: invokestatic  #36
143: new           #29
146: dup
147: invokespecial #30
150: ldc           #31
152: invokevirtual #32
155: aload_3
156: invokevirtual #32
159: ldc           #66
161: invokevirtual #32
164: invokevirtual #35
167: aload_3
168: ldc           #67
170: invokestatic  #53
173: new           #29
176: dup
177: invokespecial #30
180: ldc           #31
182: invokevirtual #32
185: aload         4
187: invokevirtual #32
190: ldc           #78
192: invokevirtual #32
195: invokevirtual #35
198: aload         4
200: ldc           #79
202: invokestatic  #53
205: return
Exception table:
from    to  target type
72    92    95   Class java/lang/NegativeArraySizeException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0092
Start line: 1920
End line: 0
Method source code: 
    public void test0092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0092");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.util.Comparator comparator1 = helpFormatter0.optionComparator;
        int int2 = helpFormatter0.getLeftPadding();
        int int3 = helpFormatter0.defaultLeftPad;
        java.lang.String str5 = helpFormatter0.createPadding((int) 'a');
        org.apache.commons.cli.HelpFormatter helpFormatter6 = new org.apache.commons.cli.HelpFormatter();
        int int7 = helpFormatter6.getLeftPadding();
        helpFormatter6.defaultNewLine = "";
        helpFormatter6.defaultDescPad = '4';
        helpFormatter6.setNewLine("");
        int int17 = helpFormatter6.findWrapPos("\n", (int) ' ', 3);
        java.util.Comparator comparator18 = helpFormatter6.optionComparator;
        helpFormatter0.setOptionComparator(comparator18);
        int int20 = helpFormatter0.defaultLeftPad;
        org.junit.Assert.assertNotNull(comparator1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "                                                                                                 " + "'", str5, "                                                                                                 ");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(comparator18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #184
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: getfield      #47
36: astore_2
37: aload_1
38: invokevirtual #22
41: istore_3
42: aload_1
43: getfield      #60
46: istore        4
48: aload_1
49: bipush        97
51: invokevirtual #108
54: astore        5
56: new           #8
59: dup
60: invokespecial #9
63: astore        6
65: aload         6
67: invokevirtual #22
70: istore        7
72: aload         6
74: ldc           #10
76: putfield      #23
79: aload         6
81: bipush        52
83: putfield      #76
86: aload         6
88: ldc           #10
90: invokevirtual #131
93: aload         6
95: ldc           #65
97: bipush        32
99: iconst_3
100: invokevirtual #93
103: istore        8
105: aload         6
107: getfield      #47
110: astore        9
112: aload_1
113: aload         9
115: invokevirtual #152
118: aload_1
119: getfield      #60
122: istore        10
124: aload_2
125: invokestatic  #51
128: new           #29
131: dup
132: invokespecial #30
135: ldc           #31
137: invokevirtual #32
140: iload_3
141: invokevirtual #33
144: ldc           #34
146: invokevirtual #32
149: iconst_1
150: invokevirtual #33
153: ldc           #31
155: invokevirtual #32
158: invokevirtual #35
161: iload_3
162: iconst_1
163: if_icmpne     170
166: iconst_1
167: goto          171
170: iconst_0
171: invokestatic  #36
174: new           #29
177: dup
178: invokespecial #30
181: ldc           #31
183: invokevirtual #32
186: iload         4
188: invokevirtual #33
191: ldc           #34
193: invokevirtual #32
196: iconst_1
197: invokevirtual #33
200: ldc           #31
202: invokevirtual #32
205: invokevirtual #35
208: iload         4
210: iconst_1
211: if_icmpne     218
214: iconst_1
215: goto          219
218: iconst_0
219: invokestatic  #36
222: new           #29
225: dup
226: invokespecial #30
229: ldc           #31
231: invokevirtual #32
234: aload         5
236: invokevirtual #32
239: ldc           #185
241: invokevirtual #32
244: invokevirtual #35
247: aload         5
249: ldc           #141
251: invokestatic  #53
254: new           #29
257: dup
258: invokespecial #30
261: ldc           #31
263: invokevirtual #32
266: iload         7
268: invokevirtual #33
271: ldc           #34
273: invokevirtual #32
276: iconst_1
277: invokevirtual #33
280: ldc           #31
282: invokevirtual #32
285: invokevirtual #35
288: iload         7
290: iconst_1
291: if_icmpne     298
294: iconst_1
295: goto          299
298: iconst_0
299: invokestatic  #36
302: new           #29
305: dup
306: invokespecial #30
309: ldc           #31
311: invokevirtual #32
314: iload         8
316: invokevirtual #33
319: ldc           #34
321: invokevirtual #32
324: iconst_m1
325: invokevirtual #33
328: ldc           #31
330: invokevirtual #32
333: invokevirtual #35
336: iload         8
338: iconst_m1
339: if_icmpne     346
342: iconst_1
343: goto          347
346: iconst_0
347: invokestatic  #36
350: aload         9
352: invokestatic  #51
355: new           #29
358: dup
359: invokespecial #30
362: ldc           #31
364: invokevirtual #32
367: iload         10
369: invokevirtual #33
372: ldc           #34
374: invokevirtual #32
377: iconst_1
378: invokevirtual #33
381: ldc           #31
383: invokevirtual #32
386: invokevirtual #35
389: iload         10
391: iconst_1
392: if_icmpne     399
395: iconst_1
396: goto          400
399: iconst_0
400: invokestatic  #36
403: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0093
Start line: 1948
End line: 0
Method source code: 
    public void test0093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0093");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.util.Comparator comparator1 = helpFormatter0.optionComparator;
        int int2 = helpFormatter0.getLeftPadding();
        int int6 = helpFormatter0.findWrapPos("-", 100, (-1));
        helpFormatter0.defaultWidth = (short) 100;
        java.lang.StringBuffer stringBuffer9 = null;
        org.apache.commons.cli.Options options11 = null;
        try {
            java.lang.StringBuffer stringBuffer14 = helpFormatter0.renderOptions(stringBuffer9, (int) ' ', options11, (int) (short) 0, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(comparator1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #186
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: getfield      #47
36: astore_2
37: aload_1
38: invokevirtual #22
41: istore_3
42: aload_1
43: ldc           #67
45: bipush        100
47: iconst_m1
48: invokevirtual #93
51: istore        4
53: aload_1
54: bipush        100
56: putfield      #110
59: aconst_null
60: astore        5
62: aconst_null
63: astore        6
65: aload_1
66: aload         5
68: bipush        32
70: aload         6
72: iconst_0
73: bipush        10
75: invokevirtual #98
78: astore        7
80: ldc           #14
82: invokestatic  #15
85: goto          90
88: astore        7
90: aload_2
91: invokestatic  #51
94: new           #29
97: dup
98: invokespecial #30
101: ldc           #31
103: invokevirtual #32
106: iload_3
107: invokevirtual #33
110: ldc           #34
112: invokevirtual #32
115: iconst_1
116: invokevirtual #33
119: ldc           #31
121: invokevirtual #32
124: invokevirtual #35
127: iload_3
128: iconst_1
129: if_icmpne     136
132: iconst_1
133: goto          137
136: iconst_0
137: invokestatic  #36
140: new           #29
143: dup
144: invokespecial #30
147: ldc           #31
149: invokevirtual #32
152: iload         4
154: invokevirtual #33
157: ldc           #34
159: invokevirtual #32
162: iconst_m1
163: invokevirtual #33
166: ldc           #31
168: invokevirtual #32
171: invokevirtual #35
174: iload         4
176: iconst_m1
177: if_icmpne     184
180: iconst_1
181: goto          185
184: iconst_0
185: invokestatic  #36
188: return
Exception table:
from    to  target type
65    85    88   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0094
Start line: 1971
End line: 0
Method source code: 
    public void test0094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0094");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        java.lang.String str6 = helpFormatter0.getOptPrefix();
        java.lang.String str7 = helpFormatter0.getNewLine();
        helpFormatter0.defaultOptPrefix = "";
        helpFormatter0.setNewLine("");
        helpFormatter0.defaultSyntaxPrefix = "usage: ";
        int int14 = helpFormatter0.getDescPadding();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "-" + "'", str6, "-");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 10 + "'", int14 == 10);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #187
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #22
36: istore_2
37: aload_1
38: ldc           #10
40: putfield      #23
43: aload_1
44: bipush        10
46: invokevirtual #38
49: aload_1
50: invokevirtual #123
53: astore_3
54: aload_1
55: invokevirtual #72
58: astore        4
60: aload_1
61: ldc           #10
63: putfield      #63
66: aload_1
67: ldc           #10
69: invokevirtual #131
72: aload_1
73: ldc           #12
75: putfield      #97
78: aload_1
79: invokevirtual #118
82: istore        5
84: new           #29
87: dup
88: invokespecial #30
91: ldc           #31
93: invokevirtual #32
96: iload_2
97: invokevirtual #33
100: ldc           #34
102: invokevirtual #32
105: iconst_1
106: invokevirtual #33
109: ldc           #31
111: invokevirtual #32
114: invokevirtual #35
117: iload_2
118: iconst_1
119: if_icmpne     126
122: iconst_1
123: goto          127
126: iconst_0
127: invokestatic  #36
130: new           #29
133: dup
134: invokespecial #30
137: ldc           #31
139: invokevirtual #32
142: aload_3
143: invokevirtual #32
146: ldc           #66
148: invokevirtual #32
151: invokevirtual #35
154: aload_3
155: ldc           #67
157: invokestatic  #53
160: new           #29
163: dup
164: invokespecial #30
167: ldc           #31
169: invokevirtual #32
172: aload         4
174: invokevirtual #32
177: ldc           #68
179: invokevirtual #32
182: invokevirtual #35
185: aload         4
187: ldc           #10
189: invokestatic  #53
192: new           #29
195: dup
196: invokespecial #30
199: ldc           #31
201: invokevirtual #32
204: iload         5
206: invokevirtual #33
209: ldc           #34
211: invokevirtual #32
214: bipush        10
216: invokevirtual #33
219: ldc           #31
221: invokevirtual #32
224: invokevirtual #35
227: iload         5
229: bipush        10
231: if_icmpne     238
234: iconst_1
235: goto          239
238: iconst_0
239: invokestatic  #36
242: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0095
Start line: 1991
End line: 0
Method source code: 
    public void test0095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0095");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        int int4 = helpFormatter0.defaultWidth;
        java.lang.String str5 = helpFormatter0.getNewLine();
        java.lang.String str6 = helpFormatter0.defaultNewLine;
        java.lang.StringBuffer stringBuffer7 = null;
        try {
            java.lang.StringBuffer stringBuffer11 = helpFormatter0.renderWrappedText(stringBuffer7, 0, 10, "                                                                                                 ");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 74 + "'", int4 == 74);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #188
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #22
36: istore_2
37: aload_1
38: ldc           #10
40: putfield      #23
43: aload_1
44: getfield      #110
47: istore_3
48: aload_1
49: invokevirtual #72
52: astore        4
54: aload_1
55: getfield      #23
58: astore        5
60: aconst_null
61: astore        6
63: aload_1
64: aload         6
66: iconst_0
67: bipush        10
69: ldc           #141
71: invokevirtual #70
74: astore        7
76: ldc           #14
78: invokestatic  #15
81: goto          86
84: astore        7
86: new           #29
89: dup
90: invokespecial #30
93: ldc           #31
95: invokevirtual #32
98: iload_2
99: invokevirtual #33
102: ldc           #34
104: invokevirtual #32
107: iconst_1
108: invokevirtual #33
111: ldc           #31
113: invokevirtual #32
116: invokevirtual #35
119: iload_2
120: iconst_1
121: if_icmpne     128
124: iconst_1
125: goto          129
128: iconst_0
129: invokestatic  #36
132: new           #29
135: dup
136: invokespecial #30
139: ldc           #31
141: invokevirtual #32
144: iload_3
145: invokevirtual #33
148: ldc           #34
150: invokevirtual #32
153: bipush        74
155: invokevirtual #33
158: ldc           #31
160: invokevirtual #32
163: invokevirtual #35
166: iload_3
167: bipush        74
169: if_icmpne     176
172: iconst_1
173: goto          177
176: iconst_0
177: invokestatic  #36
180: new           #29
183: dup
184: invokespecial #30
187: ldc           #31
189: invokevirtual #32
192: aload         4
194: invokevirtual #32
197: ldc           #68
199: invokevirtual #32
202: invokevirtual #35
205: aload         4
207: ldc           #10
209: invokestatic  #53
212: new           #29
215: dup
216: invokespecial #30
219: ldc           #31
221: invokevirtual #32
224: aload         5
226: invokevirtual #32
229: ldc           #68
231: invokevirtual #32
234: invokevirtual #35
237: aload         5
239: ldc           #10
241: invokestatic  #53
244: return
Exception table:
from    to  target type
63    81    84   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0096
Start line: 2015
End line: 0
Method source code: 
    public void test0096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0096");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.util.Comparator comparator1 = helpFormatter0.optionComparator;
        int int2 = helpFormatter0.defaultLeftPad;
        org.apache.commons.cli.Options options6 = null;
        try {
            helpFormatter0.printHelp((int) (byte) 10, "arg", "", options6, "--");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(comparator1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #189
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: getfield      #47
36: astore_2
37: aload_1
38: getfield      #60
41: istore_3
42: aconst_null
43: astore        4
45: aload_1
46: bipush        10
48: ldc           #79
50: ldc           #10
52: aload         4
54: ldc           #44
56: invokevirtual #45
59: ldc           #14
61: invokestatic  #15
64: goto          69
67: astore        5
69: aload_2
70: invokestatic  #51
73: new           #29
76: dup
77: invokespecial #30
80: ldc           #31
82: invokevirtual #32
85: iload_3
86: invokevirtual #33
89: ldc           #34
91: invokevirtual #32
94: iconst_1
95: invokevirtual #33
98: ldc           #31
100: invokevirtual #32
103: invokevirtual #35
106: iload_3
107: iconst_1
108: if_icmpne     115
111: iconst_1
112: goto          116
115: iconst_0
116: invokestatic  #36
119: return
Exception table:
from    to  target type
45    64    67   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0097
Start line: 2034
End line: 0
Method source code: 
    public void test0097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0097");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.defaultLongOptPrefix = "hi!";
        org.apache.commons.cli.Options options6 = null;
        try {
            helpFormatter0.printHelp(1, "\n", "hi!", options6, "-", true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #190
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: ldc           #25
35: putfield      #55
38: aconst_null
39: astore_2
40: aload_1
41: iconst_1
42: ldc           #65
44: ldc           #25
46: aload_2
47: ldc           #67
49: iconst_1
50: invokevirtual #26
53: ldc           #14
55: invokestatic  #15
58: goto          62
61: astore_3
62: return
Exception table:
from    to  target type
40    58    61   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0098
Start line: 2050
End line: 0
Method source code: 
    public void test0098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0098");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.cli.Options options6 = null;
        try {
            java.lang.StringBuffer stringBuffer9 = helpFormatter0.renderOptions(stringBuffer4, (-2), options6, (int) (short) 100, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #191
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #22
36: istore_2
37: aload_1
38: ldc           #10
40: putfield      #23
43: aconst_null
44: astore_3
45: aconst_null
46: astore        4
48: aload_1
49: aload_3
50: bipush        -2
52: aload         4
54: bipush        100
56: iconst_0
57: invokevirtual #98
60: astore        5
62: ldc           #14
64: invokestatic  #15
67: goto          72
70: astore        5
72: new           #29
75: dup
76: invokespecial #30
79: ldc           #31
81: invokevirtual #32
84: iload_2
85: invokevirtual #33
88: ldc           #34
90: invokevirtual #32
93: iconst_1
94: invokevirtual #33
97: ldc           #31
99: invokevirtual #32
102: invokevirtual #35
105: iload_2
106: iconst_1
107: if_icmpne     114
110: iconst_1
111: goto          115
114: iconst_0
115: invokestatic  #36
118: return
Exception table:
from    to  target type
48    67    70   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0099
Start line: 2069
End line: 0
Method source code: 
    public void test0099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0099");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setLongOptPrefix(" ");
        java.lang.String str7 = helpFormatter0.getLongOptPrefix();
        helpFormatter0.setLeftPadding((int) ' ');
        org.apache.commons.cli.Options options12 = null;
        try {
            helpFormatter0.printHelp("                                                                                                 ", "usage: ", options12, "--", false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + " " + "'", str7, " ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #192
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #22
36: istore_2
37: aload_1
38: ldc           #10
40: putfield      #23
43: aload_1
44: getfield      #63
47: astore_3
48: aload_1
49: ldc           #24
51: invokevirtual #49
54: aload_1
55: invokevirtual #48
58: astore        4
60: aload_1
61: bipush        32
63: invokevirtual #193
66: aconst_null
67: astore        5
69: aload_1
70: ldc           #141
72: ldc           #12
74: aload         5
76: ldc           #44
78: iconst_0
79: invokevirtual #73
82: ldc           #14
84: invokestatic  #15
87: goto          92
90: astore        6
92: new           #29
95: dup
96: invokespecial #30
99: ldc           #31
101: invokevirtual #32
104: iload_2
105: invokevirtual #33
108: ldc           #34
110: invokevirtual #32
113: iconst_1
114: invokevirtual #33
117: ldc           #31
119: invokevirtual #32
122: invokevirtual #35
125: iload_2
126: iconst_1
127: if_icmpne     134
130: iconst_1
131: goto          135
134: iconst_0
135: invokestatic  #36
138: new           #29
141: dup
142: invokespecial #30
145: ldc           #31
147: invokevirtual #32
150: aload_3
151: invokevirtual #32
154: ldc           #66
156: invokevirtual #32
159: invokevirtual #35
162: aload_3
163: ldc           #67
165: invokestatic  #53
168: new           #29
171: dup
172: invokespecial #30
175: ldc           #31
177: invokevirtual #32
180: aload         4
182: invokevirtual #32
185: ldc           #88
187: invokevirtual #32
190: invokevirtual #35
193: aload         4
195: ldc           #24
197: invokestatic  #53
200: return
Exception table:
from    to  target type
69    87    90   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0100
Start line: 2093
End line: 0
Method source code: 
    public void test0100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0100");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.getArgName();
        helpFormatter0.setSyntaxPrefix("usage: ");
        java.lang.String str5 = helpFormatter0.defaultSyntaxPrefix;
        helpFormatter0.setNewLine("");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "arg" + "'", str2, "arg");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "usage: " + "'", str5, "usage: ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #194
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #22
36: istore_2
37: aload_1
38: invokevirtual #104
41: astore_3
42: aload_1
43: ldc           #12
45: invokevirtual #39
48: aload_1
49: getfield      #97
52: astore        4
54: aload_1
55: ldc           #10
57: invokevirtual #131
60: new           #29
63: dup
64: invokespecial #30
67: ldc           #31
69: invokevirtual #32
72: iload_2
73: invokevirtual #33
76: ldc           #34
78: invokevirtual #32
81: iconst_1
82: invokevirtual #33
85: ldc           #31
87: invokevirtual #32
90: invokevirtual #35
93: iload_2
94: iconst_1
95: if_icmpne     102
98: iconst_1
99: goto          103
102: iconst_0
103: invokestatic  #36
106: new           #29
109: dup
110: invokespecial #30
113: ldc           #31
115: invokevirtual #32
118: aload_3
119: invokevirtual #32
122: ldc           #78
124: invokevirtual #32
127: invokevirtual #35
130: aload_3
131: ldc           #79
133: invokestatic  #53
136: new           #29
139: dup
140: invokespecial #30
143: ldc           #31
145: invokevirtual #32
148: aload         4
150: invokevirtual #32
153: ldc           #99
155: invokevirtual #32
158: invokevirtual #35
161: aload         4
163: ldc           #12
165: invokestatic  #53
168: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0101
Start line: 2108
End line: 0
Method source code: 
    public void test0101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0101");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        java.io.PrintWriter printWriter6 = null;
        try {
            helpFormatter0.printUsage(printWriter6, (int) 'a', "-");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "--" + "'", str5, "--");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #195
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #22
36: istore_2
37: aload_1
38: ldc           #10
40: putfield      #23
43: aload_1
44: getfield      #63
47: astore_3
48: aload_1
49: getfield      #55
52: astore        4
54: aconst_null
55: astore        5
57: aload_1
58: aload         5
60: bipush        97
62: ldc           #67
64: invokevirtual #87
67: ldc           #14
69: invokestatic  #15
72: goto          77
75: astore        6
77: new           #29
80: dup
81: invokespecial #30
84: ldc           #31
86: invokevirtual #32
89: iload_2
90: invokevirtual #33
93: ldc           #34
95: invokevirtual #32
98: iconst_1
99: invokevirtual #33
102: ldc           #31
104: invokevirtual #32
107: invokevirtual #35
110: iload_2
111: iconst_1
112: if_icmpne     119
115: iconst_1
116: goto          120
119: iconst_0
120: invokestatic  #36
123: new           #29
126: dup
127: invokespecial #30
130: ldc           #31
132: invokevirtual #32
135: aload_3
136: invokevirtual #32
139: ldc           #66
141: invokevirtual #32
144: invokevirtual #35
147: aload_3
148: ldc           #67
150: invokestatic  #53
153: new           #29
156: dup
157: invokespecial #30
160: ldc           #31
162: invokevirtual #32
165: aload         4
167: invokevirtual #32
170: ldc           #52
172: invokevirtual #32
175: invokevirtual #35
178: aload         4
180: ldc           #44
182: invokestatic  #53
185: return
Exception table:
from    to  target type
57    72    75   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0102
Start line: 2130
End line: 0
Method source code: 
    public void test0102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0102");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.lang.String str1 = helpFormatter0.defaultSyntaxPrefix;
        java.util.Comparator comparator2 = helpFormatter0.optionComparator;
        java.lang.Class<?> wildcardClass3 = comparator2.getClass();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "usage: " + "'", str1, "usage: ");
        org.junit.Assert.assertNotNull(comparator2);
        org.junit.Assert.assertNotNull(wildcardClass3);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #196
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: getfield      #97
36: astore_2
37: aload_1
38: getfield      #47
41: astore_3
42: aload_3
43: invokevirtual #56
46: astore        4
48: new           #29
51: dup
52: invokespecial #30
55: ldc           #31
57: invokevirtual #32
60: aload_2
61: invokevirtual #32
64: ldc           #99
66: invokevirtual #32
69: invokevirtual #35
72: aload_2
73: ldc           #12
75: invokestatic  #53
78: aload_3
79: invokestatic  #51
82: aload         4
84: invokestatic  #51
87: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0103
Start line: 2143
End line: 0
Method source code: 
    public void test0103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0103");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.getArgName();
        helpFormatter0.defaultNewLine = "\n";
        helpFormatter0.defaultLeftPad = (byte) -1;
        helpFormatter0.setLongOptSeparator("");
        java.lang.StringBuffer stringBuffer9 = null;
        org.apache.commons.cli.Options options11 = null;
        try {
            java.lang.StringBuffer stringBuffer14 = helpFormatter0.renderOptions(stringBuffer9, 74, options11, (int) (short) 10, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "arg" + "'", str2, "arg");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #197
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #22
36: istore_2
37: aload_1
38: invokevirtual #104
41: astore_3
42: aload_1
43: ldc           #65
45: putfield      #23
48: aload_1
49: iconst_m1
50: putfield      #60
53: aload_1
54: ldc           #10
56: invokevirtual #91
59: aconst_null
60: astore        4
62: aconst_null
63: astore        5
65: aload_1
66: aload         4
68: bipush        74
70: aload         5
72: bipush        10
74: iconst_1
75: invokevirtual #98
78: astore        6
80: ldc           #14
82: invokestatic  #15
85: goto          90
88: astore        6
90: new           #29
93: dup
94: invokespecial #30
97: ldc           #31
99: invokevirtual #32
102: iload_2
103: invokevirtual #33
106: ldc           #34
108: invokevirtual #32
111: iconst_1
112: invokevirtual #33
115: ldc           #31
117: invokevirtual #32
120: invokevirtual #35
123: iload_2
124: iconst_1
125: if_icmpne     132
128: iconst_1
129: goto          133
132: iconst_0
133: invokestatic  #36
136: new           #29
139: dup
140: invokespecial #30
143: ldc           #31
145: invokevirtual #32
148: aload_3
149: invokevirtual #32
152: ldc           #78
154: invokevirtual #32
157: invokevirtual #35
160: aload_3
161: ldc           #79
163: invokestatic  #53
166: return
Exception table:
from    to  target type
65    85    88   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0104
Start line: 2166
End line: 0
Method source code: 
    public void test0104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0104");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        int int6 = helpFormatter0.getLeftPadding();
        helpFormatter0.setLongOptSeparator("\n");
        java.lang.String str9 = helpFormatter0.getLongOptPrefix();
        java.lang.String str10 = helpFormatter0.getLongOptPrefix();
        int int14 = helpFormatter0.findWrapPos("usage: ", (int) 'a', (int) (byte) 0);
        org.apache.commons.cli.HelpFormatter helpFormatter15 = new org.apache.commons.cli.HelpFormatter();
        int int16 = helpFormatter15.getLeftPadding();
        helpFormatter15.defaultNewLine = "";
        helpFormatter15.setDescPadding(10);
        helpFormatter15.defaultArgName = "hi!";
        java.util.Comparator comparator23 = helpFormatter15.getOptionComparator();
        helpFormatter0.setOptionComparator(comparator23);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(comparator23);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #198
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: ldc           #10
35: invokevirtual #11
38: aload_1
39: ldc           #10
41: putfield      #55
44: aload_1
45: getfield      #55
48: astore_2
49: aload_1
50: invokevirtual #22
53: istore_3
54: aload_1
55: ldc           #65
57: invokevirtual #91
60: aload_1
61: invokevirtual #48
64: astore        4
66: aload_1
67: invokevirtual #48
70: astore        5
72: aload_1
73: ldc           #12
75: bipush        97
77: iconst_0
78: invokevirtual #93
81: istore        6
83: new           #8
86: dup
87: invokespecial #9
90: astore        7
92: aload         7
94: invokevirtual #22
97: istore        8
99: aload         7
101: ldc           #10
103: putfield      #23
106: aload         7
108: bipush        10
110: invokevirtual #38
113: aload         7
115: ldc           #25
117: putfield      #77
120: aload         7
122: invokevirtual #106
125: astore        9
127: aload_1
128: aload         9
130: invokevirtual #152
133: new           #29
136: dup
137: invokespecial #30
140: ldc           #31
142: invokevirtual #32
145: aload_2
146: invokevirtual #32
149: ldc           #68
151: invokevirtual #32
154: invokevirtual #35
157: aload_2
158: ldc           #10
160: invokestatic  #53
163: new           #29
166: dup
167: invokespecial #30
170: ldc           #31
172: invokevirtual #32
175: iload_3
176: invokevirtual #33
179: ldc           #34
181: invokevirtual #32
184: iconst_1
185: invokevirtual #33
188: ldc           #31
190: invokevirtual #32
193: invokevirtual #35
196: iload_3
197: iconst_1
198: if_icmpne     205
201: iconst_1
202: goto          206
205: iconst_0
206: invokestatic  #36
209: new           #29
212: dup
213: invokespecial #30
216: ldc           #31
218: invokevirtual #32
221: aload         4
223: invokevirtual #32
226: ldc           #68
228: invokevirtual #32
231: invokevirtual #35
234: aload         4
236: ldc           #10
238: invokestatic  #53
241: new           #29
244: dup
245: invokespecial #30
248: ldc           #31
250: invokevirtual #32
253: aload         5
255: invokevirtual #32
258: ldc           #68
260: invokevirtual #32
263: invokevirtual #35
266: aload         5
268: ldc           #10
270: invokestatic  #53
273: new           #29
276: dup
277: invokespecial #30
280: ldc           #31
282: invokevirtual #32
285: iload         6
287: invokevirtual #33
290: ldc           #34
292: invokevirtual #32
295: iconst_m1
296: invokevirtual #33
299: ldc           #31
301: invokevirtual #32
304: invokevirtual #35
307: iload         6
309: iconst_m1
310: if_icmpne     317
313: iconst_1
314: goto          318
317: iconst_0
318: invokestatic  #36
321: new           #29
324: dup
325: invokespecial #30
328: ldc           #31
330: invokevirtual #32
333: iload         8
335: invokevirtual #33
338: ldc           #34
340: invokevirtual #32
343: iconst_1
344: invokevirtual #33
347: ldc           #31
349: invokevirtual #32
352: invokevirtual #35
355: iload         8
357: iconst_1
358: if_icmpne     365
361: iconst_1
362: goto          366
365: iconst_0
366: invokestatic  #36
369: aload         9
371: invokestatic  #51
374: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0105
Start line: 2195
End line: 0
Method source code: 
    public void test0105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0105");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        java.lang.String str6 = helpFormatter0.defaultNewLine;
        helpFormatter0.setDescPadding(10);
        org.apache.commons.cli.HelpFormatter helpFormatter9 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter9.setOptPrefix("");
        helpFormatter9.defaultLongOptPrefix = "";
        java.lang.String str14 = helpFormatter9.defaultLongOptPrefix;
        java.lang.String str15 = helpFormatter9.getNewLine();
        java.util.Comparator comparator16 = helpFormatter9.getOptionComparator();
        helpFormatter0.optionComparator = comparator16;
        java.io.PrintWriter printWriter18 = null;
        try {
            helpFormatter0.printWrapped(printWriter18, 100, "usage: ");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\n" + "'", str15, "\n");
        org.junit.Assert.assertNotNull(comparator16);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #199
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #22
36: istore_2
37: aload_1
38: ldc           #10
40: putfield      #23
43: aload_1
44: bipush        10
46: invokevirtual #38
49: aload_1
50: getfield      #23
53: astore_3
54: aload_1
55: bipush        10
57: invokevirtual #38
60: new           #8
63: dup
64: invokespecial #9
67: astore        4
69: aload         4
71: ldc           #10
73: invokevirtual #11
76: aload         4
78: ldc           #10
80: putfield      #55
83: aload         4
85: getfield      #55
88: astore        5
90: aload         4
92: invokevirtual #72
95: astore        6
97: aload         4
99: invokevirtual #106
102: astore        7
104: aload_1
105: aload         7
107: putfield      #47
110: aconst_null
111: astore        8
113: aload_1
114: aload         8
116: bipush        100
118: ldc           #12
120: invokevirtual #82
123: ldc           #14
125: invokestatic  #15
128: goto          133
131: astore        9
133: new           #29
136: dup
137: invokespecial #30
140: ldc           #31
142: invokevirtual #32
145: iload_2
146: invokevirtual #33
149: ldc           #34
151: invokevirtual #32
154: iconst_1
155: invokevirtual #33
158: ldc           #31
160: invokevirtual #32
163: invokevirtual #35
166: iload_2
167: iconst_1
168: if_icmpne     175
171: iconst_1
172: goto          176
175: iconst_0
176: invokestatic  #36
179: new           #29
182: dup
183: invokespecial #30
186: ldc           #31
188: invokevirtual #32
191: aload_3
192: invokevirtual #32
195: ldc           #68
197: invokevirtual #32
200: invokevirtual #35
203: aload_3
204: ldc           #10
206: invokestatic  #53
209: new           #29
212: dup
213: invokespecial #30
216: ldc           #31
218: invokevirtual #32
221: aload         5
223: invokevirtual #32
226: ldc           #68
228: invokevirtual #32
231: invokevirtual #35
234: aload         5
236: ldc           #10
238: invokestatic  #53
241: new           #29
244: dup
245: invokespecial #30
248: ldc           #31
250: invokevirtual #32
253: aload         6
255: invokevirtual #32
258: ldc           #74
260: invokevirtual #32
263: invokevirtual #35
266: aload         6
268: ldc           #65
270: invokestatic  #53
273: aload         7
275: invokestatic  #51
278: return
Exception table:
from    to  target type
113   128   131   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0106
Start line: 2227
End line: 0
Method source code: 
    public void test0106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0106");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        org.apache.commons.cli.Options options4 = null;
        try {
            helpFormatter0.printHelp("arg", options4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #200
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: ldc           #10
35: invokevirtual #11
38: aconst_null
39: astore_2
40: aload_1
41: ldc           #79
43: aload_2
44: invokevirtual #50
47: ldc           #14
49: invokestatic  #15
52: goto          56
55: astore_3
56: return
Exception table:
from    to  target type
40    52    55   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0107
Start line: 2243
End line: 0
Method source code: 
    public void test0107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0107");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        helpFormatter0.defaultArgName = "hi!";
        helpFormatter0.defaultWidth = 1;
        helpFormatter0.setLeftPadding(3);
        int int15 = helpFormatter0.findWrapPos("usage: ", 74, 10);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #201
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #22
36: istore_2
37: aload_1
38: ldc           #10
40: putfield      #23
43: aload_1
44: bipush        10
46: invokevirtual #38
49: aload_1
50: ldc           #25
52: putfield      #77
55: aload_1
56: iconst_1
57: putfield      #110
60: aload_1
61: iconst_3
62: invokevirtual #193
65: aload_1
66: ldc           #12
68: bipush        74
70: bipush        10
72: invokevirtual #93
75: istore_3
76: new           #29
79: dup
80: invokespecial #30
83: ldc           #31
85: invokevirtual #32
88: iload_2
89: invokevirtual #33
92: ldc           #34
94: invokevirtual #32
97: iconst_1
98: invokevirtual #33
101: ldc           #31
103: invokevirtual #32
106: invokevirtual #35
109: iload_2
110: iconst_1
111: if_icmpne     118
114: iconst_1
115: goto          119
118: iconst_0
119: invokestatic  #36
122: new           #29
125: dup
126: invokespecial #30
129: ldc           #31
131: invokevirtual #32
134: iload_3
135: invokevirtual #33
138: ldc           #34
140: invokevirtual #32
143: iconst_m1
144: invokevirtual #33
147: ldc           #31
149: invokevirtual #32
152: invokevirtual #35
155: iload_3
156: iconst_m1
157: if_icmpne     164
160: iconst_1
161: goto          165
164: iconst_0
165: invokestatic  #36
168: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0108
Start line: 2259
End line: 0
Method source code: 
    public void test0108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0108");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setLongOptPrefix(" ");
        helpFormatter0.defaultDescPad = (short) 10;
        java.lang.String str9 = helpFormatter0.defaultArgName;
        helpFormatter0.setSyntaxPrefix("");
        helpFormatter0.defaultOptPrefix = "                                                                                                 ";
        helpFormatter0.setLongOptPrefix("          ");
        java.lang.StringBuffer stringBuffer16 = null;
        org.apache.commons.cli.Options options18 = null;
        try {
            java.lang.StringBuffer stringBuffer21 = helpFormatter0.renderOptions(stringBuffer16, (int) ' ', options18, (int) (byte) -1, 74);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: null");
        } catch (java.lang.NegativeArraySizeException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "arg" + "'", str9, "arg");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #202
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #22
36: istore_2
37: aload_1
38: ldc           #10
40: putfield      #23
43: aload_1
44: getfield      #63
47: astore_3
48: aload_1
49: ldc           #24
51: invokevirtual #49
54: aload_1
55: bipush        10
57: putfield      #76
60: aload_1
61: getfield      #77
64: astore        4
66: aload_1
67: ldc           #10
69: invokevirtual #39
72: aload_1
73: ldc           #141
75: putfield      #63
78: aload_1
79: ldc           #114
81: invokevirtual #49
84: aconst_null
85: astore        5
87: aconst_null
88: astore        6
90: aload_1
91: aload         5
93: bipush        32
95: aload         6
97: iconst_m1
98: bipush        74
100: invokevirtual #98
103: astore        7
105: ldc           #19
107: invokestatic  #15
110: goto          115
113: astore        7
115: new           #29
118: dup
119: invokespecial #30
122: ldc           #31
124: invokevirtual #32
127: iload_2
128: invokevirtual #33
131: ldc           #34
133: invokevirtual #32
136: iconst_1
137: invokevirtual #33
140: ldc           #31
142: invokevirtual #32
145: invokevirtual #35
148: iload_2
149: iconst_1
150: if_icmpne     157
153: iconst_1
154: goto          158
157: iconst_0
158: invokestatic  #36
161: new           #29
164: dup
165: invokespecial #30
168: ldc           #31
170: invokevirtual #32
173: aload_3
174: invokevirtual #32
177: ldc           #66
179: invokevirtual #32
182: invokevirtual #35
185: aload_3
186: ldc           #67
188: invokestatic  #53
191: new           #29
194: dup
195: invokespecial #30
198: ldc           #31
200: invokevirtual #32
203: aload         4
205: invokevirtual #32
208: ldc           #78
210: invokevirtual #32
213: invokevirtual #35
216: aload         4
218: ldc           #79
220: invokestatic  #53
223: return
Exception table:
from    to  target type
90   110   113   Class java/lang/NegativeArraySizeException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0109
Start line: 2287
End line: 0
Method source code: 
    public void test0109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0109");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        helpFormatter0.defaultArgName = "hi!";
        java.lang.String str9 = helpFormatter0.createPadding((int) (byte) 10);
        helpFormatter0.defaultWidth = ' ';
        java.lang.String str13 = helpFormatter0.rtrim("-");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "          " + "'", str9, "          ");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "-" + "'", str13, "-");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #203
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #22
36: istore_2
37: aload_1
38: ldc           #10
40: putfield      #23
43: aload_1
44: bipush        10
46: invokevirtual #38
49: aload_1
50: ldc           #25
52: putfield      #77
55: aload_1
56: bipush        10
58: invokevirtual #108
61: astore_3
62: aload_1
63: bipush        32
65: putfield      #110
68: aload_1
69: ldc           #67
71: invokevirtual #64
74: astore        4
76: new           #29
79: dup
80: invokespecial #30
83: ldc           #31
85: invokevirtual #32
88: iload_2
89: invokevirtual #33
92: ldc           #34
94: invokevirtual #32
97: iconst_1
98: invokevirtual #33
101: ldc           #31
103: invokevirtual #32
106: invokevirtual #35
109: iload_2
110: iconst_1
111: if_icmpne     118
114: iconst_1
115: goto          119
118: iconst_0
119: invokestatic  #36
122: new           #29
125: dup
126: invokespecial #30
129: ldc           #31
131: invokevirtual #32
134: aload_3
135: invokevirtual #32
138: ldc           #204
140: invokevirtual #32
143: invokevirtual #35
146: aload_3
147: ldc           #114
149: invokestatic  #53
152: new           #29
155: dup
156: invokespecial #30
159: ldc           #31
161: invokevirtual #32
164: aload         4
166: invokevirtual #32
169: ldc           #66
171: invokevirtual #32
174: invokevirtual #35
177: aload         4
179: ldc           #67
181: invokestatic  #53
184: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0110
Start line: 2304
End line: 0
Method source code: 
    public void test0110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0110");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.defaultLongOptPrefix = "hi!";
        int int3 = helpFormatter0.getWidth();
        helpFormatter0.setLongOptPrefix("          ");
        java.io.PrintWriter printWriter6 = null;
        try {
            helpFormatter0.printWrapped(printWriter6, (int) (byte) 100, (int) (byte) 1, "usage: ");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 74 + "'", int3 == 74);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #205
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: ldc           #25
35: putfield      #55
38: aload_1
39: invokevirtual #129
42: istore_2
43: aload_1
44: ldc           #114
46: invokevirtual #49
49: aconst_null
50: astore_3
51: aload_1
52: aload_3
53: bipush        100
55: iconst_1
56: ldc           #12
58: invokevirtual #61
61: ldc           #14
63: invokestatic  #15
66: goto          71
69: astore        4
71: new           #29
74: dup
75: invokespecial #30
78: ldc           #31
80: invokevirtual #32
83: iload_2
84: invokevirtual #33
87: ldc           #34
89: invokevirtual #32
92: bipush        74
94: invokevirtual #33
97: ldc           #31
99: invokevirtual #32
102: invokevirtual #35
105: iload_2
106: bipush        74
108: if_icmpne     115
111: iconst_1
112: goto          116
115: iconst_0
116: invokestatic  #36
119: return
Exception table:
from    to  target type
51    66    69   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0111
Start line: 2323
End line: 0
Method source code: 
    public void test0111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0111");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str3 = helpFormatter0.getOptPrefix();
        int int4 = helpFormatter0.defaultDescPad;
        int int5 = helpFormatter0.defaultLeftPad;
        int int6 = helpFormatter0.defaultLeftPad;
        int int10 = helpFormatter0.findWrapPos("                                                                                                 ", (int) (byte) 100, (-2));
        org.apache.commons.cli.Options options13 = null;
        try {
            helpFormatter0.printHelp("", "-", options13, "", false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: cmdLineSyntax not provided");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "--" + "'", str2, "--");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "-" + "'", str3, "-");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 3 + "'", int4 == 3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #206
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #22
36: istore_2
37: aload_1
38: getfield      #55
41: astore_3
42: aload_1
43: invokevirtual #123
46: astore        4
48: aload_1
49: getfield      #76
52: istore        5
54: aload_1
55: getfield      #60
58: istore        6
60: aload_1
61: getfield      #60
64: istore        7
66: aload_1
67: ldc           #141
69: bipush        100
71: bipush        -2
73: invokevirtual #93
76: istore        8
78: aconst_null
79: astore        9
81: aload_1
82: ldc           #10
84: ldc           #67
86: aload         9
88: ldc           #10
90: iconst_0
91: invokevirtual #73
94: ldc           #27
96: invokestatic  #15
99: goto          104
102: astore        10
104: new           #29
107: dup
108: invokespecial #30
111: ldc           #31
113: invokevirtual #32
116: iload_2
117: invokevirtual #33
120: ldc           #34
122: invokevirtual #32
125: iconst_1
126: invokevirtual #33
129: ldc           #31
131: invokevirtual #32
134: invokevirtual #35
137: iload_2
138: iconst_1
139: if_icmpne     146
142: iconst_1
143: goto          147
146: iconst_0
147: invokestatic  #36
150: new           #29
153: dup
154: invokespecial #30
157: ldc           #31
159: invokevirtual #32
162: aload_3
163: invokevirtual #32
166: ldc           #52
168: invokevirtual #32
171: invokevirtual #35
174: aload_3
175: ldc           #44
177: invokestatic  #53
180: new           #29
183: dup
184: invokespecial #30
187: ldc           #31
189: invokevirtual #32
192: aload         4
194: invokevirtual #32
197: ldc           #66
199: invokevirtual #32
202: invokevirtual #35
205: aload         4
207: ldc           #67
209: invokestatic  #53
212: new           #29
215: dup
216: invokespecial #30
219: ldc           #31
221: invokevirtual #32
224: iload         5
226: invokevirtual #33
229: ldc           #34
231: invokevirtual #32
234: iconst_3
235: invokevirtual #33
238: ldc           #31
240: invokevirtual #32
243: invokevirtual #35
246: iload         5
248: iconst_3
249: if_icmpne     256
252: iconst_1
253: goto          257
256: iconst_0
257: invokestatic  #36
260: new           #29
263: dup
264: invokespecial #30
267: ldc           #31
269: invokevirtual #32
272: iload         6
274: invokevirtual #33
277: ldc           #34
279: invokevirtual #32
282: iconst_1
283: invokevirtual #33
286: ldc           #31
288: invokevirtual #32
291: invokevirtual #35
294: iload         6
296: iconst_1
297: if_icmpne     304
300: iconst_1
301: goto          305
304: iconst_0
305: invokestatic  #36
308: new           #29
311: dup
312: invokespecial #30
315: ldc           #31
317: invokevirtual #32
320: iload         7
322: invokevirtual #33
325: ldc           #34
327: invokevirtual #32
330: iconst_1
331: invokevirtual #33
334: ldc           #31
336: invokevirtual #32
339: invokevirtual #35
342: iload         7
344: iconst_1
345: if_icmpne     352
348: iconst_1
349: goto          353
352: iconst_0
353: invokestatic  #36
356: new           #29
359: dup
360: invokespecial #30
363: ldc           #31
365: invokevirtual #32
368: iload         8
370: invokevirtual #33
373: ldc           #34
375: invokevirtual #32
378: iconst_m1
379: invokevirtual #33
382: ldc           #31
384: invokevirtual #32
387: invokevirtual #35
390: iload         8
392: iconst_m1
393: if_icmpne     400
396: iconst_1
397: goto          401
400: iconst_0
401: invokestatic  #36
404: return
Exception table:
from    to  target type
81    99   102   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0112
Start line: 2352
End line: 0
Method source code: 
    public void test0112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0112");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.lang.String str1 = helpFormatter0.defaultSyntaxPrefix;
        java.util.Comparator comparator2 = helpFormatter0.optionComparator;
        java.lang.String str3 = helpFormatter0.defaultArgName;
        org.apache.commons.cli.Options options6 = null;
        try {
            helpFormatter0.printHelp("usage: ", "", options6, "arg", false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "usage: " + "'", str1, "usage: ");
        org.junit.Assert.assertNotNull(comparator2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "arg" + "'", str3, "arg");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #207
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: getfield      #97
36: astore_2
37: aload_1
38: getfield      #47
41: astore_3
42: aload_1
43: getfield      #77
46: astore        4
48: aconst_null
49: astore        5
51: aload_1
52: ldc           #12
54: ldc           #10
56: aload         5
58: ldc           #79
60: iconst_0
61: invokevirtual #73
64: ldc           #14
66: invokestatic  #15
69: goto          74
72: astore        6
74: new           #29
77: dup
78: invokespecial #30
81: ldc           #31
83: invokevirtual #32
86: aload_2
87: invokevirtual #32
90: ldc           #99
92: invokevirtual #32
95: invokevirtual #35
98: aload_2
99: ldc           #12
101: invokestatic  #53
104: aload_3
105: invokestatic  #51
108: new           #29
111: dup
112: invokespecial #30
115: ldc           #31
117: invokevirtual #32
120: aload         4
122: invokevirtual #32
125: ldc           #78
127: invokevirtual #32
130: invokevirtual #35
133: aload         4
135: ldc           #79
137: invokestatic  #53
140: return
Exception table:
from    to  target type
51    69    72   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0113
Start line: 2373
End line: 0
Method source code: 
    public void test0113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0113");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultOptPrefix;
        java.lang.String str6 = helpFormatter0.getLongOptPrefix();
        java.lang.String str7 = helpFormatter0.defaultNewLine;
        int int8 = helpFormatter0.getWidth();
        org.apache.commons.cli.Options options12 = null;
        try {
            helpFormatter0.printHelp((int) (byte) -1, "", "--", options12, " ");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: cmdLineSyntax not provided");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\n" + "'", str7, "\n");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 74 + "'", int8 == 74);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #208
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: ldc           #10
35: invokevirtual #11
38: aload_1
39: ldc           #10
41: putfield      #55
44: aload_1
45: getfield      #63
48: astore_2
49: aload_1
50: invokevirtual #48
53: astore_3
54: aload_1
55: getfield      #23
58: astore        4
60: aload_1
61: invokevirtual #129
64: istore        5
66: aconst_null
67: astore        6
69: aload_1
70: iconst_m1
71: ldc           #10
73: ldc           #44
75: aload         6
77: ldc           #24
79: invokevirtual #45
82: ldc           #27
84: invokestatic  #15
87: goto          92
90: astore        7
92: new           #29
95: dup
96: invokespecial #30
99: ldc           #31
101: invokevirtual #32
104: aload_2
105: invokevirtual #32
108: ldc           #68
110: invokevirtual #32
113: invokevirtual #35
116: aload_2
117: ldc           #10
119: invokestatic  #53
122: new           #29
125: dup
126: invokespecial #30
129: ldc           #31
131: invokevirtual #32
134: aload_3
135: invokevirtual #32
138: ldc           #68
140: invokevirtual #32
143: invokevirtual #35
146: aload_3
147: ldc           #10
149: invokestatic  #53
152: new           #29
155: dup
156: invokespecial #30
159: ldc           #31
161: invokevirtual #32
164: aload         4
166: invokevirtual #32
169: ldc           #74
171: invokevirtual #32
174: invokevirtual #35
177: aload         4
179: ldc           #65
181: invokestatic  #53
184: new           #29
187: dup
188: invokespecial #30
191: ldc           #31
193: invokevirtual #32
196: iload         5
198: invokevirtual #33
201: ldc           #34
203: invokevirtual #32
206: bipush        74
208: invokevirtual #33
211: ldc           #31
213: invokevirtual #32
216: invokevirtual #35
219: iload         5
221: bipush        74
223: if_icmpne     230
226: iconst_1
227: goto          231
230: iconst_0
231: invokestatic  #36
234: return
Exception table:
from    to  target type
69    87    90   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0114
Start line: 2398
End line: 0
Method source code: 
    public void test0114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0114");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.getArgName();
        helpFormatter0.defaultNewLine = "\n";
        helpFormatter0.defaultLeftPad = (byte) -1;
        helpFormatter0.setLongOptSeparator("");
        helpFormatter0.setLongOptSeparator("-");
        int int11 = helpFormatter0.defaultWidth;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "arg" + "'", str2, "arg");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 74 + "'", int11 == 74);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #209
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #22
36: istore_2
37: aload_1
38: invokevirtual #104
41: astore_3
42: aload_1
43: ldc           #65
45: putfield      #23
48: aload_1
49: iconst_m1
50: putfield      #60
53: aload_1
54: ldc           #10
56: invokevirtual #91
59: aload_1
60: ldc           #67
62: invokevirtual #91
65: aload_1
66: getfield      #110
69: istore        4
71: new           #29
74: dup
75: invokespecial #30
78: ldc           #31
80: invokevirtual #32
83: iload_2
84: invokevirtual #33
87: ldc           #34
89: invokevirtual #32
92: iconst_1
93: invokevirtual #33
96: ldc           #31
98: invokevirtual #32
101: invokevirtual #35
104: iload_2
105: iconst_1
106: if_icmpne     113
109: iconst_1
110: goto          114
113: iconst_0
114: invokestatic  #36
117: new           #29
120: dup
121: invokespecial #30
124: ldc           #31
126: invokevirtual #32
129: aload_3
130: invokevirtual #32
133: ldc           #78
135: invokevirtual #32
138: invokevirtual #35
141: aload_3
142: ldc           #79
144: invokestatic  #53
147: new           #29
150: dup
151: invokespecial #30
154: ldc           #31
156: invokevirtual #32
159: iload         4
161: invokevirtual #33
164: ldc           #34
166: invokevirtual #32
169: bipush        74
171: invokevirtual #33
174: ldc           #31
176: invokevirtual #32
179: invokevirtual #35
182: iload         4
184: bipush        74
186: if_icmpne     193
189: iconst_1
190: goto          194
193: iconst_0
194: invokestatic  #36
197: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0115
Start line: 2415
End line: 0
Method source code: 
    public void test0115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0115");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.lang.String str1 = helpFormatter0.getArgName();
        java.io.PrintWriter printWriter2 = null;
        org.apache.commons.cli.Options options4 = null;
        try {
            helpFormatter0.printOptions(printWriter2, 100, options4, 0, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "arg" + "'", str1, "arg");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #210
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #104
36: astore_2
37: aconst_null
38: astore_3
39: aconst_null
40: astore        4
42: aload_1
43: aload_3
44: bipush        100
46: aload         4
48: iconst_0
49: iconst_1
50: invokevirtual #18
53: ldc           #14
55: invokestatic  #15
58: goto          63
61: astore        5
63: new           #29
66: dup
67: invokespecial #30
70: ldc           #31
72: invokevirtual #32
75: aload_2
76: invokevirtual #32
79: ldc           #78
81: invokevirtual #32
84: invokevirtual #35
87: aload_2
88: ldc           #79
90: invokestatic  #53
93: return
Exception table:
from    to  target type
42    58    61   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0116
Start line: 2433
End line: 0
Method source code: 
    public void test0116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0116");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        helpFormatter0.defaultArgName = "hi!";
        java.lang.String str9 = helpFormatter0.createPadding((int) (byte) 10);
        helpFormatter0.setSyntaxPrefix(" ");
        helpFormatter0.setArgName("");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "          " + "'", str9, "          ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #211
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #22
36: istore_2
37: aload_1
38: ldc           #10
40: putfield      #23
43: aload_1
44: bipush        10
46: invokevirtual #38
49: aload_1
50: ldc           #25
52: putfield      #77
55: aload_1
56: bipush        10
58: invokevirtual #108
61: astore_3
62: aload_1
63: ldc           #24
65: invokevirtual #39
68: aload_1
69: ldc           #10
71: invokevirtual #146
74: new           #29
77: dup
78: invokespecial #30
81: ldc           #31
83: invokevirtual #32
86: iload_2
87: invokevirtual #33
90: ldc           #34
92: invokevirtual #32
95: iconst_1
96: invokevirtual #33
99: ldc           #31
101: invokevirtual #32
104: invokevirtual #35
107: iload_2
108: iconst_1
109: if_icmpne     116
112: iconst_1
113: goto          117
116: iconst_0
117: invokestatic  #36
120: new           #29
123: dup
124: invokespecial #30
127: ldc           #31
129: invokevirtual #32
132: aload_3
133: invokevirtual #32
136: ldc           #204
138: invokevirtual #32
141: invokevirtual #35
144: aload_3
145: ldc           #114
147: invokestatic  #53
150: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0117
Start line: 2449
End line: 0
Method source code: 
    public void test0117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0117");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.defaultDescPad = '4';
        org.apache.commons.cli.Options options7 = null;
        try {
            helpFormatter0.printHelp("", options7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: cmdLineSyntax not provided");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #212
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #22
36: istore_2
37: aload_1
38: ldc           #10
40: putfield      #23
43: aload_1
44: bipush        52
46: putfield      #76
49: aconst_null
50: astore_3
51: aload_1
52: ldc           #10
54: aload_3
55: invokevirtual #50
58: ldc           #27
60: invokestatic  #15
63: goto          68
66: astore        4
68: new           #29
71: dup
72: invokespecial #30
75: ldc           #31
77: invokevirtual #32
80: iload_2
81: invokevirtual #33
84: ldc           #34
86: invokevirtual #32
89: iconst_1
90: invokevirtual #33
93: ldc           #31
95: invokevirtual #32
98: invokevirtual #35
101: iload_2
102: iconst_1
103: if_icmpne     110
106: iconst_1
107: goto          111
110: iconst_0
111: invokestatic  #36
114: return
Exception table:
from    to  target type
51    63    66   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0118
Start line: 2468
End line: 0
Method source code: 
    public void test0118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0118");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        int int4 = helpFormatter0.defaultWidth;
        java.lang.String str5 = helpFormatter0.getNewLine();
        java.lang.String str6 = helpFormatter0.defaultNewLine;
        org.apache.commons.cli.Options options8 = null;
        try {
            helpFormatter0.printHelp(" ", options8, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 74 + "'", int4 == 74);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #213
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #22
36: istore_2
37: aload_1
38: ldc           #10
40: putfield      #23
43: aload_1
44: getfield      #110
47: istore_3
48: aload_1
49: invokevirtual #72
52: astore        4
54: aload_1
55: getfield      #23
58: astore        5
60: aconst_null
61: astore        6
63: aload_1
64: ldc           #24
66: aload         6
68: iconst_1
69: invokevirtual #135
72: ldc           #14
74: invokestatic  #15
77: goto          82
80: astore        7
82: new           #29
85: dup
86: invokespecial #30
89: ldc           #31
91: invokevirtual #32
94: iload_2
95: invokevirtual #33
98: ldc           #34
100: invokevirtual #32
103: iconst_1
104: invokevirtual #33
107: ldc           #31
109: invokevirtual #32
112: invokevirtual #35
115: iload_2
116: iconst_1
117: if_icmpne     124
120: iconst_1
121: goto          125
124: iconst_0
125: invokestatic  #36
128: new           #29
131: dup
132: invokespecial #30
135: ldc           #31
137: invokevirtual #32
140: iload_3
141: invokevirtual #33
144: ldc           #34
146: invokevirtual #32
149: bipush        74
151: invokevirtual #33
154: ldc           #31
156: invokevirtual #32
159: invokevirtual #35
162: iload_3
163: bipush        74
165: if_icmpne     172
168: iconst_1
169: goto          173
172: iconst_0
173: invokestatic  #36
176: new           #29
179: dup
180: invokespecial #30
183: ldc           #31
185: invokevirtual #32
188: aload         4
190: invokevirtual #32
193: ldc           #68
195: invokevirtual #32
198: invokevirtual #35
201: aload         4
203: ldc           #10
205: invokestatic  #53
208: new           #29
211: dup
212: invokespecial #30
215: ldc           #31
217: invokevirtual #32
220: aload         5
222: invokevirtual #32
225: ldc           #68
227: invokevirtual #32
230: invokevirtual #35
233: aload         5
235: ldc           #10
237: invokestatic  #53
240: return
Exception table:
from    to  target type
63    77    80   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0119
Start line: 2492
End line: 0
Method source code: 
    public void test0119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0119");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.defaultDescPad = '4';
        helpFormatter0.setNewLine("");
        int int11 = helpFormatter0.findWrapPos("\n", (int) ' ', 3);
        java.util.Comparator comparator12 = helpFormatter0.optionComparator;
        org.apache.commons.cli.Options options15 = null;
        try {
            helpFormatter0.printHelp(" ", "arg", options15, "                                                                                                 ");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(comparator12);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #214
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #22
36: istore_2
37: aload_1
38: ldc           #10
40: putfield      #23
43: aload_1
44: bipush        52
46: putfield      #76
49: aload_1
50: ldc           #10
52: invokevirtual #131
55: aload_1
56: ldc           #65
58: bipush        32
60: iconst_3
61: invokevirtual #93
64: istore_3
65: aload_1
66: getfield      #47
69: astore        4
71: aconst_null
72: astore        5
74: aload_1
75: ldc           #24
77: ldc           #79
79: aload         5
81: ldc           #141
83: invokevirtual #13
86: ldc           #14
88: invokestatic  #15
91: goto          96
94: astore        6
96: new           #29
99: dup
100: invokespecial #30
103: ldc           #31
105: invokevirtual #32
108: iload_2
109: invokevirtual #33
112: ldc           #34
114: invokevirtual #32
117: iconst_1
118: invokevirtual #33
121: ldc           #31
123: invokevirtual #32
126: invokevirtual #35
129: iload_2
130: iconst_1
131: if_icmpne     138
134: iconst_1
135: goto          139
138: iconst_0
139: invokestatic  #36
142: new           #29
145: dup
146: invokespecial #30
149: ldc           #31
151: invokevirtual #32
154: iload_3
155: invokevirtual #33
158: ldc           #34
160: invokevirtual #32
163: iconst_m1
164: invokevirtual #33
167: ldc           #31
169: invokevirtual #32
172: invokevirtual #35
175: iload_3
176: iconst_m1
177: if_icmpne     184
180: iconst_1
181: goto          185
184: iconst_0
185: invokestatic  #36
188: aload         4
190: invokestatic  #51
193: return
Exception table:
from    to  target type
74    91    94   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0120
Start line: 2516
End line: 0
Method source code: 
    public void test0120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0120");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str6 = helpFormatter0.getNewLine();
        java.lang.String str7 = helpFormatter0.defaultOptPrefix;
        org.apache.commons.cli.Options options10 = null;
        try {
            helpFormatter0.printHelp("hi!", " ", options10, "\n", false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\n" + "'", str6, "\n");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #215
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: ldc           #10
35: invokevirtual #11
38: aload_1
39: ldc           #10
41: putfield      #55
44: aload_1
45: getfield      #55
48: astore_2
49: aload_1
50: invokevirtual #72
53: astore_3
54: aload_1
55: getfield      #63
58: astore        4
60: aconst_null
61: astore        5
63: aload_1
64: ldc           #25
66: ldc           #24
68: aload         5
70: ldc           #65
72: iconst_0
73: invokevirtual #73
76: ldc           #14
78: invokestatic  #15
81: goto          86
84: astore        6
86: new           #29
89: dup
90: invokespecial #30
93: ldc           #31
95: invokevirtual #32
98: aload_2
99: invokevirtual #32
102: ldc           #68
104: invokevirtual #32
107: invokevirtual #35
110: aload_2
111: ldc           #10
113: invokestatic  #53
116: new           #29
119: dup
120: invokespecial #30
123: ldc           #31
125: invokevirtual #32
128: aload_3
129: invokevirtual #32
132: ldc           #74
134: invokevirtual #32
137: invokevirtual #35
140: aload_3
141: ldc           #65
143: invokestatic  #53
146: new           #29
149: dup
150: invokespecial #30
153: ldc           #31
155: invokevirtual #32
158: aload         4
160: invokevirtual #32
163: ldc           #68
165: invokevirtual #32
168: invokevirtual #35
171: aload         4
173: ldc           #10
175: invokestatic  #53
178: return
Exception table:
from    to  target type
63    81    84   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0121
Start line: 2539
End line: 0
Method source code: 
    public void test0121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0121");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.defaultDescPad = '4';
        helpFormatter0.setNewLine("");
        helpFormatter0.setLongOptPrefix(" ");
        java.lang.String str10 = helpFormatter0.getLongOptPrefix();
        try {
            java.lang.String str12 = helpFormatter0.createPadding((-2));
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: null");
        } catch (java.lang.NegativeArraySizeException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + " " + "'", str10, " ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #216
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #22
36: istore_2
37: aload_1
38: ldc           #10
40: putfield      #23
43: aload_1
44: bipush        52
46: putfield      #76
49: aload_1
50: ldc           #10
52: invokevirtual #131
55: aload_1
56: ldc           #24
58: invokevirtual #49
61: aload_1
62: invokevirtual #48
65: astore_3
66: aload_1
67: bipush        -2
69: invokevirtual #108
72: astore        4
74: ldc           #19
76: invokestatic  #15
79: goto          84
82: astore        4
84: new           #29
87: dup
88: invokespecial #30
91: ldc           #31
93: invokevirtual #32
96: iload_2
97: invokevirtual #33
100: ldc           #34
102: invokevirtual #32
105: iconst_1
106: invokevirtual #33
109: ldc           #31
111: invokevirtual #32
114: invokevirtual #35
117: iload_2
118: iconst_1
119: if_icmpne     126
122: iconst_1
123: goto          127
126: iconst_0
127: invokestatic  #36
130: new           #29
133: dup
134: invokespecial #30
137: ldc           #31
139: invokevirtual #32
142: aload_3
143: invokevirtual #32
146: ldc           #88
148: invokevirtual #32
151: invokevirtual #35
154: aload_3
155: ldc           #24
157: invokestatic  #53
160: return
Exception table:
from    to  target type
66    79    82   Class java/lang/NegativeArraySizeException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0122
Start line: 2561
End line: 0
Method source code: 
    public void test0122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0122");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        int int5 = helpFormatter0.defaultDescPad;
        org.apache.commons.cli.Options options8 = null;
        try {
            helpFormatter0.printHelp("hi!", "          ", options8, " ");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 3 + "'", int5 == 3);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #217
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #22
36: istore_2
37: aload_1
38: ldc           #10
40: putfield      #23
43: aload_1
44: getfield      #63
47: astore_3
48: aload_1
49: getfield      #76
52: istore        4
54: aconst_null
55: astore        5
57: aload_1
58: ldc           #25
60: ldc           #114
62: aload         5
64: ldc           #24
66: invokevirtual #13
69: ldc           #14
71: invokestatic  #15
74: goto          79
77: astore        6
79: new           #29
82: dup
83: invokespecial #30
86: ldc           #31
88: invokevirtual #32
91: iload_2
92: invokevirtual #33
95: ldc           #34
97: invokevirtual #32
100: iconst_1
101: invokevirtual #33
104: ldc           #31
106: invokevirtual #32
109: invokevirtual #35
112: iload_2
113: iconst_1
114: if_icmpne     121
117: iconst_1
118: goto          122
121: iconst_0
122: invokestatic  #36
125: new           #29
128: dup
129: invokespecial #30
132: ldc           #31
134: invokevirtual #32
137: aload_3
138: invokevirtual #32
141: ldc           #66
143: invokevirtual #32
146: invokevirtual #35
149: aload_3
150: ldc           #67
152: invokestatic  #53
155: new           #29
158: dup
159: invokespecial #30
162: ldc           #31
164: invokevirtual #32
167: iload         4
169: invokevirtual #33
172: ldc           #34
174: invokevirtual #32
177: iconst_3
178: invokevirtual #33
181: ldc           #31
183: invokevirtual #32
186: invokevirtual #35
189: iload         4
191: iconst_3
192: if_icmpne     199
195: iconst_1
196: goto          200
199: iconst_0
200: invokestatic  #36
203: return
Exception table:
from    to  target type
57    74    77   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0123
Start line: 2583
End line: 0
Method source code: 
    public void test0123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0123");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.setWidth(1);
        java.lang.String str5 = helpFormatter0.getNewLine();
        java.lang.String str7 = helpFormatter0.rtrim("");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\n" + "'", str5, "\n");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #218
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: ldc           #10
35: invokevirtual #11
38: aload_1
39: iconst_1
40: invokevirtual #156
43: aload_1
44: invokevirtual #72
47: astore_2
48: aload_1
49: ldc           #10
51: invokevirtual #64
54: astore_3
55: new           #29
58: dup
59: invokespecial #30
62: ldc           #31
64: invokevirtual #32
67: aload_2
68: invokevirtual #32
71: ldc           #74
73: invokevirtual #32
76: invokevirtual #35
79: aload_2
80: ldc           #65
82: invokestatic  #53
85: new           #29
88: dup
89: invokespecial #30
92: ldc           #31
94: invokevirtual #32
97: aload_3
98: invokevirtual #32
101: ldc           #68
103: invokevirtual #32
106: invokevirtual #35
109: aload_3
110: ldc           #10
112: invokestatic  #53
115: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0124
Start line: 2596
End line: 0
Method source code: 
    public void test0124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0124");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.getArgName();
        helpFormatter0.defaultNewLine = "\n";
        helpFormatter0.defaultLeftPad = (byte) -1;
        java.lang.String str7 = helpFormatter0.defaultLongOptPrefix;
        org.apache.commons.cli.Options options9 = null;
        try {
            helpFormatter0.printHelp("--", options9);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: null");
        } catch (java.lang.NegativeArraySizeException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "arg" + "'", str2, "arg");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "--" + "'", str7, "--");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #219
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #22
36: istore_2
37: aload_1
38: invokevirtual #104
41: astore_3
42: aload_1
43: ldc           #65
45: putfield      #23
48: aload_1
49: iconst_m1
50: putfield      #60
53: aload_1
54: getfield      #55
57: astore        4
59: aconst_null
60: astore        5
62: aload_1
63: ldc           #44
65: aload         5
67: invokevirtual #50
70: ldc           #19
72: invokestatic  #15
75: goto          80
78: astore        6
80: new           #29
83: dup
84: invokespecial #30
87: ldc           #31
89: invokevirtual #32
92: iload_2
93: invokevirtual #33
96: ldc           #34
98: invokevirtual #32
101: iconst_1
102: invokevirtual #33
105: ldc           #31
107: invokevirtual #32
110: invokevirtual #35
113: iload_2
114: iconst_1
115: if_icmpne     122
118: iconst_1
119: goto          123
122: iconst_0
123: invokestatic  #36
126: new           #29
129: dup
130: invokespecial #30
133: ldc           #31
135: invokevirtual #32
138: aload_3
139: invokevirtual #32
142: ldc           #78
144: invokevirtual #32
147: invokevirtual #35
150: aload_3
151: ldc           #79
153: invokestatic  #53
156: new           #29
159: dup
160: invokespecial #30
163: ldc           #31
165: invokevirtual #32
168: aload         4
170: invokevirtual #32
173: ldc           #52
175: invokevirtual #32
178: invokevirtual #35
181: aload         4
183: ldc           #44
185: invokestatic  #53
188: return
Exception table:
from    to  target type
62    75    78   Class java/lang/NegativeArraySizeException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0125
Start line: 2619
End line: 0
Method source code: 
    public void test0125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0125");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.util.Comparator comparator1 = helpFormatter0.optionComparator;
        java.lang.String str2 = helpFormatter0.defaultNewLine;
        java.lang.StringBuffer stringBuffer3 = null;
        org.apache.commons.cli.Options options5 = null;
        try {
            java.lang.StringBuffer stringBuffer8 = helpFormatter0.renderOptions(stringBuffer3, (-2), options5, (int) (byte) 10, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(comparator1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "\n" + "'", str2, "\n");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #220
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: getfield      #47
36: astore_2
37: aload_1
38: getfield      #23
41: astore_3
42: aconst_null
43: astore        4
45: aconst_null
46: astore        5
48: aload_1
49: aload         4
51: bipush        -2
53: aload         5
55: bipush        10
57: bipush        10
59: invokevirtual #98
62: astore        6
64: ldc           #14
66: invokestatic  #15
69: goto          74
72: astore        6
74: aload_2
75: invokestatic  #51
78: new           #29
81: dup
82: invokespecial #30
85: ldc           #31
87: invokevirtual #32
90: aload_3
91: invokevirtual #32
94: ldc           #74
96: invokevirtual #32
99: invokevirtual #35
102: aload_3
103: ldc           #65
105: invokestatic  #53
108: return
Exception table:
from    to  target type
48    69    72   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0126
Start line: 2639
End line: 0
Method source code: 
    public void test0126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0126");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.defaultDescPad = '4';
        helpFormatter0.setNewLine("");
        helpFormatter0.setLongOptPrefix(" ");
        try {
            java.lang.String str11 = helpFormatter0.createPadding((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: null");
        } catch (java.lang.NegativeArraySizeException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #221
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #22
36: istore_2
37: aload_1
38: ldc           #10
40: putfield      #23
43: aload_1
44: bipush        52
46: putfield      #76
49: aload_1
50: ldc           #10
52: invokevirtual #131
55: aload_1
56: ldc           #24
58: invokevirtual #49
61: aload_1
62: iconst_m1
63: invokevirtual #108
66: astore_3
67: ldc           #19
69: invokestatic  #15
72: goto          76
75: astore_3
76: new           #29
79: dup
80: invokespecial #30
83: ldc           #31
85: invokevirtual #32
88: iload_2
89: invokevirtual #33
92: ldc           #34
94: invokevirtual #32
97: iconst_1
98: invokevirtual #33
101: ldc           #31
103: invokevirtual #32
106: invokevirtual #35
109: iload_2
110: iconst_1
111: if_icmpne     118
114: iconst_1
115: goto          119
118: iconst_0
119: invokestatic  #36
122: return
Exception table:
from    to  target type
61    72    75   Class java/lang/NegativeArraySizeException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0127
Start line: 2659
End line: 0
Method source code: 
    public void test0127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0127");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setLeftPadding((int) (byte) 0);
        helpFormatter0.setLongOptPrefix("                                                                                                 ");
        helpFormatter0.setSyntaxPrefix("                                                                                                 ");
        java.lang.StringBuffer stringBuffer11 = null;
        try {
            java.lang.StringBuffer stringBuffer15 = helpFormatter0.renderWrappedText(stringBuffer11, (int) (byte) 0, 10, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #222
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #22
36: istore_2
37: aload_1
38: ldc           #10
40: putfield      #23
43: aload_1
44: getfield      #63
47: astore_3
48: aload_1
49: iconst_0
50: invokevirtual #193
53: aload_1
54: ldc           #141
56: invokevirtual #49
59: aload_1
60: ldc           #141
62: invokevirtual #39
65: aconst_null
66: astore        4
68: aload_1
69: aload         4
71: iconst_0
72: bipush        10
74: ldc           #10
76: invokevirtual #70
79: astore        5
81: ldc           #14
83: invokestatic  #15
86: goto          91
89: astore        5
91: new           #29
94: dup
95: invokespecial #30
98: ldc           #31
100: invokevirtual #32
103: iload_2
104: invokevirtual #33
107: ldc           #34
109: invokevirtual #32
112: iconst_1
113: invokevirtual #33
116: ldc           #31
118: invokevirtual #32
121: invokevirtual #35
124: iload_2
125: iconst_1
126: if_icmpne     133
129: iconst_1
130: goto          134
133: iconst_0
134: invokestatic  #36
137: new           #29
140: dup
141: invokespecial #30
144: ldc           #31
146: invokevirtual #32
149: aload_3
150: invokevirtual #32
153: ldc           #66
155: invokevirtual #32
158: invokevirtual #35
161: aload_3
162: ldc           #67
164: invokestatic  #53
167: return
Exception table:
from    to  target type
68    86    89   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0128
Start line: 2682
End line: 0
Method source code: 
    public void test0128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0128");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.defaultDescPad = '4';
        helpFormatter0.setNewLine("");
        int int11 = helpFormatter0.findWrapPos("\n", (int) ' ', 3);
        java.lang.StringBuffer stringBuffer12 = null;
        try {
            java.lang.StringBuffer stringBuffer16 = helpFormatter0.renderWrappedText(stringBuffer12, (int) (short) 10, (int) '4', "arg");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #223
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #22
36: istore_2
37: aload_1
38: ldc           #10
40: putfield      #23
43: aload_1
44: bipush        52
46: putfield      #76
49: aload_1
50: ldc           #10
52: invokevirtual #131
55: aload_1
56: ldc           #65
58: bipush        32
60: iconst_3
61: invokevirtual #93
64: istore_3
65: aconst_null
66: astore        4
68: aload_1
69: aload         4
71: bipush        10
73: bipush        52
75: ldc           #79
77: invokevirtual #70
80: astore        5
82: ldc           #14
84: invokestatic  #15
87: goto          92
90: astore        5
92: new           #29
95: dup
96: invokespecial #30
99: ldc           #31
101: invokevirtual #32
104: iload_2
105: invokevirtual #33
108: ldc           #34
110: invokevirtual #32
113: iconst_1
114: invokevirtual #33
117: ldc           #31
119: invokevirtual #32
122: invokevirtual #35
125: iload_2
126: iconst_1
127: if_icmpne     134
130: iconst_1
131: goto          135
134: iconst_0
135: invokestatic  #36
138: new           #29
141: dup
142: invokespecial #30
145: ldc           #31
147: invokevirtual #32
150: iload_3
151: invokevirtual #33
154: ldc           #34
156: invokevirtual #32
159: iconst_m1
160: invokevirtual #33
163: ldc           #31
165: invokevirtual #32
168: invokevirtual #35
171: iload_3
172: iconst_m1
173: if_icmpne     180
176: iconst_1
177: goto          181
180: iconst_0
181: invokestatic  #36
184: return
Exception table:
from    to  target type
68    87    90   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0129
Start line: 2704
End line: 0
Method source code: 
    public void test0129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0129");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.lang.String str1 = helpFormatter0.getArgName();
        java.io.PrintWriter printWriter2 = null;
        org.apache.commons.cli.Options options5 = null;
        try {
            helpFormatter0.printUsage(printWriter2, (int) (byte) 0, "hi!", options5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "arg" + "'", str1, "arg");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #224
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #104
36: astore_2
37: aconst_null
38: astore_3
39: aconst_null
40: astore        4
42: aload_1
43: aload_3
44: iconst_0
45: ldc           #25
47: aload         4
49: invokevirtual #127
52: ldc           #14
54: invokestatic  #15
57: goto          62
60: astore        5
62: new           #29
65: dup
66: invokespecial #30
69: ldc           #31
71: invokevirtual #32
74: aload_2
75: invokevirtual #32
78: ldc           #78
80: invokevirtual #32
83: invokevirtual #35
86: aload_2
87: ldc           #79
89: invokestatic  #53
92: return
Exception table:
from    to  target type
42    57    60   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0130
Start line: 2722
End line: 0
Method source code: 
    public void test0130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0130");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str3 = helpFormatter0.getOptPrefix();
        java.util.Comparator comparator4 = helpFormatter0.optionComparator;
        java.util.Comparator comparator5 = helpFormatter0.optionComparator;
        java.io.PrintWriter printWriter6 = null;
        try {
            helpFormatter0.printWrapped(printWriter6, (-1), 52, "usage: ");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "--" + "'", str2, "--");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "-" + "'", str3, "-");
        org.junit.Assert.assertNotNull(comparator4);
        org.junit.Assert.assertNotNull(comparator5);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #225
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #22
36: istore_2
37: aload_1
38: getfield      #55
41: astore_3
42: aload_1
43: invokevirtual #123
46: astore        4
48: aload_1
49: getfield      #47
52: astore        5
54: aload_1
55: getfield      #47
58: astore        6
60: aconst_null
61: astore        7
63: aload_1
64: aload         7
66: iconst_m1
67: bipush        52
69: ldc           #12
71: invokevirtual #61
74: ldc           #14
76: invokestatic  #15
79: goto          84
82: astore        8
84: new           #29
87: dup
88: invokespecial #30
91: ldc           #31
93: invokevirtual #32
96: iload_2
97: invokevirtual #33
100: ldc           #34
102: invokevirtual #32
105: iconst_1
106: invokevirtual #33
109: ldc           #31
111: invokevirtual #32
114: invokevirtual #35
117: iload_2
118: iconst_1
119: if_icmpne     126
122: iconst_1
123: goto          127
126: iconst_0
127: invokestatic  #36
130: new           #29
133: dup
134: invokespecial #30
137: ldc           #31
139: invokevirtual #32
142: aload_3
143: invokevirtual #32
146: ldc           #52
148: invokevirtual #32
151: invokevirtual #35
154: aload_3
155: ldc           #44
157: invokestatic  #53
160: new           #29
163: dup
164: invokespecial #30
167: ldc           #31
169: invokevirtual #32
172: aload         4
174: invokevirtual #32
177: ldc           #66
179: invokevirtual #32
182: invokevirtual #35
185: aload         4
187: ldc           #67
189: invokestatic  #53
192: aload         5
194: invokestatic  #51
197: aload         6
199: invokestatic  #51
202: return
Exception table:
from    to  target type
63    79    82   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0131
Start line: 2747
End line: 0
Method source code: 
    public void test0131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0131");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.getLongOptPrefix();
        java.lang.Class<?> wildcardClass6 = helpFormatter0.getClass();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(wildcardClass6);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #226
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: ldc           #10
35: invokevirtual #11
38: aload_1
39: ldc           #10
41: putfield      #55
44: aload_1
45: invokevirtual #48
48: astore_2
49: aload_1
50: invokevirtual #56
53: astore_3
54: new           #29
57: dup
58: invokespecial #30
61: ldc           #31
63: invokevirtual #32
66: aload_2
67: invokevirtual #32
70: ldc           #68
72: invokevirtual #32
75: invokevirtual #35
78: aload_2
79: ldc           #10
81: invokestatic  #53
84: aload_3
85: invokestatic  #51
88: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0132
Start line: 2760
End line: 0
Method source code: 
    public void test0132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0132");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        java.lang.String str6 = helpFormatter0.getOptPrefix();
        java.lang.String str7 = helpFormatter0.getNewLine();
        helpFormatter0.defaultOptPrefix = "";
        helpFormatter0.setNewLine("");
        java.lang.String str12 = helpFormatter0.getArgName();
        java.io.PrintWriter printWriter13 = null;
        try {
            helpFormatter0.printWrapped(printWriter13, 74, 74, "                                                                                                 ");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "-" + "'", str6, "-");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "arg" + "'", str12, "arg");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #227
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #22
36: istore_2
37: aload_1
38: ldc           #10
40: putfield      #23
43: aload_1
44: bipush        10
46: invokevirtual #38
49: aload_1
50: invokevirtual #123
53: astore_3
54: aload_1
55: invokevirtual #72
58: astore        4
60: aload_1
61: ldc           #10
63: putfield      #63
66: aload_1
67: ldc           #10
69: invokevirtual #131
72: aload_1
73: invokevirtual #104
76: astore        5
78: aconst_null
79: astore        6
81: aload_1
82: aload         6
84: bipush        74
86: bipush        74
88: ldc           #141
90: invokevirtual #61
93: ldc           #14
95: invokestatic  #15
98: goto          103
101: astore        7
103: new           #29
106: dup
107: invokespecial #30
110: ldc           #31
112: invokevirtual #32
115: iload_2
116: invokevirtual #33
119: ldc           #34
121: invokevirtual #32
124: iconst_1
125: invokevirtual #33
128: ldc           #31
130: invokevirtual #32
133: invokevirtual #35
136: iload_2
137: iconst_1
138: if_icmpne     145
141: iconst_1
142: goto          146
145: iconst_0
146: invokestatic  #36
149: new           #29
152: dup
153: invokespecial #30
156: ldc           #31
158: invokevirtual #32
161: aload_3
162: invokevirtual #32
165: ldc           #66
167: invokevirtual #32
170: invokevirtual #35
173: aload_3
174: ldc           #67
176: invokestatic  #53
179: new           #29
182: dup
183: invokespecial #30
186: ldc           #31
188: invokevirtual #32
191: aload         4
193: invokevirtual #32
196: ldc           #68
198: invokevirtual #32
201: invokevirtual #35
204: aload         4
206: ldc           #10
208: invokestatic  #53
211: new           #29
214: dup
215: invokespecial #30
218: ldc           #31
220: invokevirtual #32
223: aload         5
225: invokevirtual #32
228: ldc           #78
230: invokevirtual #32
233: invokevirtual #35
236: aload         5
238: ldc           #79
240: invokestatic  #53
243: return
Exception table:
from    to  target type
81    98   101   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0133
Start line: 2787
End line: 0
Method source code: 
    public void test0133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0133");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str3 = helpFormatter0.getOptPrefix();
        java.util.Comparator comparator4 = helpFormatter0.optionComparator;
        org.apache.commons.cli.Options options7 = null;
        try {
            helpFormatter0.printHelp("--", "                                                                                                 ", options7, " ", true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "--" + "'", str2, "--");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "-" + "'", str3, "-");
        org.junit.Assert.assertNotNull(comparator4);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #228
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #22
36: istore_2
37: aload_1
38: getfield      #55
41: astore_3
42: aload_1
43: invokevirtual #123
46: astore        4
48: aload_1
49: getfield      #47
52: astore        5
54: aconst_null
55: astore        6
57: aload_1
58: ldc           #44
60: ldc           #141
62: aload         6
64: ldc           #24
66: iconst_1
67: invokevirtual #73
70: ldc           #14
72: invokestatic  #15
75: goto          80
78: astore        7
80: new           #29
83: dup
84: invokespecial #30
87: ldc           #31
89: invokevirtual #32
92: iload_2
93: invokevirtual #33
96: ldc           #34
98: invokevirtual #32
101: iconst_1
102: invokevirtual #33
105: ldc           #31
107: invokevirtual #32
110: invokevirtual #35
113: iload_2
114: iconst_1
115: if_icmpne     122
118: iconst_1
119: goto          123
122: iconst_0
123: invokestatic  #36
126: new           #29
129: dup
130: invokespecial #30
133: ldc           #31
135: invokevirtual #32
138: aload_3
139: invokevirtual #32
142: ldc           #52
144: invokevirtual #32
147: invokevirtual #35
150: aload_3
151: ldc           #44
153: invokestatic  #53
156: new           #29
159: dup
160: invokespecial #30
163: ldc           #31
165: invokevirtual #32
168: aload         4
170: invokevirtual #32
173: ldc           #66
175: invokevirtual #32
178: invokevirtual #35
181: aload         4
183: ldc           #67
185: invokestatic  #53
188: aload         5
190: invokestatic  #51
193: return
Exception table:
from    to  target type
57    75    78   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0134
Start line: 2810
End line: 0
Method source code: 
    public void test0134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0134");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.util.Comparator comparator1 = helpFormatter0.optionComparator;
        int int2 = helpFormatter0.defaultLeftPad;
        helpFormatter0.defaultLongOptPrefix = "";
        org.apache.commons.cli.Options options8 = null;
        try {
            helpFormatter0.printHelp(10, " ", "hi!", options8, "\n", false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(comparator1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #229
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: getfield      #47
36: astore_2
37: aload_1
38: getfield      #60
41: istore_3
42: aload_1
43: ldc           #10
45: putfield      #55
48: aconst_null
49: astore        4
51: aload_1
52: bipush        10
54: ldc           #24
56: ldc           #25
58: aload         4
60: ldc           #65
62: iconst_0
63: invokevirtual #26
66: ldc           #14
68: invokestatic  #15
71: goto          76
74: astore        5
76: aload_2
77: invokestatic  #51
80: new           #29
83: dup
84: invokespecial #30
87: ldc           #31
89: invokevirtual #32
92: iload_3
93: invokevirtual #33
96: ldc           #34
98: invokevirtual #32
101: iconst_1
102: invokevirtual #33
105: ldc           #31
107: invokevirtual #32
110: invokevirtual #35
113: iload_3
114: iconst_1
115: if_icmpne     122
118: iconst_1
119: goto          123
122: iconst_0
123: invokestatic  #36
126: return
Exception table:
from    to  target type
51    71    74   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0135
Start line: 2830
End line: 0
Method source code: 
    public void test0135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0135");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str6 = helpFormatter0.getNewLine();
        helpFormatter0.setSyntaxPrefix(" ");
        java.lang.String str9 = helpFormatter0.defaultSyntaxPrefix;
        org.apache.commons.cli.HelpFormatter helpFormatter10 = new org.apache.commons.cli.HelpFormatter();
        java.lang.String str11 = helpFormatter10.defaultSyntaxPrefix;
        java.util.Comparator comparator12 = helpFormatter10.optionComparator;
        helpFormatter0.optionComparator = comparator12;
        java.util.Comparator comparator14 = null;
        helpFormatter0.setOptionComparator(comparator14);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\n" + "'", str6, "\n");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + " " + "'", str9, " ");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "usage: " + "'", str11, "usage: ");
        org.junit.Assert.assertNotNull(comparator12);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #230
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: ldc           #10
35: invokevirtual #11
38: aload_1
39: ldc           #10
41: putfield      #55
44: aload_1
45: getfield      #55
48: astore_2
49: aload_1
50: invokevirtual #72
53: astore_3
54: aload_1
55: ldc           #24
57: invokevirtual #39
60: aload_1
61: getfield      #97
64: astore        4
66: new           #8
69: dup
70: invokespecial #9
73: astore        5
75: aload         5
77: getfield      #97
80: astore        6
82: aload         5
84: getfield      #47
87: astore        7
89: aload_1
90: aload         7
92: putfield      #47
95: aconst_null
96: astore        8
98: aload_1
99: aload         8
101: invokevirtual #152
104: new           #29
107: dup
108: invokespecial #30
111: ldc           #31
113: invokevirtual #32
116: aload_2
117: invokevirtual #32
120: ldc           #68
122: invokevirtual #32
125: invokevirtual #35
128: aload_2
129: ldc           #10
131: invokestatic  #53
134: new           #29
137: dup
138: invokespecial #30
141: ldc           #31
143: invokevirtual #32
146: aload_3
147: invokevirtual #32
150: ldc           #74
152: invokevirtual #32
155: invokevirtual #35
158: aload_3
159: ldc           #65
161: invokestatic  #53
164: new           #29
167: dup
168: invokespecial #30
171: ldc           #31
173: invokevirtual #32
176: aload         4
178: invokevirtual #32
181: ldc           #88
183: invokevirtual #32
186: invokevirtual #35
189: aload         4
191: ldc           #24
193: invokestatic  #53
196: new           #29
199: dup
200: invokespecial #30
203: ldc           #31
205: invokevirtual #32
208: aload         6
210: invokevirtual #32
213: ldc           #99
215: invokevirtual #32
218: invokevirtual #35
221: aload         6
223: ldc           #12
225: invokestatic  #53
228: aload         7
230: invokestatic  #51
233: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0136
Start line: 2854
End line: 0
Method source code: 
    public void test0136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0136");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.setWidth(1);
        java.lang.String str5 = helpFormatter0.getNewLine();
        java.lang.Class<?> wildcardClass6 = helpFormatter0.getClass();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\n" + "'", str5, "\n");
        org.junit.Assert.assertNotNull(wildcardClass6);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #231
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: ldc           #10
35: invokevirtual #11
38: aload_1
39: iconst_1
40: invokevirtual #156
43: aload_1
44: invokevirtual #72
47: astore_2
48: aload_1
49: invokevirtual #56
52: astore_3
53: new           #29
56: dup
57: invokespecial #30
60: ldc           #31
62: invokevirtual #32
65: aload_2
66: invokevirtual #32
69: ldc           #74
71: invokevirtual #32
74: invokevirtual #35
77: aload_2
78: ldc           #65
80: invokestatic  #53
83: aload_3
84: invokestatic  #51
87: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0137
Start line: 2867
End line: 0
Method source code: 
    public void test0137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0137");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        helpFormatter0.defaultDescPad = 0;
        org.apache.commons.cli.Options options10 = null;
        try {
            helpFormatter0.printHelp("usage: ", "--", options10, "-");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #232
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: ldc           #10
35: invokevirtual #11
38: aload_1
39: ldc           #10
41: putfield      #55
44: aload_1
45: getfield      #55
48: astore_2
49: aload_1
50: iconst_0
51: putfield      #76
54: aconst_null
55: astore_3
56: aload_1
57: ldc           #12
59: ldc           #44
61: aload_3
62: ldc           #67
64: invokevirtual #13
67: ldc           #14
69: invokestatic  #15
72: goto          77
75: astore        4
77: new           #29
80: dup
81: invokespecial #30
84: ldc           #31
86: invokevirtual #32
89: aload_2
90: invokevirtual #32
93: ldc           #68
95: invokevirtual #32
98: invokevirtual #35
101: aload_2
102: ldc           #10
104: invokestatic  #53
107: return
Exception table:
from    to  target type
56    72    75   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0138
Start line: 2887
End line: 0
Method source code: 
    public void test0138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0138");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str6 = helpFormatter0.getNewLine();
        java.util.Comparator comparator7 = helpFormatter0.getOptionComparator();
        java.lang.StringBuffer stringBuffer8 = null;
        try {
            java.lang.StringBuffer stringBuffer12 = helpFormatter0.renderWrappedText(stringBuffer8, 3, (int) '#', "arg");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\n" + "'", str6, "\n");
        org.junit.Assert.assertNotNull(comparator7);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #233
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: ldc           #10
35: invokevirtual #11
38: aload_1
39: ldc           #10
41: putfield      #55
44: aload_1
45: getfield      #55
48: astore_2
49: aload_1
50: invokevirtual #72
53: astore_3
54: aload_1
55: invokevirtual #106
58: astore        4
60: aconst_null
61: astore        5
63: aload_1
64: aload         5
66: iconst_3
67: bipush        35
69: ldc           #79
71: invokevirtual #70
74: astore        6
76: ldc           #14
78: invokestatic  #15
81: goto          86
84: astore        6
86: new           #29
89: dup
90: invokespecial #30
93: ldc           #31
95: invokevirtual #32
98: aload_2
99: invokevirtual #32
102: ldc           #68
104: invokevirtual #32
107: invokevirtual #35
110: aload_2
111: ldc           #10
113: invokestatic  #53
116: new           #29
119: dup
120: invokespecial #30
123: ldc           #31
125: invokevirtual #32
128: aload_3
129: invokevirtual #32
132: ldc           #74
134: invokevirtual #32
137: invokevirtual #35
140: aload_3
141: ldc           #65
143: invokestatic  #53
146: aload         4
148: invokestatic  #51
151: return
Exception table:
from    to  target type
63    81    84   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0139
Start line: 2910
End line: 0
Method source code: 
    public void test0139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0139");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultOptPrefix;
        java.lang.String str6 = helpFormatter0.getLongOptPrefix();
        java.lang.String str7 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.defaultNewLine = "                                                                                                 ";
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #234
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: ldc           #10
35: invokevirtual #11
38: aload_1
39: ldc           #10
41: putfield      #55
44: aload_1
45: getfield      #63
48: astore_2
49: aload_1
50: invokevirtual #48
53: astore_3
54: aload_1
55: getfield      #63
58: astore        4
60: aload_1
61: ldc           #141
63: putfield      #23
66: new           #29
69: dup
70: invokespecial #30
73: ldc           #31
75: invokevirtual #32
78: aload_2
79: invokevirtual #32
82: ldc           #68
84: invokevirtual #32
87: invokevirtual #35
90: aload_2
91: ldc           #10
93: invokestatic  #53
96: new           #29
99: dup
100: invokespecial #30
103: ldc           #31
105: invokevirtual #32
108: aload_3
109: invokevirtual #32
112: ldc           #68
114: invokevirtual #32
117: invokevirtual #35
120: aload_3
121: ldc           #10
123: invokestatic  #53
126: new           #29
129: dup
130: invokespecial #30
133: ldc           #31
135: invokevirtual #32
138: aload         4
140: invokevirtual #32
143: ldc           #68
145: invokevirtual #32
148: invokevirtual #35
151: aload         4
153: ldc           #10
155: invokestatic  #53
158: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0140
Start line: 2926
End line: 0
Method source code: 
    public void test0140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0140");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.lang.String str1 = helpFormatter0.defaultSyntaxPrefix;
        java.util.Comparator comparator2 = helpFormatter0.optionComparator;
        helpFormatter0.defaultOptPrefix = "arg";
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "usage: " + "'", str1, "usage: ");
        org.junit.Assert.assertNotNull(comparator2);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #235
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: getfield      #97
36: astore_2
37: aload_1
38: getfield      #47
41: astore_3
42: aload_1
43: ldc           #79
45: putfield      #63
48: new           #29
51: dup
52: invokespecial #30
55: ldc           #31
57: invokevirtual #32
60: aload_2
61: invokevirtual #32
64: ldc           #99
66: invokevirtual #32
69: invokevirtual #35
72: aload_2
73: ldc           #12
75: invokestatic  #53
78: aload_3
79: invokestatic  #51
82: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0141
Start line: 2938
End line: 0
Method source code: 
    public void test0141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0141");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        java.lang.String str6 = helpFormatter0.getOptPrefix();
        java.lang.String str7 = helpFormatter0.getNewLine();
        helpFormatter0.defaultOptPrefix = "";
        helpFormatter0.setNewLine("");
        helpFormatter0.defaultSyntaxPrefix = "usage: ";
        java.lang.String str14 = helpFormatter0.getArgName();
        helpFormatter0.defaultDescPad = 1;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "-" + "'", str6, "-");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "arg" + "'", str14, "arg");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #236
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #22
36: istore_2
37: aload_1
38: ldc           #10
40: putfield      #23
43: aload_1
44: bipush        10
46: invokevirtual #38
49: aload_1
50: invokevirtual #123
53: astore_3
54: aload_1
55: invokevirtual #72
58: astore        4
60: aload_1
61: ldc           #10
63: putfield      #63
66: aload_1
67: ldc           #10
69: invokevirtual #131
72: aload_1
73: ldc           #12
75: putfield      #97
78: aload_1
79: invokevirtual #104
82: astore        5
84: aload_1
85: iconst_1
86: putfield      #76
89: new           #29
92: dup
93: invokespecial #30
96: ldc           #31
98: invokevirtual #32
101: iload_2
102: invokevirtual #33
105: ldc           #34
107: invokevirtual #32
110: iconst_1
111: invokevirtual #33
114: ldc           #31
116: invokevirtual #32
119: invokevirtual #35
122: iload_2
123: iconst_1
124: if_icmpne     131
127: iconst_1
128: goto          132
131: iconst_0
132: invokestatic  #36
135: new           #29
138: dup
139: invokespecial #30
142: ldc           #31
144: invokevirtual #32
147: aload_3
148: invokevirtual #32
151: ldc           #66
153: invokevirtual #32
156: invokevirtual #35
159: aload_3
160: ldc           #67
162: invokestatic  #53
165: new           #29
168: dup
169: invokespecial #30
172: ldc           #31
174: invokevirtual #32
177: aload         4
179: invokevirtual #32
182: ldc           #68
184: invokevirtual #32
187: invokevirtual #35
190: aload         4
192: ldc           #10
194: invokestatic  #53
197: new           #29
200: dup
201: invokespecial #30
204: ldc           #31
206: invokevirtual #32
209: aload         5
211: invokevirtual #32
214: ldc           #78
216: invokevirtual #32
219: invokevirtual #35
222: aload         5
224: ldc           #79
226: invokestatic  #53
229: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0142
Start line: 2959
End line: 0
Method source code: 
    public void test0142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0142");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        int int6 = helpFormatter0.defaultWidth;
        java.lang.String str7 = helpFormatter0.getLongOptPrefix();
        java.lang.String str8 = helpFormatter0.getLongOptPrefix();
        helpFormatter0.setLongOptSeparator("hi!");
        int int11 = helpFormatter0.getWidth();
        java.lang.String str12 = helpFormatter0.defaultLongOptPrefix;
        java.util.Comparator comparator13 = helpFormatter0.getOptionComparator();
        java.io.PrintWriter printWriter14 = null;
        try {
            helpFormatter0.printWrapped(printWriter14, 0, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "--" + "'", str5, "--");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 74 + "'", int6 == 74);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "--" + "'", str7, "--");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "--" + "'", str8, "--");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 74 + "'", int11 == 74);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "--" + "'", str12, "--");
        org.junit.Assert.assertNotNull(comparator13);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #237
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #22
36: istore_2
37: aload_1
38: ldc           #10
40: putfield      #23
43: aload_1
44: getfield      #63
47: astore_3
48: aload_1
49: getfield      #55
52: astore        4
54: aload_1
55: getfield      #110
58: istore        5
60: aload_1
61: invokevirtual #48
64: astore        6
66: aload_1
67: invokevirtual #48
70: astore        7
72: aload_1
73: ldc           #25
75: invokevirtual #91
78: aload_1
79: invokevirtual #129
82: istore        8
84: aload_1
85: getfield      #55
88: astore        9
90: aload_1
91: invokevirtual #106
94: astore        10
96: aconst_null
97: astore        11
99: aload_1
100: aload         11
102: iconst_0
103: ldc           #10
105: invokevirtual #82
108: ldc           #14
110: invokestatic  #15
113: goto          118
116: astore        12
118: new           #29
121: dup
122: invokespecial #30
125: ldc           #31
127: invokevirtual #32
130: iload_2
131: invokevirtual #33
134: ldc           #34
136: invokevirtual #32
139: iconst_1
140: invokevirtual #33
143: ldc           #31
145: invokevirtual #32
148: invokevirtual #35
151: iload_2
152: iconst_1
153: if_icmpne     160
156: iconst_1
157: goto          161
160: iconst_0
161: invokestatic  #36
164: new           #29
167: dup
168: invokespecial #30
171: ldc           #31
173: invokevirtual #32
176: aload_3
177: invokevirtual #32
180: ldc           #66
182: invokevirtual #32
185: invokevirtual #35
188: aload_3
189: ldc           #67
191: invokestatic  #53
194: new           #29
197: dup
198: invokespecial #30
201: ldc           #31
203: invokevirtual #32
206: aload         4
208: invokevirtual #32
211: ldc           #52
213: invokevirtual #32
216: invokevirtual #35
219: aload         4
221: ldc           #44
223: invokestatic  #53
226: new           #29
229: dup
230: invokespecial #30
233: ldc           #31
235: invokevirtual #32
238: iload         5
240: invokevirtual #33
243: ldc           #34
245: invokevirtual #32
248: bipush        74
250: invokevirtual #33
253: ldc           #31
255: invokevirtual #32
258: invokevirtual #35
261: iload         5
263: bipush        74
265: if_icmpne     272
268: iconst_1
269: goto          273
272: iconst_0
273: invokestatic  #36
276: new           #29
279: dup
280: invokespecial #30
283: ldc           #31
285: invokevirtual #32
288: aload         6
290: invokevirtual #32
293: ldc           #52
295: invokevirtual #32
298: invokevirtual #35
301: aload         6
303: ldc           #44
305: invokestatic  #53
308: new           #29
311: dup
312: invokespecial #30
315: ldc           #31
317: invokevirtual #32
320: aload         7
322: invokevirtual #32
325: ldc           #52
327: invokevirtual #32
330: invokevirtual #35
333: aload         7
335: ldc           #44
337: invokestatic  #53
340: new           #29
343: dup
344: invokespecial #30
347: ldc           #31
349: invokevirtual #32
352: iload         8
354: invokevirtual #33
357: ldc           #34
359: invokevirtual #32
362: bipush        74
364: invokevirtual #33
367: ldc           #31
369: invokevirtual #32
372: invokevirtual #35
375: iload         8
377: bipush        74
379: if_icmpne     386
382: iconst_1
383: goto          387
386: iconst_0
387: invokestatic  #36
390: new           #29
393: dup
394: invokespecial #30
397: ldc           #31
399: invokevirtual #32
402: aload         9
404: invokevirtual #32
407: ldc           #52
409: invokevirtual #32
412: invokevirtual #35
415: aload         9
417: ldc           #44
419: invokestatic  #53
422: aload         10
424: invokestatic  #51
427: return
Exception table:
from    to  target type
99   113   116   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0143
Start line: 2994
End line: 0
Method source code: 
    public void test0143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0143");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.defaultLongOptPrefix;
        helpFormatter0.defaultSyntaxPrefix = "--";
        java.lang.String str5 = helpFormatter0.defaultOptPrefix;
        java.io.PrintWriter printWriter6 = null;
        org.apache.commons.cli.Options options9 = null;
        try {
            helpFormatter0.printUsage(printWriter6, 0, "", options9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "--" + "'", str2, "--");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "-" + "'", str5, "-");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #238
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #22
36: istore_2
37: aload_1
38: getfield      #55
41: astore_3
42: aload_1
43: ldc           #44
45: putfield      #97
48: aload_1
49: getfield      #63
52: astore        4
54: aconst_null
55: astore        5
57: aconst_null
58: astore        6
60: aload_1
61: aload         5
63: iconst_0
64: ldc           #10
66: aload         6
68: invokevirtual #127
71: ldc           #14
73: invokestatic  #15
76: goto          81
79: astore        7
81: new           #29
84: dup
85: invokespecial #30
88: ldc           #31
90: invokevirtual #32
93: iload_2
94: invokevirtual #33
97: ldc           #34
99: invokevirtual #32
102: iconst_1
103: invokevirtual #33
106: ldc           #31
108: invokevirtual #32
111: invokevirtual #35
114: iload_2
115: iconst_1
116: if_icmpne     123
119: iconst_1
120: goto          124
123: iconst_0
124: invokestatic  #36
127: new           #29
130: dup
131: invokespecial #30
134: ldc           #31
136: invokevirtual #32
139: aload_3
140: invokevirtual #32
143: ldc           #52
145: invokevirtual #32
148: invokevirtual #35
151: aload_3
152: ldc           #44
154: invokestatic  #53
157: new           #29
160: dup
161: invokespecial #30
164: ldc           #31
166: invokevirtual #32
169: aload         4
171: invokevirtual #32
174: ldc           #66
176: invokevirtual #32
179: invokevirtual #35
182: aload         4
184: ldc           #67
186: invokestatic  #53
189: return
Exception table:
from    to  target type
60    76    79   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0144
Start line: 3017
End line: 0
Method source code: 
    public void test0144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0144");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.lang.String str1 = helpFormatter0.getSyntaxPrefix();
        org.apache.commons.cli.Options options5 = null;
        try {
            helpFormatter0.printHelp((-1), "                                                                                                    ", "          ", options5, "", false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "usage: " + "'", str1, "usage: ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #239
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #102
36: astore_2
37: aconst_null
38: astore_3
39: aload_1
40: iconst_m1
41: ldc           #240
43: ldc           #114
45: aload_3
46: ldc           #10
48: iconst_0
49: invokevirtual #26
52: ldc           #14
54: invokestatic  #15
57: goto          62
60: astore        4
62: new           #29
65: dup
66: invokespecial #30
69: ldc           #31
71: invokevirtual #32
74: aload_2
75: invokevirtual #32
78: ldc           #99
80: invokevirtual #32
83: invokevirtual #35
86: aload_2
87: ldc           #12
89: invokestatic  #53
92: return
Exception table:
from    to  target type
39    57    60   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0145
Start line: 3034
End line: 0
Method source code: 
    public void test0145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0145");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        helpFormatter0.setArgName("--");
        helpFormatter0.setArgName("hi!");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #241
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: ldc           #10
35: invokevirtual #11
38: aload_1
39: ldc           #10
41: putfield      #55
44: aload_1
45: getfield      #55
48: astore_2
49: aload_1
50: ldc           #44
52: invokevirtual #146
55: aload_1
56: ldc           #25
58: invokevirtual #146
61: new           #29
64: dup
65: invokespecial #30
68: ldc           #31
70: invokevirtual #32
73: aload_2
74: invokevirtual #32
77: ldc           #68
79: invokevirtual #32
82: invokevirtual #35
85: aload_2
86: ldc           #10
88: invokestatic  #53
91: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0146
Start line: 3047
End line: 0
Method source code: 
    public void test0146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0146");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        java.lang.String str6 = helpFormatter0.getLongOptSeparator();
        helpFormatter0.setLongOptSeparator("          ");
        helpFormatter0.setDescPadding(0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + " " + "'", str6, " ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #242
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #22
36: istore_2
37: aload_1
38: ldc           #10
40: putfield      #23
43: aload_1
44: bipush        10
46: invokevirtual #38
49: aload_1
50: invokevirtual #86
53: astore_3
54: aload_1
55: ldc           #114
57: invokevirtual #91
60: aload_1
61: iconst_0
62: invokevirtual #38
65: new           #29
68: dup
69: invokespecial #30
72: ldc           #31
74: invokevirtual #32
77: iload_2
78: invokevirtual #33
81: ldc           #34
83: invokevirtual #32
86: iconst_1
87: invokevirtual #33
90: ldc           #31
92: invokevirtual #32
95: invokevirtual #35
98: iload_2
99: iconst_1
100: if_icmpne     107
103: iconst_1
104: goto          108
107: iconst_0
108: invokestatic  #36
111: new           #29
114: dup
115: invokespecial #30
118: ldc           #31
120: invokevirtual #32
123: aload_3
124: invokevirtual #32
127: ldc           #88
129: invokevirtual #32
132: invokevirtual #35
135: aload_3
136: ldc           #24
138: invokestatic  #53
141: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0147
Start line: 3062
End line: 0
Method source code: 
    public void test0147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0147");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.util.Comparator comparator1 = helpFormatter0.optionComparator;
        java.lang.String str3 = helpFormatter0.rtrim("");
        int int4 = helpFormatter0.getDescPadding();
        org.apache.commons.cli.Options options6 = null;
        try {
            helpFormatter0.printHelp("usage: ", options6, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(comparator1);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 3 + "'", int4 == 3);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #243
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: getfield      #47
36: astore_2
37: aload_1
38: ldc           #10
40: invokevirtual #64
43: astore_3
44: aload_1
45: invokevirtual #118
48: istore        4
50: aconst_null
51: astore        5
53: aload_1
54: ldc           #12
56: aload         5
58: iconst_1
59: invokevirtual #135
62: ldc           #14
64: invokestatic  #15
67: goto          72
70: astore        6
72: aload_2
73: invokestatic  #51
76: new           #29
79: dup
80: invokespecial #30
83: ldc           #31
85: invokevirtual #32
88: aload_3
89: invokevirtual #32
92: ldc           #68
94: invokevirtual #32
97: invokevirtual #35
100: aload_3
101: ldc           #10
103: invokestatic  #53
106: new           #29
109: dup
110: invokespecial #30
113: ldc           #31
115: invokevirtual #32
118: iload         4
120: invokevirtual #33
123: ldc           #34
125: invokevirtual #32
128: iconst_3
129: invokevirtual #33
132: ldc           #31
134: invokevirtual #32
137: invokevirtual #35
140: iload         4
142: iconst_3
143: if_icmpne     150
146: iconst_1
147: goto          151
150: iconst_0
151: invokestatic  #36
154: return
Exception table:
from    to  target type
53    67    70   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0148
Start line: 3083
End line: 0
Method source code: 
    public void test0148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0148");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.defaultDescPad = '4';
        helpFormatter0.setNewLine("");
        helpFormatter0.setSyntaxPrefix("");
        org.apache.commons.cli.Options options11 = null;
        try {
            helpFormatter0.printHelp("usage: ", options11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #244
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #22
36: istore_2
37: aload_1
38: ldc           #10
40: putfield      #23
43: aload_1
44: bipush        52
46: putfield      #76
49: aload_1
50: ldc           #10
52: invokevirtual #131
55: aload_1
56: ldc           #10
58: invokevirtual #39
61: aconst_null
62: astore_3
63: aload_1
64: ldc           #12
66: aload_3
67: invokevirtual #50
70: ldc           #14
72: invokestatic  #15
75: goto          80
78: astore        4
80: new           #29
83: dup
84: invokespecial #30
87: ldc           #31
89: invokevirtual #32
92: iload_2
93: invokevirtual #33
96: ldc           #34
98: invokevirtual #32
101: iconst_1
102: invokevirtual #33
105: ldc           #31
107: invokevirtual #32
110: invokevirtual #35
113: iload_2
114: iconst_1
115: if_icmpne     122
118: iconst_1
119: goto          123
122: iconst_0
123: invokestatic  #36
126: return
Exception table:
from    to  target type
63    75    78   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0149
Start line: 3104
End line: 0
Method source code: 
    public void test0149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0149");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        java.lang.String str3 = helpFormatter0.getLongOptSeparator();
        helpFormatter0.setWidth(0);
        helpFormatter0.setLongOptSeparator("arg");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + " " + "'", str3, " ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #245
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: ldc           #10
35: invokevirtual #11
38: aload_1
39: invokevirtual #86
42: astore_2
43: aload_1
44: iconst_0
45: invokevirtual #156
48: aload_1
49: ldc           #79
51: invokevirtual #91
54: new           #29
57: dup
58: invokespecial #30
61: ldc           #31
63: invokevirtual #32
66: aload_2
67: invokevirtual #32
70: ldc           #88
72: invokevirtual #32
75: invokevirtual #35
78: aload_2
79: ldc           #24
81: invokestatic  #53
84: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0150
Start line: 3116
End line: 0
Method source code: 
    public void test0150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0150");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        org.apache.commons.cli.HelpFormatter helpFormatter6 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter6.setOptPrefix("");
        helpFormatter6.defaultLongOptPrefix = "";
        java.lang.String str11 = helpFormatter6.defaultLongOptPrefix;
        java.lang.String str12 = helpFormatter6.getNewLine();
        java.lang.String str13 = helpFormatter6.defaultOptPrefix;
        helpFormatter6.setDescPadding(74);
        java.util.Comparator comparator16 = helpFormatter6.getOptionComparator();
        helpFormatter0.optionComparator = comparator16;
        int int21 = helpFormatter0.findWrapPos("                                                                                                 ", 0, (int) '4');
        java.lang.StringBuffer stringBuffer22 = null;
        org.apache.commons.cli.Options options24 = null;
        try {
            java.lang.StringBuffer stringBuffer27 = helpFormatter0.renderOptions(stringBuffer22, 0, options24, (int) '#', (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: null");
        } catch (java.lang.NegativeArraySizeException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\n" + "'", str12, "\n");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(comparator16);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #246
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #22
36: istore_2
37: aload_1
38: ldc           #10
40: putfield      #23
43: aload_1
44: bipush        10
46: invokevirtual #38
49: new           #8
52: dup
53: invokespecial #9
56: astore_3
57: aload_3
58: ldc           #10
60: invokevirtual #11
63: aload_3
64: ldc           #10
66: putfield      #55
69: aload_3
70: getfield      #55
73: astore        4
75: aload_3
76: invokevirtual #72
79: astore        5
81: aload_3
82: getfield      #63
85: astore        6
87: aload_3
88: bipush        74
90: invokevirtual #38
93: aload_3
94: invokevirtual #106
97: astore        7
99: aload_1
100: aload         7
102: putfield      #47
105: aload_1
106: ldc           #141
108: iconst_0
109: bipush        52
111: invokevirtual #93
114: istore        8
116: aconst_null
117: astore        9
119: aconst_null
120: astore        10
122: aload_1
123: aload         9
125: iconst_0
126: aload         10
128: bipush        35
130: iconst_m1
131: invokevirtual #98
134: astore        11
136: ldc           #19
138: invokestatic  #15
141: goto          146
144: astore        11
146: new           #29
149: dup
150: invokespecial #30
153: ldc           #31
155: invokevirtual #32
158: iload_2
159: invokevirtual #33
162: ldc           #34
164: invokevirtual #32
167: iconst_1
168: invokevirtual #33
171: ldc           #31
173: invokevirtual #32
176: invokevirtual #35
179: iload_2
180: iconst_1
181: if_icmpne     188
184: iconst_1
185: goto          189
188: iconst_0
189: invokestatic  #36
192: new           #29
195: dup
196: invokespecial #30
199: ldc           #31
201: invokevirtual #32
204: aload         4
206: invokevirtual #32
209: ldc           #68
211: invokevirtual #32
214: invokevirtual #35
217: aload         4
219: ldc           #10
221: invokestatic  #53
224: new           #29
227: dup
228: invokespecial #30
231: ldc           #31
233: invokevirtual #32
236: aload         5
238: invokevirtual #32
241: ldc           #74
243: invokevirtual #32
246: invokevirtual #35
249: aload         5
251: ldc           #65
253: invokestatic  #53
256: new           #29
259: dup
260: invokespecial #30
263: ldc           #31
265: invokevirtual #32
268: aload         6
270: invokevirtual #32
273: ldc           #68
275: invokevirtual #32
278: invokevirtual #35
281: aload         6
283: ldc           #10
285: invokestatic  #53
288: aload         7
290: invokestatic  #51
293: new           #29
296: dup
297: invokespecial #30
300: ldc           #31
302: invokevirtual #32
305: iload         8
307: invokevirtual #33
310: ldc           #34
312: invokevirtual #32
315: bipush        52
317: invokevirtual #33
320: ldc           #31
322: invokevirtual #32
325: invokevirtual #35
328: iload         8
330: bipush        52
332: if_icmpne     339
335: iconst_1
336: goto          340
339: iconst_0
340: invokestatic  #36
343: return
Exception table:
from    to  target type
122   141   144   Class java/lang/NegativeArraySizeException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0151
Start line: 3151
End line: 0
Method source code: 
    public void test0151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0151");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.defaultDescPad = '4';
        helpFormatter0.setNewLine("");
        helpFormatter0.defaultWidth = 0;
        java.io.PrintWriter printWriter10 = null;
        try {
            helpFormatter0.printWrapped(printWriter10, (int) (short) 1, "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #247
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #22
36: istore_2
37: aload_1
38: ldc           #10
40: putfield      #23
43: aload_1
44: bipush        52
46: putfield      #76
49: aload_1
50: ldc           #10
52: invokevirtual #131
55: aload_1
56: iconst_0
57: putfield      #110
60: aconst_null
61: astore_3
62: aload_1
63: aload_3
64: iconst_1
65: ldc           #25
67: invokevirtual #82
70: ldc           #14
72: invokestatic  #15
75: goto          80
78: astore        4
80: new           #29
83: dup
84: invokespecial #30
87: ldc           #31
89: invokevirtual #32
92: iload_2
93: invokevirtual #33
96: ldc           #34
98: invokevirtual #32
101: iconst_1
102: invokevirtual #33
105: ldc           #31
107: invokevirtual #32
110: invokevirtual #35
113: iload_2
114: iconst_1
115: if_icmpne     122
118: iconst_1
119: goto          123
122: iconst_0
123: invokestatic  #36
126: return
Exception table:
from    to  target type
62    75    78   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0152
Start line: 3172
End line: 0
Method source code: 
    public void test0152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0152");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.StringBuffer stringBuffer2 = null;
        try {
            java.lang.StringBuffer stringBuffer6 = helpFormatter0.renderWrappedText(stringBuffer2, (int) (short) -1, 0, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #248
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #22
36: istore_2
37: aconst_null
38: astore_3
39: aload_1
40: aload_3
41: iconst_m1
42: iconst_0
43: ldc           #10
45: invokevirtual #70
48: astore        4
50: ldc           #14
52: invokestatic  #15
55: goto          60
58: astore        4
60: new           #29
63: dup
64: invokespecial #30
67: ldc           #31
69: invokevirtual #32
72: iload_2
73: invokevirtual #33
76: ldc           #34
78: invokevirtual #32
81: iconst_1
82: invokevirtual #33
85: ldc           #31
87: invokevirtual #32
90: invokevirtual #35
93: iload_2
94: iconst_1
95: if_icmpne     102
98: iconst_1
99: goto          103
102: iconst_0
103: invokestatic  #36
106: return
Exception table:
from    to  target type
39    55    58   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0153
Start line: 3189
End line: 0
Method source code: 
    public void test0153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0153");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.lang.StringBuffer stringBuffer1 = null;
        org.apache.commons.cli.Options options3 = null;
        try {
            java.lang.StringBuffer stringBuffer6 = helpFormatter0.renderOptions(stringBuffer1, (int) ' ', options3, (int) (short) -1, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: null");
        } catch (java.lang.NegativeArraySizeException e) {
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #249
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aconst_null
33: astore_2
34: aconst_null
35: astore_3
36: aload_1
37: aload_2
38: bipush        32
40: aload_3
41: iconst_m1
42: bipush        100
44: invokevirtual #98
47: astore        4
49: ldc           #19
51: invokestatic  #15
54: goto          59
57: astore        4
59: return
Exception table:
from    to  target type
36    54    57   Class java/lang/NegativeArraySizeException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0154
Start line: 3205
End line: 0
Method source code: 
    public void test0154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0154");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        helpFormatter0.defaultArgName = "hi!";
        java.lang.String str9 = helpFormatter0.createPadding((int) (byte) 10);
        helpFormatter0.setSyntaxPrefix(" ");
        java.lang.StringBuffer stringBuffer12 = null;
        org.apache.commons.cli.Options options14 = null;
        try {
            java.lang.StringBuffer stringBuffer17 = helpFormatter0.renderOptions(stringBuffer12, (int) (short) -1, options14, 10, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: null");
        } catch (java.lang.NegativeArraySizeException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "          " + "'", str9, "          ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #250
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #22
36: istore_2
37: aload_1
38: ldc           #10
40: putfield      #23
43: aload_1
44: bipush        10
46: invokevirtual #38
49: aload_1
50: ldc           #25
52: putfield      #77
55: aload_1
56: bipush        10
58: invokevirtual #108
61: astore_3
62: aload_1
63: ldc           #24
65: invokevirtual #39
68: aconst_null
69: astore        4
71: aconst_null
72: astore        5
74: aload_1
75: aload         4
77: iconst_m1
78: aload         5
80: bipush        10
82: iconst_m1
83: invokevirtual #98
86: astore        6
88: ldc           #19
90: invokestatic  #15
93: goto          98
96: astore        6
98: new           #29
101: dup
102: invokespecial #30
105: ldc           #31
107: invokevirtual #32
110: iload_2
111: invokevirtual #33
114: ldc           #34
116: invokevirtual #32
119: iconst_1
120: invokevirtual #33
123: ldc           #31
125: invokevirtual #32
128: invokevirtual #35
131: iload_2
132: iconst_1
133: if_icmpne     140
136: iconst_1
137: goto          141
140: iconst_0
141: invokestatic  #36
144: new           #29
147: dup
148: invokespecial #30
151: ldc           #31
153: invokevirtual #32
156: aload_3
157: invokevirtual #32
160: ldc           #204
162: invokevirtual #32
165: invokevirtual #35
168: aload_3
169: ldc           #114
171: invokestatic  #53
174: return
Exception table:
from    to  target type
74    93    96   Class java/lang/NegativeArraySizeException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0155
Start line: 3229
End line: 0
Method source code: 
    public void test0155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0155");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str6 = helpFormatter0.getNewLine();
        helpFormatter0.setSyntaxPrefix(" ");
        java.lang.String str9 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.defaultNewLine = " ";
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\n" + "'", str6, "\n");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #251
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: ldc           #10
35: invokevirtual #11
38: aload_1
39: ldc           #10
41: putfield      #55
44: aload_1
45: getfield      #55
48: astore_2
49: aload_1
50: invokevirtual #72
53: astore_3
54: aload_1
55: ldc           #24
57: invokevirtual #39
60: aload_1
61: getfield      #63
64: astore        4
66: aload_1
67: ldc           #24
69: putfield      #23
72: new           #29
75: dup
76: invokespecial #30
79: ldc           #31
81: invokevirtual #32
84: aload_2
85: invokevirtual #32
88: ldc           #68
90: invokevirtual #32
93: invokevirtual #35
96: aload_2
97: ldc           #10
99: invokestatic  #53
102: new           #29
105: dup
106: invokespecial #30
109: ldc           #31
111: invokevirtual #32
114: aload_3
115: invokevirtual #32
118: ldc           #74
120: invokevirtual #32
123: invokevirtual #35
126: aload_3
127: ldc           #65
129: invokestatic  #53
132: new           #29
135: dup
136: invokespecial #30
139: ldc           #31
141: invokevirtual #32
144: aload         4
146: invokevirtual #32
149: ldc           #68
151: invokevirtual #32
154: invokevirtual #35
157: aload         4
159: ldc           #10
161: invokestatic  #53
164: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0156
Start line: 3246
End line: 0
Method source code: 
    public void test0156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0156");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.defaultDescPad = '4';
        helpFormatter0.setNewLine("");
        helpFormatter0.setSyntaxPrefix("");
        java.lang.String str10 = helpFormatter0.getSyntaxPrefix();
        helpFormatter0.setWidth((-2));
        org.apache.commons.cli.Options options15 = null;
        try {
            helpFormatter0.printHelp("hi!", "hi!", options15, "                                                                                                 ");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #252
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #22
36: istore_2
37: aload_1
38: ldc           #10
40: putfield      #23
43: aload_1
44: bipush        52
46: putfield      #76
49: aload_1
50: ldc           #10
52: invokevirtual #131
55: aload_1
56: ldc           #10
58: invokevirtual #39
61: aload_1
62: invokevirtual #102
65: astore_3
66: aload_1
67: bipush        -2
69: invokevirtual #156
72: aconst_null
73: astore        4
75: aload_1
76: ldc           #25
78: ldc           #25
80: aload         4
82: ldc           #141
84: invokevirtual #13
87: ldc           #178
89: invokestatic  #15
92: goto          97
95: astore        5
97: new           #29
100: dup
101: invokespecial #30
104: ldc           #31
106: invokevirtual #32
109: iload_2
110: invokevirtual #33
113: ldc           #34
115: invokevirtual #32
118: iconst_1
119: invokevirtual #33
122: ldc           #31
124: invokevirtual #32
127: invokevirtual #35
130: iload_2
131: iconst_1
132: if_icmpne     139
135: iconst_1
136: goto          140
139: iconst_0
140: invokestatic  #36
143: new           #29
146: dup
147: invokespecial #30
150: ldc           #31
152: invokevirtual #32
155: aload_3
156: invokevirtual #32
159: ldc           #68
161: invokevirtual #32
164: invokevirtual #35
167: aload_3
168: ldc           #10
170: invokestatic  #53
173: return
Exception table:
from    to  target type
75    92    95   Class java/lang/StringIndexOutOfBoundsException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0157
Start line: 3270
End line: 0
Method source code: 
    public void test0157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0157");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.getArgName();
        helpFormatter0.setSyntaxPrefix("usage: ");
        java.lang.String str5 = helpFormatter0.defaultSyntaxPrefix;
        java.io.PrintWriter printWriter6 = null;
        try {
            helpFormatter0.printWrapped(printWriter6, (int) (byte) 10, "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "arg" + "'", str2, "arg");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "usage: " + "'", str5, "usage: ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #253
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #22
36: istore_2
37: aload_1
38: invokevirtual #104
41: astore_3
42: aload_1
43: ldc           #12
45: invokevirtual #39
48: aload_1
49: getfield      #97
52: astore        4
54: aconst_null
55: astore        5
57: aload_1
58: aload         5
60: bipush        10
62: ldc           #25
64: invokevirtual #82
67: ldc           #14
69: invokestatic  #15
72: goto          77
75: astore        6
77: new           #29
80: dup
81: invokespecial #30
84: ldc           #31
86: invokevirtual #32
89: iload_2
90: invokevirtual #33
93: ldc           #34
95: invokevirtual #32
98: iconst_1
99: invokevirtual #33
102: ldc           #31
104: invokevirtual #32
107: invokevirtual #35
110: iload_2
111: iconst_1
112: if_icmpne     119
115: iconst_1
116: goto          120
119: iconst_0
120: invokestatic  #36
123: new           #29
126: dup
127: invokespecial #30
130: ldc           #31
132: invokevirtual #32
135: aload_3
136: invokevirtual #32
139: ldc           #78
141: invokevirtual #32
144: invokevirtual #35
147: aload_3
148: ldc           #79
150: invokestatic  #53
153: new           #29
156: dup
157: invokespecial #30
160: ldc           #31
162: invokevirtual #32
165: aload         4
167: invokevirtual #32
170: ldc           #99
172: invokevirtual #32
175: invokevirtual #35
178: aload         4
180: ldc           #12
182: invokestatic  #53
185: return
Exception table:
from    to  target type
57    72    75   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0158
Start line: 3292
End line: 0
Method source code: 
    public void test0158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0158");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.util.Comparator comparator1 = helpFormatter0.optionComparator;
        int int2 = helpFormatter0.defaultLeftPad;
        java.lang.StringBuffer stringBuffer3 = null;
        try {
            java.lang.StringBuffer stringBuffer7 = helpFormatter0.renderWrappedText(stringBuffer3, (int) (byte) 10, 0, "arg");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(comparator1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #254
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: getfield      #47
36: astore_2
37: aload_1
38: getfield      #60
41: istore_3
42: aconst_null
43: astore        4
45: aload_1
46: aload         4
48: bipush        10
50: iconst_0
51: ldc           #79
53: invokevirtual #70
56: astore        5
58: ldc           #14
60: invokestatic  #15
63: goto          68
66: astore        5
68: aload_2
69: invokestatic  #51
72: new           #29
75: dup
76: invokespecial #30
79: ldc           #31
81: invokevirtual #32
84: iload_3
85: invokevirtual #33
88: ldc           #34
90: invokevirtual #32
93: iconst_1
94: invokevirtual #33
97: ldc           #31
99: invokevirtual #32
102: invokevirtual #35
105: iload_3
106: iconst_1
107: if_icmpne     114
110: iconst_1
111: goto          115
114: iconst_0
115: invokestatic  #36
118: return
Exception table:
from    to  target type
45    63    66   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0159
Start line: 3311
End line: 0
Method source code: 
    public void test0159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0159");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str3 = helpFormatter0.getOptPrefix();
        java.util.Comparator comparator4 = helpFormatter0.optionComparator;
        java.util.Comparator comparator5 = helpFormatter0.optionComparator;
        org.apache.commons.cli.Options options7 = null;
        try {
            helpFormatter0.printHelp("                                                                                                    ", options7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "--" + "'", str2, "--");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "-" + "'", str3, "-");
        org.junit.Assert.assertNotNull(comparator4);
        org.junit.Assert.assertNotNull(comparator5);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #255
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #22
36: istore_2
37: aload_1
38: getfield      #55
41: astore_3
42: aload_1
43: invokevirtual #123
46: astore        4
48: aload_1
49: getfield      #47
52: astore        5
54: aload_1
55: getfield      #47
58: astore        6
60: aconst_null
61: astore        7
63: aload_1
64: ldc           #240
66: aload         7
68: invokevirtual #50
71: ldc           #14
73: invokestatic  #15
76: goto          81
79: astore        8
81: new           #29
84: dup
85: invokespecial #30
88: ldc           #31
90: invokevirtual #32
93: iload_2
94: invokevirtual #33
97: ldc           #34
99: invokevirtual #32
102: iconst_1
103: invokevirtual #33
106: ldc           #31
108: invokevirtual #32
111: invokevirtual #35
114: iload_2
115: iconst_1
116: if_icmpne     123
119: iconst_1
120: goto          124
123: iconst_0
124: invokestatic  #36
127: new           #29
130: dup
131: invokespecial #30
134: ldc           #31
136: invokevirtual #32
139: aload_3
140: invokevirtual #32
143: ldc           #52
145: invokevirtual #32
148: invokevirtual #35
151: aload_3
152: ldc           #44
154: invokestatic  #53
157: new           #29
160: dup
161: invokespecial #30
164: ldc           #31
166: invokevirtual #32
169: aload         4
171: invokevirtual #32
174: ldc           #66
176: invokevirtual #32
179: invokevirtual #35
182: aload         4
184: ldc           #67
186: invokestatic  #53
189: aload         5
191: invokestatic  #51
194: aload         6
196: invokestatic  #51
199: return
Exception table:
from    to  target type
63    76    79   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0160
Start line: 3336
End line: 0
Method source code: 
    public void test0160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0160");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.util.Comparator comparator1 = helpFormatter0.optionComparator;
        java.lang.String str2 = helpFormatter0.getLongOptPrefix();
        helpFormatter0.setLongOptPrefix("");
        int int5 = helpFormatter0.getDescPadding();
        java.lang.StringBuffer stringBuffer6 = null;
        try {
            java.lang.StringBuffer stringBuffer10 = helpFormatter0.renderWrappedText(stringBuffer6, 0, (int) (short) -1, "                                                                                                 ");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(comparator1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "--" + "'", str2, "--");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 3 + "'", int5 == 3);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #256
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: getfield      #47
37: astore_2
38: aload_1
39: invokevirtual #48
42: astore_3
43: aload_1
44: ldc           #10
46: invokevirtual #49
49: aload_1
50: invokevirtual #118
53: istore        4
55: aconst_null
56: astore        5
58: aload_1
59: aload         5
61: iconst_0
62: iconst_m1
63: ldc           #141
65: invokevirtual #70
68: astore        6
70: ldc           #14
72: invokestatic  #15
75: goto          80
78: astore        6
80: aload_2
81: invokestatic  #51
84: new           #29
87: dup
88: invokespecial #30
91: ldc           #31
93: invokevirtual #32
96: aload_3
97: invokevirtual #32
100: ldc           #52
102: invokevirtual #32
105: invokevirtual #35
108: aload_3
109: ldc           #44
111: invokestatic  #53
114: new           #29
117: dup
118: invokespecial #30
121: ldc           #31
123: invokevirtual #32
126: iload         4
128: invokevirtual #33
131: ldc           #34
133: invokevirtual #32
136: iconst_3
137: invokevirtual #33
140: ldc           #31
142: invokevirtual #32
145: invokevirtual #35
148: iload         4
150: iconst_3
151: if_icmpne     158
154: iconst_1
155: goto          159
158: iconst_0
159: invokestatic  #36
162: return
Exception table:
from    to  target type
58    75    78   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0161
Start line: 3358
End line: 0
Method source code: 
    public void test0161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0161");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setLongOptPrefix(" ");
        helpFormatter0.defaultDescPad = (short) 10;
        helpFormatter0.defaultSyntaxPrefix = "";
        helpFormatter0.setLongOptPrefix("");
        java.lang.String str13 = helpFormatter0.defaultNewLine;
        java.lang.String str15 = helpFormatter0.createPadding(3);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "   " + "'", str15, "   ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #257
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: getfield      #63
48: astore_3
49: aload_1
50: ldc           #24
52: invokevirtual #49
55: aload_1
56: bipush        10
58: putfield      #76
61: aload_1
62: ldc           #10
64: putfield      #97
67: aload_1
68: ldc           #10
70: invokevirtual #49
73: aload_1
74: getfield      #23
77: astore        4
79: aload_1
80: iconst_3
81: invokevirtual #108
84: astore        5
86: new           #29
89: dup
90: invokespecial #30
93: ldc           #31
95: invokevirtual #32
98: iload_2
99: invokevirtual #33
102: ldc           #34
104: invokevirtual #32
107: iconst_1
108: invokevirtual #33
111: ldc           #31
113: invokevirtual #32
116: invokevirtual #35
119: iload_2
120: iconst_1
121: if_icmpne     128
124: iconst_1
125: goto          129
128: iconst_0
129: invokestatic  #36
132: new           #29
135: dup
136: invokespecial #30
139: ldc           #31
141: invokevirtual #32
144: aload_3
145: invokevirtual #32
148: ldc           #66
150: invokevirtual #32
153: invokevirtual #35
156: aload_3
157: ldc           #67
159: invokestatic  #53
162: new           #29
165: dup
166: invokespecial #30
169: ldc           #31
171: invokevirtual #32
174: aload         4
176: invokevirtual #32
179: ldc           #68
181: invokevirtual #32
184: invokevirtual #35
187: aload         4
189: ldc           #10
191: invokestatic  #53
194: new           #29
197: dup
198: invokespecial #30
201: ldc           #31
203: invokevirtual #32
206: aload         5
208: invokevirtual #32
211: ldc_w         #258
214: invokevirtual #32
217: invokevirtual #35
220: aload         5
222: ldc_w         #259
225: invokestatic  #53
228: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0162
Start line: 3378
End line: 0
Method source code: 
    public void test0162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0162");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.util.Comparator comparator1 = helpFormatter0.optionComparator;
        int int2 = helpFormatter0.getLeftPadding();
        int int3 = helpFormatter0.defaultLeftPad;
        java.lang.String str5 = helpFormatter0.createPadding((int) 'a');
        org.apache.commons.cli.HelpFormatter helpFormatter6 = new org.apache.commons.cli.HelpFormatter();
        int int7 = helpFormatter6.getLeftPadding();
        helpFormatter6.defaultNewLine = "";
        helpFormatter6.defaultDescPad = '4';
        helpFormatter6.setNewLine("");
        int int17 = helpFormatter6.findWrapPos("\n", (int) ' ', 3);
        java.util.Comparator comparator18 = helpFormatter6.optionComparator;
        helpFormatter0.setOptionComparator(comparator18);
        java.lang.String str20 = helpFormatter0.defaultNewLine;
        java.io.PrintWriter printWriter21 = null;
        org.apache.commons.cli.Options options23 = null;
        try {
            helpFormatter0.printOptions(printWriter21, (int) (byte) 1, options23, 0, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(comparator1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "                                                                                                 " + "'", str5, "                                                                                                 ");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(comparator18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "\n" + "'", str20, "\n");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #260
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: getfield      #47
37: astore_2
38: aload_1
39: invokevirtual #22
42: istore_3
43: aload_1
44: getfield      #60
47: istore        4
49: aload_1
50: bipush        97
52: invokevirtual #108
55: astore        5
57: new           #8
60: dup
61: invokespecial #9
64: astore        6
66: aload         6
68: invokevirtual #22
71: istore        7
73: aload         6
75: ldc           #10
77: putfield      #23
80: aload         6
82: bipush        52
84: putfield      #76
87: aload         6
89: ldc           #10
91: invokevirtual #131
94: aload         6
96: ldc           #65
98: bipush        32
100: iconst_3
101: invokevirtual #93
104: istore        8
106: aload         6
108: getfield      #47
111: astore        9
113: aload_1
114: aload         9
116: invokevirtual #152
119: aload_1
120: getfield      #23
123: astore        10
125: aconst_null
126: astore        11
128: aconst_null
129: astore        12
131: aload_1
132: aload         11
134: iconst_1
135: aload         12
137: iconst_0
138: iconst_0
139: invokevirtual #18
142: ldc           #14
144: invokestatic  #15
147: goto          152
150: astore        13
152: aload_2
153: invokestatic  #51
156: new           #29
159: dup
160: invokespecial #30
163: ldc           #31
165: invokevirtual #32
168: iload_3
169: invokevirtual #33
172: ldc           #34
174: invokevirtual #32
177: iconst_1
178: invokevirtual #33
181: ldc           #31
183: invokevirtual #32
186: invokevirtual #35
189: iload_3
190: iconst_1
191: if_icmpne     198
194: iconst_1
195: goto          199
198: iconst_0
199: invokestatic  #36
202: new           #29
205: dup
206: invokespecial #30
209: ldc           #31
211: invokevirtual #32
214: iload         4
216: invokevirtual #33
219: ldc           #34
221: invokevirtual #32
224: iconst_1
225: invokevirtual #33
228: ldc           #31
230: invokevirtual #32
233: invokevirtual #35
236: iload         4
238: iconst_1
239: if_icmpne     246
242: iconst_1
243: goto          247
246: iconst_0
247: invokestatic  #36
250: new           #29
253: dup
254: invokespecial #30
257: ldc           #31
259: invokevirtual #32
262: aload         5
264: invokevirtual #32
267: ldc           #185
269: invokevirtual #32
272: invokevirtual #35
275: aload         5
277: ldc           #141
279: invokestatic  #53
282: new           #29
285: dup
286: invokespecial #30
289: ldc           #31
291: invokevirtual #32
294: iload         7
296: invokevirtual #33
299: ldc           #34
301: invokevirtual #32
304: iconst_1
305: invokevirtual #33
308: ldc           #31
310: invokevirtual #32
313: invokevirtual #35
316: iload         7
318: iconst_1
319: if_icmpne     326
322: iconst_1
323: goto          327
326: iconst_0
327: invokestatic  #36
330: new           #29
333: dup
334: invokespecial #30
337: ldc           #31
339: invokevirtual #32
342: iload         8
344: invokevirtual #33
347: ldc           #34
349: invokevirtual #32
352: iconst_m1
353: invokevirtual #33
356: ldc           #31
358: invokevirtual #32
361: invokevirtual #35
364: iload         8
366: iconst_m1
367: if_icmpne     374
370: iconst_1
371: goto          375
374: iconst_0
375: invokestatic  #36
378: aload         9
380: invokestatic  #51
383: new           #29
386: dup
387: invokespecial #30
390: ldc           #31
392: invokevirtual #32
395: aload         10
397: invokevirtual #32
400: ldc           #74
402: invokevirtual #32
405: invokevirtual #35
408: aload         10
410: ldc           #65
412: invokestatic  #53
415: return
Exception table:
from    to  target type
131   147   150   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0163
Start line: 3415
End line: 0
Method source code: 
    public void test0163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0163");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        java.lang.String str6 = helpFormatter0.rtrim("");
        java.lang.String str8 = helpFormatter0.rtrim("-");
        java.lang.String str9 = helpFormatter0.getLongOptSeparator();
        java.lang.String str10 = helpFormatter0.getLongOptPrefix();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "-" + "'", str8, "-");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + " " + "'", str9, " ");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "--" + "'", str10, "--");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #261
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: getfield      #63
48: astore_3
49: aload_1
50: ldc           #10
52: invokevirtual #64
55: astore        4
57: aload_1
58: ldc           #67
60: invokevirtual #64
63: astore        5
65: aload_1
66: invokevirtual #86
69: astore        6
71: aload_1
72: invokevirtual #48
75: astore        7
77: new           #29
80: dup
81: invokespecial #30
84: ldc           #31
86: invokevirtual #32
89: iload_2
90: invokevirtual #33
93: ldc           #34
95: invokevirtual #32
98: iconst_1
99: invokevirtual #33
102: ldc           #31
104: invokevirtual #32
107: invokevirtual #35
110: iload_2
111: iconst_1
112: if_icmpne     119
115: iconst_1
116: goto          120
119: iconst_0
120: invokestatic  #36
123: new           #29
126: dup
127: invokespecial #30
130: ldc           #31
132: invokevirtual #32
135: aload_3
136: invokevirtual #32
139: ldc           #66
141: invokevirtual #32
144: invokevirtual #35
147: aload_3
148: ldc           #67
150: invokestatic  #53
153: new           #29
156: dup
157: invokespecial #30
160: ldc           #31
162: invokevirtual #32
165: aload         4
167: invokevirtual #32
170: ldc           #68
172: invokevirtual #32
175: invokevirtual #35
178: aload         4
180: ldc           #10
182: invokestatic  #53
185: new           #29
188: dup
189: invokespecial #30
192: ldc           #31
194: invokevirtual #32
197: aload         5
199: invokevirtual #32
202: ldc           #66
204: invokevirtual #32
207: invokevirtual #35
210: aload         5
212: ldc           #67
214: invokestatic  #53
217: new           #29
220: dup
221: invokespecial #30
224: ldc           #31
226: invokevirtual #32
229: aload         6
231: invokevirtual #32
234: ldc           #88
236: invokevirtual #32
239: invokevirtual #35
242: aload         6
244: ldc           #24
246: invokestatic  #53
249: new           #29
252: dup
253: invokespecial #30
256: ldc           #31
258: invokevirtual #32
261: aload         7
263: invokevirtual #32
266: ldc           #52
268: invokevirtual #32
271: invokevirtual #35
274: aload         7
276: ldc           #44
278: invokestatic  #53
281: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0164
Start line: 3435
End line: 0
Method source code: 
    public void test0164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0164");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.getArgName();
        helpFormatter0.defaultNewLine = "\n";
        helpFormatter0.defaultLeftPad = (byte) -1;
        helpFormatter0.setLongOptSeparator("");
        helpFormatter0.setLongOptSeparator("-");
        java.lang.String str11 = helpFormatter0.getSyntaxPrefix();
        helpFormatter0.defaultDescPad = (byte) 1;
        java.io.PrintWriter printWriter14 = null;
        org.apache.commons.cli.Options options18 = null;
        try {
            helpFormatter0.printHelp(printWriter14, (int) (byte) 1, "\n", "   ", options18, (int) (short) 1, 0, "-", true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "arg" + "'", str2, "arg");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "usage: " + "'", str11, "usage: ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #262
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: invokevirtual #104
42: astore_3
43: aload_1
44: ldc           #65
46: putfield      #23
49: aload_1
50: iconst_m1
51: putfield      #60
54: aload_1
55: ldc           #10
57: invokevirtual #91
60: aload_1
61: ldc           #67
63: invokevirtual #91
66: aload_1
67: invokevirtual #102
70: astore        4
72: aload_1
73: iconst_1
74: putfield      #76
77: aconst_null
78: astore        5
80: aconst_null
81: astore        6
83: aload_1
84: aload         5
86: iconst_1
87: ldc           #65
89: ldc_w         #259
92: aload         6
94: iconst_1
95: iconst_0
96: ldc           #67
98: iconst_1
99: invokevirtual #40
102: ldc           #14
104: invokestatic  #15
107: goto          112
110: astore        7
112: new           #29
115: dup
116: invokespecial #30
119: ldc           #31
121: invokevirtual #32
124: iload_2
125: invokevirtual #33
128: ldc           #34
130: invokevirtual #32
133: iconst_1
134: invokevirtual #33
137: ldc           #31
139: invokevirtual #32
142: invokevirtual #35
145: iload_2
146: iconst_1
147: if_icmpne     154
150: iconst_1
151: goto          155
154: iconst_0
155: invokestatic  #36
158: new           #29
161: dup
162: invokespecial #30
165: ldc           #31
167: invokevirtual #32
170: aload_3
171: invokevirtual #32
174: ldc           #78
176: invokevirtual #32
179: invokevirtual #35
182: aload_3
183: ldc           #79
185: invokestatic  #53
188: new           #29
191: dup
192: invokespecial #30
195: ldc           #31
197: invokevirtual #32
200: aload         4
202: invokevirtual #32
205: ldc           #99
207: invokevirtual #32
210: invokevirtual #35
213: aload         4
215: ldc           #12
217: invokestatic  #53
220: return
Exception table:
from    to  target type
83   107   110   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0165
Start line: 3462
End line: 0
Method source code: 
    public void test0165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0165");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.getArgName();
        org.apache.commons.cli.Options options6 = null;
        try {
            helpFormatter0.printHelp("arg", options6, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "arg" + "'", str4, "arg");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #263
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: invokevirtual #104
48: astore_3
49: aconst_null
50: astore        4
52: aload_1
53: ldc           #79
55: aload         4
57: iconst_0
58: invokevirtual #135
61: ldc           #14
63: invokestatic  #15
66: goto          71
69: astore        5
71: new           #29
74: dup
75: invokespecial #30
78: ldc           #31
80: invokevirtual #32
83: iload_2
84: invokevirtual #33
87: ldc           #34
89: invokevirtual #32
92: iconst_1
93: invokevirtual #33
96: ldc           #31
98: invokevirtual #32
101: invokevirtual #35
104: iload_2
105: iconst_1
106: if_icmpne     113
109: iconst_1
110: goto          114
113: iconst_0
114: invokestatic  #36
117: new           #29
120: dup
121: invokespecial #30
124: ldc           #31
126: invokevirtual #32
129: aload_3
130: invokevirtual #32
133: ldc           #78
135: invokevirtual #32
138: invokevirtual #35
141: aload_3
142: ldc           #79
144: invokestatic  #53
147: return
Exception table:
from    to  target type
52    66    69   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0166
Start line: 3482
End line: 0
Method source code: 
    public void test0166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0166");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.util.Comparator comparator1 = helpFormatter0.optionComparator;
        int int2 = helpFormatter0.getLeftPadding();
        int int3 = helpFormatter0.defaultLeftPad;
        helpFormatter0.defaultOptPrefix = "";
        org.apache.commons.cli.Options options7 = null;
        try {
            helpFormatter0.printHelp(" ", options7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(comparator1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #264
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: getfield      #47
37: astore_2
38: aload_1
39: invokevirtual #22
42: istore_3
43: aload_1
44: getfield      #60
47: istore        4
49: aload_1
50: ldc           #10
52: putfield      #63
55: aconst_null
56: astore        5
58: aload_1
59: ldc           #24
61: aload         5
63: invokevirtual #50
66: ldc           #14
68: invokestatic  #15
71: goto          76
74: astore        6
76: aload_2
77: invokestatic  #51
80: new           #29
83: dup
84: invokespecial #30
87: ldc           #31
89: invokevirtual #32
92: iload_3
93: invokevirtual #33
96: ldc           #34
98: invokevirtual #32
101: iconst_1
102: invokevirtual #33
105: ldc           #31
107: invokevirtual #32
110: invokevirtual #35
113: iload_3
114: iconst_1
115: if_icmpne     122
118: iconst_1
119: goto          123
122: iconst_0
123: invokestatic  #36
126: new           #29
129: dup
130: invokespecial #30
133: ldc           #31
135: invokevirtual #32
138: iload         4
140: invokevirtual #33
143: ldc           #34
145: invokevirtual #32
148: iconst_1
149: invokevirtual #33
152: ldc           #31
154: invokevirtual #32
157: invokevirtual #35
160: iload         4
162: iconst_1
163: if_icmpne     170
166: iconst_1
167: goto          171
170: iconst_0
171: invokestatic  #36
174: return
Exception table:
from    to  target type
58    71    74   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0167
Start line: 3504
End line: 0
Method source code: 
    public void test0167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0167");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.util.Comparator comparator1 = helpFormatter0.optionComparator;
        int int2 = helpFormatter0.getLeftPadding();
        java.lang.String str4 = helpFormatter0.rtrim("-");
        int int5 = helpFormatter0.defaultLeftPad;
        java.lang.String str6 = helpFormatter0.getLongOptPrefix();
        java.lang.StringBuffer stringBuffer7 = null;
        try {
            java.lang.StringBuffer stringBuffer11 = helpFormatter0.renderWrappedText(stringBuffer7, (int) (short) 10, (int) (short) 100, "                                                                                                 ");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(comparator1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "--" + "'", str6, "--");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #265
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: getfield      #47
37: astore_2
38: aload_1
39: invokevirtual #22
42: istore_3
43: aload_1
44: ldc           #67
46: invokevirtual #64
49: astore        4
51: aload_1
52: getfield      #60
55: istore        5
57: aload_1
58: invokevirtual #48
61: astore        6
63: aconst_null
64: astore        7
66: aload_1
67: aload         7
69: bipush        10
71: bipush        100
73: ldc           #141
75: invokevirtual #70
78: astore        8
80: ldc           #14
82: invokestatic  #15
85: goto          90
88: astore        8
90: aload_2
91: invokestatic  #51
94: new           #29
97: dup
98: invokespecial #30
101: ldc           #31
103: invokevirtual #32
106: iload_3
107: invokevirtual #33
110: ldc           #34
112: invokevirtual #32
115: iconst_1
116: invokevirtual #33
119: ldc           #31
121: invokevirtual #32
124: invokevirtual #35
127: iload_3
128: iconst_1
129: if_icmpne     136
132: iconst_1
133: goto          137
136: iconst_0
137: invokestatic  #36
140: new           #29
143: dup
144: invokespecial #30
147: ldc           #31
149: invokevirtual #32
152: aload         4
154: invokevirtual #32
157: ldc           #66
159: invokevirtual #32
162: invokevirtual #35
165: aload         4
167: ldc           #67
169: invokestatic  #53
172: new           #29
175: dup
176: invokespecial #30
179: ldc           #31
181: invokevirtual #32
184: iload         5
186: invokevirtual #33
189: ldc           #34
191: invokevirtual #32
194: iconst_1
195: invokevirtual #33
198: ldc           #31
200: invokevirtual #32
203: invokevirtual #35
206: iload         5
208: iconst_1
209: if_icmpne     216
212: iconst_1
213: goto          217
216: iconst_0
217: invokestatic  #36
220: new           #29
223: dup
224: invokespecial #30
227: ldc           #31
229: invokevirtual #32
232: aload         6
234: invokevirtual #32
237: ldc           #52
239: invokevirtual #32
242: invokevirtual #35
245: aload         6
247: ldc           #44
249: invokestatic  #53
252: return
Exception table:
from    to  target type
66    85    88   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0168
Start line: 3529
End line: 0
Method source code: 
    public void test0168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0168");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.defaultDescPad = '4';
        org.apache.commons.cli.Options options9 = null;
        try {
            helpFormatter0.printHelp((int) (byte) 10, "                                                                                                    ", "", options9, "\n", true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #266
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: bipush        52
47: putfield      #76
50: aconst_null
51: astore_3
52: aload_1
53: bipush        10
55: ldc           #240
57: ldc           #10
59: aload_3
60: ldc           #65
62: iconst_1
63: invokevirtual #26
66: ldc           #14
68: invokestatic  #15
71: goto          76
74: astore        4
76: new           #29
79: dup
80: invokespecial #30
83: ldc           #31
85: invokevirtual #32
88: iload_2
89: invokevirtual #33
92: ldc           #34
94: invokevirtual #32
97: iconst_1
98: invokevirtual #33
101: ldc           #31
103: invokevirtual #32
106: invokevirtual #35
109: iload_2
110: iconst_1
111: if_icmpne     118
114: iconst_1
115: goto          119
118: iconst_0
119: invokestatic  #36
122: return
Exception table:
from    to  target type
52    71    74   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0169
Start line: 3548
End line: 0
Method source code: 
    public void test0169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0169");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str6 = helpFormatter0.getNewLine();
        java.util.Comparator comparator7 = helpFormatter0.getOptionComparator();
        helpFormatter0.setDescPadding(3);
        int int10 = helpFormatter0.defaultLeftPad;
        java.lang.String str11 = helpFormatter0.defaultOptPrefix;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\n" + "'", str6, "\n");
        org.junit.Assert.assertNotNull(comparator7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #267
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #10
36: invokevirtual #11
39: aload_1
40: ldc           #10
42: putfield      #55
45: aload_1
46: getfield      #55
49: astore_2
50: aload_1
51: invokevirtual #72
54: astore_3
55: aload_1
56: invokevirtual #106
59: astore        4
61: aload_1
62: iconst_3
63: invokevirtual #38
66: aload_1
67: getfield      #60
70: istore        5
72: aload_1
73: getfield      #63
76: astore        6
78: new           #29
81: dup
82: invokespecial #30
85: ldc           #31
87: invokevirtual #32
90: aload_2
91: invokevirtual #32
94: ldc           #68
96: invokevirtual #32
99: invokevirtual #35
102: aload_2
103: ldc           #10
105: invokestatic  #53
108: new           #29
111: dup
112: invokespecial #30
115: ldc           #31
117: invokevirtual #32
120: aload_3
121: invokevirtual #32
124: ldc           #74
126: invokevirtual #32
129: invokevirtual #35
132: aload_3
133: ldc           #65
135: invokestatic  #53
138: aload         4
140: invokestatic  #51
143: new           #29
146: dup
147: invokespecial #30
150: ldc           #31
152: invokevirtual #32
155: iload         5
157: invokevirtual #33
160: ldc           #34
162: invokevirtual #32
165: iconst_1
166: invokevirtual #33
169: ldc           #31
171: invokevirtual #32
174: invokevirtual #35
177: iload         5
179: iconst_1
180: if_icmpne     187
183: iconst_1
184: goto          188
187: iconst_0
188: invokestatic  #36
191: new           #29
194: dup
195: invokespecial #30
198: ldc           #31
200: invokevirtual #32
203: aload         6
205: invokevirtual #32
208: ldc           #68
210: invokevirtual #32
213: invokevirtual #35
216: aload         6
218: ldc           #10
220: invokestatic  #53
223: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0170
Start line: 3568
End line: 0
Method source code: 
    public void test0170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0170");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setLongOptPrefix(" ");
        helpFormatter0.defaultDescPad = (short) 10;
        helpFormatter0.defaultSyntaxPrefix = "";
        helpFormatter0.setLongOptPrefix("");
        java.io.PrintWriter printWriter13 = null;
        try {
            helpFormatter0.printWrapped(printWriter13, 0, (-1), "arg");
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: null");
        } catch (java.lang.NegativeArraySizeException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #268
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: getfield      #63
48: astore_3
49: aload_1
50: ldc           #24
52: invokevirtual #49
55: aload_1
56: bipush        10
58: putfield      #76
61: aload_1
62: ldc           #10
64: putfield      #97
67: aload_1
68: ldc           #10
70: invokevirtual #49
73: aconst_null
74: astore        4
76: aload_1
77: aload         4
79: iconst_0
80: iconst_m1
81: ldc           #79
83: invokevirtual #61
86: ldc           #19
88: invokestatic  #15
91: goto          96
94: astore        5
96: new           #29
99: dup
100: invokespecial #30
103: ldc           #31
105: invokevirtual #32
108: iload_2
109: invokevirtual #33
112: ldc           #34
114: invokevirtual #32
117: iconst_1
118: invokevirtual #33
121: ldc           #31
123: invokevirtual #32
126: invokevirtual #35
129: iload_2
130: iconst_1
131: if_icmpne     138
134: iconst_1
135: goto          139
138: iconst_0
139: invokestatic  #36
142: new           #29
145: dup
146: invokespecial #30
149: ldc           #31
151: invokevirtual #32
154: aload_3
155: invokevirtual #32
158: ldc           #66
160: invokevirtual #32
163: invokevirtual #35
166: aload_3
167: ldc           #67
169: invokestatic  #53
172: return
Exception table:
from    to  target type
76    91    94   Class java/lang/NegativeArraySizeException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0171
Start line: 3592
End line: 0
Method source code: 
    public void test0171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0171");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        int int6 = helpFormatter0.defaultWidth;
        java.lang.String str7 = helpFormatter0.getLongOptPrefix();
        java.lang.String str8 = helpFormatter0.getLongOptPrefix();
        helpFormatter0.setLongOptSeparator("hi!");
        int int11 = helpFormatter0.getWidth();
        helpFormatter0.defaultWidth = (short) 0;
        java.lang.String str14 = helpFormatter0.defaultArgName;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "--" + "'", str5, "--");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 74 + "'", int6 == 74);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "--" + "'", str7, "--");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "--" + "'", str8, "--");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 74 + "'", int11 == 74);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "arg" + "'", str14, "arg");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #269
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: getfield      #63
48: astore_3
49: aload_1
50: getfield      #55
53: astore        4
55: aload_1
56: getfield      #110
59: istore        5
61: aload_1
62: invokevirtual #48
65: astore        6
67: aload_1
68: invokevirtual #48
71: astore        7
73: aload_1
74: ldc           #25
76: invokevirtual #91
79: aload_1
80: invokevirtual #129
83: istore        8
85: aload_1
86: iconst_0
87: putfield      #110
90: aload_1
91: getfield      #77
94: astore        9
96: new           #29
99: dup
100: invokespecial #30
103: ldc           #31
105: invokevirtual #32
108: iload_2
109: invokevirtual #33
112: ldc           #34
114: invokevirtual #32
117: iconst_1
118: invokevirtual #33
121: ldc           #31
123: invokevirtual #32
126: invokevirtual #35
129: iload_2
130: iconst_1
131: if_icmpne     138
134: iconst_1
135: goto          139
138: iconst_0
139: invokestatic  #36
142: new           #29
145: dup
146: invokespecial #30
149: ldc           #31
151: invokevirtual #32
154: aload_3
155: invokevirtual #32
158: ldc           #66
160: invokevirtual #32
163: invokevirtual #35
166: aload_3
167: ldc           #67
169: invokestatic  #53
172: new           #29
175: dup
176: invokespecial #30
179: ldc           #31
181: invokevirtual #32
184: aload         4
186: invokevirtual #32
189: ldc           #52
191: invokevirtual #32
194: invokevirtual #35
197: aload         4
199: ldc           #44
201: invokestatic  #53
204: new           #29
207: dup
208: invokespecial #30
211: ldc           #31
213: invokevirtual #32
216: iload         5
218: invokevirtual #33
221: ldc           #34
223: invokevirtual #32
226: bipush        74
228: invokevirtual #33
231: ldc           #31
233: invokevirtual #32
236: invokevirtual #35
239: iload         5
241: bipush        74
243: if_icmpne     250
246: iconst_1
247: goto          251
250: iconst_0
251: invokestatic  #36
254: new           #29
257: dup
258: invokespecial #30
261: ldc           #31
263: invokevirtual #32
266: aload         6
268: invokevirtual #32
271: ldc           #52
273: invokevirtual #32
276: invokevirtual #35
279: aload         6
281: ldc           #44
283: invokestatic  #53
286: new           #29
289: dup
290: invokespecial #30
293: ldc           #31
295: invokevirtual #32
298: aload         7
300: invokevirtual #32
303: ldc           #52
305: invokevirtual #32
308: invokevirtual #35
311: aload         7
313: ldc           #44
315: invokestatic  #53
318: new           #29
321: dup
322: invokespecial #30
325: ldc           #31
327: invokevirtual #32
330: iload         8
332: invokevirtual #33
335: ldc           #34
337: invokevirtual #32
340: bipush        74
342: invokevirtual #33
345: ldc           #31
347: invokevirtual #32
350: invokevirtual #35
353: iload         8
355: bipush        74
357: if_icmpne     364
360: iconst_1
361: goto          365
364: iconst_0
365: invokestatic  #36
368: new           #29
371: dup
372: invokespecial #30
375: ldc           #31
377: invokevirtual #32
380: aload         9
382: invokevirtual #32
385: ldc           #78
387: invokevirtual #32
390: invokevirtual #35
393: aload         9
395: ldc           #79
397: invokestatic  #53
400: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0172
Start line: 3618
End line: 0
Method source code: 
    public void test0172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0172");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        helpFormatter0.defaultArgName = "hi!";
        java.lang.String str9 = helpFormatter0.createPadding((int) (byte) 10);
        helpFormatter0.setSyntaxPrefix(" ");
        org.apache.commons.cli.Options options15 = null;
        try {
            helpFormatter0.printHelp((int) '#', "--", " ", options15, "arg", true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "          " + "'", str9, "          ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #270
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: bipush        10
47: invokevirtual #38
50: aload_1
51: ldc           #25
53: putfield      #77
56: aload_1
57: bipush        10
59: invokevirtual #108
62: astore_3
63: aload_1
64: ldc           #24
66: invokevirtual #39
69: aconst_null
70: astore        4
72: aload_1
73: bipush        35
75: ldc           #44
77: ldc           #24
79: aload         4
81: ldc           #79
83: iconst_1
84: invokevirtual #26
87: ldc           #14
89: invokestatic  #15
92: goto          97
95: astore        5
97: new           #29
100: dup
101: invokespecial #30
104: ldc           #31
106: invokevirtual #32
109: iload_2
110: invokevirtual #33
113: ldc           #34
115: invokevirtual #32
118: iconst_1
119: invokevirtual #33
122: ldc           #31
124: invokevirtual #32
127: invokevirtual #35
130: iload_2
131: iconst_1
132: if_icmpne     139
135: iconst_1
136: goto          140
139: iconst_0
140: invokestatic  #36
143: new           #29
146: dup
147: invokespecial #30
150: ldc           #31
152: invokevirtual #32
155: aload_3
156: invokevirtual #32
159: ldc           #204
161: invokevirtual #32
164: invokevirtual #35
167: aload_3
168: ldc           #114
170: invokestatic  #53
173: return
Exception table:
from    to  target type
72    92    95   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0173
Start line: 3641
End line: 0
Method source code: 
    public void test0173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0173");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        helpFormatter0.defaultArgName = "hi!";
        java.lang.String str9 = helpFormatter0.createPadding((int) (byte) 10);
        helpFormatter0.defaultWidth = ' ';
        java.lang.Class<?> wildcardClass12 = helpFormatter0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "          " + "'", str9, "          ");
        org.junit.Assert.assertNotNull(wildcardClass12);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #271
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: bipush        10
47: invokevirtual #38
50: aload_1
51: ldc           #25
53: putfield      #77
56: aload_1
57: bipush        10
59: invokevirtual #108
62: astore_3
63: aload_1
64: bipush        32
66: putfield      #110
69: aload_1
70: invokevirtual #56
73: astore        4
75: new           #29
78: dup
79: invokespecial #30
82: ldc           #31
84: invokevirtual #32
87: iload_2
88: invokevirtual #33
91: ldc           #34
93: invokevirtual #32
96: iconst_1
97: invokevirtual #33
100: ldc           #31
102: invokevirtual #32
105: invokevirtual #35
108: iload_2
109: iconst_1
110: if_icmpne     117
113: iconst_1
114: goto          118
117: iconst_0
118: invokestatic  #36
121: new           #29
124: dup
125: invokespecial #30
128: ldc           #31
130: invokevirtual #32
133: aload_3
134: invokevirtual #32
137: ldc           #204
139: invokevirtual #32
142: invokevirtual #35
145: aload_3
146: ldc           #114
148: invokestatic  #53
151: aload         4
153: invokestatic  #51
156: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0174
Start line: 3658
End line: 0
Method source code: 
    public void test0174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0174");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str6 = helpFormatter0.getNewLine();
        helpFormatter0.setSyntaxPrefix(" ");
        java.lang.String str9 = helpFormatter0.defaultOptPrefix;
        java.util.Comparator comparator10 = helpFormatter0.getOptionComparator();
        java.io.PrintWriter printWriter11 = null;
        try {
            helpFormatter0.printWrapped(printWriter11, 1, "usage: ");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\n" + "'", str6, "\n");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(comparator10);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #272
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #10
36: invokevirtual #11
39: aload_1
40: ldc           #10
42: putfield      #55
45: aload_1
46: getfield      #55
49: astore_2
50: aload_1
51: invokevirtual #72
54: astore_3
55: aload_1
56: ldc           #24
58: invokevirtual #39
61: aload_1
62: getfield      #63
65: astore        4
67: aload_1
68: invokevirtual #106
71: astore        5
73: aconst_null
74: astore        6
76: aload_1
77: aload         6
79: iconst_1
80: ldc           #12
82: invokevirtual #82
85: ldc           #14
87: invokestatic  #15
90: goto          95
93: astore        7
95: new           #29
98: dup
99: invokespecial #30
102: ldc           #31
104: invokevirtual #32
107: aload_2
108: invokevirtual #32
111: ldc           #68
113: invokevirtual #32
116: invokevirtual #35
119: aload_2
120: ldc           #10
122: invokestatic  #53
125: new           #29
128: dup
129: invokespecial #30
132: ldc           #31
134: invokevirtual #32
137: aload_3
138: invokevirtual #32
141: ldc           #74
143: invokevirtual #32
146: invokevirtual #35
149: aload_3
150: ldc           #65
152: invokestatic  #53
155: new           #29
158: dup
159: invokespecial #30
162: ldc           #31
164: invokevirtual #32
167: aload         4
169: invokevirtual #32
172: ldc           #68
174: invokevirtual #32
177: invokevirtual #35
180: aload         4
182: ldc           #10
184: invokestatic  #53
187: aload         5
189: invokestatic  #51
192: return
Exception table:
from    to  target type
76    90    93   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0175
Start line: 3684
End line: 0
Method source code: 
    public void test0175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0175");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        helpFormatter0.defaultArgName = "hi!";
        java.util.Comparator comparator8 = helpFormatter0.getOptionComparator();
        java.lang.StringBuffer stringBuffer9 = null;
        try {
            java.lang.StringBuffer stringBuffer13 = helpFormatter0.renderWrappedText(stringBuffer9, (-2), 100, "");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(comparator8);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #273
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: bipush        10
47: invokevirtual #38
50: aload_1
51: ldc           #25
53: putfield      #77
56: aload_1
57: invokevirtual #106
60: astore_3
61: aconst_null
62: astore        4
64: aload_1
65: aload         4
67: bipush        -2
69: bipush        100
71: ldc           #10
73: invokevirtual #70
76: astore        5
78: ldc           #178
80: invokestatic  #15
83: goto          88
86: astore        5
88: new           #29
91: dup
92: invokespecial #30
95: ldc           #31
97: invokevirtual #32
100: iload_2
101: invokevirtual #33
104: ldc           #34
106: invokevirtual #32
109: iconst_1
110: invokevirtual #33
113: ldc           #31
115: invokevirtual #32
118: invokevirtual #35
121: iload_2
122: iconst_1
123: if_icmpne     130
126: iconst_1
127: goto          131
130: iconst_0
131: invokestatic  #36
134: aload_3
135: invokestatic  #51
138: return
Exception table:
from    to  target type
64    83    86   Class java/lang/StringIndexOutOfBoundsException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0176
Start line: 3706
End line: 0
Method source code: 
    public void test0176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0176");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.defaultLongOptPrefix = "hi!";
        helpFormatter0.setDescPadding((int) (short) 0);
        org.apache.commons.cli.Options options8 = null;
        try {
            helpFormatter0.printHelp(52, "usage: ", " ", options8, "arg");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #274
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #25
36: putfield      #55
39: aload_1
40: iconst_0
41: invokevirtual #38
44: aconst_null
45: astore_2
46: aload_1
47: bipush        52
49: ldc           #12
51: ldc           #24
53: aload_2
54: ldc           #79
56: invokevirtual #45
59: ldc           #14
61: invokestatic  #15
64: goto          68
67: astore_3
68: return
Exception table:
from    to  target type
46    64    67   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0177
Start line: 3723
End line: 0
Method source code: 
    public void test0177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0177");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        java.lang.String str6 = helpFormatter0.rtrim("");
        java.lang.String str8 = helpFormatter0.rtrim("-");
        java.lang.String str9 = helpFormatter0.defaultNewLine;
        java.lang.String str10 = helpFormatter0.getLongOptPrefix();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "-" + "'", str8, "-");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "--" + "'", str10, "--");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #275
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: getfield      #63
48: astore_3
49: aload_1
50: ldc           #10
52: invokevirtual #64
55: astore        4
57: aload_1
58: ldc           #67
60: invokevirtual #64
63: astore        5
65: aload_1
66: getfield      #23
69: astore        6
71: aload_1
72: invokevirtual #48
75: astore        7
77: new           #29
80: dup
81: invokespecial #30
84: ldc           #31
86: invokevirtual #32
89: iload_2
90: invokevirtual #33
93: ldc           #34
95: invokevirtual #32
98: iconst_1
99: invokevirtual #33
102: ldc           #31
104: invokevirtual #32
107: invokevirtual #35
110: iload_2
111: iconst_1
112: if_icmpne     119
115: iconst_1
116: goto          120
119: iconst_0
120: invokestatic  #36
123: new           #29
126: dup
127: invokespecial #30
130: ldc           #31
132: invokevirtual #32
135: aload_3
136: invokevirtual #32
139: ldc           #66
141: invokevirtual #32
144: invokevirtual #35
147: aload_3
148: ldc           #67
150: invokestatic  #53
153: new           #29
156: dup
157: invokespecial #30
160: ldc           #31
162: invokevirtual #32
165: aload         4
167: invokevirtual #32
170: ldc           #68
172: invokevirtual #32
175: invokevirtual #35
178: aload         4
180: ldc           #10
182: invokestatic  #53
185: new           #29
188: dup
189: invokespecial #30
192: ldc           #31
194: invokevirtual #32
197: aload         5
199: invokevirtual #32
202: ldc           #66
204: invokevirtual #32
207: invokevirtual #35
210: aload         5
212: ldc           #67
214: invokestatic  #53
217: new           #29
220: dup
221: invokespecial #30
224: ldc           #31
226: invokevirtual #32
229: aload         6
231: invokevirtual #32
234: ldc           #68
236: invokevirtual #32
239: invokevirtual #35
242: aload         6
244: ldc           #10
246: invokestatic  #53
249: new           #29
252: dup
253: invokespecial #30
256: ldc           #31
258: invokevirtual #32
261: aload         7
263: invokevirtual #32
266: ldc           #52
268: invokevirtual #32
271: invokevirtual #35
274: aload         7
276: ldc           #44
278: invokestatic  #53
281: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0178
Start line: 3743
End line: 0
Method source code: 
    public void test0178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0178");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        int int4 = helpFormatter0.defaultDescPad;
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        helpFormatter0.setWidth(1);
        org.apache.commons.cli.Options options10 = null;
        try {
            helpFormatter0.printHelp("", "arg", options10, "usage: ");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: cmdLineSyntax not provided");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 3 + "'", int4 == 3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "--" + "'", str5, "--");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #276
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: getfield      #76
48: istore_3
49: aload_1
50: getfield      #55
53: astore        4
55: aload_1
56: iconst_1
57: invokevirtual #156
60: aconst_null
61: astore        5
63: aload_1
64: ldc           #10
66: ldc           #79
68: aload         5
70: ldc           #12
72: invokevirtual #13
75: ldc           #27
77: invokestatic  #15
80: goto          85
83: astore        6
85: new           #29
88: dup
89: invokespecial #30
92: ldc           #31
94: invokevirtual #32
97: iload_2
98: invokevirtual #33
101: ldc           #34
103: invokevirtual #32
106: iconst_1
107: invokevirtual #33
110: ldc           #31
112: invokevirtual #32
115: invokevirtual #35
118: iload_2
119: iconst_1
120: if_icmpne     127
123: iconst_1
124: goto          128
127: iconst_0
128: invokestatic  #36
131: new           #29
134: dup
135: invokespecial #30
138: ldc           #31
140: invokevirtual #32
143: iload_3
144: invokevirtual #33
147: ldc           #34
149: invokevirtual #32
152: iconst_3
153: invokevirtual #33
156: ldc           #31
158: invokevirtual #32
161: invokevirtual #35
164: iload_3
165: iconst_3
166: if_icmpne     173
169: iconst_1
170: goto          174
173: iconst_0
174: invokestatic  #36
177: new           #29
180: dup
181: invokespecial #30
184: ldc           #31
186: invokevirtual #32
189: aload         4
191: invokevirtual #32
194: ldc           #52
196: invokevirtual #32
199: invokevirtual #35
202: aload         4
204: ldc           #44
206: invokestatic  #53
209: return
Exception table:
from    to  target type
63    80    83   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0179
Start line: 3766
End line: 0
Method source code: 
    public void test0179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0179");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.util.Comparator comparator1 = helpFormatter0.optionComparator;
        java.lang.String str3 = helpFormatter0.rtrim("");
        int int4 = helpFormatter0.getDescPadding();
        java.io.PrintWriter printWriter5 = null;
        org.apache.commons.cli.Options options9 = null;
        try {
            helpFormatter0.printHelp(printWriter5, 100, "-", "usage: ", options9, (int) (byte) 10, (int) (byte) -1, "--", false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(comparator1);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 3 + "'", int4 == 3);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #277
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: getfield      #47
37: astore_2
38: aload_1
39: ldc           #10
41: invokevirtual #64
44: astore_3
45: aload_1
46: invokevirtual #118
49: istore        4
51: aconst_null
52: astore        5
54: aconst_null
55: astore        6
57: aload_1
58: aload         5
60: bipush        100
62: ldc           #67
64: ldc           #12
66: aload         6
68: bipush        10
70: iconst_m1
71: ldc           #44
73: iconst_0
74: invokevirtual #40
77: ldc           #14
79: invokestatic  #15
82: goto          87
85: astore        7
87: aload_2
88: invokestatic  #51
91: new           #29
94: dup
95: invokespecial #30
98: ldc           #31
100: invokevirtual #32
103: aload_3
104: invokevirtual #32
107: ldc           #68
109: invokevirtual #32
112: invokevirtual #35
115: aload_3
116: ldc           #10
118: invokestatic  #53
121: new           #29
124: dup
125: invokespecial #30
128: ldc           #31
130: invokevirtual #32
133: iload         4
135: invokevirtual #33
138: ldc           #34
140: invokevirtual #32
143: iconst_3
144: invokevirtual #33
147: ldc           #31
149: invokevirtual #32
152: invokevirtual #35
155: iload         4
157: iconst_3
158: if_icmpne     165
161: iconst_1
162: goto          166
165: iconst_0
166: invokestatic  #36
169: return
Exception table:
from    to  target type
57    82    85   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0180
Start line: 3788
End line: 0
Method source code: 
    public void test0180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0180");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.defaultDescPad = '4';
        helpFormatter0.setNewLine("");
        helpFormatter0.setSyntaxPrefix("");
        java.lang.String str10 = helpFormatter0.getSyntaxPrefix();
        org.apache.commons.cli.Options options12 = null;
        try {
            helpFormatter0.printHelp("hi!", options12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #278
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: bipush        52
47: putfield      #76
50: aload_1
51: ldc           #10
53: invokevirtual #131
56: aload_1
57: ldc           #10
59: invokevirtual #39
62: aload_1
63: invokevirtual #102
66: astore_3
67: aconst_null
68: astore        4
70: aload_1
71: ldc           #25
73: aload         4
75: invokevirtual #50
78: ldc           #14
80: invokestatic  #15
83: goto          88
86: astore        5
88: new           #29
91: dup
92: invokespecial #30
95: ldc           #31
97: invokevirtual #32
100: iload_2
101: invokevirtual #33
104: ldc           #34
106: invokevirtual #32
109: iconst_1
110: invokevirtual #33
113: ldc           #31
115: invokevirtual #32
118: invokevirtual #35
121: iload_2
122: iconst_1
123: if_icmpne     130
126: iconst_1
127: goto          131
130: iconst_0
131: invokestatic  #36
134: new           #29
137: dup
138: invokespecial #30
141: ldc           #31
143: invokevirtual #32
146: aload_3
147: invokevirtual #32
150: ldc           #68
152: invokevirtual #32
155: invokevirtual #35
158: aload_3
159: ldc           #10
161: invokestatic  #53
164: return
Exception table:
from    to  target type
70    83    86   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0181
Start line: 3811
End line: 0
Method source code: 
    public void test0181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0181");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setLongOptPrefix(" ");
        helpFormatter0.defaultDescPad = (short) 10;
        java.lang.String str9 = helpFormatter0.defaultArgName;
        java.util.Comparator comparator10 = helpFormatter0.optionComparator;
        java.lang.Class<?> wildcardClass11 = helpFormatter0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "arg" + "'", str9, "arg");
        org.junit.Assert.assertNotNull(comparator10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #279
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: getfield      #63
48: astore_3
49: aload_1
50: ldc           #24
52: invokevirtual #49
55: aload_1
56: bipush        10
58: putfield      #76
61: aload_1
62: getfield      #77
65: astore        4
67: aload_1
68: getfield      #47
71: astore        5
73: aload_1
74: invokevirtual #56
77: astore        6
79: new           #29
82: dup
83: invokespecial #30
86: ldc           #31
88: invokevirtual #32
91: iload_2
92: invokevirtual #33
95: ldc           #34
97: invokevirtual #32
100: iconst_1
101: invokevirtual #33
104: ldc           #31
106: invokevirtual #32
109: invokevirtual #35
112: iload_2
113: iconst_1
114: if_icmpne     121
117: iconst_1
118: goto          122
121: iconst_0
122: invokestatic  #36
125: new           #29
128: dup
129: invokespecial #30
132: ldc           #31
134: invokevirtual #32
137: aload_3
138: invokevirtual #32
141: ldc           #66
143: invokevirtual #32
146: invokevirtual #35
149: aload_3
150: ldc           #67
152: invokestatic  #53
155: new           #29
158: dup
159: invokespecial #30
162: ldc           #31
164: invokevirtual #32
167: aload         4
169: invokevirtual #32
172: ldc           #78
174: invokevirtual #32
177: invokevirtual #35
180: aload         4
182: ldc           #79
184: invokestatic  #53
187: aload         5
189: invokestatic  #51
192: aload         6
194: invokestatic  #51
197: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0182
Start line: 3831
End line: 0
Method source code: 
    public void test0182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0182");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        java.util.Comparator comparator6 = helpFormatter0.optionComparator;
        helpFormatter0.setLongOptPrefix("hi!");
        java.lang.String str9 = helpFormatter0.getLongOptSeparator();
        org.apache.commons.cli.HelpFormatter helpFormatter10 = new org.apache.commons.cli.HelpFormatter();
        int int11 = helpFormatter10.getLeftPadding();
        java.lang.String str12 = helpFormatter10.getArgName();
        helpFormatter10.setSyntaxPrefix("usage: ");
        org.apache.commons.cli.HelpFormatter helpFormatter15 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter15.setOptPrefix("");
        helpFormatter15.defaultLongOptPrefix = "";
        java.lang.String str20 = helpFormatter15.defaultLongOptPrefix;
        java.lang.String str21 = helpFormatter15.getNewLine();
        java.lang.String str22 = helpFormatter15.defaultOptPrefix;
        helpFormatter15.setDescPadding(74);
        java.util.Comparator comparator25 = helpFormatter15.getOptionComparator();
        helpFormatter10.optionComparator = comparator25;
        helpFormatter0.optionComparator = comparator25;
        helpFormatter0.setDescPadding((int) ' ');
        java.io.PrintWriter printWriter30 = null;
        org.apache.commons.cli.Options options33 = null;
        try {
            helpFormatter0.printUsage(printWriter30, 3, "                                                                                                    ", options33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(comparator6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + " " + "'", str9, " ");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "arg" + "'", str12, "arg");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "\n" + "'", str21, "\n");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(comparator25);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #280
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: bipush        10
47: invokevirtual #38
50: aload_1
51: getfield      #47
54: astore_3
55: aload_1
56: ldc           #25
58: invokevirtual #49
61: aload_1
62: invokevirtual #86
65: astore        4
67: new           #8
70: dup
71: invokespecial #9
74: astore        5
76: aload         5
78: invokevirtual #22
81: istore        6
83: aload         5
85: invokevirtual #104
88: astore        7
90: aload         5
92: ldc           #12
94: invokevirtual #39
97: new           #8
100: dup
101: invokespecial #9
104: astore        8
106: aload         8
108: ldc           #10
110: invokevirtual #11
113: aload         8
115: ldc           #10
117: putfield      #55
120: aload         8
122: getfield      #55
125: astore        9
127: aload         8
129: invokevirtual #72
132: astore        10
134: aload         8
136: getfield      #63
139: astore        11
141: aload         8
143: bipush        74
145: invokevirtual #38
148: aload         8
150: invokevirtual #106
153: astore        12
155: aload         5
157: aload         12
159: putfield      #47
162: aload_1
163: aload         12
165: putfield      #47
168: aload_1
169: bipush        32
171: invokevirtual #38
174: aconst_null
175: astore        13
177: aconst_null
178: astore        14
180: aload_1
181: aload         13
183: iconst_3
184: ldc           #240
186: aload         14
188: invokevirtual #127
191: ldc           #14
193: invokestatic  #15
196: goto          201
199: astore        15
201: new           #29
204: dup
205: invokespecial #30
208: ldc           #31
210: invokevirtual #32
213: iload_2
214: invokevirtual #33
217: ldc           #34
219: invokevirtual #32
222: iconst_1
223: invokevirtual #33
226: ldc           #31
228: invokevirtual #32
231: invokevirtual #35
234: iload_2
235: iconst_1
236: if_icmpne     243
239: iconst_1
240: goto          244
243: iconst_0
244: invokestatic  #36
247: aload_3
248: invokestatic  #51
251: new           #29
254: dup
255: invokespecial #30
258: ldc           #31
260: invokevirtual #32
263: aload         4
265: invokevirtual #32
268: ldc           #88
270: invokevirtual #32
273: invokevirtual #35
276: aload         4
278: ldc           #24
280: invokestatic  #53
283: new           #29
286: dup
287: invokespecial #30
290: ldc           #31
292: invokevirtual #32
295: iload         6
297: invokevirtual #33
300: ldc           #34
302: invokevirtual #32
305: iconst_1
306: invokevirtual #33
309: ldc           #31
311: invokevirtual #32
314: invokevirtual #35
317: iload         6
319: iconst_1
320: if_icmpne     327
323: iconst_1
324: goto          328
327: iconst_0
328: invokestatic  #36
331: new           #29
334: dup
335: invokespecial #30
338: ldc           #31
340: invokevirtual #32
343: aload         7
345: invokevirtual #32
348: ldc           #78
350: invokevirtual #32
353: invokevirtual #35
356: aload         7
358: ldc           #79
360: invokestatic  #53
363: new           #29
366: dup
367: invokespecial #30
370: ldc           #31
372: invokevirtual #32
375: aload         9
377: invokevirtual #32
380: ldc           #68
382: invokevirtual #32
385: invokevirtual #35
388: aload         9
390: ldc           #10
392: invokestatic  #53
395: new           #29
398: dup
399: invokespecial #30
402: ldc           #31
404: invokevirtual #32
407: aload         10
409: invokevirtual #32
412: ldc           #74
414: invokevirtual #32
417: invokevirtual #35
420: aload         10
422: ldc           #65
424: invokestatic  #53
427: new           #29
430: dup
431: invokespecial #30
434: ldc           #31
436: invokevirtual #32
439: aload         11
441: invokevirtual #32
444: ldc           #68
446: invokevirtual #32
449: invokevirtual #35
452: aload         11
454: ldc           #10
456: invokestatic  #53
459: aload         12
461: invokestatic  #51
464: return
Exception table:
from    to  target type
180   196   199   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0183
Start line: 3877
End line: 0
Method source code: 
    public void test0183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0183");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.lang.String str1 = helpFormatter0.defaultSyntaxPrefix;
        helpFormatter0.setArgName("-");
        java.lang.String str5 = helpFormatter0.createPadding(0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "usage: " + "'", str1, "usage: ");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #281
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: getfield      #97
37: astore_2
38: aload_1
39: ldc           #67
41: invokevirtual #146
44: aload_1
45: iconst_0
46: invokevirtual #108
49: astore_3
50: new           #29
53: dup
54: invokespecial #30
57: ldc           #31
59: invokevirtual #32
62: aload_2
63: invokevirtual #32
66: ldc           #99
68: invokevirtual #32
71: invokevirtual #35
74: aload_2
75: ldc           #12
77: invokestatic  #53
80: new           #29
83: dup
84: invokespecial #30
87: ldc           #31
89: invokevirtual #32
92: aload_3
93: invokevirtual #32
96: ldc           #68
98: invokevirtual #32
101: invokevirtual #35
104: aload_3
105: ldc           #10
107: invokestatic  #53
110: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0184
Start line: 3889
End line: 0
Method source code: 
    public void test0184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0184");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.defaultArgName;
        java.lang.String str3 = helpFormatter0.defaultNewLine;
        helpFormatter0.setDescPadding((int) ' ');
        org.apache.commons.cli.Options options8 = null;
        try {
            helpFormatter0.printHelp("hi!", " ", options8, "                                                                                                 ", true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "arg" + "'", str2, "arg");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\n" + "'", str3, "\n");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #282
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: getfield      #77
42: astore_3
43: aload_1
44: getfield      #23
47: astore        4
49: aload_1
50: bipush        32
52: invokevirtual #38
55: aconst_null
56: astore        5
58: aload_1
59: ldc           #25
61: ldc           #24
63: aload         5
65: ldc           #141
67: iconst_1
68: invokevirtual #73
71: ldc           #14
73: invokestatic  #15
76: goto          81
79: astore        6
81: new           #29
84: dup
85: invokespecial #30
88: ldc           #31
90: invokevirtual #32
93: iload_2
94: invokevirtual #33
97: ldc           #34
99: invokevirtual #32
102: iconst_1
103: invokevirtual #33
106: ldc           #31
108: invokevirtual #32
111: invokevirtual #35
114: iload_2
115: iconst_1
116: if_icmpne     123
119: iconst_1
120: goto          124
123: iconst_0
124: invokestatic  #36
127: new           #29
130: dup
131: invokespecial #30
134: ldc           #31
136: invokevirtual #32
139: aload_3
140: invokevirtual #32
143: ldc           #78
145: invokevirtual #32
148: invokevirtual #35
151: aload_3
152: ldc           #79
154: invokestatic  #53
157: new           #29
160: dup
161: invokespecial #30
164: ldc           #31
166: invokevirtual #32
169: aload         4
171: invokevirtual #32
174: ldc           #74
176: invokevirtual #32
179: invokevirtual #35
182: aload         4
184: ldc           #65
186: invokestatic  #53
189: return
Exception table:
from    to  target type
58    76    79   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0185
Start line: 3911
End line: 0
Method source code: 
    public void test0185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0185");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.lang.String str1 = helpFormatter0.defaultSyntaxPrefix;
        helpFormatter0.setOptPrefix(" ");
        helpFormatter0.defaultLongOptPrefix = "arg";
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "usage: " + "'", str1, "usage: ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #283
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: getfield      #97
37: astore_2
38: aload_1
39: ldc           #24
41: invokevirtual #11
44: aload_1
45: ldc           #79
47: putfield      #55
50: new           #29
53: dup
54: invokespecial #30
57: ldc           #31
59: invokevirtual #32
62: aload_2
63: invokevirtual #32
66: ldc           #99
68: invokevirtual #32
71: invokevirtual #35
74: aload_2
75: ldc           #12
77: invokestatic  #53
80: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0186
Start line: 3922
End line: 0
Method source code: 
    public void test0186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0186");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str3 = helpFormatter0.getOptPrefix();
        java.util.Comparator comparator4 = helpFormatter0.getOptionComparator();
        java.lang.Class<?> wildcardClass5 = helpFormatter0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "--" + "'", str2, "--");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "-" + "'", str3, "-");
        org.junit.Assert.assertNotNull(comparator4);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #284
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: getfield      #55
42: astore_3
43: aload_1
44: invokevirtual #123
47: astore        4
49: aload_1
50: invokevirtual #106
53: astore        5
55: aload_1
56: invokevirtual #56
59: astore        6
61: new           #29
64: dup
65: invokespecial #30
68: ldc           #31
70: invokevirtual #32
73: iload_2
74: invokevirtual #33
77: ldc           #34
79: invokevirtual #32
82: iconst_1
83: invokevirtual #33
86: ldc           #31
88: invokevirtual #32
91: invokevirtual #35
94: iload_2
95: iconst_1
96: if_icmpne     103
99: iconst_1
100: goto          104
103: iconst_0
104: invokestatic  #36
107: new           #29
110: dup
111: invokespecial #30
114: ldc           #31
116: invokevirtual #32
119: aload_3
120: invokevirtual #32
123: ldc           #52
125: invokevirtual #32
128: invokevirtual #35
131: aload_3
132: ldc           #44
134: invokestatic  #53
137: new           #29
140: dup
141: invokespecial #30
144: ldc           #31
146: invokevirtual #32
149: aload         4
151: invokevirtual #32
154: ldc           #66
156: invokevirtual #32
159: invokevirtual #35
162: aload         4
164: ldc           #67
166: invokestatic  #53
169: aload         5
171: invokestatic  #51
174: aload         6
176: invokestatic  #51
179: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0187
Start line: 3939
End line: 0
Method source code: 
    public void test0187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0187");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        int int6 = helpFormatter0.getWidth();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 74 + "'", int6 == 74);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #285
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #10
36: invokevirtual #11
39: aload_1
40: ldc           #10
42: putfield      #55
45: aload_1
46: getfield      #55
49: astore_2
50: aload_1
51: invokevirtual #129
54: istore_3
55: new           #29
58: dup
59: invokespecial #30
62: ldc           #31
64: invokevirtual #32
67: aload_2
68: invokevirtual #32
71: ldc           #68
73: invokevirtual #32
76: invokevirtual #35
79: aload_2
80: ldc           #10
82: invokestatic  #53
85: new           #29
88: dup
89: invokespecial #30
92: ldc           #31
94: invokevirtual #32
97: iload_3
98: invokevirtual #33
101: ldc           #34
103: invokevirtual #32
106: bipush        74
108: invokevirtual #33
111: ldc           #31
113: invokevirtual #32
116: invokevirtual #35
119: iload_3
120: bipush        74
122: if_icmpne     129
125: iconst_1
126: goto          130
129: iconst_0
130: invokestatic  #36
133: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0188
Start line: 3952
End line: 0
Method source code: 
    public void test0188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0188");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.getArgName();
        helpFormatter0.setSyntaxPrefix("usage: ");
        org.apache.commons.cli.HelpFormatter helpFormatter5 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter5.setOptPrefix("");
        helpFormatter5.defaultLongOptPrefix = "";
        java.lang.String str10 = helpFormatter5.defaultLongOptPrefix;
        java.lang.String str11 = helpFormatter5.getNewLine();
        java.lang.String str12 = helpFormatter5.defaultOptPrefix;
        helpFormatter5.setDescPadding(74);
        java.util.Comparator comparator15 = helpFormatter5.getOptionComparator();
        helpFormatter0.optionComparator = comparator15;
        helpFormatter0.defaultWidth = '#';
        java.io.PrintWriter printWriter19 = null;
        org.apache.commons.cli.Options options22 = null;
        try {
            helpFormatter0.printUsage(printWriter19, 0, "hi!", options22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "arg" + "'", str2, "arg");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\n" + "'", str11, "\n");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(comparator15);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #286
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: invokevirtual #104
42: astore_3
43: aload_1
44: ldc           #12
46: invokevirtual #39
49: new           #8
52: dup
53: invokespecial #9
56: astore        4
58: aload         4
60: ldc           #10
62: invokevirtual #11
65: aload         4
67: ldc           #10
69: putfield      #55
72: aload         4
74: getfield      #55
77: astore        5
79: aload         4
81: invokevirtual #72
84: astore        6
86: aload         4
88: getfield      #63
91: astore        7
93: aload         4
95: bipush        74
97: invokevirtual #38
100: aload         4
102: invokevirtual #106
105: astore        8
107: aload_1
108: aload         8
110: putfield      #47
113: aload_1
114: bipush        35
116: putfield      #110
119: aconst_null
120: astore        9
122: aconst_null
123: astore        10
125: aload_1
126: aload         9
128: iconst_0
129: ldc           #25
131: aload         10
133: invokevirtual #127
136: ldc           #14
138: invokestatic  #15
141: goto          146
144: astore        11
146: new           #29
149: dup
150: invokespecial #30
153: ldc           #31
155: invokevirtual #32
158: iload_2
159: invokevirtual #33
162: ldc           #34
164: invokevirtual #32
167: iconst_1
168: invokevirtual #33
171: ldc           #31
173: invokevirtual #32
176: invokevirtual #35
179: iload_2
180: iconst_1
181: if_icmpne     188
184: iconst_1
185: goto          189
188: iconst_0
189: invokestatic  #36
192: new           #29
195: dup
196: invokespecial #30
199: ldc           #31
201: invokevirtual #32
204: aload_3
205: invokevirtual #32
208: ldc           #78
210: invokevirtual #32
213: invokevirtual #35
216: aload_3
217: ldc           #79
219: invokestatic  #53
222: new           #29
225: dup
226: invokespecial #30
229: ldc           #31
231: invokevirtual #32
234: aload         5
236: invokevirtual #32
239: ldc           #68
241: invokevirtual #32
244: invokevirtual #35
247: aload         5
249: ldc           #10
251: invokestatic  #53
254: new           #29
257: dup
258: invokespecial #30
261: ldc           #31
263: invokevirtual #32
266: aload         6
268: invokevirtual #32
271: ldc           #74
273: invokevirtual #32
276: invokevirtual #35
279: aload         6
281: ldc           #65
283: invokestatic  #53
286: new           #29
289: dup
290: invokespecial #30
293: ldc           #31
295: invokevirtual #32
298: aload         7
300: invokevirtual #32
303: ldc           #68
305: invokevirtual #32
308: invokevirtual #35
311: aload         7
313: ldc           #10
315: invokestatic  #53
318: aload         8
320: invokestatic  #51
323: return
Exception table:
from    to  target type
125   141   144   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0189
Start line: 3987
End line: 0
Method source code: 
    public void test0189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0189");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.util.Comparator comparator1 = helpFormatter0.optionComparator;
        java.lang.String str3 = helpFormatter0.rtrim("");
        int int4 = helpFormatter0.getDescPadding();
        java.lang.String str5 = helpFormatter0.defaultSyntaxPrefix;
        org.apache.commons.cli.Options options7 = null;
        try {
            helpFormatter0.printHelp("                                                                                                    ", options7, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(comparator1);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 3 + "'", int4 == 3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "usage: " + "'", str5, "usage: ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #287
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: getfield      #47
37: astore_2
38: aload_1
39: ldc           #10
41: invokevirtual #64
44: astore_3
45: aload_1
46: invokevirtual #118
49: istore        4
51: aload_1
52: getfield      #97
55: astore        5
57: aconst_null
58: astore        6
60: aload_1
61: ldc           #240
63: aload         6
65: iconst_0
66: invokevirtual #135
69: ldc           #14
71: invokestatic  #15
74: goto          79
77: astore        7
79: aload_2
80: invokestatic  #51
83: new           #29
86: dup
87: invokespecial #30
90: ldc           #31
92: invokevirtual #32
95: aload_3
96: invokevirtual #32
99: ldc           #68
101: invokevirtual #32
104: invokevirtual #35
107: aload_3
108: ldc           #10
110: invokestatic  #53
113: new           #29
116: dup
117: invokespecial #30
120: ldc           #31
122: invokevirtual #32
125: iload         4
127: invokevirtual #33
130: ldc           #34
132: invokevirtual #32
135: iconst_3
136: invokevirtual #33
139: ldc           #31
141: invokevirtual #32
144: invokevirtual #35
147: iload         4
149: iconst_3
150: if_icmpne     157
153: iconst_1
154: goto          158
157: iconst_0
158: invokestatic  #36
161: new           #29
164: dup
165: invokespecial #30
168: ldc           #31
170: invokevirtual #32
173: aload         5
175: invokevirtual #32
178: ldc           #99
180: invokevirtual #32
183: invokevirtual #35
186: aload         5
188: ldc           #12
190: invokestatic  #53
193: return
Exception table:
from    to  target type
60    74    77   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0190
Start line: 4010
End line: 0
Method source code: 
    public void test0190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0190");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.lang.String str1 = helpFormatter0.defaultSyntaxPrefix;
        java.util.Comparator comparator2 = helpFormatter0.optionComparator;
        java.lang.String str3 = helpFormatter0.defaultArgName;
        java.util.Comparator comparator4 = helpFormatter0.optionComparator;
        helpFormatter0.defaultLeftPad = (byte) -1;
        helpFormatter0.defaultLeftPad = (short) 1;
        org.apache.commons.cli.HelpFormatter helpFormatter9 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter9.setOptPrefix("");
        helpFormatter9.defaultLongOptPrefix = "";
        java.lang.String str14 = helpFormatter9.defaultLongOptPrefix;
        java.lang.String str15 = helpFormatter9.getNewLine();
        java.util.Comparator comparator16 = helpFormatter9.getOptionComparator();
        org.apache.commons.cli.HelpFormatter helpFormatter17 = new org.apache.commons.cli.HelpFormatter();
        int int18 = helpFormatter17.getLeftPadding();
        helpFormatter17.defaultNewLine = "";
        java.lang.String str21 = helpFormatter17.defaultOptPrefix;
        helpFormatter17.setLongOptPrefix(" ");
        helpFormatter17.defaultDescPad = (short) 10;
        java.lang.String str26 = helpFormatter17.defaultArgName;
        java.util.Comparator comparator27 = helpFormatter17.optionComparator;
        helpFormatter9.setOptionComparator(comparator27);
        helpFormatter0.setOptionComparator(comparator27);
        java.lang.StringBuffer stringBuffer30 = null;
        org.apache.commons.cli.Options options32 = null;
        try {
            java.lang.StringBuffer stringBuffer35 = helpFormatter0.renderOptions(stringBuffer30, (-1), options32, 52, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "usage: " + "'", str1, "usage: ");
        org.junit.Assert.assertNotNull(comparator2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "arg" + "'", str3, "arg");
        org.junit.Assert.assertNotNull(comparator4);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\n" + "'", str15, "\n");
        org.junit.Assert.assertNotNull(comparator16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "-" + "'", str21, "-");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "arg" + "'", str26, "arg");
        org.junit.Assert.assertNotNull(comparator27);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #288
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: getfield      #97
37: astore_2
38: aload_1
39: getfield      #47
42: astore_3
43: aload_1
44: getfield      #77
47: astore        4
49: aload_1
50: getfield      #47
53: astore        5
55: aload_1
56: iconst_m1
57: putfield      #60
60: aload_1
61: iconst_1
62: putfield      #60
65: new           #8
68: dup
69: invokespecial #9
72: astore        6
74: aload         6
76: ldc           #10
78: invokevirtual #11
81: aload         6
83: ldc           #10
85: putfield      #55
88: aload         6
90: getfield      #55
93: astore        7
95: aload         6
97: invokevirtual #72
100: astore        8
102: aload         6
104: invokevirtual #106
107: astore        9
109: new           #8
112: dup
113: invokespecial #9
116: astore        10
118: aload         10
120: invokevirtual #22
123: istore        11
125: aload         10
127: ldc           #10
129: putfield      #23
132: aload         10
134: getfield      #63
137: astore        12
139: aload         10
141: ldc           #24
143: invokevirtual #49
146: aload         10
148: bipush        10
150: putfield      #76
153: aload         10
155: getfield      #77
158: astore        13
160: aload         10
162: getfield      #47
165: astore        14
167: aload         6
169: aload         14
171: invokevirtual #152
174: aload_1
175: aload         14
177: invokevirtual #152
180: aconst_null
181: astore        15
183: aconst_null
184: astore        16
186: aload_1
187: aload         15
189: iconst_m1
190: aload         16
192: bipush        52
194: bipush        32
196: invokevirtual #98
199: astore        17
201: ldc           #14
203: invokestatic  #15
206: goto          211
209: astore        17
211: new           #29
214: dup
215: invokespecial #30
218: ldc           #31
220: invokevirtual #32
223: aload_2
224: invokevirtual #32
227: ldc           #99
229: invokevirtual #32
232: invokevirtual #35
235: aload_2
236: ldc           #12
238: invokestatic  #53
241: aload_3
242: invokestatic  #51
245: new           #29
248: dup
249: invokespecial #30
252: ldc           #31
254: invokevirtual #32
257: aload         4
259: invokevirtual #32
262: ldc           #78
264: invokevirtual #32
267: invokevirtual #35
270: aload         4
272: ldc           #79
274: invokestatic  #53
277: aload         5
279: invokestatic  #51
282: new           #29
285: dup
286: invokespecial #30
289: ldc           #31
291: invokevirtual #32
294: aload         7
296: invokevirtual #32
299: ldc           #68
301: invokevirtual #32
304: invokevirtual #35
307: aload         7
309: ldc           #10
311: invokestatic  #53
314: new           #29
317: dup
318: invokespecial #30
321: ldc           #31
323: invokevirtual #32
326: aload         8
328: invokevirtual #32
331: ldc           #74
333: invokevirtual #32
336: invokevirtual #35
339: aload         8
341: ldc           #65
343: invokestatic  #53
346: aload         9
348: invokestatic  #51
351: new           #29
354: dup
355: invokespecial #30
358: ldc           #31
360: invokevirtual #32
363: iload         11
365: invokevirtual #33
368: ldc           #34
370: invokevirtual #32
373: iconst_1
374: invokevirtual #33
377: ldc           #31
379: invokevirtual #32
382: invokevirtual #35
385: iload         11
387: iconst_1
388: if_icmpne     395
391: iconst_1
392: goto          396
395: iconst_0
396: invokestatic  #36
399: new           #29
402: dup
403: invokespecial #30
406: ldc           #31
408: invokevirtual #32
411: aload         12
413: invokevirtual #32
416: ldc           #66
418: invokevirtual #32
421: invokevirtual #35
424: aload         12
426: ldc           #67
428: invokestatic  #53
431: new           #29
434: dup
435: invokespecial #30
438: ldc           #31
440: invokevirtual #32
443: aload         13
445: invokevirtual #32
448: ldc           #78
450: invokevirtual #32
453: invokevirtual #35
456: aload         13
458: ldc           #79
460: invokestatic  #53
463: aload         14
465: invokestatic  #51
468: return
Exception table:
from    to  target type
186   206   209   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0191
Start line: 4059
End line: 0
Method source code: 
    public void test0191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0191");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        helpFormatter0.setSyntaxPrefix(" ");
        int int8 = helpFormatter0.defaultLeftPad;
        helpFormatter0.setLeftPadding(1);
        org.apache.commons.cli.Options options12 = null;
        try {
            helpFormatter0.printHelp("", options12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: cmdLineSyntax not provided");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #289
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: bipush        10
47: invokevirtual #38
50: aload_1
51: ldc           #24
53: invokevirtual #39
56: aload_1
57: getfield      #60
60: istore_3
61: aload_1
62: iconst_1
63: invokevirtual #193
66: aconst_null
67: astore        4
69: aload_1
70: ldc           #10
72: aload         4
74: invokevirtual #50
77: ldc           #27
79: invokestatic  #15
82: goto          87
85: astore        5
87: new           #29
90: dup
91: invokespecial #30
94: ldc           #31
96: invokevirtual #32
99: iload_2
100: invokevirtual #33
103: ldc           #34
105: invokevirtual #32
108: iconst_1
109: invokevirtual #33
112: ldc           #31
114: invokevirtual #32
117: invokevirtual #35
120: iload_2
121: iconst_1
122: if_icmpne     129
125: iconst_1
126: goto          130
129: iconst_0
130: invokestatic  #36
133: new           #29
136: dup
137: invokespecial #30
140: ldc           #31
142: invokevirtual #32
145: iload_3
146: invokevirtual #33
149: ldc           #34
151: invokevirtual #32
154: iconst_1
155: invokevirtual #33
158: ldc           #31
160: invokevirtual #32
163: invokevirtual #35
166: iload_3
167: iconst_1
168: if_icmpne     175
171: iconst_1
172: goto          176
175: iconst_0
176: invokestatic  #36
179: return
Exception table:
from    to  target type
69    82    85   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0192
Start line: 4082
End line: 0
Method source code: 
    public void test0192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0192");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        java.lang.String str6 = helpFormatter0.getLongOptSeparator();
        java.lang.String str7 = helpFormatter0.getLongOptSeparator();
        int int8 = helpFormatter0.getWidth();
        java.lang.String str9 = helpFormatter0.defaultLongOptPrefix;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + " " + "'", str6, " ");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + " " + "'", str7, " ");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 74 + "'", int8 == 74);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "--" + "'", str9, "--");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #290
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: bipush        10
47: invokevirtual #38
50: aload_1
51: invokevirtual #86
54: astore_3
55: aload_1
56: invokevirtual #86
59: astore        4
61: aload_1
62: invokevirtual #129
65: istore        5
67: aload_1
68: getfield      #55
71: astore        6
73: new           #29
76: dup
77: invokespecial #30
80: ldc           #31
82: invokevirtual #32
85: iload_2
86: invokevirtual #33
89: ldc           #34
91: invokevirtual #32
94: iconst_1
95: invokevirtual #33
98: ldc           #31
100: invokevirtual #32
103: invokevirtual #35
106: iload_2
107: iconst_1
108: if_icmpne     115
111: iconst_1
112: goto          116
115: iconst_0
116: invokestatic  #36
119: new           #29
122: dup
123: invokespecial #30
126: ldc           #31
128: invokevirtual #32
131: aload_3
132: invokevirtual #32
135: ldc           #88
137: invokevirtual #32
140: invokevirtual #35
143: aload_3
144: ldc           #24
146: invokestatic  #53
149: new           #29
152: dup
153: invokespecial #30
156: ldc           #31
158: invokevirtual #32
161: aload         4
163: invokevirtual #32
166: ldc           #88
168: invokevirtual #32
171: invokevirtual #35
174: aload         4
176: ldc           #24
178: invokestatic  #53
181: new           #29
184: dup
185: invokespecial #30
188: ldc           #31
190: invokevirtual #32
193: iload         5
195: invokevirtual #33
198: ldc           #34
200: invokevirtual #32
203: bipush        74
205: invokevirtual #33
208: ldc           #31
210: invokevirtual #32
213: invokevirtual #35
216: iload         5
218: bipush        74
220: if_icmpne     227
223: iconst_1
224: goto          228
227: iconst_0
228: invokestatic  #36
231: new           #29
234: dup
235: invokespecial #30
238: ldc           #31
240: invokevirtual #32
243: aload         6
245: invokevirtual #32
248: ldc           #52
250: invokevirtual #32
253: invokevirtual #35
256: aload         6
258: ldc           #44
260: invokestatic  #53
263: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0193
Start line: 4101
End line: 0
Method source code: 
    public void test0193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0193");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str6 = helpFormatter0.getNewLine();
        java.util.Comparator comparator7 = helpFormatter0.getOptionComparator();
        helpFormatter0.setLongOptSeparator("usage: ");
        helpFormatter0.defaultSyntaxPrefix = "";
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\n" + "'", str6, "\n");
        org.junit.Assert.assertNotNull(comparator7);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #291
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #10
36: invokevirtual #11
39: aload_1
40: ldc           #10
42: putfield      #55
45: aload_1
46: getfield      #55
49: astore_2
50: aload_1
51: invokevirtual #72
54: astore_3
55: aload_1
56: invokevirtual #106
59: astore        4
61: aload_1
62: ldc           #12
64: invokevirtual #91
67: aload_1
68: ldc           #10
70: putfield      #97
73: new           #29
76: dup
77: invokespecial #30
80: ldc           #31
82: invokevirtual #32
85: aload_2
86: invokevirtual #32
89: ldc           #68
91: invokevirtual #32
94: invokevirtual #35
97: aload_2
98: ldc           #10
100: invokestatic  #53
103: new           #29
106: dup
107: invokespecial #30
110: ldc           #31
112: invokevirtual #32
115: aload_3
116: invokevirtual #32
119: ldc           #74
121: invokevirtual #32
124: invokevirtual #35
127: aload_3
128: ldc           #65
130: invokestatic  #53
133: aload         4
135: invokestatic  #51
138: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0194
Start line: 4118
End line: 0
Method source code: 
    public void test0194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0194");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setLongOptPrefix(" ");
        java.lang.String str7 = helpFormatter0.getLongOptPrefix();
        java.lang.String str8 = helpFormatter0.defaultNewLine;
        helpFormatter0.defaultOptPrefix = "                                                                                                 ";
        int int11 = helpFormatter0.getDescPadding();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + " " + "'", str7, " ");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 3 + "'", int11 == 3);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #292
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: getfield      #63
48: astore_3
49: aload_1
50: ldc           #24
52: invokevirtual #49
55: aload_1
56: invokevirtual #48
59: astore        4
61: aload_1
62: getfield      #23
65: astore        5
67: aload_1
68: ldc           #141
70: putfield      #63
73: aload_1
74: invokevirtual #118
77: istore        6
79: new           #29
82: dup
83: invokespecial #30
86: ldc           #31
88: invokevirtual #32
91: iload_2
92: invokevirtual #33
95: ldc           #34
97: invokevirtual #32
100: iconst_1
101: invokevirtual #33
104: ldc           #31
106: invokevirtual #32
109: invokevirtual #35
112: iload_2
113: iconst_1
114: if_icmpne     121
117: iconst_1
118: goto          122
121: iconst_0
122: invokestatic  #36
125: new           #29
128: dup
129: invokespecial #30
132: ldc           #31
134: invokevirtual #32
137: aload_3
138: invokevirtual #32
141: ldc           #66
143: invokevirtual #32
146: invokevirtual #35
149: aload_3
150: ldc           #67
152: invokestatic  #53
155: new           #29
158: dup
159: invokespecial #30
162: ldc           #31
164: invokevirtual #32
167: aload         4
169: invokevirtual #32
172: ldc           #88
174: invokevirtual #32
177: invokevirtual #35
180: aload         4
182: ldc           #24
184: invokestatic  #53
187: new           #29
190: dup
191: invokespecial #30
194: ldc           #31
196: invokevirtual #32
199: aload         5
201: invokevirtual #32
204: ldc           #68
206: invokevirtual #32
209: invokevirtual #35
212: aload         5
214: ldc           #10
216: invokestatic  #53
219: new           #29
222: dup
223: invokespecial #30
226: ldc           #31
228: invokevirtual #32
231: iload         6
233: invokevirtual #33
236: ldc           #34
238: invokevirtual #32
241: iconst_3
242: invokevirtual #33
245: ldc           #31
247: invokevirtual #32
250: invokevirtual #35
253: iload         6
255: iconst_3
256: if_icmpne     263
259: iconst_1
260: goto          264
263: iconst_0
264: invokestatic  #36
267: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0195
Start line: 4138
End line: 0
Method source code: 
    public void test0195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0195");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.setWidth(1);
        java.lang.String str5 = helpFormatter0.getNewLine();
        int int6 = helpFormatter0.defaultWidth;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\n" + "'", str5, "\n");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #293
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #10
36: invokevirtual #11
39: aload_1
40: iconst_1
41: invokevirtual #156
44: aload_1
45: invokevirtual #72
48: astore_2
49: aload_1
50: getfield      #110
53: istore_3
54: new           #29
57: dup
58: invokespecial #30
61: ldc           #31
63: invokevirtual #32
66: aload_2
67: invokevirtual #32
70: ldc           #74
72: invokevirtual #32
75: invokevirtual #35
78: aload_2
79: ldc           #65
81: invokestatic  #53
84: new           #29
87: dup
88: invokespecial #30
91: ldc           #31
93: invokevirtual #32
96: iload_3
97: invokevirtual #33
100: ldc           #34
102: invokevirtual #32
105: iconst_1
106: invokevirtual #33
109: ldc           #31
111: invokevirtual #32
114: invokevirtual #35
117: iload_3
118: iconst_1
119: if_icmpne     126
122: iconst_1
123: goto          127
126: iconst_0
127: invokestatic  #36
130: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0196
Start line: 4151
End line: 0
Method source code: 
    public void test0196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0196");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.defaultDescPad = '4';
        helpFormatter0.setNewLine("");
        helpFormatter0.defaultWidth = 0;
        helpFormatter0.setDescPadding((int) 'a');
        helpFormatter0.setLongOptSeparator("arg");
        helpFormatter0.defaultLongOptPrefix = "hi!";
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #294
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: bipush        52
47: putfield      #76
50: aload_1
51: ldc           #10
53: invokevirtual #131
56: aload_1
57: iconst_0
58: putfield      #110
61: aload_1
62: bipush        97
64: invokevirtual #38
67: aload_1
68: ldc           #79
70: invokevirtual #91
73: aload_1
74: ldc           #25
76: putfield      #55
79: new           #29
82: dup
83: invokespecial #30
86: ldc           #31
88: invokevirtual #32
91: iload_2
92: invokevirtual #33
95: ldc           #34
97: invokevirtual #32
100: iconst_1
101: invokevirtual #33
104: ldc           #31
106: invokevirtual #32
109: invokevirtual #35
112: iload_2
113: iconst_1
114: if_icmpne     121
117: iconst_1
118: goto          122
121: iconst_0
122: invokestatic  #36
125: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0197
Start line: 4167
End line: 0
Method source code: 
    public void test0197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0197");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        java.lang.String str6 = helpFormatter0.rtrim("");
        java.lang.String str8 = helpFormatter0.rtrim("-");
        helpFormatter0.defaultWidth = (short) -1;
        int int11 = helpFormatter0.getDescPadding();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "-" + "'", str8, "-");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 3 + "'", int11 == 3);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #295
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: getfield      #63
48: astore_3
49: aload_1
50: ldc           #10
52: invokevirtual #64
55: astore        4
57: aload_1
58: ldc           #67
60: invokevirtual #64
63: astore        5
65: aload_1
66: iconst_m1
67: putfield      #110
70: aload_1
71: invokevirtual #118
74: istore        6
76: new           #29
79: dup
80: invokespecial #30
83: ldc           #31
85: invokevirtual #32
88: iload_2
89: invokevirtual #33
92: ldc           #34
94: invokevirtual #32
97: iconst_1
98: invokevirtual #33
101: ldc           #31
103: invokevirtual #32
106: invokevirtual #35
109: iload_2
110: iconst_1
111: if_icmpne     118
114: iconst_1
115: goto          119
118: iconst_0
119: invokestatic  #36
122: new           #29
125: dup
126: invokespecial #30
129: ldc           #31
131: invokevirtual #32
134: aload_3
135: invokevirtual #32
138: ldc           #66
140: invokevirtual #32
143: invokevirtual #35
146: aload_3
147: ldc           #67
149: invokestatic  #53
152: new           #29
155: dup
156: invokespecial #30
159: ldc           #31
161: invokevirtual #32
164: aload         4
166: invokevirtual #32
169: ldc           #68
171: invokevirtual #32
174: invokevirtual #35
177: aload         4
179: ldc           #10
181: invokestatic  #53
184: new           #29
187: dup
188: invokespecial #30
191: ldc           #31
193: invokevirtual #32
196: aload         5
198: invokevirtual #32
201: ldc           #66
203: invokevirtual #32
206: invokevirtual #35
209: aload         5
211: ldc           #67
213: invokestatic  #53
216: new           #29
219: dup
220: invokespecial #30
223: ldc           #31
225: invokevirtual #32
228: iload         6
230: invokevirtual #33
233: ldc           #34
235: invokevirtual #32
238: iconst_3
239: invokevirtual #33
242: ldc           #31
244: invokevirtual #32
247: invokevirtual #35
250: iload         6
252: iconst_3
253: if_icmpne     260
256: iconst_1
257: goto          261
260: iconst_0
261: invokestatic  #36
264: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0198
Start line: 4186
End line: 0
Method source code: 
    public void test0198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0198");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str3 = helpFormatter0.getOptPrefix();
        java.util.Comparator comparator4 = helpFormatter0.getOptionComparator();
        java.lang.String str5 = helpFormatter0.getOptPrefix();
        java.io.PrintWriter printWriter6 = null;
        org.apache.commons.cli.Options options10 = null;
        try {
            helpFormatter0.printHelp(printWriter6, (int) ' ', "usage: ", "usage: ", options10, (int) ' ', 0, "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "--" + "'", str2, "--");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "-" + "'", str3, "-");
        org.junit.Assert.assertNotNull(comparator4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "-" + "'", str5, "-");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #296
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: getfield      #55
42: astore_3
43: aload_1
44: invokevirtual #123
47: astore        4
49: aload_1
50: invokevirtual #106
53: astore        5
55: aload_1
56: invokevirtual #123
59: astore        6
61: aconst_null
62: astore        7
64: aconst_null
65: astore        8
67: aload_1
68: aload         7
70: bipush        32
72: ldc           #12
74: ldc           #12
76: aload         8
78: bipush        32
80: iconst_0
81: ldc           #25
83: invokevirtual #42
86: ldc           #14
88: invokestatic  #15
91: goto          96
94: astore        9
96: new           #29
99: dup
100: invokespecial #30
103: ldc           #31
105: invokevirtual #32
108: iload_2
109: invokevirtual #33
112: ldc           #34
114: invokevirtual #32
117: iconst_1
118: invokevirtual #33
121: ldc           #31
123: invokevirtual #32
126: invokevirtual #35
129: iload_2
130: iconst_1
131: if_icmpne     138
134: iconst_1
135: goto          139
138: iconst_0
139: invokestatic  #36
142: new           #29
145: dup
146: invokespecial #30
149: ldc           #31
151: invokevirtual #32
154: aload_3
155: invokevirtual #32
158: ldc           #52
160: invokevirtual #32
163: invokevirtual #35
166: aload_3
167: ldc           #44
169: invokestatic  #53
172: new           #29
175: dup
176: invokespecial #30
179: ldc           #31
181: invokevirtual #32
184: aload         4
186: invokevirtual #32
189: ldc           #66
191: invokevirtual #32
194: invokevirtual #35
197: aload         4
199: ldc           #67
201: invokestatic  #53
204: aload         5
206: invokestatic  #51
209: new           #29
212: dup
213: invokespecial #30
216: ldc           #31
218: invokevirtual #32
221: aload         6
223: invokevirtual #32
226: ldc           #66
228: invokevirtual #32
231: invokevirtual #35
234: aload         6
236: ldc           #67
238: invokestatic  #53
241: return
Exception table:
from    to  target type
67    91    94   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0199
Start line: 4212
End line: 0
Method source code: 
    public void test0199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0199");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        helpFormatter0.defaultArgName = "hi!";
        java.lang.Class<?> wildcardClass8 = helpFormatter0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #297
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: bipush        10
47: invokevirtual #38
50: aload_1
51: ldc           #25
53: putfield      #77
56: aload_1
57: invokevirtual #56
60: astore_3
61: new           #29
64: dup
65: invokespecial #30
68: ldc           #31
70: invokevirtual #32
73: iload_2
74: invokevirtual #33
77: ldc           #34
79: invokevirtual #32
82: iconst_1
83: invokevirtual #33
86: ldc           #31
88: invokevirtual #32
91: invokevirtual #35
94: iload_2
95: iconst_1
96: if_icmpne     103
99: iconst_1
100: goto          104
103: iconst_0
104: invokestatic  #36
107: aload_3
108: invokestatic  #51
111: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0200
Start line: 4226
End line: 0
Method source code: 
    public void test0200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0200");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.defaultDescPad = '4';
        helpFormatter0.setNewLine("");
        helpFormatter0.setLongOptPrefix(" ");
        java.lang.String str10 = helpFormatter0.getLongOptPrefix();
        java.lang.String str12 = helpFormatter0.createPadding(100);
        java.io.PrintWriter printWriter13 = null;
        try {
            helpFormatter0.printWrapped(printWriter13, 1, "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + " " + "'", str10, " ");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "                                                                                                    " + "'", str12, "                                                                                                    ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #298
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: bipush        52
47: putfield      #76
50: aload_1
51: ldc           #10
53: invokevirtual #131
56: aload_1
57: ldc           #24
59: invokevirtual #49
62: aload_1
63: invokevirtual #48
66: astore_3
67: aload_1
68: bipush        100
70: invokevirtual #108
73: astore        4
75: aconst_null
76: astore        5
78: aload_1
79: aload         5
81: iconst_1
82: ldc           #25
84: invokevirtual #82
87: ldc           #14
89: invokestatic  #15
92: goto          97
95: astore        6
97: new           #29
100: dup
101: invokespecial #30
104: ldc           #31
106: invokevirtual #32
109: iload_2
110: invokevirtual #33
113: ldc           #34
115: invokevirtual #32
118: iconst_1
119: invokevirtual #33
122: ldc           #31
124: invokevirtual #32
127: invokevirtual #35
130: iload_2
131: iconst_1
132: if_icmpne     139
135: iconst_1
136: goto          140
139: iconst_0
140: invokestatic  #36
143: new           #29
146: dup
147: invokespecial #30
150: ldc           #31
152: invokevirtual #32
155: aload_3
156: invokevirtual #32
159: ldc           #88
161: invokevirtual #32
164: invokevirtual #35
167: aload_3
168: ldc           #24
170: invokestatic  #53
173: new           #29
176: dup
177: invokespecial #30
180: ldc           #31
182: invokevirtual #32
185: aload         4
187: invokevirtual #32
190: ldc_w         #299
193: invokevirtual #32
196: invokevirtual #35
199: aload         4
201: ldc           #240
203: invokestatic  #53
206: return
Exception table:
from    to  target type
78    92    95   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0201
Start line: 4251
End line: 0
Method source code: 
    public void test0201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0201");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setLeftPadding((int) (byte) 0);
        helpFormatter0.setLongOptPrefix("                                                                                                 ");
        helpFormatter0.setSyntaxPrefix("                                                                                                 ");
        org.apache.commons.cli.Options options12 = null;
        try {
            helpFormatter0.printHelp("usage: ", options12, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #300
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: getfield      #63
48: astore_3
49: aload_1
50: iconst_0
51: invokevirtual #193
54: aload_1
55: ldc           #141
57: invokevirtual #49
60: aload_1
61: ldc           #141
63: invokevirtual #39
66: aconst_null
67: astore        4
69: aload_1
70: ldc           #12
72: aload         4
74: iconst_1
75: invokevirtual #135
78: ldc           #14
80: invokestatic  #15
83: goto          88
86: astore        5
88: new           #29
91: dup
92: invokespecial #30
95: ldc           #31
97: invokevirtual #32
100: iload_2
101: invokevirtual #33
104: ldc           #34
106: invokevirtual #32
109: iconst_1
110: invokevirtual #33
113: ldc           #31
115: invokevirtual #32
118: invokevirtual #35
121: iload_2
122: iconst_1
123: if_icmpne     130
126: iconst_1
127: goto          131
130: iconst_0
131: invokestatic  #36
134: new           #29
137: dup
138: invokespecial #30
141: ldc           #31
143: invokevirtual #32
146: aload_3
147: invokevirtual #32
150: ldc           #66
152: invokevirtual #32
155: invokevirtual #35
158: aload_3
159: ldc           #67
161: invokestatic  #53
164: return
Exception table:
from    to  target type
69    83    86   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0202
Start line: 4274
End line: 0
Method source code: 
    public void test0202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0202");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setLongOptPrefix(" ");
        helpFormatter0.defaultDescPad = (short) 10;
        java.lang.String str9 = helpFormatter0.defaultArgName;
        helpFormatter0.setSyntaxPrefix("");
        helpFormatter0.defaultOptPrefix = "                                                                                                 ";
        helpFormatter0.setLongOptPrefix("          ");
        int int16 = helpFormatter0.getLeftPadding();
        java.io.PrintWriter printWriter17 = null;
        org.apache.commons.cli.Options options20 = null;
        try {
            helpFormatter0.printUsage(printWriter17, 100, "          ", options20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "arg" + "'", str9, "arg");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #301
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: getfield      #63
48: astore_3
49: aload_1
50: ldc           #24
52: invokevirtual #49
55: aload_1
56: bipush        10
58: putfield      #76
61: aload_1
62: getfield      #77
65: astore        4
67: aload_1
68: ldc           #10
70: invokevirtual #39
73: aload_1
74: ldc           #141
76: putfield      #63
79: aload_1
80: ldc           #114
82: invokevirtual #49
85: aload_1
86: invokevirtual #22
89: istore        5
91: aconst_null
92: astore        6
94: aconst_null
95: astore        7
97: aload_1
98: aload         6
100: bipush        100
102: ldc           #114
104: aload         7
106: invokevirtual #127
109: ldc           #14
111: invokestatic  #15
114: goto          119
117: astore        8
119: new           #29
122: dup
123: invokespecial #30
126: ldc           #31
128: invokevirtual #32
131: iload_2
132: invokevirtual #33
135: ldc           #34
137: invokevirtual #32
140: iconst_1
141: invokevirtual #33
144: ldc           #31
146: invokevirtual #32
149: invokevirtual #35
152: iload_2
153: iconst_1
154: if_icmpne     161
157: iconst_1
158: goto          162
161: iconst_0
162: invokestatic  #36
165: new           #29
168: dup
169: invokespecial #30
172: ldc           #31
174: invokevirtual #32
177: aload_3
178: invokevirtual #32
181: ldc           #66
183: invokevirtual #32
186: invokevirtual #35
189: aload_3
190: ldc           #67
192: invokestatic  #53
195: new           #29
198: dup
199: invokespecial #30
202: ldc           #31
204: invokevirtual #32
207: aload         4
209: invokevirtual #32
212: ldc           #78
214: invokevirtual #32
217: invokevirtual #35
220: aload         4
222: ldc           #79
224: invokestatic  #53
227: new           #29
230: dup
231: invokespecial #30
234: ldc           #31
236: invokevirtual #32
239: iload         5
241: invokevirtual #33
244: ldc           #34
246: invokevirtual #32
249: iconst_1
250: invokevirtual #33
253: ldc           #31
255: invokevirtual #32
258: invokevirtual #35
261: iload         5
263: iconst_1
264: if_icmpne     271
267: iconst_1
268: goto          272
271: iconst_0
272: invokestatic  #36
275: return
Exception table:
from    to  target type
97   114   117   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0203
Start line: 4304
End line: 0
Method source code: 
    public void test0203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0203");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str6 = helpFormatter0.getNewLine();
        java.util.Comparator comparator7 = helpFormatter0.getOptionComparator();
        helpFormatter0.setDescPadding(3);
        helpFormatter0.defaultDescPad = 10;
        java.lang.String str12 = helpFormatter0.getArgName();
        org.apache.commons.cli.Options options15 = null;
        try {
            helpFormatter0.printHelp("arg", "                                                                                                 ", options15, "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\n" + "'", str6, "\n");
        org.junit.Assert.assertNotNull(comparator7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "arg" + "'", str12, "arg");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #302
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #10
36: invokevirtual #11
39: aload_1
40: ldc           #10
42: putfield      #55
45: aload_1
46: getfield      #55
49: astore_2
50: aload_1
51: invokevirtual #72
54: astore_3
55: aload_1
56: invokevirtual #106
59: astore        4
61: aload_1
62: iconst_3
63: invokevirtual #38
66: aload_1
67: bipush        10
69: putfield      #76
72: aload_1
73: invokevirtual #104
76: astore        5
78: aconst_null
79: astore        6
81: aload_1
82: ldc           #79
84: ldc           #141
86: aload         6
88: ldc           #25
90: invokevirtual #13
93: ldc           #14
95: invokestatic  #15
98: goto          103
101: astore        7
103: new           #29
106: dup
107: invokespecial #30
110: ldc           #31
112: invokevirtual #32
115: aload_2
116: invokevirtual #32
119: ldc           #68
121: invokevirtual #32
124: invokevirtual #35
127: aload_2
128: ldc           #10
130: invokestatic  #53
133: new           #29
136: dup
137: invokespecial #30
140: ldc           #31
142: invokevirtual #32
145: aload_3
146: invokevirtual #32
149: ldc           #74
151: invokevirtual #32
154: invokevirtual #35
157: aload_3
158: ldc           #65
160: invokestatic  #53
163: aload         4
165: invokestatic  #51
168: new           #29
171: dup
172: invokespecial #30
175: ldc           #31
177: invokevirtual #32
180: aload         5
182: invokevirtual #32
185: ldc           #78
187: invokevirtual #32
190: invokevirtual #35
193: aload         5
195: ldc           #79
197: invokestatic  #53
200: return
Exception table:
from    to  target type
81    98   101   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0204
Start line: 4331
End line: 0
Method source code: 
    public void test0204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0204");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.defaultDescPad = '4';
        helpFormatter0.setNewLine("");
        helpFormatter0.setLongOptPrefix(" ");
        java.lang.String str10 = helpFormatter0.getLongOptPrefix();
        helpFormatter0.setLongOptSeparator("hi!");
        java.lang.String str14 = helpFormatter0.rtrim("--");
        java.io.PrintWriter printWriter15 = null;
        try {
            helpFormatter0.printWrapped(printWriter15, (int) '#', (int) 'a', "usage: ");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + " " + "'", str10, " ");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "--" + "'", str14, "--");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #303
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: bipush        52
47: putfield      #76
50: aload_1
51: ldc           #10
53: invokevirtual #131
56: aload_1
57: ldc           #24
59: invokevirtual #49
62: aload_1
63: invokevirtual #48
66: astore_3
67: aload_1
68: ldc           #25
70: invokevirtual #91
73: aload_1
74: ldc           #44
76: invokevirtual #64
79: astore        4
81: aconst_null
82: astore        5
84: aload_1
85: aload         5
87: bipush        35
89: bipush        97
91: ldc           #12
93: invokevirtual #61
96: ldc           #14
98: invokestatic  #15
101: goto          106
104: astore        6
106: new           #29
109: dup
110: invokespecial #30
113: ldc           #31
115: invokevirtual #32
118: iload_2
119: invokevirtual #33
122: ldc           #34
124: invokevirtual #32
127: iconst_1
128: invokevirtual #33
131: ldc           #31
133: invokevirtual #32
136: invokevirtual #35
139: iload_2
140: iconst_1
141: if_icmpne     148
144: iconst_1
145: goto          149
148: iconst_0
149: invokestatic  #36
152: new           #29
155: dup
156: invokespecial #30
159: ldc           #31
161: invokevirtual #32
164: aload_3
165: invokevirtual #32
168: ldc           #88
170: invokevirtual #32
173: invokevirtual #35
176: aload_3
177: ldc           #24
179: invokestatic  #53
182: new           #29
185: dup
186: invokespecial #30
189: ldc           #31
191: invokevirtual #32
194: aload         4
196: invokevirtual #32
199: ldc           #52
201: invokevirtual #32
204: invokevirtual #35
207: aload         4
209: ldc           #44
211: invokestatic  #53
214: return
Exception table:
from    to  target type
84   101   104   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0205
Start line: 4357
End line: 0
Method source code: 
    public void test0205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0205");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str6 = helpFormatter0.getNewLine();
        java.lang.String str7 = helpFormatter0.defaultArgName;
        org.apache.commons.cli.Options options9 = null;
        try {
            helpFormatter0.printHelp("arg", options9, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\n" + "'", str6, "\n");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "arg" + "'", str7, "arg");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #304
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #10
36: invokevirtual #11
39: aload_1
40: ldc           #10
42: putfield      #55
45: aload_1
46: getfield      #55
49: astore_2
50: aload_1
51: invokevirtual #72
54: astore_3
55: aload_1
56: getfield      #77
59: astore        4
61: aconst_null
62: astore        5
64: aload_1
65: ldc           #79
67: aload         5
69: iconst_0
70: invokevirtual #135
73: ldc           #14
75: invokestatic  #15
78: goto          83
81: astore        6
83: new           #29
86: dup
87: invokespecial #30
90: ldc           #31
92: invokevirtual #32
95: aload_2
96: invokevirtual #32
99: ldc           #68
101: invokevirtual #32
104: invokevirtual #35
107: aload_2
108: ldc           #10
110: invokestatic  #53
113: new           #29
116: dup
117: invokespecial #30
120: ldc           #31
122: invokevirtual #32
125: aload_3
126: invokevirtual #32
129: ldc           #74
131: invokevirtual #32
134: invokevirtual #35
137: aload_3
138: ldc           #65
140: invokestatic  #53
143: new           #29
146: dup
147: invokespecial #30
150: ldc           #31
152: invokevirtual #32
155: aload         4
157: invokevirtual #32
160: ldc           #78
162: invokevirtual #32
165: invokevirtual #35
168: aload         4
170: ldc           #79
172: invokestatic  #53
175: return
Exception table:
from    to  target type
64    78    81   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0206
Start line: 4380
End line: 0
Method source code: 
    public void test0206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0206");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        helpFormatter0.defaultArgName = "hi!";
        java.lang.String str9 = helpFormatter0.createPadding((int) (byte) 10);
        helpFormatter0.defaultSyntaxPrefix = " ";
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "          " + "'", str9, "          ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #305
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: bipush        10
47: invokevirtual #38
50: aload_1
51: ldc           #25
53: putfield      #77
56: aload_1
57: bipush        10
59: invokevirtual #108
62: astore_3
63: aload_1
64: ldc           #24
66: putfield      #97
69: new           #29
72: dup
73: invokespecial #30
76: ldc           #31
78: invokevirtual #32
81: iload_2
82: invokevirtual #33
85: ldc           #34
87: invokevirtual #32
90: iconst_1
91: invokevirtual #33
94: ldc           #31
96: invokevirtual #32
99: invokevirtual #35
102: iload_2
103: iconst_1
104: if_icmpne     111
107: iconst_1
108: goto          112
111: iconst_0
112: invokestatic  #36
115: new           #29
118: dup
119: invokespecial #30
122: ldc           #31
124: invokevirtual #32
127: aload_3
128: invokevirtual #32
131: ldc           #204
133: invokevirtual #32
136: invokevirtual #35
139: aload_3
140: ldc           #114
142: invokestatic  #53
145: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0207
Start line: 4395
End line: 0
Method source code: 
    public void test0207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0207");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str6 = helpFormatter0.getNewLine();
        java.lang.String str7 = helpFormatter0.defaultArgName;
        java.io.PrintWriter printWriter8 = null;
        try {
            helpFormatter0.printWrapped(printWriter8, (int) '4', "\n");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\n" + "'", str6, "\n");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "arg" + "'", str7, "arg");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #306
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #10
36: invokevirtual #11
39: aload_1
40: ldc           #10
42: putfield      #55
45: aload_1
46: getfield      #55
49: astore_2
50: aload_1
51: invokevirtual #72
54: astore_3
55: aload_1
56: getfield      #77
59: astore        4
61: aconst_null
62: astore        5
64: aload_1
65: aload         5
67: bipush        52
69: ldc           #65
71: invokevirtual #82
74: ldc           #14
76: invokestatic  #15
79: goto          84
82: astore        6
84: new           #29
87: dup
88: invokespecial #30
91: ldc           #31
93: invokevirtual #32
96: aload_2
97: invokevirtual #32
100: ldc           #68
102: invokevirtual #32
105: invokevirtual #35
108: aload_2
109: ldc           #10
111: invokestatic  #53
114: new           #29
117: dup
118: invokespecial #30
121: ldc           #31
123: invokevirtual #32
126: aload_3
127: invokevirtual #32
130: ldc           #74
132: invokevirtual #32
135: invokevirtual #35
138: aload_3
139: ldc           #65
141: invokestatic  #53
144: new           #29
147: dup
148: invokespecial #30
151: ldc           #31
153: invokevirtual #32
156: aload         4
158: invokevirtual #32
161: ldc           #78
163: invokevirtual #32
166: invokevirtual #35
169: aload         4
171: ldc           #79
173: invokestatic  #53
176: return
Exception table:
from    to  target type
64    79    82   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0208
Start line: 4418
End line: 0
Method source code: 
    public void test0208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0208");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        int int4 = helpFormatter0.defaultWidth;
        java.util.Comparator comparator5 = helpFormatter0.getOptionComparator();
        helpFormatter0.setLongOptPrefix("");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 74 + "'", int4 == 74);
        org.junit.Assert.assertNotNull(comparator5);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #307
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: getfield      #110
48: istore_3
49: aload_1
50: invokevirtual #106
53: astore        4
55: aload_1
56: ldc           #10
58: invokevirtual #49
61: new           #29
64: dup
65: invokespecial #30
68: ldc           #31
70: invokevirtual #32
73: iload_2
74: invokevirtual #33
77: ldc           #34
79: invokevirtual #32
82: iconst_1
83: invokevirtual #33
86: ldc           #31
88: invokevirtual #32
91: invokevirtual #35
94: iload_2
95: iconst_1
96: if_icmpne     103
99: iconst_1
100: goto          104
103: iconst_0
104: invokestatic  #36
107: new           #29
110: dup
111: invokespecial #30
114: ldc           #31
116: invokevirtual #32
119: iload_3
120: invokevirtual #33
123: ldc           #34
125: invokevirtual #32
128: bipush        74
130: invokevirtual #33
133: ldc           #31
135: invokevirtual #32
138: invokevirtual #35
141: iload_3
142: bipush        74
144: if_icmpne     151
147: iconst_1
148: goto          152
151: iconst_0
152: invokestatic  #36
155: aload         4
157: invokestatic  #51
160: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0209
Start line: 4433
End line: 0
Method source code: 
    public void test0209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0209");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.defaultLongOptPrefix = "hi!";
        helpFormatter0.setDescPadding((int) (short) 0);
        java.lang.String str5 = helpFormatter0.getOptPrefix();
        helpFormatter0.defaultSyntaxPrefix = "hi!";
        java.lang.Class<?> wildcardClass8 = helpFormatter0.getClass();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "-" + "'", str5, "-");
        org.junit.Assert.assertNotNull(wildcardClass8);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #308
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #25
36: putfield      #55
39: aload_1
40: iconst_0
41: invokevirtual #38
44: aload_1
45: invokevirtual #123
48: astore_2
49: aload_1
50: ldc           #25
52: putfield      #97
55: aload_1
56: invokevirtual #56
59: astore_3
60: new           #29
63: dup
64: invokespecial #30
67: ldc           #31
69: invokevirtual #32
72: aload_2
73: invokevirtual #32
76: ldc           #66
78: invokevirtual #32
81: invokevirtual #35
84: aload_2
85: ldc           #67
87: invokestatic  #53
90: aload_3
91: invokestatic  #51
94: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0210
Start line: 4447
End line: 0
Method source code: 
    public void test0210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0210");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        int int2 = helpFormatter0.getWidth();
        java.lang.StringBuffer stringBuffer3 = null;
        try {
            java.lang.StringBuffer stringBuffer7 = helpFormatter0.renderWrappedText(stringBuffer3, 74, (int) (short) 10, "-");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 74 + "'", int2 == 74);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #309
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: invokevirtual #129
42: istore_3
43: aconst_null
44: astore        4
46: aload_1
47: aload         4
49: bipush        74
51: bipush        10
53: ldc           #67
55: invokevirtual #70
58: astore        5
60: ldc           #14
62: invokestatic  #15
65: goto          70
68: astore        5
70: new           #29
73: dup
74: invokespecial #30
77: ldc           #31
79: invokevirtual #32
82: iload_2
83: invokevirtual #33
86: ldc           #34
88: invokevirtual #32
91: iconst_1
92: invokevirtual #33
95: ldc           #31
97: invokevirtual #32
100: invokevirtual #35
103: iload_2
104: iconst_1
105: if_icmpne     112
108: iconst_1
109: goto          113
112: iconst_0
113: invokestatic  #36
116: new           #29
119: dup
120: invokespecial #30
123: ldc           #31
125: invokevirtual #32
128: iload_3
129: invokevirtual #33
132: ldc           #34
134: invokevirtual #32
137: bipush        74
139: invokevirtual #33
142: ldc           #31
144: invokevirtual #32
147: invokevirtual #35
150: iload_3
151: bipush        74
153: if_icmpne     160
156: iconst_1
157: goto          161
160: iconst_0
161: invokestatic  #36
164: return
Exception table:
from    to  target type
46    65    68   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0211
Start line: 4466
End line: 0
Method source code: 
    public void test0211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0211");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setLongOptPrefix(" ");
        helpFormatter0.defaultDescPad = (short) 10;
        java.lang.String str9 = helpFormatter0.defaultArgName;
        helpFormatter0.setSyntaxPrefix("");
        org.apache.commons.cli.Options options15 = null;
        try {
            helpFormatter0.printHelp((-2), "-", "-", options15, "   ", false);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "arg" + "'", str9, "arg");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #310
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: getfield      #63
48: astore_3
49: aload_1
50: ldc           #24
52: invokevirtual #49
55: aload_1
56: bipush        10
58: putfield      #76
61: aload_1
62: getfield      #77
65: astore        4
67: aload_1
68: ldc           #10
70: invokevirtual #39
73: aconst_null
74: astore        5
76: aload_1
77: bipush        -2
79: ldc           #67
81: ldc           #67
83: aload         5
85: ldc_w         #259
88: iconst_0
89: invokevirtual #26
92: ldc           #178
94: invokestatic  #15
97: goto          102
100: astore        6
102: new           #29
105: dup
106: invokespecial #30
109: ldc           #31
111: invokevirtual #32
114: iload_2
115: invokevirtual #33
118: ldc           #34
120: invokevirtual #32
123: iconst_1
124: invokevirtual #33
127: ldc           #31
129: invokevirtual #32
132: invokevirtual #35
135: iload_2
136: iconst_1
137: if_icmpne     144
140: iconst_1
141: goto          145
144: iconst_0
145: invokestatic  #36
148: new           #29
151: dup
152: invokespecial #30
155: ldc           #31
157: invokevirtual #32
160: aload_3
161: invokevirtual #32
164: ldc           #66
166: invokevirtual #32
169: invokevirtual #35
172: aload_3
173: ldc           #67
175: invokestatic  #53
178: new           #29
181: dup
182: invokespecial #30
185: ldc           #31
187: invokevirtual #32
190: aload         4
192: invokevirtual #32
195: ldc           #78
197: invokevirtual #32
200: invokevirtual #35
203: aload         4
205: ldc           #79
207: invokestatic  #53
210: return
Exception table:
from    to  target type
76    97   100   Class java/lang/StringIndexOutOfBoundsException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0212
Start line: 4491
End line: 0
Method source code: 
    public void test0212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0212");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.defaultDescPad = '4';
        helpFormatter0.setNewLine("");
        helpFormatter0.defaultDescPad = 'a';
        org.apache.commons.cli.Options options11 = null;
        try {
            helpFormatter0.printHelp("hi!", options11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #311
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: bipush        52
47: putfield      #76
50: aload_1
51: ldc           #10
53: invokevirtual #131
56: aload_1
57: bipush        97
59: putfield      #76
62: aconst_null
63: astore_3
64: aload_1
65: ldc           #25
67: aload_3
68: invokevirtual #50
71: ldc           #14
73: invokestatic  #15
76: goto          81
79: astore        4
81: new           #29
84: dup
85: invokespecial #30
88: ldc           #31
90: invokevirtual #32
93: iload_2
94: invokevirtual #33
97: ldc           #34
99: invokevirtual #32
102: iconst_1
103: invokevirtual #33
106: ldc           #31
108: invokevirtual #32
111: invokevirtual #35
114: iload_2
115: iconst_1
116: if_icmpne     123
119: iconst_1
120: goto          124
123: iconst_0
124: invokestatic  #36
127: return
Exception table:
from    to  target type
64    76    79   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0213
Start line: 4512
End line: 0
Method source code: 
    public void test0213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0213");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str6 = helpFormatter0.getNewLine();
        java.util.Comparator comparator7 = helpFormatter0.getOptionComparator();
        helpFormatter0.setLongOptSeparator("usage: ");
        org.apache.commons.cli.Options options13 = null;
        try {
            helpFormatter0.printHelp((int) (short) -1, "                                                                                                    ", "                                                    ", options13, " ", true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\n" + "'", str6, "\n");
        org.junit.Assert.assertNotNull(comparator7);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #312
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #10
36: invokevirtual #11
39: aload_1
40: ldc           #10
42: putfield      #55
45: aload_1
46: getfield      #55
49: astore_2
50: aload_1
51: invokevirtual #72
54: astore_3
55: aload_1
56: invokevirtual #106
59: astore        4
61: aload_1
62: ldc           #12
64: invokevirtual #91
67: aconst_null
68: astore        5
70: aload_1
71: iconst_m1
72: ldc           #240
74: ldc_w         #313
77: aload         5
79: ldc           #24
81: iconst_1
82: invokevirtual #26
85: ldc           #14
87: invokestatic  #15
90: goto          95
93: astore        6
95: new           #29
98: dup
99: invokespecial #30
102: ldc           #31
104: invokevirtual #32
107: aload_2
108: invokevirtual #32
111: ldc           #68
113: invokevirtual #32
116: invokevirtual #35
119: aload_2
120: ldc           #10
122: invokestatic  #53
125: new           #29
128: dup
129: invokespecial #30
132: ldc           #31
134: invokevirtual #32
137: aload_3
138: invokevirtual #32
141: ldc           #74
143: invokevirtual #32
146: invokevirtual #35
149: aload_3
150: ldc           #65
152: invokestatic  #53
155: aload         4
157: invokestatic  #51
160: return
Exception table:
from    to  target type
70    90    93   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0214
Start line: 4536
End line: 0
Method source code: 
    public void test0214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0214");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.getArgName();
        helpFormatter0.setLongOptPrefix("                                                                                                 ");
        int int8 = helpFormatter0.findWrapPos("--", (int) (short) -1, (int) (byte) 100);
        org.apache.commons.cli.Options options12 = null;
        try {
            helpFormatter0.printHelp(0, "", "                                                                                                 ", options12, "                                                    ");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: cmdLineSyntax not provided");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "arg" + "'", str2, "arg");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #314
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: invokevirtual #104
42: astore_3
43: aload_1
44: ldc           #141
46: invokevirtual #49
49: aload_1
50: ldc           #44
52: iconst_m1
53: bipush        100
55: invokevirtual #93
58: istore        4
60: aconst_null
61: astore        5
63: aload_1
64: iconst_0
65: ldc           #10
67: ldc           #141
69: aload         5
71: ldc_w         #313
74: invokevirtual #45
77: ldc           #27
79: invokestatic  #15
82: goto          87
85: astore        6
87: new           #29
90: dup
91: invokespecial #30
94: ldc           #31
96: invokevirtual #32
99: iload_2
100: invokevirtual #33
103: ldc           #34
105: invokevirtual #32
108: iconst_1
109: invokevirtual #33
112: ldc           #31
114: invokevirtual #32
117: invokevirtual #35
120: iload_2
121: iconst_1
122: if_icmpne     129
125: iconst_1
126: goto          130
129: iconst_0
130: invokestatic  #36
133: new           #29
136: dup
137: invokespecial #30
140: ldc           #31
142: invokevirtual #32
145: aload_3
146: invokevirtual #32
149: ldc           #78
151: invokevirtual #32
154: invokevirtual #35
157: aload_3
158: ldc           #79
160: invokestatic  #53
163: new           #29
166: dup
167: invokespecial #30
170: ldc           #31
172: invokevirtual #32
175: iload         4
177: invokevirtual #33
180: ldc           #34
182: invokevirtual #32
185: iconst_m1
186: invokevirtual #33
189: ldc           #31
191: invokevirtual #32
194: invokevirtual #35
197: iload         4
199: iconst_m1
200: if_icmpne     207
203: iconst_1
204: goto          208
207: iconst_0
208: invokestatic  #36
211: return
Exception table:
from    to  target type
63    82    85   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0215
Start line: 4558
End line: 0
Method source code: 
    public void test0215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0215");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        java.lang.String str6 = helpFormatter0.getOptPrefix();
        java.lang.String str7 = helpFormatter0.getNewLine();
        helpFormatter0.defaultOptPrefix = "";
        helpFormatter0.setNewLine("");
        java.lang.String str12 = helpFormatter0.getArgName();
        java.lang.String str13 = helpFormatter0.getSyntaxPrefix();
        java.lang.String str14 = helpFormatter0.getSyntaxPrefix();
        int int18 = helpFormatter0.findWrapPos("", (int) (short) 10, (int) (byte) 1);
        java.io.PrintWriter printWriter19 = null;
        try {
            helpFormatter0.printUsage(printWriter19, (int) (byte) 10, "arg");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "-" + "'", str6, "-");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "arg" + "'", str12, "arg");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "usage: " + "'", str13, "usage: ");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "usage: " + "'", str14, "usage: ");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #315
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: bipush        10
47: invokevirtual #38
50: aload_1
51: invokevirtual #123
54: astore_3
55: aload_1
56: invokevirtual #72
59: astore        4
61: aload_1
62: ldc           #10
64: putfield      #63
67: aload_1
68: ldc           #10
70: invokevirtual #131
73: aload_1
74: invokevirtual #104
77: astore        5
79: aload_1
80: invokevirtual #102
83: astore        6
85: aload_1
86: invokevirtual #102
89: astore        7
91: aload_1
92: ldc           #10
94: bipush        10
96: iconst_1
97: invokevirtual #93
100: istore        8
102: aconst_null
103: astore        9
105: aload_1
106: aload         9
108: bipush        10
110: ldc           #79
112: invokevirtual #87
115: ldc           #14
117: invokestatic  #15
120: goto          125
123: astore        10
125: new           #29
128: dup
129: invokespecial #30
132: ldc           #31
134: invokevirtual #32
137: iload_2
138: invokevirtual #33
141: ldc           #34
143: invokevirtual #32
146: iconst_1
147: invokevirtual #33
150: ldc           #31
152: invokevirtual #32
155: invokevirtual #35
158: iload_2
159: iconst_1
160: if_icmpne     167
163: iconst_1
164: goto          168
167: iconst_0
168: invokestatic  #36
171: new           #29
174: dup
175: invokespecial #30
178: ldc           #31
180: invokevirtual #32
183: aload_3
184: invokevirtual #32
187: ldc           #66
189: invokevirtual #32
192: invokevirtual #35
195: aload_3
196: ldc           #67
198: invokestatic  #53
201: new           #29
204: dup
205: invokespecial #30
208: ldc           #31
210: invokevirtual #32
213: aload         4
215: invokevirtual #32
218: ldc           #68
220: invokevirtual #32
223: invokevirtual #35
226: aload         4
228: ldc           #10
230: invokestatic  #53
233: new           #29
236: dup
237: invokespecial #30
240: ldc           #31
242: invokevirtual #32
245: aload         5
247: invokevirtual #32
250: ldc           #78
252: invokevirtual #32
255: invokevirtual #35
258: aload         5
260: ldc           #79
262: invokestatic  #53
265: new           #29
268: dup
269: invokespecial #30
272: ldc           #31
274: invokevirtual #32
277: aload         6
279: invokevirtual #32
282: ldc           #99
284: invokevirtual #32
287: invokevirtual #35
290: aload         6
292: ldc           #12
294: invokestatic  #53
297: new           #29
300: dup
301: invokespecial #30
304: ldc           #31
306: invokevirtual #32
309: aload         7
311: invokevirtual #32
314: ldc           #99
316: invokevirtual #32
319: invokevirtual #35
322: aload         7
324: ldc           #12
326: invokestatic  #53
329: new           #29
332: dup
333: invokespecial #30
336: ldc           #31
338: invokevirtual #32
341: iload         8
343: invokevirtual #33
346: ldc           #34
348: invokevirtual #32
351: iconst_m1
352: invokevirtual #33
355: ldc           #31
357: invokevirtual #32
360: invokevirtual #35
363: iload         8
365: iconst_m1
366: if_icmpne     373
369: iconst_1
370: goto          374
373: iconst_0
374: invokestatic  #36
377: return
Exception table:
from    to  target type
105   120   123   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0216
Start line: 4591
End line: 0
Method source code: 
    public void test0216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0216");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        int int5 = helpFormatter0.defaultLeftPad;
        java.io.PrintWriter printWriter6 = null;
        try {
            helpFormatter0.printWrapped(printWriter6, (int) (short) 10, (int) (byte) 10, "--");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #316
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: getfield      #63
48: astore_3
49: aload_1
50: getfield      #60
53: istore        4
55: aconst_null
56: astore        5
58: aload_1
59: aload         5
61: bipush        10
63: bipush        10
65: ldc           #44
67: invokevirtual #61
70: ldc           #14
72: invokestatic  #15
75: goto          80
78: astore        6
80: new           #29
83: dup
84: invokespecial #30
87: ldc           #31
89: invokevirtual #32
92: iload_2
93: invokevirtual #33
96: ldc           #34
98: invokevirtual #32
101: iconst_1
102: invokevirtual #33
105: ldc           #31
107: invokevirtual #32
110: invokevirtual #35
113: iload_2
114: iconst_1
115: if_icmpne     122
118: iconst_1
119: goto          123
122: iconst_0
123: invokestatic  #36
126: new           #29
129: dup
130: invokespecial #30
133: ldc           #31
135: invokevirtual #32
138: aload_3
139: invokevirtual #32
142: ldc           #66
144: invokevirtual #32
147: invokevirtual #35
150: aload_3
151: ldc           #67
153: invokestatic  #53
156: new           #29
159: dup
160: invokespecial #30
163: ldc           #31
165: invokevirtual #32
168: iload         4
170: invokevirtual #33
173: ldc           #34
175: invokevirtual #32
178: iconst_1
179: invokevirtual #33
182: ldc           #31
184: invokevirtual #32
187: invokevirtual #35
190: iload         4
192: iconst_1
193: if_icmpne     200
196: iconst_1
197: goto          201
200: iconst_0
201: invokestatic  #36
204: return
Exception table:
from    to  target type
58    75    78   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0217
Start line: 4613
End line: 0
Method source code: 
    public void test0217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0217");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setLongOptPrefix(" ");
        helpFormatter0.defaultDescPad = (short) 10;
        helpFormatter0.setLongOptSeparator("");
        helpFormatter0.defaultLeftPad = '4';
        helpFormatter0.defaultLongOptPrefix = "                                                                                                    ";
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #317
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: getfield      #63
48: astore_3
49: aload_1
50: ldc           #24
52: invokevirtual #49
55: aload_1
56: bipush        10
58: putfield      #76
61: aload_1
62: ldc           #10
64: invokevirtual #91
67: aload_1
68: bipush        52
70: putfield      #60
73: aload_1
74: ldc           #240
76: putfield      #55
79: new           #29
82: dup
83: invokespecial #30
86: ldc           #31
88: invokevirtual #32
91: iload_2
92: invokevirtual #33
95: ldc           #34
97: invokevirtual #32
100: iconst_1
101: invokevirtual #33
104: ldc           #31
106: invokevirtual #32
109: invokevirtual #35
112: iload_2
113: iconst_1
114: if_icmpne     121
117: iconst_1
118: goto          122
121: iconst_0
122: invokestatic  #36
125: new           #29
128: dup
129: invokespecial #30
132: ldc           #31
134: invokevirtual #32
137: aload_3
138: invokevirtual #32
141: ldc           #66
143: invokevirtual #32
146: invokevirtual #35
149: aload_3
150: ldc           #67
152: invokestatic  #53
155: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0218
Start line: 4630
End line: 0
Method source code: 
    public void test0218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0218");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str3 = helpFormatter0.getOptPrefix();
        java.util.Comparator comparator4 = helpFormatter0.optionComparator;
        java.lang.String str5 = helpFormatter0.getOptPrefix();
        helpFormatter0.setLongOptSeparator("                                                                                                    ");
        helpFormatter0.setDescPadding((int) (short) 0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "--" + "'", str2, "--");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "-" + "'", str3, "-");
        org.junit.Assert.assertNotNull(comparator4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "-" + "'", str5, "-");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #318
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: getfield      #55
42: astore_3
43: aload_1
44: invokevirtual #123
47: astore        4
49: aload_1
50: getfield      #47
53: astore        5
55: aload_1
56: invokevirtual #123
59: astore        6
61: aload_1
62: ldc           #240
64: invokevirtual #91
67: aload_1
68: iconst_0
69: invokevirtual #38
72: new           #29
75: dup
76: invokespecial #30
79: ldc           #31
81: invokevirtual #32
84: iload_2
85: invokevirtual #33
88: ldc           #34
90: invokevirtual #32
93: iconst_1
94: invokevirtual #33
97: ldc           #31
99: invokevirtual #32
102: invokevirtual #35
105: iload_2
106: iconst_1
107: if_icmpne     114
110: iconst_1
111: goto          115
114: iconst_0
115: invokestatic  #36
118: new           #29
121: dup
122: invokespecial #30
125: ldc           #31
127: invokevirtual #32
130: aload_3
131: invokevirtual #32
134: ldc           #52
136: invokevirtual #32
139: invokevirtual #35
142: aload_3
143: ldc           #44
145: invokestatic  #53
148: new           #29
151: dup
152: invokespecial #30
155: ldc           #31
157: invokevirtual #32
160: aload         4
162: invokevirtual #32
165: ldc           #66
167: invokevirtual #32
170: invokevirtual #35
173: aload         4
175: ldc           #67
177: invokestatic  #53
180: aload         5
182: invokestatic  #51
185: new           #29
188: dup
189: invokespecial #30
192: ldc           #31
194: invokevirtual #32
197: aload         6
199: invokevirtual #32
202: ldc           #66
204: invokevirtual #32
207: invokevirtual #35
210: aload         6
212: ldc           #67
214: invokestatic  #53
217: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0219
Start line: 4649
End line: 0
Method source code: 
    public void test0219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0219");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.lang.String str1 = helpFormatter0.defaultSyntaxPrefix;
        java.util.Comparator comparator2 = helpFormatter0.optionComparator;
        java.lang.String str3 = helpFormatter0.defaultArgName;
        java.util.Comparator comparator4 = helpFormatter0.optionComparator;
        helpFormatter0.defaultLeftPad = (byte) -1;
        java.io.PrintWriter printWriter7 = null;
        org.apache.commons.cli.Options options11 = null;
        try {
            helpFormatter0.printHelp(printWriter7, (-2), "   ", "", options11, 3, (int) (byte) 10, "arg");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "usage: " + "'", str1, "usage: ");
        org.junit.Assert.assertNotNull(comparator2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "arg" + "'", str3, "arg");
        org.junit.Assert.assertNotNull(comparator4);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #319
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: getfield      #97
37: astore_2
38: aload_1
39: getfield      #47
42: astore_3
43: aload_1
44: getfield      #77
47: astore        4
49: aload_1
50: getfield      #47
53: astore        5
55: aload_1
56: iconst_m1
57: putfield      #60
60: aconst_null
61: astore        6
63: aconst_null
64: astore        7
66: aload_1
67: aload         6
69: bipush        -2
71: ldc_w         #259
74: ldc           #10
76: aload         7
78: iconst_3
79: bipush        10
81: ldc           #79
83: invokevirtual #42
86: ldc           #178
88: invokestatic  #15
91: goto          96
94: astore        8
96: new           #29
99: dup
100: invokespecial #30
103: ldc           #31
105: invokevirtual #32
108: aload_2
109: invokevirtual #32
112: ldc           #99
114: invokevirtual #32
117: invokevirtual #35
120: aload_2
121: ldc           #12
123: invokestatic  #53
126: aload_3
127: invokestatic  #51
130: new           #29
133: dup
134: invokespecial #30
137: ldc           #31
139: invokevirtual #32
142: aload         4
144: invokevirtual #32
147: ldc           #78
149: invokevirtual #32
152: invokevirtual #35
155: aload         4
157: ldc           #79
159: invokestatic  #53
162: aload         5
164: invokestatic  #51
167: return
Exception table:
from    to  target type
66    91    94   Class java/lang/StringIndexOutOfBoundsException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0220
Start line: 4674
End line: 0
Method source code: 
    public void test0220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0220");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str3 = helpFormatter0.getOptPrefix();
        java.util.Comparator comparator4 = helpFormatter0.getOptionComparator();
        java.lang.String str5 = helpFormatter0.getOptPrefix();
        java.lang.String str6 = helpFormatter0.defaultLongOptPrefix;
        java.util.Comparator comparator7 = helpFormatter0.optionComparator;
        java.io.PrintWriter printWriter8 = null;
        org.apache.commons.cli.Options options11 = null;
        try {
            helpFormatter0.printUsage(printWriter8, 74, "hi!", options11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "--" + "'", str2, "--");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "-" + "'", str3, "-");
        org.junit.Assert.assertNotNull(comparator4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "-" + "'", str5, "-");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "--" + "'", str6, "--");
        org.junit.Assert.assertNotNull(comparator7);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #320
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: getfield      #55
42: astore_3
43: aload_1
44: invokevirtual #123
47: astore        4
49: aload_1
50: invokevirtual #106
53: astore        5
55: aload_1
56: invokevirtual #123
59: astore        6
61: aload_1
62: getfield      #55
65: astore        7
67: aload_1
68: getfield      #47
71: astore        8
73: aconst_null
74: astore        9
76: aconst_null
77: astore        10
79: aload_1
80: aload         9
82: bipush        74
84: ldc           #25
86: aload         10
88: invokevirtual #127
91: ldc           #14
93: invokestatic  #15
96: goto          101
99: astore        11
101: new           #29
104: dup
105: invokespecial #30
108: ldc           #31
110: invokevirtual #32
113: iload_2
114: invokevirtual #33
117: ldc           #34
119: invokevirtual #32
122: iconst_1
123: invokevirtual #33
126: ldc           #31
128: invokevirtual #32
131: invokevirtual #35
134: iload_2
135: iconst_1
136: if_icmpne     143
139: iconst_1
140: goto          144
143: iconst_0
144: invokestatic  #36
147: new           #29
150: dup
151: invokespecial #30
154: ldc           #31
156: invokevirtual #32
159: aload_3
160: invokevirtual #32
163: ldc           #52
165: invokevirtual #32
168: invokevirtual #35
171: aload_3
172: ldc           #44
174: invokestatic  #53
177: new           #29
180: dup
181: invokespecial #30
184: ldc           #31
186: invokevirtual #32
189: aload         4
191: invokevirtual #32
194: ldc           #66
196: invokevirtual #32
199: invokevirtual #35
202: aload         4
204: ldc           #67
206: invokestatic  #53
209: aload         5
211: invokestatic  #51
214: new           #29
217: dup
218: invokespecial #30
221: ldc           #31
223: invokevirtual #32
226: aload         6
228: invokevirtual #32
231: ldc           #66
233: invokevirtual #32
236: invokevirtual #35
239: aload         6
241: ldc           #67
243: invokestatic  #53
246: new           #29
249: dup
250: invokespecial #30
253: ldc           #31
255: invokevirtual #32
258: aload         7
260: invokevirtual #32
263: ldc           #52
265: invokevirtual #32
268: invokevirtual #35
271: aload         7
273: ldc           #44
275: invokestatic  #53
278: aload         8
280: invokestatic  #51
283: return
Exception table:
from    to  target type
79    96    99   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0221
Start line: 4704
End line: 0
Method source code: 
    public void test0221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0221");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        java.lang.String str6 = helpFormatter0.rtrim("");
        int int7 = helpFormatter0.getDescPadding();
        int int8 = helpFormatter0.getDescPadding();
        int int9 = helpFormatter0.getLeftPadding();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 3 + "'", int7 == 3);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 3 + "'", int8 == 3);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #321
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: getfield      #63
48: astore_3
49: aload_1
50: ldc           #10
52: invokevirtual #64
55: astore        4
57: aload_1
58: invokevirtual #118
61: istore        5
63: aload_1
64: invokevirtual #118
67: istore        6
69: aload_1
70: invokevirtual #22
73: istore        7
75: new           #29
78: dup
79: invokespecial #30
82: ldc           #31
84: invokevirtual #32
87: iload_2
88: invokevirtual #33
91: ldc           #34
93: invokevirtual #32
96: iconst_1
97: invokevirtual #33
100: ldc           #31
102: invokevirtual #32
105: invokevirtual #35
108: iload_2
109: iconst_1
110: if_icmpne     117
113: iconst_1
114: goto          118
117: iconst_0
118: invokestatic  #36
121: new           #29
124: dup
125: invokespecial #30
128: ldc           #31
130: invokevirtual #32
133: aload_3
134: invokevirtual #32
137: ldc           #66
139: invokevirtual #32
142: invokevirtual #35
145: aload_3
146: ldc           #67
148: invokestatic  #53
151: new           #29
154: dup
155: invokespecial #30
158: ldc           #31
160: invokevirtual #32
163: aload         4
165: invokevirtual #32
168: ldc           #68
170: invokevirtual #32
173: invokevirtual #35
176: aload         4
178: ldc           #10
180: invokestatic  #53
183: new           #29
186: dup
187: invokespecial #30
190: ldc           #31
192: invokevirtual #32
195: iload         5
197: invokevirtual #33
200: ldc           #34
202: invokevirtual #32
205: iconst_3
206: invokevirtual #33
209: ldc           #31
211: invokevirtual #32
214: invokevirtual #35
217: iload         5
219: iconst_3
220: if_icmpne     227
223: iconst_1
224: goto          228
227: iconst_0
228: invokestatic  #36
231: new           #29
234: dup
235: invokespecial #30
238: ldc           #31
240: invokevirtual #32
243: iload         6
245: invokevirtual #33
248: ldc           #34
250: invokevirtual #32
253: iconst_3
254: invokevirtual #33
257: ldc           #31
259: invokevirtual #32
262: invokevirtual #35
265: iload         6
267: iconst_3
268: if_icmpne     275
271: iconst_1
272: goto          276
275: iconst_0
276: invokestatic  #36
279: new           #29
282: dup
283: invokespecial #30
286: ldc           #31
288: invokevirtual #32
291: iload         7
293: invokevirtual #33
296: ldc           #34
298: invokevirtual #32
301: iconst_1
302: invokevirtual #33
305: ldc           #31
307: invokevirtual #32
310: invokevirtual #35
313: iload         7
315: iconst_1
316: if_icmpne     323
319: iconst_1
320: goto          324
323: iconst_0
324: invokestatic  #36
327: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0222
Start line: 4724
End line: 0
Method source code: 
    public void test0222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0222");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setLongOptPrefix(" ");
        helpFormatter0.defaultDescPad = (short) 10;
        helpFormatter0.setLongOptSeparator("");
        java.lang.String str11 = helpFormatter0.getLongOptPrefix();
        java.io.PrintWriter printWriter12 = null;
        org.apache.commons.cli.Options options16 = null;
        try {
            helpFormatter0.printHelp(printWriter12, (int) (short) 10, "", "                                                    ", options16, (int) '4', (int) (short) 100, "\n", false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: cmdLineSyntax not provided");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + " " + "'", str11, " ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #322
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: getfield      #63
48: astore_3
49: aload_1
50: ldc           #24
52: invokevirtual #49
55: aload_1
56: bipush        10
58: putfield      #76
61: aload_1
62: ldc           #10
64: invokevirtual #91
67: aload_1
68: invokevirtual #48
71: astore        4
73: aconst_null
74: astore        5
76: aconst_null
77: astore        6
79: aload_1
80: aload         5
82: bipush        10
84: ldc           #10
86: ldc_w         #313
89: aload         6
91: bipush        52
93: bipush        100
95: ldc           #65
97: iconst_0
98: invokevirtual #40
101: ldc           #27
103: invokestatic  #15
106: goto          111
109: astore        7
111: new           #29
114: dup
115: invokespecial #30
118: ldc           #31
120: invokevirtual #32
123: iload_2
124: invokevirtual #33
127: ldc           #34
129: invokevirtual #32
132: iconst_1
133: invokevirtual #33
136: ldc           #31
138: invokevirtual #32
141: invokevirtual #35
144: iload_2
145: iconst_1
146: if_icmpne     153
149: iconst_1
150: goto          154
153: iconst_0
154: invokestatic  #36
157: new           #29
160: dup
161: invokespecial #30
164: ldc           #31
166: invokevirtual #32
169: aload_3
170: invokevirtual #32
173: ldc           #66
175: invokevirtual #32
178: invokevirtual #35
181: aload_3
182: ldc           #67
184: invokestatic  #53
187: new           #29
190: dup
191: invokespecial #30
194: ldc           #31
196: invokevirtual #32
199: aload         4
201: invokevirtual #32
204: ldc           #88
206: invokevirtual #32
209: invokevirtual #35
212: aload         4
214: ldc           #24
216: invokestatic  #53
219: return
Exception table:
from    to  target type
79   106   109   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0223
Start line: 4750
End line: 0
Method source code: 
    public void test0223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0223");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.defaultDescPad = '4';
        java.io.PrintWriter printWriter6 = null;
        org.apache.commons.cli.Options options8 = null;
        try {
            helpFormatter0.printOptions(printWriter6, (int) (short) 0, options8, (int) (short) 100, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: null");
        } catch (java.lang.NegativeArraySizeException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #323
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: bipush        52
47: putfield      #76
50: aconst_null
51: astore_3
52: aconst_null
53: astore        4
55: aload_1
56: aload_3
57: iconst_0
58: aload         4
60: bipush        100
62: iconst_m1
63: invokevirtual #18
66: ldc           #19
68: invokestatic  #15
71: goto          76
74: astore        5
76: new           #29
79: dup
80: invokespecial #30
83: ldc           #31
85: invokevirtual #32
88: iload_2
89: invokevirtual #33
92: ldc           #34
94: invokevirtual #32
97: iconst_1
98: invokevirtual #33
101: ldc           #31
103: invokevirtual #32
106: invokevirtual #35
109: iload_2
110: iconst_1
111: if_icmpne     118
114: iconst_1
115: goto          119
118: iconst_0
119: invokestatic  #36
122: return
Exception table:
from    to  target type
55    71    74   Class java/lang/NegativeArraySizeException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0224
Start line: 4770
End line: 0
Method source code: 
    public void test0224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0224");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.getArgName();
        helpFormatter0.setSyntaxPrefix("usage: ");
        java.lang.String str5 = helpFormatter0.defaultSyntaxPrefix;
        java.lang.String str6 = helpFormatter0.defaultSyntaxPrefix;
        java.lang.StringBuffer stringBuffer7 = null;
        try {
            java.lang.StringBuffer stringBuffer11 = helpFormatter0.renderWrappedText(stringBuffer7, (int) '#', (int) '4', "-");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "arg" + "'", str2, "arg");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "usage: " + "'", str5, "usage: ");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "usage: " + "'", str6, "usage: ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #324
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: invokevirtual #104
42: astore_3
43: aload_1
44: ldc           #12
46: invokevirtual #39
49: aload_1
50: getfield      #97
53: astore        4
55: aload_1
56: getfield      #97
59: astore        5
61: aconst_null
62: astore        6
64: aload_1
65: aload         6
67: bipush        35
69: bipush        52
71: ldc           #67
73: invokevirtual #70
76: astore        7
78: ldc           #14
80: invokestatic  #15
83: goto          88
86: astore        7
88: new           #29
91: dup
92: invokespecial #30
95: ldc           #31
97: invokevirtual #32
100: iload_2
101: invokevirtual #33
104: ldc           #34
106: invokevirtual #32
109: iconst_1
110: invokevirtual #33
113: ldc           #31
115: invokevirtual #32
118: invokevirtual #35
121: iload_2
122: iconst_1
123: if_icmpne     130
126: iconst_1
127: goto          131
130: iconst_0
131: invokestatic  #36
134: new           #29
137: dup
138: invokespecial #30
141: ldc           #31
143: invokevirtual #32
146: aload_3
147: invokevirtual #32
150: ldc           #78
152: invokevirtual #32
155: invokevirtual #35
158: aload_3
159: ldc           #79
161: invokestatic  #53
164: new           #29
167: dup
168: invokespecial #30
171: ldc           #31
173: invokevirtual #32
176: aload         4
178: invokevirtual #32
181: ldc           #99
183: invokevirtual #32
186: invokevirtual #35
189: aload         4
191: ldc           #12
193: invokestatic  #53
196: new           #29
199: dup
200: invokespecial #30
203: ldc           #31
205: invokevirtual #32
208: aload         5
210: invokevirtual #32
213: ldc           #99
215: invokevirtual #32
218: invokevirtual #35
221: aload         5
223: ldc           #12
225: invokestatic  #53
228: return
Exception table:
from    to  target type
64    83    86   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0225
Start line: 4794
End line: 0
Method source code: 
    public void test0225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0225");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.defaultArgName;
        java.lang.String str3 = helpFormatter0.defaultNewLine;
        helpFormatter0.setDescPadding((int) ' ');
        helpFormatter0.defaultDescPad = (byte) -1;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "arg" + "'", str2, "arg");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\n" + "'", str3, "\n");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #325
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: getfield      #77
42: astore_3
43: aload_1
44: getfield      #23
47: astore        4
49: aload_1
50: bipush        32
52: invokevirtual #38
55: aload_1
56: iconst_m1
57: putfield      #76
60: new           #29
63: dup
64: invokespecial #30
67: ldc           #31
69: invokevirtual #32
72: iload_2
73: invokevirtual #33
76: ldc           #34
78: invokevirtual #32
81: iconst_1
82: invokevirtual #33
85: ldc           #31
87: invokevirtual #32
90: invokevirtual #35
93: iload_2
94: iconst_1
95: if_icmpne     102
98: iconst_1
99: goto          103
102: iconst_0
103: invokestatic  #36
106: new           #29
109: dup
110: invokespecial #30
113: ldc           #31
115: invokevirtual #32
118: aload_3
119: invokevirtual #32
122: ldc           #78
124: invokevirtual #32
127: invokevirtual #35
130: aload_3
131: ldc           #79
133: invokestatic  #53
136: new           #29
139: dup
140: invokespecial #30
143: ldc           #31
145: invokevirtual #32
148: aload         4
150: invokevirtual #32
153: ldc           #74
155: invokevirtual #32
158: invokevirtual #35
161: aload         4
163: ldc           #65
165: invokestatic  #53
168: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0226
Start line: 4809
End line: 0
Method source code: 
    public void test0226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0226");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str6 = helpFormatter0.getNewLine();
        java.util.Comparator comparator7 = helpFormatter0.getOptionComparator();
        org.apache.commons.cli.HelpFormatter helpFormatter8 = new org.apache.commons.cli.HelpFormatter();
        int int9 = helpFormatter8.getLeftPadding();
        helpFormatter8.defaultNewLine = "";
        java.lang.String str12 = helpFormatter8.defaultOptPrefix;
        helpFormatter8.setLongOptPrefix(" ");
        helpFormatter8.defaultDescPad = (short) 10;
        java.lang.String str17 = helpFormatter8.defaultArgName;
        java.util.Comparator comparator18 = helpFormatter8.optionComparator;
        helpFormatter0.setOptionComparator(comparator18);
        helpFormatter0.defaultSyntaxPrefix = "                                                                                                 ";
        try {
            java.lang.String str23 = helpFormatter0.createPadding((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: null");
        } catch (java.lang.NegativeArraySizeException e) {
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\n" + "'", str6, "\n");
        org.junit.Assert.assertNotNull(comparator7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "-" + "'", str12, "-");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "arg" + "'", str17, "arg");
        org.junit.Assert.assertNotNull(comparator18);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #326
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #10
36: invokevirtual #11
39: aload_1
40: ldc           #10
42: putfield      #55
45: aload_1
46: getfield      #55
49: astore_2
50: aload_1
51: invokevirtual #72
54: astore_3
55: aload_1
56: invokevirtual #106
59: astore        4
61: new           #8
64: dup
65: invokespecial #9
68: astore        5
70: aload         5
72: invokevirtual #22
75: istore        6
77: aload         5
79: ldc           #10
81: putfield      #23
84: aload         5
86: getfield      #63
89: astore        7
91: aload         5
93: ldc           #24
95: invokevirtual #49
98: aload         5
100: bipush        10
102: putfield      #76
105: aload         5
107: getfield      #77
110: astore        8
112: aload         5
114: getfield      #47
117: astore        9
119: aload_1
120: aload         9
122: invokevirtual #152
125: aload_1
126: ldc           #141
128: putfield      #97
131: aload_1
132: iconst_m1
133: invokevirtual #108
136: astore        10
138: ldc           #19
140: invokestatic  #15
143: goto          148
146: astore        10
148: new           #29
151: dup
152: invokespecial #30
155: ldc           #31
157: invokevirtual #32
160: aload_2
161: invokevirtual #32
164: ldc           #68
166: invokevirtual #32
169: invokevirtual #35
172: aload_2
173: ldc           #10
175: invokestatic  #53
178: new           #29
181: dup
182: invokespecial #30
185: ldc           #31
187: invokevirtual #32
190: aload_3
191: invokevirtual #32
194: ldc           #74
196: invokevirtual #32
199: invokevirtual #35
202: aload_3
203: ldc           #65
205: invokestatic  #53
208: aload         4
210: invokestatic  #51
213: new           #29
216: dup
217: invokespecial #30
220: ldc           #31
222: invokevirtual #32
225: iload         6
227: invokevirtual #33
230: ldc           #34
232: invokevirtual #32
235: iconst_1
236: invokevirtual #33
239: ldc           #31
241: invokevirtual #32
244: invokevirtual #35
247: iload         6
249: iconst_1
250: if_icmpne     257
253: iconst_1
254: goto          258
257: iconst_0
258: invokestatic  #36
261: new           #29
264: dup
265: invokespecial #30
268: ldc           #31
270: invokevirtual #32
273: aload         7
275: invokevirtual #32
278: ldc           #66
280: invokevirtual #32
283: invokevirtual #35
286: aload         7
288: ldc           #67
290: invokestatic  #53
293: new           #29
296: dup
297: invokespecial #30
300: ldc           #31
302: invokevirtual #32
305: aload         8
307: invokevirtual #32
310: ldc           #78
312: invokevirtual #32
315: invokevirtual #35
318: aload         8
320: ldc           #79
322: invokestatic  #53
325: aload         9
327: invokestatic  #51
330: return
Exception table:
from    to  target type
131   143   146   Class java/lang/NegativeArraySizeException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0227
Start line: 4845
End line: 0
Method source code: 
    public void test0227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0227");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.defaultArgName;
        java.lang.String str3 = helpFormatter0.defaultNewLine;
        helpFormatter0.setDescPadding((int) ' ');
        java.lang.Class<?> wildcardClass6 = helpFormatter0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "arg" + "'", str2, "arg");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\n" + "'", str3, "\n");
        org.junit.Assert.assertNotNull(wildcardClass6);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #327
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: getfield      #77
42: astore_3
43: aload_1
44: getfield      #23
47: astore        4
49: aload_1
50: bipush        32
52: invokevirtual #38
55: aload_1
56: invokevirtual #56
59: astore        5
61: new           #29
64: dup
65: invokespecial #30
68: ldc           #31
70: invokevirtual #32
73: iload_2
74: invokevirtual #33
77: ldc           #34
79: invokevirtual #32
82: iconst_1
83: invokevirtual #33
86: ldc           #31
88: invokevirtual #32
91: invokevirtual #35
94: iload_2
95: iconst_1
96: if_icmpne     103
99: iconst_1
100: goto          104
103: iconst_0
104: invokestatic  #36
107: new           #29
110: dup
111: invokespecial #30
114: ldc           #31
116: invokevirtual #32
119: aload_3
120: invokevirtual #32
123: ldc           #78
125: invokevirtual #32
128: invokevirtual #35
131: aload_3
132: ldc           #79
134: invokestatic  #53
137: new           #29
140: dup
141: invokespecial #30
144: ldc           #31
146: invokevirtual #32
149: aload         4
151: invokevirtual #32
154: ldc           #74
156: invokevirtual #32
159: invokevirtual #35
162: aload         4
164: ldc           #65
166: invokestatic  #53
169: aload         5
171: invokestatic  #51
174: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0228
Start line: 4861
End line: 0
Method source code: 
    public void test0228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0228");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        int int6 = helpFormatter0.getLeftPadding();
        helpFormatter0.setLongOptSeparator("\n");
        java.lang.String str9 = helpFormatter0.getLongOptPrefix();
        java.lang.String str10 = helpFormatter0.getLongOptPrefix();
        java.lang.StringBuffer stringBuffer11 = null;
        org.apache.commons.cli.Options options13 = null;
        try {
            java.lang.StringBuffer stringBuffer16 = helpFormatter0.renderOptions(stringBuffer11, 100, options13, 0, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #328
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #10
36: invokevirtual #11
39: aload_1
40: ldc           #10
42: putfield      #55
45: aload_1
46: getfield      #55
49: astore_2
50: aload_1
51: invokevirtual #22
54: istore_3
55: aload_1
56: ldc           #65
58: invokevirtual #91
61: aload_1
62: invokevirtual #48
65: astore        4
67: aload_1
68: invokevirtual #48
71: astore        5
73: aconst_null
74: astore        6
76: aconst_null
77: astore        7
79: aload_1
80: aload         6
82: bipush        100
84: aload         7
86: iconst_0
87: iconst_0
88: invokevirtual #98
91: astore        8
93: ldc           #14
95: invokestatic  #15
98: goto          103
101: astore        8
103: new           #29
106: dup
107: invokespecial #30
110: ldc           #31
112: invokevirtual #32
115: aload_2
116: invokevirtual #32
119: ldc           #68
121: invokevirtual #32
124: invokevirtual #35
127: aload_2
128: ldc           #10
130: invokestatic  #53
133: new           #29
136: dup
137: invokespecial #30
140: ldc           #31
142: invokevirtual #32
145: iload_3
146: invokevirtual #33
149: ldc           #34
151: invokevirtual #32
154: iconst_1
155: invokevirtual #33
158: ldc           #31
160: invokevirtual #32
163: invokevirtual #35
166: iload_3
167: iconst_1
168: if_icmpne     175
171: iconst_1
172: goto          176
175: iconst_0
176: invokestatic  #36
179: new           #29
182: dup
183: invokespecial #30
186: ldc           #31
188: invokevirtual #32
191: aload         4
193: invokevirtual #32
196: ldc           #68
198: invokevirtual #32
201: invokevirtual #35
204: aload         4
206: ldc           #10
208: invokestatic  #53
211: new           #29
214: dup
215: invokespecial #30
218: ldc           #31
220: invokevirtual #32
223: aload         5
225: invokevirtual #32
228: ldc           #68
230: invokevirtual #32
233: invokevirtual #35
236: aload         5
238: ldc           #10
240: invokestatic  #53
243: return
Exception table:
from    to  target type
79    98   101   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0229
Start line: 4888
End line: 0
Method source code: 
    public void test0229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0229");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str6 = helpFormatter0.getNewLine();
        java.util.Comparator comparator7 = helpFormatter0.getOptionComparator();
        helpFormatter0.setDescPadding(3);
        int int10 = helpFormatter0.defaultLeftPad;
        int int11 = helpFormatter0.getWidth();
        org.apache.commons.cli.Options options13 = null;
        try {
            helpFormatter0.printHelp("arg", options13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\n" + "'", str6, "\n");
        org.junit.Assert.assertNotNull(comparator7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 74 + "'", int11 == 74);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #329
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #10
36: invokevirtual #11
39: aload_1
40: ldc           #10
42: putfield      #55
45: aload_1
46: getfield      #55
49: astore_2
50: aload_1
51: invokevirtual #72
54: astore_3
55: aload_1
56: invokevirtual #106
59: astore        4
61: aload_1
62: iconst_3
63: invokevirtual #38
66: aload_1
67: getfield      #60
70: istore        5
72: aload_1
73: invokevirtual #129
76: istore        6
78: aconst_null
79: astore        7
81: aload_1
82: ldc           #79
84: aload         7
86: invokevirtual #50
89: ldc           #14
91: invokestatic  #15
94: goto          99
97: astore        8
99: new           #29
102: dup
103: invokespecial #30
106: ldc           #31
108: invokevirtual #32
111: aload_2
112: invokevirtual #32
115: ldc           #68
117: invokevirtual #32
120: invokevirtual #35
123: aload_2
124: ldc           #10
126: invokestatic  #53
129: new           #29
132: dup
133: invokespecial #30
136: ldc           #31
138: invokevirtual #32
141: aload_3
142: invokevirtual #32
145: ldc           #74
147: invokevirtual #32
150: invokevirtual #35
153: aload_3
154: ldc           #65
156: invokestatic  #53
159: aload         4
161: invokestatic  #51
164: new           #29
167: dup
168: invokespecial #30
171: ldc           #31
173: invokevirtual #32
176: iload         5
178: invokevirtual #33
181: ldc           #34
183: invokevirtual #32
186: iconst_1
187: invokevirtual #33
190: ldc           #31
192: invokevirtual #32
195: invokevirtual #35
198: iload         5
200: iconst_1
201: if_icmpne     208
204: iconst_1
205: goto          209
208: iconst_0
209: invokestatic  #36
212: new           #29
215: dup
216: invokespecial #30
219: ldc           #31
221: invokevirtual #32
224: iload         6
226: invokevirtual #33
229: ldc           #34
231: invokevirtual #32
234: bipush        74
236: invokevirtual #33
239: ldc           #31
241: invokevirtual #32
244: invokevirtual #35
247: iload         6
249: bipush        74
251: if_icmpne     258
254: iconst_1
255: goto          259
258: iconst_0
259: invokestatic  #36
262: return
Exception table:
from    to  target type
81    94    97   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0230
Start line: 4916
End line: 0
Method source code: 
    public void test0230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0230");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.defaultLongOptPrefix;
        helpFormatter0.defaultSyntaxPrefix = "--";
        java.lang.String str5 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.defaultWidth = (short) 1;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "--" + "'", str2, "--");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "-" + "'", str5, "-");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #330
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: getfield      #55
42: astore_3
43: aload_1
44: ldc           #44
46: putfield      #97
49: aload_1
50: getfield      #63
53: astore        4
55: aload_1
56: iconst_1
57: putfield      #110
60: new           #29
63: dup
64: invokespecial #30
67: ldc           #31
69: invokevirtual #32
72: iload_2
73: invokevirtual #33
76: ldc           #34
78: invokevirtual #32
81: iconst_1
82: invokevirtual #33
85: ldc           #31
87: invokevirtual #32
90: invokevirtual #35
93: iload_2
94: iconst_1
95: if_icmpne     102
98: iconst_1
99: goto          103
102: iconst_0
103: invokestatic  #36
106: new           #29
109: dup
110: invokespecial #30
113: ldc           #31
115: invokevirtual #32
118: aload_3
119: invokevirtual #32
122: ldc           #52
124: invokevirtual #32
127: invokevirtual #35
130: aload_3
131: ldc           #44
133: invokestatic  #53
136: new           #29
139: dup
140: invokespecial #30
143: ldc           #31
145: invokevirtual #32
148: aload         4
150: invokevirtual #32
153: ldc           #66
155: invokevirtual #32
158: invokevirtual #35
161: aload         4
163: ldc           #67
165: invokestatic  #53
168: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0231
Start line: 4931
End line: 0
Method source code: 
    public void test0231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0231");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        java.lang.String str6 = helpFormatter0.rtrim("");
        java.lang.String str8 = helpFormatter0.rtrim("-");
        helpFormatter0.defaultOptPrefix = "--";
        helpFormatter0.defaultDescPad = 0;
        helpFormatter0.setWidth((-1));
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "-" + "'", str8, "-");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #331
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: getfield      #63
48: astore_3
49: aload_1
50: ldc           #10
52: invokevirtual #64
55: astore        4
57: aload_1
58: ldc           #67
60: invokevirtual #64
63: astore        5
65: aload_1
66: ldc           #44
68: putfield      #63
71: aload_1
72: iconst_0
73: putfield      #76
76: aload_1
77: iconst_m1
78: invokevirtual #156
81: new           #29
84: dup
85: invokespecial #30
88: ldc           #31
90: invokevirtual #32
93: iload_2
94: invokevirtual #33
97: ldc           #34
99: invokevirtual #32
102: iconst_1
103: invokevirtual #33
106: ldc           #31
108: invokevirtual #32
111: invokevirtual #35
114: iload_2
115: iconst_1
116: if_icmpne     123
119: iconst_1
120: goto          124
123: iconst_0
124: invokestatic  #36
127: new           #29
130: dup
131: invokespecial #30
134: ldc           #31
136: invokevirtual #32
139: aload_3
140: invokevirtual #32
143: ldc           #66
145: invokevirtual #32
148: invokevirtual #35
151: aload_3
152: ldc           #67
154: invokestatic  #53
157: new           #29
160: dup
161: invokespecial #30
164: ldc           #31
166: invokevirtual #32
169: aload         4
171: invokevirtual #32
174: ldc           #68
176: invokevirtual #32
179: invokevirtual #35
182: aload         4
184: ldc           #10
186: invokestatic  #53
189: new           #29
192: dup
193: invokespecial #30
196: ldc           #31
198: invokevirtual #32
201: aload         5
203: invokevirtual #32
206: ldc           #66
208: invokevirtual #32
211: invokevirtual #35
214: aload         5
216: ldc           #67
218: invokestatic  #53
221: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0232
Start line: 4950
End line: 0
Method source code: 
    public void test0232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0232");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        helpFormatter0.setSyntaxPrefix(" ");
        int int8 = helpFormatter0.defaultLeftPad;
        helpFormatter0.setLeftPadding(1);
        java.lang.String str11 = helpFormatter0.getOptPrefix();
        java.lang.Class<?> wildcardClass12 = helpFormatter0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "-" + "'", str11, "-");
        org.junit.Assert.assertNotNull(wildcardClass12);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #332
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: bipush        10
47: invokevirtual #38
50: aload_1
51: ldc           #24
53: invokevirtual #39
56: aload_1
57: getfield      #60
60: istore_3
61: aload_1
62: iconst_1
63: invokevirtual #193
66: aload_1
67: invokevirtual #123
70: astore        4
72: aload_1
73: invokevirtual #56
76: astore        5
78: new           #29
81: dup
82: invokespecial #30
85: ldc           #31
87: invokevirtual #32
90: iload_2
91: invokevirtual #33
94: ldc           #34
96: invokevirtual #32
99: iconst_1
100: invokevirtual #33
103: ldc           #31
105: invokevirtual #32
108: invokevirtual #35
111: iload_2
112: iconst_1
113: if_icmpne     120
116: iconst_1
117: goto          121
120: iconst_0
121: invokestatic  #36
124: new           #29
127: dup
128: invokespecial #30
131: ldc           #31
133: invokevirtual #32
136: iload_3
137: invokevirtual #33
140: ldc           #34
142: invokevirtual #32
145: iconst_1
146: invokevirtual #33
149: ldc           #31
151: invokevirtual #32
154: invokevirtual #35
157: iload_3
158: iconst_1
159: if_icmpne     166
162: iconst_1
163: goto          167
166: iconst_0
167: invokestatic  #36
170: new           #29
173: dup
174: invokespecial #30
177: ldc           #31
179: invokevirtual #32
182: aload         4
184: invokevirtual #32
187: ldc           #66
189: invokevirtual #32
192: invokevirtual #35
195: aload         4
197: ldc           #67
199: invokestatic  #53
202: aload         5
204: invokestatic  #51
207: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0233
Start line: 4969
End line: 0
Method source code: 
    public void test0233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0233");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        int int2 = helpFormatter0.getWidth();
        java.io.PrintWriter printWriter3 = null;
        org.apache.commons.cli.Options options6 = null;
        try {
            helpFormatter0.printUsage(printWriter3, 3, "", options6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 74 + "'", int2 == 74);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #333
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: invokevirtual #129
42: istore_3
43: aconst_null
44: astore        4
46: aconst_null
47: astore        5
49: aload_1
50: aload         4
52: iconst_3
53: ldc           #10
55: aload         5
57: invokevirtual #127
60: ldc           #14
62: invokestatic  #15
65: goto          70
68: astore        6
70: new           #29
73: dup
74: invokespecial #30
77: ldc           #31
79: invokevirtual #32
82: iload_2
83: invokevirtual #33
86: ldc           #34
88: invokevirtual #32
91: iconst_1
92: invokevirtual #33
95: ldc           #31
97: invokevirtual #32
100: invokevirtual #35
103: iload_2
104: iconst_1
105: if_icmpne     112
108: iconst_1
109: goto          113
112: iconst_0
113: invokestatic  #36
116: new           #29
119: dup
120: invokespecial #30
123: ldc           #31
125: invokevirtual #32
128: iload_3
129: invokevirtual #33
132: ldc           #34
134: invokevirtual #32
137: bipush        74
139: invokevirtual #33
142: ldc           #31
144: invokevirtual #32
147: invokevirtual #35
150: iload_3
151: bipush        74
153: if_icmpne     160
156: iconst_1
157: goto          161
160: iconst_0
161: invokestatic  #36
164: return
Exception table:
from    to  target type
49    65    68   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0234
Start line: 4989
End line: 0
Method source code: 
    public void test0234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0234");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.defaultDescPad = '4';
        helpFormatter0.setNewLine("");
        helpFormatter0.setSyntaxPrefix("");
        java.lang.String str10 = helpFormatter0.getSyntaxPrefix();
        java.lang.String str11 = helpFormatter0.getNewLine();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #334
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: bipush        52
47: putfield      #76
50: aload_1
51: ldc           #10
53: invokevirtual #131
56: aload_1
57: ldc           #10
59: invokevirtual #39
62: aload_1
63: invokevirtual #102
66: astore_3
67: aload_1
68: invokevirtual #72
71: astore        4
73: new           #29
76: dup
77: invokespecial #30
80: ldc           #31
82: invokevirtual #32
85: iload_2
86: invokevirtual #33
89: ldc           #34
91: invokevirtual #32
94: iconst_1
95: invokevirtual #33
98: ldc           #31
100: invokevirtual #32
103: invokevirtual #35
106: iload_2
107: iconst_1
108: if_icmpne     115
111: iconst_1
112: goto          116
115: iconst_0
116: invokestatic  #36
119: new           #29
122: dup
123: invokespecial #30
126: ldc           #31
128: invokevirtual #32
131: aload_3
132: invokevirtual #32
135: ldc           #68
137: invokevirtual #32
140: invokevirtual #35
143: aload_3
144: ldc           #10
146: invokestatic  #53
149: new           #29
152: dup
153: invokespecial #30
156: ldc           #31
158: invokevirtual #32
161: aload         4
163: invokevirtual #32
166: ldc           #68
168: invokevirtual #32
171: invokevirtual #35
174: aload         4
176: ldc           #10
178: invokestatic  #53
181: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0235
Start line: 5006
End line: 0
Method source code: 
    public void test0235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0235");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        java.lang.String str6 = helpFormatter0.rtrim("");
        int int7 = helpFormatter0.getDescPadding();
        int int8 = helpFormatter0.getDescPadding();
        java.lang.String str9 = helpFormatter0.getArgName();
        helpFormatter0.setDescPadding(0);
        int int12 = helpFormatter0.defaultDescPad;
        helpFormatter0.defaultWidth = 3;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 3 + "'", int7 == 3);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 3 + "'", int8 == 3);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "arg" + "'", str9, "arg");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #335
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: getfield      #63
48: astore_3
49: aload_1
50: ldc           #10
52: invokevirtual #64
55: astore        4
57: aload_1
58: invokevirtual #118
61: istore        5
63: aload_1
64: invokevirtual #118
67: istore        6
69: aload_1
70: invokevirtual #104
73: astore        7
75: aload_1
76: iconst_0
77: invokevirtual #38
80: aload_1
81: getfield      #76
84: istore        8
86: aload_1
87: iconst_3
88: putfield      #110
91: new           #29
94: dup
95: invokespecial #30
98: ldc           #31
100: invokevirtual #32
103: iload_2
104: invokevirtual #33
107: ldc           #34
109: invokevirtual #32
112: iconst_1
113: invokevirtual #33
116: ldc           #31
118: invokevirtual #32
121: invokevirtual #35
124: iload_2
125: iconst_1
126: if_icmpne     133
129: iconst_1
130: goto          134
133: iconst_0
134: invokestatic  #36
137: new           #29
140: dup
141: invokespecial #30
144: ldc           #31
146: invokevirtual #32
149: aload_3
150: invokevirtual #32
153: ldc           #66
155: invokevirtual #32
158: invokevirtual #35
161: aload_3
162: ldc           #67
164: invokestatic  #53
167: new           #29
170: dup
171: invokespecial #30
174: ldc           #31
176: invokevirtual #32
179: aload         4
181: invokevirtual #32
184: ldc           #68
186: invokevirtual #32
189: invokevirtual #35
192: aload         4
194: ldc           #10
196: invokestatic  #53
199: new           #29
202: dup
203: invokespecial #30
206: ldc           #31
208: invokevirtual #32
211: iload         5
213: invokevirtual #33
216: ldc           #34
218: invokevirtual #32
221: iconst_3
222: invokevirtual #33
225: ldc           #31
227: invokevirtual #32
230: invokevirtual #35
233: iload         5
235: iconst_3
236: if_icmpne     243
239: iconst_1
240: goto          244
243: iconst_0
244: invokestatic  #36
247: new           #29
250: dup
251: invokespecial #30
254: ldc           #31
256: invokevirtual #32
259: iload         6
261: invokevirtual #33
264: ldc           #34
266: invokevirtual #32
269: iconst_3
270: invokevirtual #33
273: ldc           #31
275: invokevirtual #32
278: invokevirtual #35
281: iload         6
283: iconst_3
284: if_icmpne     291
287: iconst_1
288: goto          292
291: iconst_0
292: invokestatic  #36
295: new           #29
298: dup
299: invokespecial #30
302: ldc           #31
304: invokevirtual #32
307: aload         7
309: invokevirtual #32
312: ldc           #78
314: invokevirtual #32
317: invokevirtual #35
320: aload         7
322: ldc           #79
324: invokestatic  #53
327: new           #29
330: dup
331: invokespecial #30
334: ldc           #31
336: invokevirtual #32
339: iload         8
341: invokevirtual #33
344: ldc           #34
346: invokevirtual #32
349: iconst_0
350: invokevirtual #33
353: ldc           #31
355: invokevirtual #32
358: invokevirtual #35
361: iload         8
363: ifne          370
366: iconst_1
367: goto          371
370: iconst_0
371: invokestatic  #36
374: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0236
Start line: 5030
End line: 0
Method source code: 
    public void test0236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0236");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        helpFormatter0.defaultArgName = "hi!";
        java.lang.String str9 = helpFormatter0.createPadding((int) (byte) 10);
        java.lang.String str10 = helpFormatter0.getLongOptPrefix();
        java.lang.String str11 = helpFormatter0.getLongOptPrefix();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "          " + "'", str9, "          ");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "--" + "'", str10, "--");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "--" + "'", str11, "--");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #336
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: bipush        10
47: invokevirtual #38
50: aload_1
51: ldc           #25
53: putfield      #77
56: aload_1
57: bipush        10
59: invokevirtual #108
62: astore_3
63: aload_1
64: invokevirtual #48
67: astore        4
69: aload_1
70: invokevirtual #48
73: astore        5
75: new           #29
78: dup
79: invokespecial #30
82: ldc           #31
84: invokevirtual #32
87: iload_2
88: invokevirtual #33
91: ldc           #34
93: invokevirtual #32
96: iconst_1
97: invokevirtual #33
100: ldc           #31
102: invokevirtual #32
105: invokevirtual #35
108: iload_2
109: iconst_1
110: if_icmpne     117
113: iconst_1
114: goto          118
117: iconst_0
118: invokestatic  #36
121: new           #29
124: dup
125: invokespecial #30
128: ldc           #31
130: invokevirtual #32
133: aload_3
134: invokevirtual #32
137: ldc           #204
139: invokevirtual #32
142: invokevirtual #35
145: aload_3
146: ldc           #114
148: invokestatic  #53
151: new           #29
154: dup
155: invokespecial #30
158: ldc           #31
160: invokevirtual #32
163: aload         4
165: invokevirtual #32
168: ldc           #52
170: invokevirtual #32
173: invokevirtual #35
176: aload         4
178: ldc           #44
180: invokestatic  #53
183: new           #29
186: dup
187: invokespecial #30
190: ldc           #31
192: invokevirtual #32
195: aload         5
197: invokevirtual #32
200: ldc           #52
202: invokevirtual #32
205: invokevirtual #35
208: aload         5
210: ldc           #44
212: invokestatic  #53
215: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0237
Start line: 5048
End line: 0
Method source code: 
    public void test0237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0237");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        java.lang.String str6 = helpFormatter0.getLongOptSeparator();
        java.lang.String str7 = helpFormatter0.getLongOptSeparator();
        java.io.PrintWriter printWriter8 = null;
        org.apache.commons.cli.Options options12 = null;
        try {
            helpFormatter0.printHelp(printWriter8, (int) (short) 10, "usage: ", "arg", options12, (int) (short) 1, 52, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + " " + "'", str6, " ");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + " " + "'", str7, " ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #337
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: bipush        10
47: invokevirtual #38
50: aload_1
51: invokevirtual #86
54: astore_3
55: aload_1
56: invokevirtual #86
59: astore        4
61: aconst_null
62: astore        5
64: aconst_null
65: astore        6
67: aload_1
68: aload         5
70: bipush        10
72: ldc           #12
74: ldc           #79
76: aload         6
78: iconst_1
79: bipush        52
81: ldc           #10
83: invokevirtual #42
86: ldc           #14
88: invokestatic  #15
91: goto          96
94: astore        7
96: new           #29
99: dup
100: invokespecial #30
103: ldc           #31
105: invokevirtual #32
108: iload_2
109: invokevirtual #33
112: ldc           #34
114: invokevirtual #32
117: iconst_1
118: invokevirtual #33
121: ldc           #31
123: invokevirtual #32
126: invokevirtual #35
129: iload_2
130: iconst_1
131: if_icmpne     138
134: iconst_1
135: goto          139
138: iconst_0
139: invokestatic  #36
142: new           #29
145: dup
146: invokespecial #30
149: ldc           #31
151: invokevirtual #32
154: aload_3
155: invokevirtual #32
158: ldc           #88
160: invokevirtual #32
163: invokevirtual #35
166: aload_3
167: ldc           #24
169: invokestatic  #53
172: new           #29
175: dup
176: invokespecial #30
179: ldc           #31
181: invokevirtual #32
184: aload         4
186: invokevirtual #32
189: ldc           #88
191: invokevirtual #32
194: invokevirtual #35
197: aload         4
199: ldc           #24
201: invokestatic  #53
204: return
Exception table:
from    to  target type
67    91    94   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0238
Start line: 5072
End line: 0
Method source code: 
    public void test0238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0238");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        java.lang.String str6 = helpFormatter0.rtrim("");
        java.lang.String str8 = helpFormatter0.rtrim("-");
        java.lang.String str10 = helpFormatter0.rtrim("-");
        java.io.PrintWriter printWriter11 = null;
        org.apache.commons.cli.Options options14 = null;
        try {
            helpFormatter0.printUsage(printWriter11, (int) (short) 1, " ", options14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "-" + "'", str8, "-");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "-" + "'", str10, "-");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #338
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: getfield      #63
48: astore_3
49: aload_1
50: ldc           #10
52: invokevirtual #64
55: astore        4
57: aload_1
58: ldc           #67
60: invokevirtual #64
63: astore        5
65: aload_1
66: ldc           #67
68: invokevirtual #64
71: astore        6
73: aconst_null
74: astore        7
76: aconst_null
77: astore        8
79: aload_1
80: aload         7
82: iconst_1
83: ldc           #24
85: aload         8
87: invokevirtual #127
90: ldc           #14
92: invokestatic  #15
95: goto          100
98: astore        9
100: new           #29
103: dup
104: invokespecial #30
107: ldc           #31
109: invokevirtual #32
112: iload_2
113: invokevirtual #33
116: ldc           #34
118: invokevirtual #32
121: iconst_1
122: invokevirtual #33
125: ldc           #31
127: invokevirtual #32
130: invokevirtual #35
133: iload_2
134: iconst_1
135: if_icmpne     142
138: iconst_1
139: goto          143
142: iconst_0
143: invokestatic  #36
146: new           #29
149: dup
150: invokespecial #30
153: ldc           #31
155: invokevirtual #32
158: aload_3
159: invokevirtual #32
162: ldc           #66
164: invokevirtual #32
167: invokevirtual #35
170: aload_3
171: ldc           #67
173: invokestatic  #53
176: new           #29
179: dup
180: invokespecial #30
183: ldc           #31
185: invokevirtual #32
188: aload         4
190: invokevirtual #32
193: ldc           #68
195: invokevirtual #32
198: invokevirtual #35
201: aload         4
203: ldc           #10
205: invokestatic  #53
208: new           #29
211: dup
212: invokespecial #30
215: ldc           #31
217: invokevirtual #32
220: aload         5
222: invokevirtual #32
225: ldc           #66
227: invokevirtual #32
230: invokevirtual #35
233: aload         5
235: ldc           #67
237: invokestatic  #53
240: new           #29
243: dup
244: invokespecial #30
247: ldc           #31
249: invokevirtual #32
252: aload         6
254: invokevirtual #32
257: ldc           #66
259: invokevirtual #32
262: invokevirtual #35
265: aload         6
267: ldc           #67
269: invokestatic  #53
272: return
Exception table:
from    to  target type
79    95    98   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0239
Start line: 5099
End line: 0
Method source code: 
    public void test0239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0239");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.util.Comparator comparator1 = helpFormatter0.optionComparator;
        java.lang.String str3 = helpFormatter0.rtrim("");
        helpFormatter0.setLongOptSeparator(" ");
        helpFormatter0.defaultArgName = "                                                                                                 ";
        org.junit.Assert.assertNotNull(comparator1);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #339
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: getfield      #47
37: astore_2
38: aload_1
39: ldc           #10
41: invokevirtual #64
44: astore_3
45: aload_1
46: ldc           #24
48: invokevirtual #91
51: aload_1
52: ldc           #141
54: putfield      #77
57: aload_2
58: invokestatic  #51
61: new           #29
64: dup
65: invokespecial #30
68: ldc           #31
70: invokevirtual #32
73: aload_3
74: invokevirtual #32
77: ldc           #68
79: invokevirtual #32
82: invokevirtual #35
85: aload_3
86: ldc           #10
88: invokestatic  #53
91: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0240
Start line: 5112
End line: 0
Method source code: 
    public void test0240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0240");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str6 = helpFormatter0.getNewLine();
        helpFormatter0.setSyntaxPrefix(" ");
        java.lang.String str9 = helpFormatter0.defaultSyntaxPrefix;
        org.apache.commons.cli.HelpFormatter helpFormatter10 = new org.apache.commons.cli.HelpFormatter();
        java.lang.String str11 = helpFormatter10.defaultSyntaxPrefix;
        java.util.Comparator comparator12 = helpFormatter10.optionComparator;
        helpFormatter0.optionComparator = comparator12;
        java.io.PrintWriter printWriter14 = null;
        org.apache.commons.cli.Options options18 = null;
        try {
            helpFormatter0.printHelp(printWriter14, (int) (byte) 1, "--", "-", options18, (int) '#', (int) (short) 1, "                                                                                                    ", true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\n" + "'", str6, "\n");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + " " + "'", str9, " ");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "usage: " + "'", str11, "usage: ");
        org.junit.Assert.assertNotNull(comparator12);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #340
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #10
36: invokevirtual #11
39: aload_1
40: ldc           #10
42: putfield      #55
45: aload_1
46: getfield      #55
49: astore_2
50: aload_1
51: invokevirtual #72
54: astore_3
55: aload_1
56: ldc           #24
58: invokevirtual #39
61: aload_1
62: getfield      #97
65: astore        4
67: new           #8
70: dup
71: invokespecial #9
74: astore        5
76: aload         5
78: getfield      #97
81: astore        6
83: aload         5
85: getfield      #47
88: astore        7
90: aload_1
91: aload         7
93: putfield      #47
96: aconst_null
97: astore        8
99: aconst_null
100: astore        9
102: aload_1
103: aload         8
105: iconst_1
106: ldc           #44
108: ldc           #67
110: aload         9
112: bipush        35
114: iconst_1
115: ldc           #240
117: iconst_1
118: invokevirtual #40
121: ldc           #14
123: invokestatic  #15
126: goto          131
129: astore        10
131: new           #29
134: dup
135: invokespecial #30
138: ldc           #31
140: invokevirtual #32
143: aload_2
144: invokevirtual #32
147: ldc           #68
149: invokevirtual #32
152: invokevirtual #35
155: aload_2
156: ldc           #10
158: invokestatic  #53
161: new           #29
164: dup
165: invokespecial #30
168: ldc           #31
170: invokevirtual #32
173: aload_3
174: invokevirtual #32
177: ldc           #74
179: invokevirtual #32
182: invokevirtual #35
185: aload_3
186: ldc           #65
188: invokestatic  #53
191: new           #29
194: dup
195: invokespecial #30
198: ldc           #31
200: invokevirtual #32
203: aload         4
205: invokevirtual #32
208: ldc           #88
210: invokevirtual #32
213: invokevirtual #35
216: aload         4
218: ldc           #24
220: invokestatic  #53
223: new           #29
226: dup
227: invokespecial #30
230: ldc           #31
232: invokevirtual #32
235: aload         6
237: invokevirtual #32
240: ldc           #99
242: invokevirtual #32
245: invokevirtual #35
248: aload         6
250: ldc           #12
252: invokestatic  #53
255: aload         7
257: invokestatic  #51
260: return
Exception table:
from    to  target type
102   126   129   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0241
Start line: 5143
End line: 0
Method source code: 
    public void test0241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0241");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setLongOptPrefix(" ");
        java.lang.String str7 = helpFormatter0.getLongOptPrefix();
        java.lang.String str8 = helpFormatter0.defaultNewLine;
        java.lang.String str9 = helpFormatter0.defaultLongOptPrefix;
        org.apache.commons.cli.Options options12 = null;
        try {
            helpFormatter0.printHelp("--", "--", options12, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + " " + "'", str7, " ");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + " " + "'", str9, " ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #341
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: getfield      #63
48: astore_3
49: aload_1
50: ldc           #24
52: invokevirtual #49
55: aload_1
56: invokevirtual #48
59: astore        4
61: aload_1
62: getfield      #23
65: astore        5
67: aload_1
68: getfield      #55
71: astore        6
73: aconst_null
74: astore        7
76: aload_1
77: ldc           #44
79: ldc           #44
81: aload         7
83: ldc           #10
85: invokevirtual #13
88: ldc           #14
90: invokestatic  #15
93: goto          98
96: astore        8
98: new           #29
101: dup
102: invokespecial #30
105: ldc           #31
107: invokevirtual #32
110: iload_2
111: invokevirtual #33
114: ldc           #34
116: invokevirtual #32
119: iconst_1
120: invokevirtual #33
123: ldc           #31
125: invokevirtual #32
128: invokevirtual #35
131: iload_2
132: iconst_1
133: if_icmpne     140
136: iconst_1
137: goto          141
140: iconst_0
141: invokestatic  #36
144: new           #29
147: dup
148: invokespecial #30
151: ldc           #31
153: invokevirtual #32
156: aload_3
157: invokevirtual #32
160: ldc           #66
162: invokevirtual #32
165: invokevirtual #35
168: aload_3
169: ldc           #67
171: invokestatic  #53
174: new           #29
177: dup
178: invokespecial #30
181: ldc           #31
183: invokevirtual #32
186: aload         4
188: invokevirtual #32
191: ldc           #88
193: invokevirtual #32
196: invokevirtual #35
199: aload         4
201: ldc           #24
203: invokestatic  #53
206: new           #29
209: dup
210: invokespecial #30
213: ldc           #31
215: invokevirtual #32
218: aload         5
220: invokevirtual #32
223: ldc           #68
225: invokevirtual #32
228: invokevirtual #35
231: aload         5
233: ldc           #10
235: invokestatic  #53
238: new           #29
241: dup
242: invokespecial #30
245: ldc           #31
247: invokevirtual #32
250: aload         6
252: invokevirtual #32
255: ldc           #88
257: invokevirtual #32
260: invokevirtual #35
263: aload         6
265: ldc           #24
267: invokestatic  #53
270: return
Exception table:
from    to  target type
76    93    96   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0242
Start line: 5170
End line: 0
Method source code: 
    public void test0242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0242");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        helpFormatter0.setSyntaxPrefix(" ");
        java.util.Comparator comparator8 = helpFormatter0.getOptionComparator();
        java.lang.String str9 = helpFormatter0.getOptPrefix();
        java.io.PrintWriter printWriter10 = null;
        try {
            helpFormatter0.printUsage(printWriter10, 97, "                                                    ");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(comparator8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-" + "'", str9, "-");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #342
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: bipush        10
47: invokevirtual #38
50: aload_1
51: ldc           #24
53: invokevirtual #39
56: aload_1
57: invokevirtual #106
60: astore_3
61: aload_1
62: invokevirtual #123
65: astore        4
67: aconst_null
68: astore        5
70: aload_1
71: aload         5
73: bipush        97
75: ldc_w         #313
78: invokevirtual #87
81: ldc           #14
83: invokestatic  #15
86: goto          91
89: astore        6
91: new           #29
94: dup
95: invokespecial #30
98: ldc           #31
100: invokevirtual #32
103: iload_2
104: invokevirtual #33
107: ldc           #34
109: invokevirtual #32
112: iconst_1
113: invokevirtual #33
116: ldc           #31
118: invokevirtual #32
121: invokevirtual #35
124: iload_2
125: iconst_1
126: if_icmpne     133
129: iconst_1
130: goto          134
133: iconst_0
134: invokestatic  #36
137: aload_3
138: invokestatic  #51
141: new           #29
144: dup
145: invokespecial #30
148: ldc           #31
150: invokevirtual #32
153: aload         4
155: invokevirtual #32
158: ldc           #66
160: invokevirtual #32
163: invokevirtual #35
166: aload         4
168: ldc           #67
170: invokestatic  #53
173: return
Exception table:
from    to  target type
70    86    89   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0243
Start line: 5194
End line: 0
Method source code: 
    public void test0243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0243");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        helpFormatter0.defaultDescPad = 0;
        int int8 = helpFormatter0.getLeftPadding();
        java.io.PrintWriter printWriter9 = null;
        org.apache.commons.cli.Options options12 = null;
        try {
            helpFormatter0.printUsage(printWriter9, (int) (short) 1, "arg", options12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #343
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #10
36: invokevirtual #11
39: aload_1
40: ldc           #10
42: putfield      #55
45: aload_1
46: getfield      #55
49: astore_2
50: aload_1
51: iconst_0
52: putfield      #76
55: aload_1
56: invokevirtual #22
59: istore_3
60: aconst_null
61: astore        4
63: aconst_null
64: astore        5
66: aload_1
67: aload         4
69: iconst_1
70: ldc           #79
72: aload         5
74: invokevirtual #127
77: ldc           #14
79: invokestatic  #15
82: goto          87
85: astore        6
87: new           #29
90: dup
91: invokespecial #30
94: ldc           #31
96: invokevirtual #32
99: aload_2
100: invokevirtual #32
103: ldc           #68
105: invokevirtual #32
108: invokevirtual #35
111: aload_2
112: ldc           #10
114: invokestatic  #53
117: new           #29
120: dup
121: invokespecial #30
124: ldc           #31
126: invokevirtual #32
129: iload_3
130: invokevirtual #33
133: ldc           #34
135: invokevirtual #32
138: iconst_1
139: invokevirtual #33
142: ldc           #31
144: invokevirtual #32
147: invokevirtual #35
150: iload_3
151: iconst_1
152: if_icmpne     159
155: iconst_1
156: goto          160
159: iconst_0
160: invokestatic  #36
163: return
Exception table:
from    to  target type
66    82    85   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0244
Start line: 5217
End line: 0
Method source code: 
    public void test0244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0244");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str6 = helpFormatter0.getNewLine();
        helpFormatter0.setSyntaxPrefix(" ");
        java.lang.String str9 = helpFormatter0.defaultOptPrefix;
        java.util.Comparator comparator10 = helpFormatter0.getOptionComparator();
        int int11 = helpFormatter0.getLeftPadding();
        java.util.Comparator comparator12 = helpFormatter0.optionComparator;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\n" + "'", str6, "\n");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(comparator10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(comparator12);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #344
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #10
36: invokevirtual #11
39: aload_1
40: ldc           #10
42: putfield      #55
45: aload_1
46: getfield      #55
49: astore_2
50: aload_1
51: invokevirtual #72
54: astore_3
55: aload_1
56: ldc           #24
58: invokevirtual #39
61: aload_1
62: getfield      #63
65: astore        4
67: aload_1
68: invokevirtual #106
71: astore        5
73: aload_1
74: invokevirtual #22
77: istore        6
79: aload_1
80: getfield      #47
83: astore        7
85: new           #29
88: dup
89: invokespecial #30
92: ldc           #31
94: invokevirtual #32
97: aload_2
98: invokevirtual #32
101: ldc           #68
103: invokevirtual #32
106: invokevirtual #35
109: aload_2
110: ldc           #10
112: invokestatic  #53
115: new           #29
118: dup
119: invokespecial #30
122: ldc           #31
124: invokevirtual #32
127: aload_3
128: invokevirtual #32
131: ldc           #74
133: invokevirtual #32
136: invokevirtual #35
139: aload_3
140: ldc           #65
142: invokestatic  #53
145: new           #29
148: dup
149: invokespecial #30
152: ldc           #31
154: invokevirtual #32
157: aload         4
159: invokevirtual #32
162: ldc           #68
164: invokevirtual #32
167: invokevirtual #35
170: aload         4
172: ldc           #10
174: invokestatic  #53
177: aload         5
179: invokestatic  #51
182: new           #29
185: dup
186: invokespecial #30
189: ldc           #31
191: invokevirtual #32
194: iload         6
196: invokevirtual #33
199: ldc           #34
201: invokevirtual #32
204: iconst_1
205: invokevirtual #33
208: ldc           #31
210: invokevirtual #32
213: invokevirtual #35
216: iload         6
218: iconst_1
219: if_icmpne     226
222: iconst_1
223: goto          227
226: iconst_0
227: invokestatic  #36
230: aload         7
232: invokestatic  #51
235: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0245
Start line: 5239
End line: 0
Method source code: 
    public void test0245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0245");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.defaultDescPad = '4';
        helpFormatter0.setNewLine("");
        helpFormatter0.setSyntaxPrefix("");
        java.lang.String str10 = helpFormatter0.getSyntaxPrefix();
        helpFormatter0.setWidth((-2));
        helpFormatter0.defaultLongOptPrefix = "-";
        helpFormatter0.setLongOptSeparator("-");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #345
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: bipush        52
47: putfield      #76
50: aload_1
51: ldc           #10
53: invokevirtual #131
56: aload_1
57: ldc           #10
59: invokevirtual #39
62: aload_1
63: invokevirtual #102
66: astore_3
67: aload_1
68: bipush        -2
70: invokevirtual #156
73: aload_1
74: ldc           #67
76: putfield      #55
79: aload_1
80: ldc           #67
82: invokevirtual #91
85: new           #29
88: dup
89: invokespecial #30
92: ldc           #31
94: invokevirtual #32
97: iload_2
98: invokevirtual #33
101: ldc           #34
103: invokevirtual #32
106: iconst_1
107: invokevirtual #33
110: ldc           #31
112: invokevirtual #32
115: invokevirtual #35
118: iload_2
119: iconst_1
120: if_icmpne     127
123: iconst_1
124: goto          128
127: iconst_0
128: invokestatic  #36
131: new           #29
134: dup
135: invokespecial #30
138: ldc           #31
140: invokevirtual #32
143: aload_3
144: invokevirtual #32
147: ldc           #68
149: invokevirtual #32
152: invokevirtual #35
155: aload_3
156: ldc           #10
158: invokestatic  #53
161: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0246
Start line: 5257
End line: 0
Method source code: 
    public void test0246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0246");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        java.lang.String str6 = helpFormatter0.rtrim("");
        java.lang.String str8 = helpFormatter0.rtrim("-");
        java.lang.String str9 = helpFormatter0.getLongOptSeparator();
        java.lang.String str10 = helpFormatter0.getArgName();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "-" + "'", str8, "-");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + " " + "'", str9, " ");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "arg" + "'", str10, "arg");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #346
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: getfield      #63
48: astore_3
49: aload_1
50: ldc           #10
52: invokevirtual #64
55: astore        4
57: aload_1
58: ldc           #67
60: invokevirtual #64
63: astore        5
65: aload_1
66: invokevirtual #86
69: astore        6
71: aload_1
72: invokevirtual #104
75: astore        7
77: new           #29
80: dup
81: invokespecial #30
84: ldc           #31
86: invokevirtual #32
89: iload_2
90: invokevirtual #33
93: ldc           #34
95: invokevirtual #32
98: iconst_1
99: invokevirtual #33
102: ldc           #31
104: invokevirtual #32
107: invokevirtual #35
110: iload_2
111: iconst_1
112: if_icmpne     119
115: iconst_1
116: goto          120
119: iconst_0
120: invokestatic  #36
123: new           #29
126: dup
127: invokespecial #30
130: ldc           #31
132: invokevirtual #32
135: aload_3
136: invokevirtual #32
139: ldc           #66
141: invokevirtual #32
144: invokevirtual #35
147: aload_3
148: ldc           #67
150: invokestatic  #53
153: new           #29
156: dup
157: invokespecial #30
160: ldc           #31
162: invokevirtual #32
165: aload         4
167: invokevirtual #32
170: ldc           #68
172: invokevirtual #32
175: invokevirtual #35
178: aload         4
180: ldc           #10
182: invokestatic  #53
185: new           #29
188: dup
189: invokespecial #30
192: ldc           #31
194: invokevirtual #32
197: aload         5
199: invokevirtual #32
202: ldc           #66
204: invokevirtual #32
207: invokevirtual #35
210: aload         5
212: ldc           #67
214: invokestatic  #53
217: new           #29
220: dup
221: invokespecial #30
224: ldc           #31
226: invokevirtual #32
229: aload         6
231: invokevirtual #32
234: ldc           #88
236: invokevirtual #32
239: invokevirtual #35
242: aload         6
244: ldc           #24
246: invokestatic  #53
249: new           #29
252: dup
253: invokespecial #30
256: ldc           #31
258: invokevirtual #32
261: aload         7
263: invokevirtual #32
266: ldc           #78
268: invokevirtual #32
271: invokevirtual #35
274: aload         7
276: ldc           #79
278: invokestatic  #53
281: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0247
Start line: 5277
End line: 0
Method source code: 
    public void test0247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0247");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.defaultArgName;
        java.lang.String str3 = helpFormatter0.defaultNewLine;
        helpFormatter0.defaultLeftPad = 10;
        int int9 = helpFormatter0.findWrapPos("                                                                                                 ", (int) (short) 0, (int) (short) 10);
        int int10 = helpFormatter0.defaultWidth;
        java.io.PrintWriter printWriter11 = null;
        try {
            helpFormatter0.printWrapped(printWriter11, 97, (int) (short) 100, "                                                    ");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "arg" + "'", str2, "arg");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\n" + "'", str3, "\n");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10 + "'", int9 == 10);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 74 + "'", int10 == 74);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #347
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: getfield      #77
42: astore_3
43: aload_1
44: getfield      #23
47: astore        4
49: aload_1
50: bipush        10
52: putfield      #60
55: aload_1
56: ldc           #141
58: iconst_0
59: bipush        10
61: invokevirtual #93
64: istore        5
66: aload_1
67: getfield      #110
70: istore        6
72: aconst_null
73: astore        7
75: aload_1
76: aload         7
78: bipush        97
80: bipush        100
82: ldc_w         #313
85: invokevirtual #61
88: ldc           #14
90: invokestatic  #15
93: goto          98
96: astore        8
98: new           #29
101: dup
102: invokespecial #30
105: ldc           #31
107: invokevirtual #32
110: iload_2
111: invokevirtual #33
114: ldc           #34
116: invokevirtual #32
119: iconst_1
120: invokevirtual #33
123: ldc           #31
125: invokevirtual #32
128: invokevirtual #35
131: iload_2
132: iconst_1
133: if_icmpne     140
136: iconst_1
137: goto          141
140: iconst_0
141: invokestatic  #36
144: new           #29
147: dup
148: invokespecial #30
151: ldc           #31
153: invokevirtual #32
156: aload_3
157: invokevirtual #32
160: ldc           #78
162: invokevirtual #32
165: invokevirtual #35
168: aload_3
169: ldc           #79
171: invokestatic  #53
174: new           #29
177: dup
178: invokespecial #30
181: ldc           #31
183: invokevirtual #32
186: aload         4
188: invokevirtual #32
191: ldc           #74
193: invokevirtual #32
196: invokevirtual #35
199: aload         4
201: ldc           #65
203: invokestatic  #53
206: new           #29
209: dup
210: invokespecial #30
213: ldc           #31
215: invokevirtual #32
218: iload         5
220: invokevirtual #33
223: ldc           #34
225: invokevirtual #32
228: bipush        10
230: invokevirtual #33
233: ldc           #31
235: invokevirtual #32
238: invokevirtual #35
241: iload         5
243: bipush        10
245: if_icmpne     252
248: iconst_1
249: goto          253
252: iconst_0
253: invokestatic  #36
256: new           #29
259: dup
260: invokespecial #30
263: ldc           #31
265: invokevirtual #32
268: iload         6
270: invokevirtual #33
273: ldc           #34
275: invokevirtual #32
278: bipush        74
280: invokevirtual #33
283: ldc           #31
285: invokevirtual #32
288: invokevirtual #35
291: iload         6
293: bipush        74
295: if_icmpne     302
298: iconst_1
299: goto          303
302: iconst_0
303: invokestatic  #36
306: return
Exception table:
from    to  target type
75    93    96   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0248
Start line: 5303
End line: 0
Method source code: 
    public void test0248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0248");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        int int6 = helpFormatter0.defaultWidth;
        java.lang.String str7 = helpFormatter0.getLongOptPrefix();
        org.apache.commons.cli.Options options9 = null;
        try {
            helpFormatter0.printHelp("                                                    ", options9, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "--" + "'", str5, "--");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 74 + "'", int6 == 74);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "--" + "'", str7, "--");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #348
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: getfield      #63
48: astore_3
49: aload_1
50: getfield      #55
53: astore        4
55: aload_1
56: getfield      #110
59: istore        5
61: aload_1
62: invokevirtual #48
65: astore        6
67: aconst_null
68: astore        7
70: aload_1
71: ldc_w         #313
74: aload         7
76: iconst_1
77: invokevirtual #135
80: ldc           #14
82: invokestatic  #15
85: goto          90
88: astore        8
90: new           #29
93: dup
94: invokespecial #30
97: ldc           #31
99: invokevirtual #32
102: iload_2
103: invokevirtual #33
106: ldc           #34
108: invokevirtual #32
111: iconst_1
112: invokevirtual #33
115: ldc           #31
117: invokevirtual #32
120: invokevirtual #35
123: iload_2
124: iconst_1
125: if_icmpne     132
128: iconst_1
129: goto          133
132: iconst_0
133: invokestatic  #36
136: new           #29
139: dup
140: invokespecial #30
143: ldc           #31
145: invokevirtual #32
148: aload_3
149: invokevirtual #32
152: ldc           #66
154: invokevirtual #32
157: invokevirtual #35
160: aload_3
161: ldc           #67
163: invokestatic  #53
166: new           #29
169: dup
170: invokespecial #30
173: ldc           #31
175: invokevirtual #32
178: aload         4
180: invokevirtual #32
183: ldc           #52
185: invokevirtual #32
188: invokevirtual #35
191: aload         4
193: ldc           #44
195: invokestatic  #53
198: new           #29
201: dup
202: invokespecial #30
205: ldc           #31
207: invokevirtual #32
210: iload         5
212: invokevirtual #33
215: ldc           #34
217: invokevirtual #32
220: bipush        74
222: invokevirtual #33
225: ldc           #31
227: invokevirtual #32
230: invokevirtual #35
233: iload         5
235: bipush        74
237: if_icmpne     244
240: iconst_1
241: goto          245
244: iconst_0
245: invokestatic  #36
248: new           #29
251: dup
252: invokespecial #30
255: ldc           #31
257: invokevirtual #32
260: aload         6
262: invokevirtual #32
265: ldc           #52
267: invokevirtual #32
270: invokevirtual #35
273: aload         6
275: ldc           #44
277: invokestatic  #53
280: return
Exception table:
from    to  target type
70    85    88   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0249
Start line: 5329
End line: 0
Method source code: 
    public void test0249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0249");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setLongOptPrefix(" ");
        helpFormatter0.defaultDescPad = (short) 10;
        helpFormatter0.setLongOptSeparator("");
        helpFormatter0.defaultOptPrefix = "                                                                                                 ";
        java.util.Comparator comparator13 = helpFormatter0.getOptionComparator();
        java.lang.StringBuffer stringBuffer14 = null;
        try {
            java.lang.StringBuffer stringBuffer18 = helpFormatter0.renderWrappedText(stringBuffer14, (int) (byte) 1, 0, "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertNotNull(comparator13);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #349
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: getfield      #63
48: astore_3
49: aload_1
50: ldc           #24
52: invokevirtual #49
55: aload_1
56: bipush        10
58: putfield      #76
61: aload_1
62: ldc           #10
64: invokevirtual #91
67: aload_1
68: ldc           #141
70: putfield      #63
73: aload_1
74: invokevirtual #106
77: astore        4
79: aconst_null
80: astore        5
82: aload_1
83: aload         5
85: iconst_1
86: iconst_0
87: ldc           #25
89: invokevirtual #70
92: astore        6
94: ldc           #14
96: invokestatic  #15
99: goto          104
102: astore        6
104: new           #29
107: dup
108: invokespecial #30
111: ldc           #31
113: invokevirtual #32
116: iload_2
117: invokevirtual #33
120: ldc           #34
122: invokevirtual #32
125: iconst_1
126: invokevirtual #33
129: ldc           #31
131: invokevirtual #32
134: invokevirtual #35
137: iload_2
138: iconst_1
139: if_icmpne     146
142: iconst_1
143: goto          147
146: iconst_0
147: invokestatic  #36
150: new           #29
153: dup
154: invokespecial #30
157: ldc           #31
159: invokevirtual #32
162: aload_3
163: invokevirtual #32
166: ldc           #66
168: invokevirtual #32
171: invokevirtual #35
174: aload_3
175: ldc           #67
177: invokestatic  #53
180: aload         4
182: invokestatic  #51
185: return
Exception table:
from    to  target type
82    99   102   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0250
Start line: 5355
End line: 0
Method source code: 
    public void test0250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0250");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.util.Comparator comparator1 = helpFormatter0.optionComparator;
        int int2 = helpFormatter0.defaultLeftPad;
        helpFormatter0.setSyntaxPrefix("");
        helpFormatter0.setNewLine("usage: ");
        java.lang.StringBuffer stringBuffer7 = null;
        try {
            java.lang.StringBuffer stringBuffer11 = helpFormatter0.renderWrappedText(stringBuffer7, (int) '#', 0, "\n");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(comparator1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #350
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: getfield      #47
37: astore_2
38: aload_1
39: getfield      #60
42: istore_3
43: aload_1
44: ldc           #10
46: invokevirtual #39
49: aload_1
50: ldc           #12
52: invokevirtual #131
55: aconst_null
56: astore        4
58: aload_1
59: aload         4
61: bipush        35
63: iconst_0
64: ldc           #65
66: invokevirtual #70
69: astore        5
71: ldc           #14
73: invokestatic  #15
76: goto          81
79: astore        5
81: aload_2
82: invokestatic  #51
85: new           #29
88: dup
89: invokespecial #30
92: ldc           #31
94: invokevirtual #32
97: iload_3
98: invokevirtual #33
101: ldc           #34
103: invokevirtual #32
106: iconst_1
107: invokevirtual #33
110: ldc           #31
112: invokevirtual #32
115: invokevirtual #35
118: iload_3
119: iconst_1
120: if_icmpne     127
123: iconst_1
124: goto          128
127: iconst_0
128: invokestatic  #36
131: return
Exception table:
from    to  target type
58    76    79   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0251
Start line: 5376
End line: 0
Method source code: 
    public void test0251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0251");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.lang.String str1 = helpFormatter0.defaultSyntaxPrefix;
        java.util.Comparator comparator2 = helpFormatter0.optionComparator;
        java.lang.String str3 = helpFormatter0.defaultArgName;
        java.lang.String str5 = helpFormatter0.createPadding(52);
        java.io.PrintWriter printWriter6 = null;
        try {
            helpFormatter0.printWrapped(printWriter6, (-2), "usage: ");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "usage: " + "'", str1, "usage: ");
        org.junit.Assert.assertNotNull(comparator2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "arg" + "'", str3, "arg");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "                                                    " + "'", str5, "                                                    ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #351
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: getfield      #97
37: astore_2
38: aload_1
39: getfield      #47
42: astore_3
43: aload_1
44: getfield      #77
47: astore        4
49: aload_1
50: bipush        52
52: invokevirtual #108
55: astore        5
57: aconst_null
58: astore        6
60: aload_1
61: aload         6
63: bipush        -2
65: ldc           #12
67: invokevirtual #82
70: ldc           #178
72: invokestatic  #15
75: goto          80
78: astore        7
80: new           #29
83: dup
84: invokespecial #30
87: ldc           #31
89: invokevirtual #32
92: aload_2
93: invokevirtual #32
96: ldc           #99
98: invokevirtual #32
101: invokevirtual #35
104: aload_2
105: ldc           #12
107: invokestatic  #53
110: aload_3
111: invokestatic  #51
114: new           #29
117: dup
118: invokespecial #30
121: ldc           #31
123: invokevirtual #32
126: aload         4
128: invokevirtual #32
131: ldc           #78
133: invokevirtual #32
136: invokevirtual #35
139: aload         4
141: ldc           #79
143: invokestatic  #53
146: new           #29
149: dup
150: invokespecial #30
153: ldc           #31
155: invokevirtual #32
158: aload         5
160: invokevirtual #32
163: ldc_w         #352
166: invokevirtual #32
169: invokevirtual #35
172: aload         5
174: ldc_w         #313
177: invokestatic  #53
180: return
Exception table:
from    to  target type
60    75    78   Class java/lang/StringIndexOutOfBoundsException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0252
Start line: 5399
End line: 0
Method source code: 
    public void test0252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0252");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.getArgName();
        helpFormatter0.setLongOptPrefix("                                                                                                 ");
        helpFormatter0.defaultWidth = (short) 100;
        java.lang.String str7 = helpFormatter0.getNewLine();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "arg" + "'", str2, "arg");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\n" + "'", str7, "\n");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #353
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: invokevirtual #104
42: astore_3
43: aload_1
44: ldc           #141
46: invokevirtual #49
49: aload_1
50: bipush        100
52: putfield      #110
55: aload_1
56: invokevirtual #72
59: astore        4
61: new           #29
64: dup
65: invokespecial #30
68: ldc           #31
70: invokevirtual #32
73: iload_2
74: invokevirtual #33
77: ldc           #34
79: invokevirtual #32
82: iconst_1
83: invokevirtual #33
86: ldc           #31
88: invokevirtual #32
91: invokevirtual #35
94: iload_2
95: iconst_1
96: if_icmpne     103
99: iconst_1
100: goto          104
103: iconst_0
104: invokestatic  #36
107: new           #29
110: dup
111: invokespecial #30
114: ldc           #31
116: invokevirtual #32
119: aload_3
120: invokevirtual #32
123: ldc           #78
125: invokevirtual #32
128: invokevirtual #35
131: aload_3
132: ldc           #79
134: invokestatic  #53
137: new           #29
140: dup
141: invokespecial #30
144: ldc           #31
146: invokevirtual #32
149: aload         4
151: invokevirtual #32
154: ldc           #74
156: invokevirtual #32
159: invokevirtual #35
162: aload         4
164: ldc           #65
166: invokestatic  #53
169: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0253
Start line: 5414
End line: 0
Method source code: 
    public void test0253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0253");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.lang.String str1 = helpFormatter0.defaultSyntaxPrefix;
        java.util.Comparator comparator2 = helpFormatter0.optionComparator;
        java.lang.String str3 = helpFormatter0.defaultArgName;
        java.lang.String str5 = helpFormatter0.createPadding(52);
        java.io.PrintWriter printWriter6 = null;
        try {
            helpFormatter0.printWrapped(printWriter6, (-2), "          ");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "usage: " + "'", str1, "usage: ");
        org.junit.Assert.assertNotNull(comparator2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "arg" + "'", str3, "arg");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "                                                    " + "'", str5, "                                                    ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #354
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: getfield      #97
37: astore_2
38: aload_1
39: getfield      #47
42: astore_3
43: aload_1
44: getfield      #77
47: astore        4
49: aload_1
50: bipush        52
52: invokevirtual #108
55: astore        5
57: aconst_null
58: astore        6
60: aload_1
61: aload         6
63: bipush        -2
65: ldc           #114
67: invokevirtual #82
70: ldc           #178
72: invokestatic  #15
75: goto          80
78: astore        7
80: new           #29
83: dup
84: invokespecial #30
87: ldc           #31
89: invokevirtual #32
92: aload_2
93: invokevirtual #32
96: ldc           #99
98: invokevirtual #32
101: invokevirtual #35
104: aload_2
105: ldc           #12
107: invokestatic  #53
110: aload_3
111: invokestatic  #51
114: new           #29
117: dup
118: invokespecial #30
121: ldc           #31
123: invokevirtual #32
126: aload         4
128: invokevirtual #32
131: ldc           #78
133: invokevirtual #32
136: invokevirtual #35
139: aload         4
141: ldc           #79
143: invokestatic  #53
146: new           #29
149: dup
150: invokespecial #30
153: ldc           #31
155: invokevirtual #32
158: aload         5
160: invokevirtual #32
163: ldc_w         #352
166: invokevirtual #32
169: invokevirtual #35
172: aload         5
174: ldc_w         #313
177: invokestatic  #53
180: return
Exception table:
from    to  target type
60    75    78   Class java/lang/StringIndexOutOfBoundsException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0254
Start line: 5437
End line: 0
Method source code: 
    public void test0254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0254");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        java.lang.String str6 = helpFormatter0.rtrim("");
        java.lang.String str8 = helpFormatter0.rtrim("-");
        helpFormatter0.defaultOptPrefix = "--";
        helpFormatter0.defaultDescPad = (short) 1;
        helpFormatter0.setLongOptSeparator("arg");
        java.lang.String str15 = helpFormatter0.defaultArgName;
        org.apache.commons.cli.HelpFormatter helpFormatter16 = new org.apache.commons.cli.HelpFormatter();
        int int17 = helpFormatter16.getLeftPadding();
        helpFormatter16.defaultNewLine = "";
        helpFormatter16.defaultDescPad = '4';
        helpFormatter16.setNewLine("");
        int int27 = helpFormatter16.findWrapPos("\n", (int) ' ', 3);
        java.util.Comparator comparator28 = helpFormatter16.optionComparator;
        helpFormatter0.optionComparator = comparator28;
        helpFormatter0.setWidth(1);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "-" + "'", str8, "-");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "arg" + "'", str15, "arg");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(comparator28);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #355
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: getfield      #63
48: astore_3
49: aload_1
50: ldc           #10
52: invokevirtual #64
55: astore        4
57: aload_1
58: ldc           #67
60: invokevirtual #64
63: astore        5
65: aload_1
66: ldc           #44
68: putfield      #63
71: aload_1
72: iconst_1
73: putfield      #76
76: aload_1
77: ldc           #79
79: invokevirtual #91
82: aload_1
83: getfield      #77
86: astore        6
88: new           #8
91: dup
92: invokespecial #9
95: astore        7
97: aload         7
99: invokevirtual #22
102: istore        8
104: aload         7
106: ldc           #10
108: putfield      #23
111: aload         7
113: bipush        52
115: putfield      #76
118: aload         7
120: ldc           #10
122: invokevirtual #131
125: aload         7
127: ldc           #65
129: bipush        32
131: iconst_3
132: invokevirtual #93
135: istore        9
137: aload         7
139: getfield      #47
142: astore        10
144: aload_1
145: aload         10
147: putfield      #47
150: aload_1
151: iconst_1
152: invokevirtual #156
155: new           #29
158: dup
159: invokespecial #30
162: ldc           #31
164: invokevirtual #32
167: iload_2
168: invokevirtual #33
171: ldc           #34
173: invokevirtual #32
176: iconst_1
177: invokevirtual #33
180: ldc           #31
182: invokevirtual #32
185: invokevirtual #35
188: iload_2
189: iconst_1
190: if_icmpne     197
193: iconst_1
194: goto          198
197: iconst_0
198: invokestatic  #36
201: new           #29
204: dup
205: invokespecial #30
208: ldc           #31
210: invokevirtual #32
213: aload_3
214: invokevirtual #32
217: ldc           #66
219: invokevirtual #32
222: invokevirtual #35
225: aload_3
226: ldc           #67
228: invokestatic  #53
231: new           #29
234: dup
235: invokespecial #30
238: ldc           #31
240: invokevirtual #32
243: aload         4
245: invokevirtual #32
248: ldc           #68
250: invokevirtual #32
253: invokevirtual #35
256: aload         4
258: ldc           #10
260: invokestatic  #53
263: new           #29
266: dup
267: invokespecial #30
270: ldc           #31
272: invokevirtual #32
275: aload         5
277: invokevirtual #32
280: ldc           #66
282: invokevirtual #32
285: invokevirtual #35
288: aload         5
290: ldc           #67
292: invokestatic  #53
295: new           #29
298: dup
299: invokespecial #30
302: ldc           #31
304: invokevirtual #32
307: aload         6
309: invokevirtual #32
312: ldc           #78
314: invokevirtual #32
317: invokevirtual #35
320: aload         6
322: ldc           #79
324: invokestatic  #53
327: new           #29
330: dup
331: invokespecial #30
334: ldc           #31
336: invokevirtual #32
339: iload         8
341: invokevirtual #33
344: ldc           #34
346: invokevirtual #32
349: iconst_1
350: invokevirtual #33
353: ldc           #31
355: invokevirtual #32
358: invokevirtual #35
361: iload         8
363: iconst_1
364: if_icmpne     371
367: iconst_1
368: goto          372
371: iconst_0
372: invokestatic  #36
375: new           #29
378: dup
379: invokespecial #30
382: ldc           #31
384: invokevirtual #32
387: iload         9
389: invokevirtual #33
392: ldc           #34
394: invokevirtual #32
397: iconst_m1
398: invokevirtual #33
401: ldc           #31
403: invokevirtual #32
406: invokevirtual #35
409: iload         9
411: iconst_m1
412: if_icmpne     419
415: iconst_1
416: goto          420
419: iconst_0
420: invokestatic  #36
423: aload         10
425: invokestatic  #51
428: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0255
Start line: 5470
End line: 0
Method source code: 
    public void test0255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0255");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.util.Comparator comparator1 = helpFormatter0.optionComparator;
        java.lang.String str3 = helpFormatter0.rtrim("");
        int int4 = helpFormatter0.getDescPadding();
        helpFormatter0.setLongOptSeparator("-");
        java.lang.StringBuffer stringBuffer7 = null;
        try {
            java.lang.StringBuffer stringBuffer11 = helpFormatter0.renderWrappedText(stringBuffer7, (int) (short) -1, (int) (byte) 1, "-");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(comparator1);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 3 + "'", int4 == 3);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #356
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: getfield      #47
37: astore_2
38: aload_1
39: ldc           #10
41: invokevirtual #64
44: astore_3
45: aload_1
46: invokevirtual #118
49: istore        4
51: aload_1
52: ldc           #67
54: invokevirtual #91
57: aconst_null
58: astore        5
60: aload_1
61: aload         5
63: iconst_m1
64: iconst_1
65: ldc           #67
67: invokevirtual #70
70: astore        6
72: ldc           #14
74: invokestatic  #15
77: goto          82
80: astore        6
82: aload_2
83: invokestatic  #51
86: new           #29
89: dup
90: invokespecial #30
93: ldc           #31
95: invokevirtual #32
98: aload_3
99: invokevirtual #32
102: ldc           #68
104: invokevirtual #32
107: invokevirtual #35
110: aload_3
111: ldc           #10
113: invokestatic  #53
116: new           #29
119: dup
120: invokespecial #30
123: ldc           #31
125: invokevirtual #32
128: iload         4
130: invokevirtual #33
133: ldc           #34
135: invokevirtual #32
138: iconst_3
139: invokevirtual #33
142: ldc           #31
144: invokevirtual #32
147: invokevirtual #35
150: iload         4
152: iconst_3
153: if_icmpne     160
156: iconst_1
157: goto          161
160: iconst_0
161: invokestatic  #36
164: return
Exception table:
from    to  target type
60    77    80   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0256
Start line: 5492
End line: 0
Method source code: 
    public void test0256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0256");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.util.Comparator comparator1 = helpFormatter0.optionComparator;
        int int2 = helpFormatter0.getLeftPadding();
        int int3 = helpFormatter0.defaultLeftPad;
        java.lang.String str5 = helpFormatter0.createPadding((int) 'a');
        org.apache.commons.cli.HelpFormatter helpFormatter6 = new org.apache.commons.cli.HelpFormatter();
        int int7 = helpFormatter6.getLeftPadding();
        helpFormatter6.defaultNewLine = "";
        helpFormatter6.defaultDescPad = '4';
        helpFormatter6.setNewLine("");
        int int17 = helpFormatter6.findWrapPos("\n", (int) ' ', 3);
        java.util.Comparator comparator18 = helpFormatter6.optionComparator;
        helpFormatter0.setOptionComparator(comparator18);
        helpFormatter0.defaultWidth = (short) 0;
        org.junit.Assert.assertNotNull(comparator1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "                                                                                                 " + "'", str5, "                                                                                                 ");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(comparator18);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #357
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: getfield      #47
37: astore_2
38: aload_1
39: invokevirtual #22
42: istore_3
43: aload_1
44: getfield      #60
47: istore        4
49: aload_1
50: bipush        97
52: invokevirtual #108
55: astore        5
57: new           #8
60: dup
61: invokespecial #9
64: astore        6
66: aload         6
68: invokevirtual #22
71: istore        7
73: aload         6
75: ldc           #10
77: putfield      #23
80: aload         6
82: bipush        52
84: putfield      #76
87: aload         6
89: ldc           #10
91: invokevirtual #131
94: aload         6
96: ldc           #65
98: bipush        32
100: iconst_3
101: invokevirtual #93
104: istore        8
106: aload         6
108: getfield      #47
111: astore        9
113: aload_1
114: aload         9
116: invokevirtual #152
119: aload_1
120: iconst_0
121: putfield      #110
124: aload_2
125: invokestatic  #51
128: new           #29
131: dup
132: invokespecial #30
135: ldc           #31
137: invokevirtual #32
140: iload_3
141: invokevirtual #33
144: ldc           #34
146: invokevirtual #32
149: iconst_1
150: invokevirtual #33
153: ldc           #31
155: invokevirtual #32
158: invokevirtual #35
161: iload_3
162: iconst_1
163: if_icmpne     170
166: iconst_1
167: goto          171
170: iconst_0
171: invokestatic  #36
174: new           #29
177: dup
178: invokespecial #30
181: ldc           #31
183: invokevirtual #32
186: iload         4
188: invokevirtual #33
191: ldc           #34
193: invokevirtual #32
196: iconst_1
197: invokevirtual #33
200: ldc           #31
202: invokevirtual #32
205: invokevirtual #35
208: iload         4
210: iconst_1
211: if_icmpne     218
214: iconst_1
215: goto          219
218: iconst_0
219: invokestatic  #36
222: new           #29
225: dup
226: invokespecial #30
229: ldc           #31
231: invokevirtual #32
234: aload         5
236: invokevirtual #32
239: ldc           #185
241: invokevirtual #32
244: invokevirtual #35
247: aload         5
249: ldc           #141
251: invokestatic  #53
254: new           #29
257: dup
258: invokespecial #30
261: ldc           #31
263: invokevirtual #32
266: iload         7
268: invokevirtual #33
271: ldc           #34
273: invokevirtual #32
276: iconst_1
277: invokevirtual #33
280: ldc           #31
282: invokevirtual #32
285: invokevirtual #35
288: iload         7
290: iconst_1
291: if_icmpne     298
294: iconst_1
295: goto          299
298: iconst_0
299: invokestatic  #36
302: new           #29
305: dup
306: invokespecial #30
309: ldc           #31
311: invokevirtual #32
314: iload         8
316: invokevirtual #33
319: ldc           #34
321: invokevirtual #32
324: iconst_m1
325: invokevirtual #33
328: ldc           #31
330: invokevirtual #32
333: invokevirtual #35
336: iload         8
338: iconst_m1
339: if_icmpne     346
342: iconst_1
343: goto          347
346: iconst_0
347: invokestatic  #36
350: aload         9
352: invokestatic  #51
355: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0257
Start line: 5519
End line: 0
Method source code: 
    public void test0257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0257");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.defaultDescPad = '4';
        org.apache.commons.cli.Options options7 = null;
        try {
            helpFormatter0.printHelp("                                                    ", options7, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #358
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: bipush        52
47: putfield      #76
50: aconst_null
51: astore_3
52: aload_1
53: ldc_w         #313
56: aload_3
57: iconst_1
58: invokevirtual #135
61: ldc           #14
63: invokestatic  #15
66: goto          71
69: astore        4
71: new           #29
74: dup
75: invokespecial #30
78: ldc           #31
80: invokevirtual #32
83: iload_2
84: invokevirtual #33
87: ldc           #34
89: invokevirtual #32
92: iconst_1
93: invokevirtual #33
96: ldc           #31
98: invokevirtual #32
101: invokevirtual #35
104: iload_2
105: iconst_1
106: if_icmpne     113
109: iconst_1
110: goto          114
113: iconst_0
114: invokestatic  #36
117: return
Exception table:
from    to  target type
52    66    69   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0258
Start line: 5538
End line: 0
Method source code: 
    public void test0258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0258");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        int int4 = helpFormatter0.defaultWidth;
        java.util.Comparator comparator5 = helpFormatter0.getOptionComparator();
        helpFormatter0.setArgName("\n");
        helpFormatter0.setLongOptSeparator("   ");
        helpFormatter0.setOptPrefix(" ");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 74 + "'", int4 == 74);
        org.junit.Assert.assertNotNull(comparator5);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #359
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: getfield      #110
48: istore_3
49: aload_1
50: invokevirtual #106
53: astore        4
55: aload_1
56: ldc           #65
58: invokevirtual #146
61: aload_1
62: ldc_w         #259
65: invokevirtual #91
68: aload_1
69: ldc           #24
71: invokevirtual #11
74: new           #29
77: dup
78: invokespecial #30
81: ldc           #31
83: invokevirtual #32
86: iload_2
87: invokevirtual #33
90: ldc           #34
92: invokevirtual #32
95: iconst_1
96: invokevirtual #33
99: ldc           #31
101: invokevirtual #32
104: invokevirtual #35
107: iload_2
108: iconst_1
109: if_icmpne     116
112: iconst_1
113: goto          117
116: iconst_0
117: invokestatic  #36
120: new           #29
123: dup
124: invokespecial #30
127: ldc           #31
129: invokevirtual #32
132: iload_3
133: invokevirtual #33
136: ldc           #34
138: invokevirtual #32
141: bipush        74
143: invokevirtual #33
146: ldc           #31
148: invokevirtual #32
151: invokevirtual #35
154: iload_3
155: bipush        74
157: if_icmpne     164
160: iconst_1
161: goto          165
164: iconst_0
165: invokestatic  #36
168: aload         4
170: invokestatic  #51
173: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0259
Start line: 5555
End line: 0
Method source code: 
    public void test0259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0259");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        java.lang.String str6 = helpFormatter0.getOptPrefix();
        java.lang.String str7 = helpFormatter0.getNewLine();
        helpFormatter0.defaultOptPrefix = "";
        helpFormatter0.setNewLine("");
        java.lang.String str12 = helpFormatter0.getArgName();
        org.apache.commons.cli.HelpFormatter helpFormatter13 = new org.apache.commons.cli.HelpFormatter();
        int int14 = helpFormatter13.getLeftPadding();
        helpFormatter13.defaultNewLine = "";
        helpFormatter13.setDescPadding(10);
        java.lang.String str19 = helpFormatter13.defaultNewLine;
        helpFormatter13.setDescPadding(10);
        org.apache.commons.cli.HelpFormatter helpFormatter22 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter22.setOptPrefix("");
        helpFormatter22.defaultLongOptPrefix = "";
        java.lang.String str27 = helpFormatter22.defaultLongOptPrefix;
        java.lang.String str28 = helpFormatter22.getNewLine();
        java.util.Comparator comparator29 = helpFormatter22.getOptionComparator();
        helpFormatter13.optionComparator = comparator29;
        helpFormatter0.optionComparator = comparator29;
        org.apache.commons.cli.Options options34 = null;
        try {
            helpFormatter0.printHelp("", "\n", options34, "                                                    ", false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: cmdLineSyntax not provided");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "-" + "'", str6, "-");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "arg" + "'", str12, "arg");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "\n" + "'", str28, "\n");
        org.junit.Assert.assertNotNull(comparator29);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #360
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: bipush        10
47: invokevirtual #38
50: aload_1
51: invokevirtual #123
54: astore_3
55: aload_1
56: invokevirtual #72
59: astore        4
61: aload_1
62: ldc           #10
64: putfield      #63
67: aload_1
68: ldc           #10
70: invokevirtual #131
73: aload_1
74: invokevirtual #104
77: astore        5
79: new           #8
82: dup
83: invokespecial #9
86: astore        6
88: aload         6
90: invokevirtual #22
93: istore        7
95: aload         6
97: ldc           #10
99: putfield      #23
102: aload         6
104: bipush        10
106: invokevirtual #38
109: aload         6
111: getfield      #23
114: astore        8
116: aload         6
118: bipush        10
120: invokevirtual #38
123: new           #8
126: dup
127: invokespecial #9
130: astore        9
132: aload         9
134: ldc           #10
136: invokevirtual #11
139: aload         9
141: ldc           #10
143: putfield      #55
146: aload         9
148: getfield      #55
151: astore        10
153: aload         9
155: invokevirtual #72
158: astore        11
160: aload         9
162: invokevirtual #106
165: astore        12
167: aload         6
169: aload         12
171: putfield      #47
174: aload_1
175: aload         12
177: putfield      #47
180: aconst_null
181: astore        13
183: aload_1
184: ldc           #10
186: ldc           #65
188: aload         13
190: ldc_w         #313
193: iconst_0
194: invokevirtual #73
197: ldc           #27
199: invokestatic  #15
202: goto          207
205: astore        14
207: new           #29
210: dup
211: invokespecial #30
214: ldc           #31
216: invokevirtual #32
219: iload_2
220: invokevirtual #33
223: ldc           #34
225: invokevirtual #32
228: iconst_1
229: invokevirtual #33
232: ldc           #31
234: invokevirtual #32
237: invokevirtual #35
240: iload_2
241: iconst_1
242: if_icmpne     249
245: iconst_1
246: goto          250
249: iconst_0
250: invokestatic  #36
253: new           #29
256: dup
257: invokespecial #30
260: ldc           #31
262: invokevirtual #32
265: aload_3
266: invokevirtual #32
269: ldc           #66
271: invokevirtual #32
274: invokevirtual #35
277: aload_3
278: ldc           #67
280: invokestatic  #53
283: new           #29
286: dup
287: invokespecial #30
290: ldc           #31
292: invokevirtual #32
295: aload         4
297: invokevirtual #32
300: ldc           #68
302: invokevirtual #32
305: invokevirtual #35
308: aload         4
310: ldc           #10
312: invokestatic  #53
315: new           #29
318: dup
319: invokespecial #30
322: ldc           #31
324: invokevirtual #32
327: aload         5
329: invokevirtual #32
332: ldc           #78
334: invokevirtual #32
337: invokevirtual #35
340: aload         5
342: ldc           #79
344: invokestatic  #53
347: new           #29
350: dup
351: invokespecial #30
354: ldc           #31
356: invokevirtual #32
359: iload         7
361: invokevirtual #33
364: ldc           #34
366: invokevirtual #32
369: iconst_1
370: invokevirtual #33
373: ldc           #31
375: invokevirtual #32
378: invokevirtual #35
381: iload         7
383: iconst_1
384: if_icmpne     391
387: iconst_1
388: goto          392
391: iconst_0
392: invokestatic  #36
395: new           #29
398: dup
399: invokespecial #30
402: ldc           #31
404: invokevirtual #32
407: aload         8
409: invokevirtual #32
412: ldc           #68
414: invokevirtual #32
417: invokevirtual #35
420: aload         8
422: ldc           #10
424: invokestatic  #53
427: new           #29
430: dup
431: invokespecial #30
434: ldc           #31
436: invokevirtual #32
439: aload         10
441: invokevirtual #32
444: ldc           #68
446: invokevirtual #32
449: invokevirtual #35
452: aload         10
454: ldc           #10
456: invokestatic  #53
459: new           #29
462: dup
463: invokespecial #30
466: ldc           #31
468: invokevirtual #32
471: aload         11
473: invokevirtual #32
476: ldc           #74
478: invokevirtual #32
481: invokevirtual #35
484: aload         11
486: ldc           #65
488: invokestatic  #53
491: aload         12
493: invokestatic  #51
496: return
Exception table:
from    to  target type
183   202   205   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0260
Start line: 5601
End line: 0
Method source code: 
    public void test0260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0260");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.getArgName();
        helpFormatter0.defaultNewLine = "\n";
        helpFormatter0.defaultLeftPad = (byte) -1;
        helpFormatter0.setLongOptSeparator("");
        org.apache.commons.cli.HelpFormatter helpFormatter9 = new org.apache.commons.cli.HelpFormatter();
        int int10 = helpFormatter9.getLeftPadding();
        helpFormatter9.defaultNewLine = "";
        helpFormatter9.setDescPadding(10);
        helpFormatter9.setSyntaxPrefix(" ");
        java.util.Comparator comparator17 = helpFormatter9.getOptionComparator();
        helpFormatter0.setOptionComparator(comparator17);
        java.io.PrintWriter printWriter19 = null;
        org.apache.commons.cli.Options options23 = null;
        try {
            helpFormatter0.printHelp(printWriter19, (int) (byte) 10, "arg", "                                                                                                 ", options23, (int) (short) 1, (int) ' ', " ", false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "arg" + "'", str2, "arg");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(comparator17);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #361
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: invokevirtual #104
42: astore_3
43: aload_1
44: ldc           #65
46: putfield      #23
49: aload_1
50: iconst_m1
51: putfield      #60
54: aload_1
55: ldc           #10
57: invokevirtual #91
60: new           #8
63: dup
64: invokespecial #9
67: astore        4
69: aload         4
71: invokevirtual #22
74: istore        5
76: aload         4
78: ldc           #10
80: putfield      #23
83: aload         4
85: bipush        10
87: invokevirtual #38
90: aload         4
92: ldc           #24
94: invokevirtual #39
97: aload         4
99: invokevirtual #106
102: astore        6
104: aload_1
105: aload         6
107: invokevirtual #152
110: aconst_null
111: astore        7
113: aconst_null
114: astore        8
116: aload_1
117: aload         7
119: bipush        10
121: ldc           #79
123: ldc           #141
125: aload         8
127: iconst_1
128: bipush        32
130: ldc           #24
132: iconst_0
133: invokevirtual #40
136: ldc           #14
138: invokestatic  #15
141: goto          146
144: astore        9
146: new           #29
149: dup
150: invokespecial #30
153: ldc           #31
155: invokevirtual #32
158: iload_2
159: invokevirtual #33
162: ldc           #34
164: invokevirtual #32
167: iconst_1
168: invokevirtual #33
171: ldc           #31
173: invokevirtual #32
176: invokevirtual #35
179: iload_2
180: iconst_1
181: if_icmpne     188
184: iconst_1
185: goto          189
188: iconst_0
189: invokestatic  #36
192: new           #29
195: dup
196: invokespecial #30
199: ldc           #31
201: invokevirtual #32
204: aload_3
205: invokevirtual #32
208: ldc           #78
210: invokevirtual #32
213: invokevirtual #35
216: aload_3
217: ldc           #79
219: invokestatic  #53
222: new           #29
225: dup
226: invokespecial #30
229: ldc           #31
231: invokevirtual #32
234: iload         5
236: invokevirtual #33
239: ldc           #34
241: invokevirtual #32
244: iconst_1
245: invokevirtual #33
248: ldc           #31
250: invokevirtual #32
253: invokevirtual #35
256: iload         5
258: iconst_1
259: if_icmpne     266
262: iconst_1
263: goto          267
266: iconst_0
267: invokestatic  #36
270: aload         6
272: invokestatic  #51
275: return
Exception table:
from    to  target type
116   141   144   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0261
Start line: 5633
End line: 0
Method source code: 
    public void test0261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0261");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.defaultDescPad = '4';
        helpFormatter0.setNewLine("");
        helpFormatter0.defaultWidth = '4';
        org.apache.commons.cli.HelpFormatter helpFormatter10 = new org.apache.commons.cli.HelpFormatter();
        int int11 = helpFormatter10.getLeftPadding();
        java.lang.String str12 = helpFormatter10.defaultLongOptPrefix;
        java.lang.String str13 = helpFormatter10.getOptPrefix();
        java.util.Comparator comparator14 = helpFormatter10.optionComparator;
        java.util.Comparator comparator15 = helpFormatter10.optionComparator;
        helpFormatter0.optionComparator = comparator15;
        int int17 = helpFormatter0.getLeftPadding();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "--" + "'", str12, "--");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "-" + "'", str13, "-");
        org.junit.Assert.assertNotNull(comparator14);
        org.junit.Assert.assertNotNull(comparator15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #362
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: bipush        52
47: putfield      #76
50: aload_1
51: ldc           #10
53: invokevirtual #131
56: aload_1
57: bipush        52
59: putfield      #110
62: new           #8
65: dup
66: invokespecial #9
69: astore_3
70: aload_3
71: invokevirtual #22
74: istore        4
76: aload_3
77: getfield      #55
80: astore        5
82: aload_3
83: invokevirtual #123
86: astore        6
88: aload_3
89: getfield      #47
92: astore        7
94: aload_3
95: getfield      #47
98: astore        8
100: aload_1
101: aload         8
103: putfield      #47
106: aload_1
107: invokevirtual #22
110: istore        9
112: new           #29
115: dup
116: invokespecial #30
119: ldc           #31
121: invokevirtual #32
124: iload_2
125: invokevirtual #33
128: ldc           #34
130: invokevirtual #32
133: iconst_1
134: invokevirtual #33
137: ldc           #31
139: invokevirtual #32
142: invokevirtual #35
145: iload_2
146: iconst_1
147: if_icmpne     154
150: iconst_1
151: goto          155
154: iconst_0
155: invokestatic  #36
158: new           #29
161: dup
162: invokespecial #30
165: ldc           #31
167: invokevirtual #32
170: iload         4
172: invokevirtual #33
175: ldc           #34
177: invokevirtual #32
180: iconst_1
181: invokevirtual #33
184: ldc           #31
186: invokevirtual #32
189: invokevirtual #35
192: iload         4
194: iconst_1
195: if_icmpne     202
198: iconst_1
199: goto          203
202: iconst_0
203: invokestatic  #36
206: new           #29
209: dup
210: invokespecial #30
213: ldc           #31
215: invokevirtual #32
218: aload         5
220: invokevirtual #32
223: ldc           #52
225: invokevirtual #32
228: invokevirtual #35
231: aload         5
233: ldc           #44
235: invokestatic  #53
238: new           #29
241: dup
242: invokespecial #30
245: ldc           #31
247: invokevirtual #32
250: aload         6
252: invokevirtual #32
255: ldc           #66
257: invokevirtual #32
260: invokevirtual #35
263: aload         6
265: ldc           #67
267: invokestatic  #53
270: aload         7
272: invokestatic  #51
275: aload         8
277: invokestatic  #51
280: new           #29
283: dup
284: invokespecial #30
287: ldc           #31
289: invokevirtual #32
292: iload         9
294: invokevirtual #33
297: ldc           #34
299: invokevirtual #32
302: iconst_1
303: invokevirtual #33
306: ldc           #31
308: invokevirtual #32
311: invokevirtual #35
314: iload         9
316: iconst_1
317: if_icmpne     324
320: iconst_1
321: goto          325
324: iconst_0
325: invokestatic  #36
328: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0262
Start line: 5660
End line: 0
Method source code: 
    public void test0262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0262");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str6 = helpFormatter0.getNewLine();
        helpFormatter0.setSyntaxPrefix(" ");
        java.util.Comparator comparator9 = helpFormatter0.getOptionComparator();
        java.io.PrintWriter printWriter10 = null;
        org.apache.commons.cli.Options options14 = null;
        try {
            helpFormatter0.printHelp(printWriter10, (int) '4', "   ", "   ", options14, 0, 0, "   ", true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\n" + "'", str6, "\n");
        org.junit.Assert.assertNotNull(comparator9);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #363
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #10
36: invokevirtual #11
39: aload_1
40: ldc           #10
42: putfield      #55
45: aload_1
46: getfield      #55
49: astore_2
50: aload_1
51: invokevirtual #72
54: astore_3
55: aload_1
56: ldc           #24
58: invokevirtual #39
61: aload_1
62: invokevirtual #106
65: astore        4
67: aconst_null
68: astore        5
70: aconst_null
71: astore        6
73: aload_1
74: aload         5
76: bipush        52
78: ldc_w         #259
81: ldc_w         #259
84: aload         6
86: iconst_0
87: iconst_0
88: ldc_w         #259
91: iconst_1
92: invokevirtual #40
95: ldc           #14
97: invokestatic  #15
100: goto          105
103: astore        7
105: new           #29
108: dup
109: invokespecial #30
112: ldc           #31
114: invokevirtual #32
117: aload_2
118: invokevirtual #32
121: ldc           #68
123: invokevirtual #32
126: invokevirtual #35
129: aload_2
130: ldc           #10
132: invokestatic  #53
135: new           #29
138: dup
139: invokespecial #30
142: ldc           #31
144: invokevirtual #32
147: aload_3
148: invokevirtual #32
151: ldc           #74
153: invokevirtual #32
156: invokevirtual #35
159: aload_3
160: ldc           #65
162: invokestatic  #53
165: aload         4
167: invokestatic  #51
170: return
Exception table:
from    to  target type
73   100   103   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0263
Start line: 5685
End line: 0
Method source code: 
    public void test0263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0263");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.lang.String str1 = helpFormatter0.defaultSyntaxPrefix;
        java.util.Comparator comparator2 = helpFormatter0.optionComparator;
        java.lang.String str3 = helpFormatter0.defaultArgName;
        java.util.Comparator comparator4 = helpFormatter0.optionComparator;
        java.lang.String str5 = helpFormatter0.getLongOptSeparator();
        int int6 = helpFormatter0.getDescPadding();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "usage: " + "'", str1, "usage: ");
        org.junit.Assert.assertNotNull(comparator2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "arg" + "'", str3, "arg");
        org.junit.Assert.assertNotNull(comparator4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + " " + "'", str5, " ");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 3 + "'", int6 == 3);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #364
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: getfield      #97
37: astore_2
38: aload_1
39: getfield      #47
42: astore_3
43: aload_1
44: getfield      #77
47: astore        4
49: aload_1
50: getfield      #47
53: astore        5
55: aload_1
56: invokevirtual #86
59: astore        6
61: aload_1
62: invokevirtual #118
65: istore        7
67: new           #29
70: dup
71: invokespecial #30
74: ldc           #31
76: invokevirtual #32
79: aload_2
80: invokevirtual #32
83: ldc           #99
85: invokevirtual #32
88: invokevirtual #35
91: aload_2
92: ldc           #12
94: invokestatic  #53
97: aload_3
98: invokestatic  #51
101: new           #29
104: dup
105: invokespecial #30
108: ldc           #31
110: invokevirtual #32
113: aload         4
115: invokevirtual #32
118: ldc           #78
120: invokevirtual #32
123: invokevirtual #35
126: aload         4
128: ldc           #79
130: invokestatic  #53
133: aload         5
135: invokestatic  #51
138: new           #29
141: dup
142: invokespecial #30
145: ldc           #31
147: invokevirtual #32
150: aload         6
152: invokevirtual #32
155: ldc           #88
157: invokevirtual #32
160: invokevirtual #35
163: aload         6
165: ldc           #24
167: invokestatic  #53
170: new           #29
173: dup
174: invokespecial #30
177: ldc           #31
179: invokevirtual #32
182: iload         7
184: invokevirtual #33
187: ldc           #34
189: invokevirtual #32
192: iconst_3
193: invokevirtual #33
196: ldc           #31
198: invokevirtual #32
201: invokevirtual #35
204: iload         7
206: iconst_3
207: if_icmpne     214
210: iconst_1
211: goto          215
214: iconst_0
215: invokestatic  #36
218: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0264
Start line: 5704
End line: 0
Method source code: 
    public void test0264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0264");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.getArgName();
        helpFormatter0.defaultNewLine = "\n";
        helpFormatter0.defaultLeftPad = (byte) -1;
        helpFormatter0.setLongOptSeparator("");
        org.apache.commons.cli.HelpFormatter helpFormatter9 = new org.apache.commons.cli.HelpFormatter();
        int int10 = helpFormatter9.getLeftPadding();
        helpFormatter9.defaultNewLine = "";
        helpFormatter9.setDescPadding(10);
        helpFormatter9.setSyntaxPrefix(" ");
        java.util.Comparator comparator17 = helpFormatter9.getOptionComparator();
        helpFormatter0.setOptionComparator(comparator17);
        java.lang.String str19 = helpFormatter0.getLongOptPrefix();
        java.lang.String str20 = helpFormatter0.getOptPrefix();
        java.lang.String str21 = helpFormatter0.getArgName();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "arg" + "'", str2, "arg");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(comparator17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "--" + "'", str19, "--");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "-" + "'", str20, "-");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "arg" + "'", str21, "arg");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #365
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: invokevirtual #104
42: astore_3
43: aload_1
44: ldc           #65
46: putfield      #23
49: aload_1
50: iconst_m1
51: putfield      #60
54: aload_1
55: ldc           #10
57: invokevirtual #91
60: new           #8
63: dup
64: invokespecial #9
67: astore        4
69: aload         4
71: invokevirtual #22
74: istore        5
76: aload         4
78: ldc           #10
80: putfield      #23
83: aload         4
85: bipush        10
87: invokevirtual #38
90: aload         4
92: ldc           #24
94: invokevirtual #39
97: aload         4
99: invokevirtual #106
102: astore        6
104: aload_1
105: aload         6
107: invokevirtual #152
110: aload_1
111: invokevirtual #48
114: astore        7
116: aload_1
117: invokevirtual #123
120: astore        8
122: aload_1
123: invokevirtual #104
126: astore        9
128: new           #29
131: dup
132: invokespecial #30
135: ldc           #31
137: invokevirtual #32
140: iload_2
141: invokevirtual #33
144: ldc           #34
146: invokevirtual #32
149: iconst_1
150: invokevirtual #33
153: ldc           #31
155: invokevirtual #32
158: invokevirtual #35
161: iload_2
162: iconst_1
163: if_icmpne     170
166: iconst_1
167: goto          171
170: iconst_0
171: invokestatic  #36
174: new           #29
177: dup
178: invokespecial #30
181: ldc           #31
183: invokevirtual #32
186: aload_3
187: invokevirtual #32
190: ldc           #78
192: invokevirtual #32
195: invokevirtual #35
198: aload_3
199: ldc           #79
201: invokestatic  #53
204: new           #29
207: dup
208: invokespecial #30
211: ldc           #31
213: invokevirtual #32
216: iload         5
218: invokevirtual #33
221: ldc           #34
223: invokevirtual #32
226: iconst_1
227: invokevirtual #33
230: ldc           #31
232: invokevirtual #32
235: invokevirtual #35
238: iload         5
240: iconst_1
241: if_icmpne     248
244: iconst_1
245: goto          249
248: iconst_0
249: invokestatic  #36
252: aload         6
254: invokestatic  #51
257: new           #29
260: dup
261: invokespecial #30
264: ldc           #31
266: invokevirtual #32
269: aload         7
271: invokevirtual #32
274: ldc           #52
276: invokevirtual #32
279: invokevirtual #35
282: aload         7
284: ldc           #44
286: invokestatic  #53
289: new           #29
292: dup
293: invokespecial #30
296: ldc           #31
298: invokevirtual #32
301: aload         8
303: invokevirtual #32
306: ldc           #66
308: invokevirtual #32
311: invokevirtual #35
314: aload         8
316: ldc           #67
318: invokestatic  #53
321: new           #29
324: dup
325: invokespecial #30
328: ldc           #31
330: invokevirtual #32
333: aload         9
335: invokevirtual #32
338: ldc           #78
340: invokevirtual #32
343: invokevirtual #35
346: aload         9
348: ldc           #79
350: invokestatic  #53
353: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0265
Start line: 5733
End line: 0
Method source code: 
    public void test0265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0265");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        helpFormatter0.defaultDescPad = 0;
        org.apache.commons.cli.Options options11 = null;
        try {
            helpFormatter0.printHelp((int) ' ', "", "", options11, "", false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: cmdLineSyntax not provided");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #366
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #10
36: invokevirtual #11
39: aload_1
40: ldc           #10
42: putfield      #55
45: aload_1
46: getfield      #55
49: astore_2
50: aload_1
51: iconst_0
52: putfield      #76
55: aconst_null
56: astore_3
57: aload_1
58: bipush        32
60: ldc           #10
62: ldc           #10
64: aload_3
65: ldc           #10
67: iconst_0
68: invokevirtual #26
71: ldc           #27
73: invokestatic  #15
76: goto          81
79: astore        4
81: new           #29
84: dup
85: invokespecial #30
88: ldc           #31
90: invokevirtual #32
93: aload_2
94: invokevirtual #32
97: ldc           #68
99: invokevirtual #32
102: invokevirtual #35
105: aload_2
106: ldc           #10
108: invokestatic  #53
111: return
Exception table:
from    to  target type
57    76    79   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0266
Start line: 5753
End line: 0
Method source code: 
    public void test0266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0266");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        java.lang.String str6 = helpFormatter0.getLongOptSeparator();
        java.lang.String str7 = helpFormatter0.getNewLine();
        helpFormatter0.defaultLongOptPrefix = "\n";
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + " " + "'", str6, " ");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #367
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: bipush        10
47: invokevirtual #38
50: aload_1
51: invokevirtual #86
54: astore_3
55: aload_1
56: invokevirtual #72
59: astore        4
61: aload_1
62: ldc           #65
64: putfield      #55
67: new           #29
70: dup
71: invokespecial #30
74: ldc           #31
76: invokevirtual #32
79: iload_2
80: invokevirtual #33
83: ldc           #34
85: invokevirtual #32
88: iconst_1
89: invokevirtual #33
92: ldc           #31
94: invokevirtual #32
97: invokevirtual #35
100: iload_2
101: iconst_1
102: if_icmpne     109
105: iconst_1
106: goto          110
109: iconst_0
110: invokestatic  #36
113: new           #29
116: dup
117: invokespecial #30
120: ldc           #31
122: invokevirtual #32
125: aload_3
126: invokevirtual #32
129: ldc           #88
131: invokevirtual #32
134: invokevirtual #35
137: aload_3
138: ldc           #24
140: invokestatic  #53
143: new           #29
146: dup
147: invokespecial #30
150: ldc           #31
152: invokevirtual #32
155: aload         4
157: invokevirtual #32
160: ldc           #68
162: invokevirtual #32
165: invokevirtual #35
168: aload         4
170: ldc           #10
172: invokestatic  #53
175: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0267
Start line: 5769
End line: 0
Method source code: 
    public void test0267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0267");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        java.lang.String str6 = helpFormatter0.getLongOptSeparator();
        java.lang.String str7 = helpFormatter0.getLongOptSeparator();
        java.lang.String str8 = helpFormatter0.getOptPrefix();
        java.io.PrintWriter printWriter9 = null;
        org.apache.commons.cli.Options options11 = null;
        try {
            helpFormatter0.printOptions(printWriter9, (int) (byte) 0, options11, 0, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + " " + "'", str6, " ");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + " " + "'", str7, " ");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "-" + "'", str8, "-");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #368
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: bipush        10
47: invokevirtual #38
50: aload_1
51: invokevirtual #86
54: astore_3
55: aload_1
56: invokevirtual #86
59: astore        4
61: aload_1
62: invokevirtual #123
65: astore        5
67: aconst_null
68: astore        6
70: aconst_null
71: astore        7
73: aload_1
74: aload         6
76: iconst_0
77: aload         7
79: iconst_0
80: iconst_0
81: invokevirtual #18
84: ldc           #14
86: invokestatic  #15
89: goto          94
92: astore        8
94: new           #29
97: dup
98: invokespecial #30
101: ldc           #31
103: invokevirtual #32
106: iload_2
107: invokevirtual #33
110: ldc           #34
112: invokevirtual #32
115: iconst_1
116: invokevirtual #33
119: ldc           #31
121: invokevirtual #32
124: invokevirtual #35
127: iload_2
128: iconst_1
129: if_icmpne     136
132: iconst_1
133: goto          137
136: iconst_0
137: invokestatic  #36
140: new           #29
143: dup
144: invokespecial #30
147: ldc           #31
149: invokevirtual #32
152: aload_3
153: invokevirtual #32
156: ldc           #88
158: invokevirtual #32
161: invokevirtual #35
164: aload_3
165: ldc           #24
167: invokestatic  #53
170: new           #29
173: dup
174: invokespecial #30
177: ldc           #31
179: invokevirtual #32
182: aload         4
184: invokevirtual #32
187: ldc           #88
189: invokevirtual #32
192: invokevirtual #35
195: aload         4
197: ldc           #24
199: invokestatic  #53
202: new           #29
205: dup
206: invokespecial #30
209: ldc           #31
211: invokevirtual #32
214: aload         5
216: invokevirtual #32
219: ldc           #66
221: invokevirtual #32
224: invokevirtual #35
227: aload         5
229: ldc           #67
231: invokestatic  #53
234: return
Exception table:
from    to  target type
73    89    92   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0268
Start line: 5795
End line: 0
Method source code: 
    public void test0268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0268");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.defaultLongOptPrefix;
        helpFormatter0.defaultSyntaxPrefix = "--";
        java.lang.String str5 = helpFormatter0.defaultOptPrefix;
        java.lang.String str6 = helpFormatter0.defaultLongOptPrefix;
        org.apache.commons.cli.Options options10 = null;
        try {
            helpFormatter0.printHelp((int) 'a', "--", " ", options10, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "--" + "'", str2, "--");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "-" + "'", str5, "-");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "--" + "'", str6, "--");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #369
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: getfield      #55
42: astore_3
43: aload_1
44: ldc           #44
46: putfield      #97
49: aload_1
50: getfield      #63
53: astore        4
55: aload_1
56: getfield      #55
59: astore        5
61: aconst_null
62: astore        6
64: aload_1
65: bipush        97
67: ldc           #44
69: ldc           #24
71: aload         6
73: ldc           #10
75: invokevirtual #45
78: ldc           #14
80: invokestatic  #15
83: goto          88
86: astore        7
88: new           #29
91: dup
92: invokespecial #30
95: ldc           #31
97: invokevirtual #32
100: iload_2
101: invokevirtual #33
104: ldc           #34
106: invokevirtual #32
109: iconst_1
110: invokevirtual #33
113: ldc           #31
115: invokevirtual #32
118: invokevirtual #35
121: iload_2
122: iconst_1
123: if_icmpne     130
126: iconst_1
127: goto          131
130: iconst_0
131: invokestatic  #36
134: new           #29
137: dup
138: invokespecial #30
141: ldc           #31
143: invokevirtual #32
146: aload_3
147: invokevirtual #32
150: ldc           #52
152: invokevirtual #32
155: invokevirtual #35
158: aload_3
159: ldc           #44
161: invokestatic  #53
164: new           #29
167: dup
168: invokespecial #30
171: ldc           #31
173: invokevirtual #32
176: aload         4
178: invokevirtual #32
181: ldc           #66
183: invokevirtual #32
186: invokevirtual #35
189: aload         4
191: ldc           #67
193: invokestatic  #53
196: new           #29
199: dup
200: invokespecial #30
203: ldc           #31
205: invokevirtual #32
208: aload         5
210: invokevirtual #32
213: ldc           #52
215: invokevirtual #32
218: invokevirtual #35
221: aload         5
223: ldc           #44
225: invokestatic  #53
228: return
Exception table:
from    to  target type
64    83    86   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0269
Start line: 5819
End line: 0
Method source code: 
    public void test0269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0269");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.lang.String str1 = helpFormatter0.defaultSyntaxPrefix;
        int int2 = helpFormatter0.getWidth();
        helpFormatter0.setNewLine("");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "usage: " + "'", str1, "usage: ");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 74 + "'", int2 == 74);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #370
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: getfield      #97
37: astore_2
38: aload_1
39: invokevirtual #129
42: istore_3
43: aload_1
44: ldc           #10
46: invokevirtual #131
49: new           #29
52: dup
53: invokespecial #30
56: ldc           #31
58: invokevirtual #32
61: aload_2
62: invokevirtual #32
65: ldc           #99
67: invokevirtual #32
70: invokevirtual #35
73: aload_2
74: ldc           #12
76: invokestatic  #53
79: new           #29
82: dup
83: invokespecial #30
86: ldc           #31
88: invokevirtual #32
91: iload_3
92: invokevirtual #33
95: ldc           #34
97: invokevirtual #32
100: bipush        74
102: invokevirtual #33
105: ldc           #31
107: invokevirtual #32
110: invokevirtual #35
113: iload_3
114: bipush        74
116: if_icmpne     123
119: iconst_1
120: goto          124
123: iconst_0
124: invokestatic  #36
127: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0270
Start line: 5831
End line: 0
Method source code: 
    public void test0270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0270");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.defaultLongOptPrefix = "hi!";
        helpFormatter0.setWidth((int) (short) 0);
        int int5 = helpFormatter0.getDescPadding();
        java.lang.String str6 = helpFormatter0.defaultLongOptPrefix;
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 3 + "'", int5 == 3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #371
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #25
36: putfield      #55
39: aload_1
40: iconst_0
41: invokevirtual #156
44: aload_1
45: invokevirtual #118
48: istore_2
49: aload_1
50: getfield      #55
53: astore_3
54: new           #29
57: dup
58: invokespecial #30
61: ldc           #31
63: invokevirtual #32
66: iload_2
67: invokevirtual #33
70: ldc           #34
72: invokevirtual #32
75: iconst_3
76: invokevirtual #33
79: ldc           #31
81: invokevirtual #32
84: invokevirtual #35
87: iload_2
88: iconst_3
89: if_icmpne     96
92: iconst_1
93: goto          97
96: iconst_0
97: invokestatic  #36
100: new           #29
103: dup
104: invokespecial #30
107: ldc           #31
109: invokevirtual #32
112: aload_3
113: invokevirtual #32
116: ldc_w         #372
119: invokevirtual #32
122: invokevirtual #35
125: aload_3
126: ldc           #25
128: invokestatic  #53
131: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0271
Start line: 5844
End line: 0
Method source code: 
    public void test0271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0271");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.util.Comparator comparator1 = helpFormatter0.optionComparator;
        int int2 = helpFormatter0.getLeftPadding();
        int int6 = helpFormatter0.findWrapPos("-", 100, (-1));
        org.apache.commons.cli.Options options8 = null;
        try {
            helpFormatter0.printHelp("                                                                                                    ", options8, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(comparator1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #373
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: getfield      #47
37: astore_2
38: aload_1
39: invokevirtual #22
42: istore_3
43: aload_1
44: ldc           #67
46: bipush        100
48: iconst_m1
49: invokevirtual #93
52: istore        4
54: aconst_null
55: astore        5
57: aload_1
58: ldc           #240
60: aload         5
62: iconst_0
63: invokevirtual #135
66: ldc           #14
68: invokestatic  #15
71: goto          76
74: astore        6
76: aload_2
77: invokestatic  #51
80: new           #29
83: dup
84: invokespecial #30
87: ldc           #31
89: invokevirtual #32
92: iload_3
93: invokevirtual #33
96: ldc           #34
98: invokevirtual #32
101: iconst_1
102: invokevirtual #33
105: ldc           #31
107: invokevirtual #32
110: invokevirtual #35
113: iload_3
114: iconst_1
115: if_icmpne     122
118: iconst_1
119: goto          123
122: iconst_0
123: invokestatic  #36
126: new           #29
129: dup
130: invokespecial #30
133: ldc           #31
135: invokevirtual #32
138: iload         4
140: invokevirtual #33
143: ldc           #34
145: invokevirtual #32
148: iconst_m1
149: invokevirtual #33
152: ldc           #31
154: invokevirtual #32
157: invokevirtual #35
160: iload         4
162: iconst_m1
163: if_icmpne     170
166: iconst_1
167: goto          171
170: iconst_0
171: invokestatic  #36
174: return
Exception table:
from    to  target type
57    71    74   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0272
Start line: 5865
End line: 0
Method source code: 
    public void test0272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0272");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.defaultDescPad = '4';
        helpFormatter0.setNewLine("");
        int int11 = helpFormatter0.findWrapPos("\n", (int) ' ', 3);
        java.util.Comparator comparator12 = helpFormatter0.optionComparator;
        helpFormatter0.defaultArgName = "                                                                                                 ";
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(comparator12);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #374
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: bipush        52
47: putfield      #76
50: aload_1
51: ldc           #10
53: invokevirtual #131
56: aload_1
57: ldc           #65
59: bipush        32
61: iconst_3
62: invokevirtual #93
65: istore_3
66: aload_1
67: getfield      #47
70: astore        4
72: aload_1
73: ldc           #141
75: putfield      #77
78: new           #29
81: dup
82: invokespecial #30
85: ldc           #31
87: invokevirtual #32
90: iload_2
91: invokevirtual #33
94: ldc           #34
96: invokevirtual #32
99: iconst_1
100: invokevirtual #33
103: ldc           #31
105: invokevirtual #32
108: invokevirtual #35
111: iload_2
112: iconst_1
113: if_icmpne     120
116: iconst_1
117: goto          121
120: iconst_0
121: invokestatic  #36
124: new           #29
127: dup
128: invokespecial #30
131: ldc           #31
133: invokevirtual #32
136: iload_3
137: invokevirtual #33
140: ldc           #34
142: invokevirtual #32
145: iconst_m1
146: invokevirtual #33
149: ldc           #31
151: invokevirtual #32
154: invokevirtual #35
157: iload_3
158: iconst_m1
159: if_icmpne     166
162: iconst_1
163: goto          167
166: iconst_0
167: invokestatic  #36
170: aload         4
172: invokestatic  #51
175: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0273
Start line: 5882
End line: 0
Method source code: 
    public void test0273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0273");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        java.lang.String str6 = helpFormatter0.rtrim("");
        java.lang.String str8 = helpFormatter0.rtrim("-");
        java.lang.String str10 = helpFormatter0.rtrim("-");
        helpFormatter0.defaultArgName = "-";
        helpFormatter0.defaultOptPrefix = "                                                                                                    ";
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "-" + "'", str8, "-");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "-" + "'", str10, "-");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #375
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: getfield      #63
48: astore_3
49: aload_1
50: ldc           #10
52: invokevirtual #64
55: astore        4
57: aload_1
58: ldc           #67
60: invokevirtual #64
63: astore        5
65: aload_1
66: ldc           #67
68: invokevirtual #64
71: astore        6
73: aload_1
74: ldc           #67
76: putfield      #77
79: aload_1
80: ldc           #240
82: putfield      #63
85: new           #29
88: dup
89: invokespecial #30
92: ldc           #31
94: invokevirtual #32
97: iload_2
98: invokevirtual #33
101: ldc           #34
103: invokevirtual #32
106: iconst_1
107: invokevirtual #33
110: ldc           #31
112: invokevirtual #32
115: invokevirtual #35
118: iload_2
119: iconst_1
120: if_icmpne     127
123: iconst_1
124: goto          128
127: iconst_0
128: invokestatic  #36
131: new           #29
134: dup
135: invokespecial #30
138: ldc           #31
140: invokevirtual #32
143: aload_3
144: invokevirtual #32
147: ldc           #66
149: invokevirtual #32
152: invokevirtual #35
155: aload_3
156: ldc           #67
158: invokestatic  #53
161: new           #29
164: dup
165: invokespecial #30
168: ldc           #31
170: invokevirtual #32
173: aload         4
175: invokevirtual #32
178: ldc           #68
180: invokevirtual #32
183: invokevirtual #35
186: aload         4
188: ldc           #10
190: invokestatic  #53
193: new           #29
196: dup
197: invokespecial #30
200: ldc           #31
202: invokevirtual #32
205: aload         5
207: invokevirtual #32
210: ldc           #66
212: invokevirtual #32
215: invokevirtual #35
218: aload         5
220: ldc           #67
222: invokestatic  #53
225: new           #29
228: dup
229: invokespecial #30
232: ldc           #31
234: invokevirtual #32
237: aload         6
239: invokevirtual #32
242: ldc           #66
244: invokevirtual #32
247: invokevirtual #35
250: aload         6
252: ldc           #67
254: invokestatic  #53
257: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0274
Start line: 5902
End line: 0
Method source code: 
    public void test0274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0274");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.defaultArgName;
        java.lang.String str3 = helpFormatter0.defaultNewLine;
        helpFormatter0.defaultLeftPad = 10;
        java.lang.String str6 = helpFormatter0.defaultSyntaxPrefix;
        java.util.Comparator comparator7 = null;
        helpFormatter0.setOptionComparator(comparator7);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "arg" + "'", str2, "arg");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\n" + "'", str3, "\n");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "usage: " + "'", str6, "usage: ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #376
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: getfield      #77
42: astore_3
43: aload_1
44: getfield      #23
47: astore        4
49: aload_1
50: bipush        10
52: putfield      #60
55: aload_1
56: getfield      #97
59: astore        5
61: aconst_null
62: astore        6
64: aload_1
65: aload         6
67: invokevirtual #152
70: new           #29
73: dup
74: invokespecial #30
77: ldc           #31
79: invokevirtual #32
82: iload_2
83: invokevirtual #33
86: ldc           #34
88: invokevirtual #32
91: iconst_1
92: invokevirtual #33
95: ldc           #31
97: invokevirtual #32
100: invokevirtual #35
103: iload_2
104: iconst_1
105: if_icmpne     112
108: iconst_1
109: goto          113
112: iconst_0
113: invokestatic  #36
116: new           #29
119: dup
120: invokespecial #30
123: ldc           #31
125: invokevirtual #32
128: aload_3
129: invokevirtual #32
132: ldc           #78
134: invokevirtual #32
137: invokevirtual #35
140: aload_3
141: ldc           #79
143: invokestatic  #53
146: new           #29
149: dup
150: invokespecial #30
153: ldc           #31
155: invokevirtual #32
158: aload         4
160: invokevirtual #32
163: ldc           #74
165: invokevirtual #32
168: invokevirtual #35
171: aload         4
173: ldc           #65
175: invokestatic  #53
178: new           #29
181: dup
182: invokespecial #30
185: ldc           #31
187: invokevirtual #32
190: aload         5
192: invokevirtual #32
195: ldc           #99
197: invokevirtual #32
200: invokevirtual #35
203: aload         5
205: ldc           #12
207: invokestatic  #53
210: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0275
Start line: 5920
End line: 0
Method source code: 
    public void test0275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0275");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.util.Comparator comparator1 = helpFormatter0.optionComparator;
        int int2 = helpFormatter0.defaultLeftPad;
        helpFormatter0.setSyntaxPrefix("");
        java.lang.String str6 = helpFormatter0.rtrim("          ");
        org.junit.Assert.assertNotNull(comparator1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #377
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: getfield      #47
37: astore_2
38: aload_1
39: getfield      #60
42: istore_3
43: aload_1
44: ldc           #10
46: invokevirtual #39
49: aload_1
50: ldc           #114
52: invokevirtual #64
55: astore        4
57: aload_2
58: invokestatic  #51
61: new           #29
64: dup
65: invokespecial #30
68: ldc           #31
70: invokevirtual #32
73: iload_3
74: invokevirtual #33
77: ldc           #34
79: invokevirtual #32
82: iconst_1
83: invokevirtual #33
86: ldc           #31
88: invokevirtual #32
91: invokevirtual #35
94: iload_3
95: iconst_1
96: if_icmpne     103
99: iconst_1
100: goto          104
103: iconst_0
104: invokestatic  #36
107: new           #29
110: dup
111: invokespecial #30
114: ldc           #31
116: invokevirtual #32
119: aload         4
121: invokevirtual #32
124: ldc           #68
126: invokevirtual #32
129: invokevirtual #35
132: aload         4
134: ldc           #10
136: invokestatic  #53
139: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0276
Start line: 5934
End line: 0
Method source code: 
    public void test0276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0276");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.util.Comparator comparator1 = helpFormatter0.optionComparator;
        helpFormatter0.defaultArgName = "";
        helpFormatter0.setLongOptSeparator("                                                    ");
        org.junit.Assert.assertNotNull(comparator1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #378
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: getfield      #47
37: astore_2
38: aload_1
39: ldc           #10
41: putfield      #77
44: aload_1
45: ldc_w         #313
48: invokevirtual #91
51: aload_2
52: invokestatic  #51
55: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0277
Start line: 5945
End line: 0
Method source code: 
    public void test0277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0277");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setLongOptPrefix(" ");
        helpFormatter0.defaultDescPad = (short) 10;
        java.lang.String str9 = helpFormatter0.defaultArgName;
        helpFormatter0.setSyntaxPrefix("");
        helpFormatter0.defaultOptPrefix = "                                                                                                 ";
        helpFormatter0.setLongOptPrefix("          ");
        java.lang.String str16 = helpFormatter0.defaultArgName;
        helpFormatter0.defaultOptPrefix = "--";
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "arg" + "'", str9, "arg");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "arg" + "'", str16, "arg");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #379
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: getfield      #63
48: astore_3
49: aload_1
50: ldc           #24
52: invokevirtual #49
55: aload_1
56: bipush        10
58: putfield      #76
61: aload_1
62: getfield      #77
65: astore        4
67: aload_1
68: ldc           #10
70: invokevirtual #39
73: aload_1
74: ldc           #141
76: putfield      #63
79: aload_1
80: ldc           #114
82: invokevirtual #49
85: aload_1
86: getfield      #77
89: astore        5
91: aload_1
92: ldc           #44
94: putfield      #63
97: new           #29
100: dup
101: invokespecial #30
104: ldc           #31
106: invokevirtual #32
109: iload_2
110: invokevirtual #33
113: ldc           #34
115: invokevirtual #32
118: iconst_1
119: invokevirtual #33
122: ldc           #31
124: invokevirtual #32
127: invokevirtual #35
130: iload_2
131: iconst_1
132: if_icmpne     139
135: iconst_1
136: goto          140
139: iconst_0
140: invokestatic  #36
143: new           #29
146: dup
147: invokespecial #30
150: ldc           #31
152: invokevirtual #32
155: aload_3
156: invokevirtual #32
159: ldc           #66
161: invokevirtual #32
164: invokevirtual #35
167: aload_3
168: ldc           #67
170: invokestatic  #53
173: new           #29
176: dup
177: invokespecial #30
180: ldc           #31
182: invokevirtual #32
185: aload         4
187: invokevirtual #32
190: ldc           #78
192: invokevirtual #32
195: invokevirtual #35
198: aload         4
200: ldc           #79
202: invokestatic  #53
205: new           #29
208: dup
209: invokespecial #30
212: ldc           #31
214: invokevirtual #32
217: aload         5
219: invokevirtual #32
222: ldc           #78
224: invokevirtual #32
227: invokevirtual #35
230: aload         5
232: ldc           #79
234: invokestatic  #53
237: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0278
Start line: 5967
End line: 0
Method source code: 
    public void test0278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0278");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setLongOptPrefix(" ");
        java.lang.String str7 = helpFormatter0.getLongOptPrefix();
        java.lang.String str8 = helpFormatter0.defaultNewLine;
        java.lang.String str9 = helpFormatter0.defaultLongOptPrefix;
        org.apache.commons.cli.Options options12 = null;
        try {
            helpFormatter0.printHelp("                                                                                                 ", "", options12, "-", false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + " " + "'", str7, " ");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + " " + "'", str9, " ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #380
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: getfield      #63
48: astore_3
49: aload_1
50: ldc           #24
52: invokevirtual #49
55: aload_1
56: invokevirtual #48
59: astore        4
61: aload_1
62: getfield      #23
65: astore        5
67: aload_1
68: getfield      #55
71: astore        6
73: aconst_null
74: astore        7
76: aload_1
77: ldc           #141
79: ldc           #10
81: aload         7
83: ldc           #67
85: iconst_0
86: invokevirtual #73
89: ldc           #14
91: invokestatic  #15
94: goto          99
97: astore        8
99: new           #29
102: dup
103: invokespecial #30
106: ldc           #31
108: invokevirtual #32
111: iload_2
112: invokevirtual #33
115: ldc           #34
117: invokevirtual #32
120: iconst_1
121: invokevirtual #33
124: ldc           #31
126: invokevirtual #32
129: invokevirtual #35
132: iload_2
133: iconst_1
134: if_icmpne     141
137: iconst_1
138: goto          142
141: iconst_0
142: invokestatic  #36
145: new           #29
148: dup
149: invokespecial #30
152: ldc           #31
154: invokevirtual #32
157: aload_3
158: invokevirtual #32
161: ldc           #66
163: invokevirtual #32
166: invokevirtual #35
169: aload_3
170: ldc           #67
172: invokestatic  #53
175: new           #29
178: dup
179: invokespecial #30
182: ldc           #31
184: invokevirtual #32
187: aload         4
189: invokevirtual #32
192: ldc           #88
194: invokevirtual #32
197: invokevirtual #35
200: aload         4
202: ldc           #24
204: invokestatic  #53
207: new           #29
210: dup
211: invokespecial #30
214: ldc           #31
216: invokevirtual #32
219: aload         5
221: invokevirtual #32
224: ldc           #68
226: invokevirtual #32
229: invokevirtual #35
232: aload         5
234: ldc           #10
236: invokestatic  #53
239: new           #29
242: dup
243: invokespecial #30
246: ldc           #31
248: invokevirtual #32
251: aload         6
253: invokevirtual #32
256: ldc           #88
258: invokevirtual #32
261: invokevirtual #35
264: aload         6
266: ldc           #24
268: invokestatic  #53
271: return
Exception table:
from    to  target type
76    94    97   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0279
Start line: 5994
End line: 0
Method source code: 
    public void test0279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0279");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        java.lang.String str6 = helpFormatter0.rtrim("");
        java.lang.String str8 = helpFormatter0.rtrim("-");
        helpFormatter0.defaultOptPrefix = "--";
        helpFormatter0.defaultDescPad = 0;
        helpFormatter0.setLongOptPrefix("");
        try {
            java.lang.String str16 = helpFormatter0.createPadding((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: null");
        } catch (java.lang.NegativeArraySizeException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "-" + "'", str8, "-");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #381
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: getfield      #63
48: astore_3
49: aload_1
50: ldc           #10
52: invokevirtual #64
55: astore        4
57: aload_1
58: ldc           #67
60: invokevirtual #64
63: astore        5
65: aload_1
66: ldc           #44
68: putfield      #63
71: aload_1
72: iconst_0
73: putfield      #76
76: aload_1
77: ldc           #10
79: invokevirtual #49
82: aload_1
83: iconst_m1
84: invokevirtual #108
87: astore        6
89: ldc           #19
91: invokestatic  #15
94: goto          99
97: astore        6
99: new           #29
102: dup
103: invokespecial #30
106: ldc           #31
108: invokevirtual #32
111: iload_2
112: invokevirtual #33
115: ldc           #34
117: invokevirtual #32
120: iconst_1
121: invokevirtual #33
124: ldc           #31
126: invokevirtual #32
129: invokevirtual #35
132: iload_2
133: iconst_1
134: if_icmpne     141
137: iconst_1
138: goto          142
141: iconst_0
142: invokestatic  #36
145: new           #29
148: dup
149: invokespecial #30
152: ldc           #31
154: invokevirtual #32
157: aload_3
158: invokevirtual #32
161: ldc           #66
163: invokevirtual #32
166: invokevirtual #35
169: aload_3
170: ldc           #67
172: invokestatic  #53
175: new           #29
178: dup
179: invokespecial #30
182: ldc           #31
184: invokevirtual #32
187: aload         4
189: invokevirtual #32
192: ldc           #68
194: invokevirtual #32
197: invokevirtual #35
200: aload         4
202: ldc           #10
204: invokestatic  #53
207: new           #29
210: dup
211: invokespecial #30
214: ldc           #31
216: invokevirtual #32
219: aload         5
221: invokevirtual #32
224: ldc           #66
226: invokevirtual #32
229: invokevirtual #35
232: aload         5
234: ldc           #67
236: invokestatic  #53
239: return
Exception table:
from    to  target type
82    94    97   Class java/lang/NegativeArraySizeException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0280
Start line: 6020
End line: 0
Method source code: 
    public void test0280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0280");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        helpFormatter0.defaultDescPad = 0;
        int int8 = helpFormatter0.getLeftPadding();
        helpFormatter0.setNewLine("--");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #382
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #10
36: invokevirtual #11
39: aload_1
40: ldc           #10
42: putfield      #55
45: aload_1
46: getfield      #55
49: astore_2
50: aload_1
51: iconst_0
52: putfield      #76
55: aload_1
56: invokevirtual #22
59: istore_3
60: aload_1
61: ldc           #44
63: invokevirtual #131
66: new           #29
69: dup
70: invokespecial #30
73: ldc           #31
75: invokevirtual #32
78: aload_2
79: invokevirtual #32
82: ldc           #68
84: invokevirtual #32
87: invokevirtual #35
90: aload_2
91: ldc           #10
93: invokestatic  #53
96: new           #29
99: dup
100: invokespecial #30
103: ldc           #31
105: invokevirtual #32
108: iload_3
109: invokevirtual #33
112: ldc           #34
114: invokevirtual #32
117: iconst_1
118: invokevirtual #33
121: ldc           #31
123: invokevirtual #32
126: invokevirtual #35
129: iload_3
130: iconst_1
131: if_icmpne     138
134: iconst_1
135: goto          139
138: iconst_0
139: invokestatic  #36
142: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0281
Start line: 6035
End line: 0
Method source code: 
    public void test0281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0281");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        helpFormatter0.setWidth(1);
        helpFormatter0.defaultArgName = " ";
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #383
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #10
36: invokevirtual #11
39: aload_1
40: ldc           #10
42: putfield      #55
45: aload_1
46: getfield      #55
49: astore_2
50: aload_1
51: iconst_1
52: invokevirtual #156
55: aload_1
56: ldc           #24
58: putfield      #77
61: new           #29
64: dup
65: invokespecial #30
68: ldc           #31
70: invokevirtual #32
73: aload_2
74: invokevirtual #32
77: ldc           #68
79: invokevirtual #32
82: invokevirtual #35
85: aload_2
86: ldc           #10
88: invokestatic  #53
91: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0282
Start line: 6048
End line: 0
Method source code: 
    public void test0282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0282");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        java.lang.String str6 = helpFormatter0.rtrim("");
        java.lang.String str8 = helpFormatter0.rtrim("-");
        java.lang.String str10 = helpFormatter0.rtrim("-");
        org.apache.commons.cli.Options options13 = null;
        try {
            helpFormatter0.printHelp("--", "                                                                                                 ", options13, "\n", false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "-" + "'", str8, "-");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "-" + "'", str10, "-");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #384
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: getfield      #63
48: astore_3
49: aload_1
50: ldc           #10
52: invokevirtual #64
55: astore        4
57: aload_1
58: ldc           #67
60: invokevirtual #64
63: astore        5
65: aload_1
66: ldc           #67
68: invokevirtual #64
71: astore        6
73: aconst_null
74: astore        7
76: aload_1
77: ldc           #44
79: ldc           #141
81: aload         7
83: ldc           #65
85: iconst_0
86: invokevirtual #73
89: ldc           #14
91: invokestatic  #15
94: goto          99
97: astore        8
99: new           #29
102: dup
103: invokespecial #30
106: ldc           #31
108: invokevirtual #32
111: iload_2
112: invokevirtual #33
115: ldc           #34
117: invokevirtual #32
120: iconst_1
121: invokevirtual #33
124: ldc           #31
126: invokevirtual #32
129: invokevirtual #35
132: iload_2
133: iconst_1
134: if_icmpne     141
137: iconst_1
138: goto          142
141: iconst_0
142: invokestatic  #36
145: new           #29
148: dup
149: invokespecial #30
152: ldc           #31
154: invokevirtual #32
157: aload_3
158: invokevirtual #32
161: ldc           #66
163: invokevirtual #32
166: invokevirtual #35
169: aload_3
170: ldc           #67
172: invokestatic  #53
175: new           #29
178: dup
179: invokespecial #30
182: ldc           #31
184: invokevirtual #32
187: aload         4
189: invokevirtual #32
192: ldc           #68
194: invokevirtual #32
197: invokevirtual #35
200: aload         4
202: ldc           #10
204: invokestatic  #53
207: new           #29
210: dup
211: invokespecial #30
214: ldc           #31
216: invokevirtual #32
219: aload         5
221: invokevirtual #32
224: ldc           #66
226: invokevirtual #32
229: invokevirtual #35
232: aload         5
234: ldc           #67
236: invokestatic  #53
239: new           #29
242: dup
243: invokespecial #30
246: ldc           #31
248: invokevirtual #32
251: aload         6
253: invokevirtual #32
256: ldc           #66
258: invokevirtual #32
261: invokevirtual #35
264: aload         6
266: ldc           #67
268: invokestatic  #53
271: return
Exception table:
from    to  target type
76    94    97   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0283
Start line: 6074
End line: 0
Method source code: 
    public void test0283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0283");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.lang.String str1 = helpFormatter0.defaultSyntaxPrefix;
        java.util.Comparator comparator2 = helpFormatter0.optionComparator;
        java.lang.String str3 = helpFormatter0.defaultArgName;
        java.io.PrintWriter printWriter4 = null;
        try {
            helpFormatter0.printWrapped(printWriter4, (-1), "arg");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "usage: " + "'", str1, "usage: ");
        org.junit.Assert.assertNotNull(comparator2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "arg" + "'", str3, "arg");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #385
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: getfield      #97
37: astore_2
38: aload_1
39: getfield      #47
42: astore_3
43: aload_1
44: getfield      #77
47: astore        4
49: aconst_null
50: astore        5
52: aload_1
53: aload         5
55: iconst_m1
56: ldc           #79
58: invokevirtual #82
61: ldc           #14
63: invokestatic  #15
66: goto          71
69: astore        6
71: new           #29
74: dup
75: invokespecial #30
78: ldc           #31
80: invokevirtual #32
83: aload_2
84: invokevirtual #32
87: ldc           #99
89: invokevirtual #32
92: invokevirtual #35
95: aload_2
96: ldc           #12
98: invokestatic  #53
101: aload_3
102: invokestatic  #51
105: new           #29
108: dup
109: invokespecial #30
112: ldc           #31
114: invokevirtual #32
117: aload         4
119: invokevirtual #32
122: ldc           #78
124: invokevirtual #32
127: invokevirtual #35
130: aload         4
132: ldc           #79
134: invokestatic  #53
137: return
Exception table:
from    to  target type
52    66    69   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0284
Start line: 6095
End line: 0
Method source code: 
    public void test0284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0284");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str6 = helpFormatter0.getNewLine();
        java.lang.String str7 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setDescPadding(74);
        java.util.Comparator comparator10 = helpFormatter0.getOptionComparator();
        java.lang.Class<?> wildcardClass11 = helpFormatter0.getClass();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\n" + "'", str6, "\n");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(comparator10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #386
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #10
36: invokevirtual #11
39: aload_1
40: ldc           #10
42: putfield      #55
45: aload_1
46: getfield      #55
49: astore_2
50: aload_1
51: invokevirtual #72
54: astore_3
55: aload_1
56: getfield      #63
59: astore        4
61: aload_1
62: bipush        74
64: invokevirtual #38
67: aload_1
68: invokevirtual #106
71: astore        5
73: aload_1
74: invokevirtual #56
77: astore        6
79: new           #29
82: dup
83: invokespecial #30
86: ldc           #31
88: invokevirtual #32
91: aload_2
92: invokevirtual #32
95: ldc           #68
97: invokevirtual #32
100: invokevirtual #35
103: aload_2
104: ldc           #10
106: invokestatic  #53
109: new           #29
112: dup
113: invokespecial #30
116: ldc           #31
118: invokevirtual #32
121: aload_3
122: invokevirtual #32
125: ldc           #74
127: invokevirtual #32
130: invokevirtual #35
133: aload_3
134: ldc           #65
136: invokestatic  #53
139: new           #29
142: dup
143: invokespecial #30
146: ldc           #31
148: invokevirtual #32
151: aload         4
153: invokevirtual #32
156: ldc           #68
158: invokevirtual #32
161: invokevirtual #35
164: aload         4
166: ldc           #10
168: invokestatic  #53
171: aload         5
173: invokestatic  #51
176: aload         6
178: invokestatic  #51
181: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0285
Start line: 6115
End line: 0
Method source code: 
    public void test0285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0285");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str3 = helpFormatter0.getOptPrefix();
        java.util.Comparator comparator4 = helpFormatter0.getOptionComparator();
        java.lang.String str5 = helpFormatter0.defaultSyntaxPrefix;
        java.io.PrintWriter printWriter6 = null;
        org.apache.commons.cli.Options options10 = null;
        try {
            helpFormatter0.printHelp(printWriter6, 97, "                                                                                                    ", "", options10, 0, 0, " ", true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "--" + "'", str2, "--");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "-" + "'", str3, "-");
        org.junit.Assert.assertNotNull(comparator4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "usage: " + "'", str5, "usage: ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #387
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: getfield      #55
42: astore_3
43: aload_1
44: invokevirtual #123
47: astore        4
49: aload_1
50: invokevirtual #106
53: astore        5
55: aload_1
56: getfield      #97
59: astore        6
61: aconst_null
62: astore        7
64: aconst_null
65: astore        8
67: aload_1
68: aload         7
70: bipush        97
72: ldc           #240
74: ldc           #10
76: aload         8
78: iconst_0
79: iconst_0
80: ldc           #24
82: iconst_1
83: invokevirtual #40
86: ldc           #14
88: invokestatic  #15
91: goto          96
94: astore        9
96: new           #29
99: dup
100: invokespecial #30
103: ldc           #31
105: invokevirtual #32
108: iload_2
109: invokevirtual #33
112: ldc           #34
114: invokevirtual #32
117: iconst_1
118: invokevirtual #33
121: ldc           #31
123: invokevirtual #32
126: invokevirtual #35
129: iload_2
130: iconst_1
131: if_icmpne     138
134: iconst_1
135: goto          139
138: iconst_0
139: invokestatic  #36
142: new           #29
145: dup
146: invokespecial #30
149: ldc           #31
151: invokevirtual #32
154: aload_3
155: invokevirtual #32
158: ldc           #52
160: invokevirtual #32
163: invokevirtual #35
166: aload_3
167: ldc           #44
169: invokestatic  #53
172: new           #29
175: dup
176: invokespecial #30
179: ldc           #31
181: invokevirtual #32
184: aload         4
186: invokevirtual #32
189: ldc           #66
191: invokevirtual #32
194: invokevirtual #35
197: aload         4
199: ldc           #67
201: invokestatic  #53
204: aload         5
206: invokestatic  #51
209: new           #29
212: dup
213: invokespecial #30
216: ldc           #31
218: invokevirtual #32
221: aload         6
223: invokevirtual #32
226: ldc           #99
228: invokevirtual #32
231: invokevirtual #35
234: aload         6
236: ldc           #12
238: invokestatic  #53
241: return
Exception table:
from    to  target type
67    91    94   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0286
Start line: 6141
End line: 0
Method source code: 
    public void test0286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0286");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        int int6 = helpFormatter0.defaultWidth;
        java.lang.String str7 = helpFormatter0.getLongOptPrefix();
        java.lang.String str8 = helpFormatter0.getLongOptPrefix();
        helpFormatter0.setLongOptSeparator("hi!");
        int int11 = helpFormatter0.getWidth();
        java.lang.String str12 = helpFormatter0.defaultSyntaxPrefix;
        org.apache.commons.cli.Options options16 = null;
        try {
            helpFormatter0.printHelp((int) (short) -1, "", "usage: ", options16, "                                                    ");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: cmdLineSyntax not provided");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "--" + "'", str5, "--");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 74 + "'", int6 == 74);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "--" + "'", str7, "--");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "--" + "'", str8, "--");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 74 + "'", int11 == 74);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "usage: " + "'", str12, "usage: ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #388
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: getfield      #63
48: astore_3
49: aload_1
50: getfield      #55
53: astore        4
55: aload_1
56: getfield      #110
59: istore        5
61: aload_1
62: invokevirtual #48
65: astore        6
67: aload_1
68: invokevirtual #48
71: astore        7
73: aload_1
74: ldc           #25
76: invokevirtual #91
79: aload_1
80: invokevirtual #129
83: istore        8
85: aload_1
86: getfield      #97
89: astore        9
91: aconst_null
92: astore        10
94: aload_1
95: iconst_m1
96: ldc           #10
98: ldc           #12
100: aload         10
102: ldc_w         #313
105: invokevirtual #45
108: ldc           #27
110: invokestatic  #15
113: goto          118
116: astore        11
118: new           #29
121: dup
122: invokespecial #30
125: ldc           #31
127: invokevirtual #32
130: iload_2
131: invokevirtual #33
134: ldc           #34
136: invokevirtual #32
139: iconst_1
140: invokevirtual #33
143: ldc           #31
145: invokevirtual #32
148: invokevirtual #35
151: iload_2
152: iconst_1
153: if_icmpne     160
156: iconst_1
157: goto          161
160: iconst_0
161: invokestatic  #36
164: new           #29
167: dup
168: invokespecial #30
171: ldc           #31
173: invokevirtual #32
176: aload_3
177: invokevirtual #32
180: ldc           #66
182: invokevirtual #32
185: invokevirtual #35
188: aload_3
189: ldc           #67
191: invokestatic  #53
194: new           #29
197: dup
198: invokespecial #30
201: ldc           #31
203: invokevirtual #32
206: aload         4
208: invokevirtual #32
211: ldc           #52
213: invokevirtual #32
216: invokevirtual #35
219: aload         4
221: ldc           #44
223: invokestatic  #53
226: new           #29
229: dup
230: invokespecial #30
233: ldc           #31
235: invokevirtual #32
238: iload         5
240: invokevirtual #33
243: ldc           #34
245: invokevirtual #32
248: bipush        74
250: invokevirtual #33
253: ldc           #31
255: invokevirtual #32
258: invokevirtual #35
261: iload         5
263: bipush        74
265: if_icmpne     272
268: iconst_1
269: goto          273
272: iconst_0
273: invokestatic  #36
276: new           #29
279: dup
280: invokespecial #30
283: ldc           #31
285: invokevirtual #32
288: aload         6
290: invokevirtual #32
293: ldc           #52
295: invokevirtual #32
298: invokevirtual #35
301: aload         6
303: ldc           #44
305: invokestatic  #53
308: new           #29
311: dup
312: invokespecial #30
315: ldc           #31
317: invokevirtual #32
320: aload         7
322: invokevirtual #32
325: ldc           #52
327: invokevirtual #32
330: invokevirtual #35
333: aload         7
335: ldc           #44
337: invokestatic  #53
340: new           #29
343: dup
344: invokespecial #30
347: ldc           #31
349: invokevirtual #32
352: iload         8
354: invokevirtual #33
357: ldc           #34
359: invokevirtual #32
362: bipush        74
364: invokevirtual #33
367: ldc           #31
369: invokevirtual #32
372: invokevirtual #35
375: iload         8
377: bipush        74
379: if_icmpne     386
382: iconst_1
383: goto          387
386: iconst_0
387: invokestatic  #36
390: new           #29
393: dup
394: invokespecial #30
397: ldc           #31
399: invokevirtual #32
402: aload         9
404: invokevirtual #32
407: ldc           #99
409: invokevirtual #32
412: invokevirtual #35
415: aload         9
417: ldc           #12
419: invokestatic  #53
422: return
Exception table:
from    to  target type
94   113   116   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0287
Start line: 6174
End line: 0
Method source code: 
    public void test0287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0287");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultOptPrefix;
        java.lang.String str6 = helpFormatter0.getLongOptPrefix();
        java.lang.String str7 = helpFormatter0.defaultOptPrefix;
        java.util.Comparator comparator8 = helpFormatter0.getOptionComparator();
        org.apache.commons.cli.Options options10 = null;
        try {
            helpFormatter0.printHelp("-", options10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(comparator8);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #389
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #10
36: invokevirtual #11
39: aload_1
40: ldc           #10
42: putfield      #55
45: aload_1
46: getfield      #63
49: astore_2
50: aload_1
51: invokevirtual #48
54: astore_3
55: aload_1
56: getfield      #63
59: astore        4
61: aload_1
62: invokevirtual #106
65: astore        5
67: aconst_null
68: astore        6
70: aload_1
71: ldc           #67
73: aload         6
75: invokevirtual #50
78: ldc           #14
80: invokestatic  #15
83: goto          88
86: astore        7
88: new           #29
91: dup
92: invokespecial #30
95: ldc           #31
97: invokevirtual #32
100: aload_2
101: invokevirtual #32
104: ldc           #68
106: invokevirtual #32
109: invokevirtual #35
112: aload_2
113: ldc           #10
115: invokestatic  #53
118: new           #29
121: dup
122: invokespecial #30
125: ldc           #31
127: invokevirtual #32
130: aload_3
131: invokevirtual #32
134: ldc           #68
136: invokevirtual #32
139: invokevirtual #35
142: aload_3
143: ldc           #10
145: invokestatic  #53
148: new           #29
151: dup
152: invokespecial #30
155: ldc           #31
157: invokevirtual #32
160: aload         4
162: invokevirtual #32
165: ldc           #68
167: invokevirtual #32
170: invokevirtual #35
173: aload         4
175: ldc           #10
177: invokestatic  #53
180: aload         5
182: invokestatic  #51
185: return
Exception table:
from    to  target type
70    83    86   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0288
Start line: 6199
End line: 0
Method source code: 
    public void test0288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0288");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.util.Comparator comparator1 = helpFormatter0.optionComparator;
        int int2 = helpFormatter0.getLeftPadding();
        java.lang.String str4 = helpFormatter0.rtrim("-");
        int int5 = helpFormatter0.defaultLeftPad;
        org.apache.commons.cli.Options options9 = null;
        try {
            helpFormatter0.printHelp((int) '#', "   ", "          ", options9, "usage: ");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(comparator1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #390
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: getfield      #47
37: astore_2
38: aload_1
39: invokevirtual #22
42: istore_3
43: aload_1
44: ldc           #67
46: invokevirtual #64
49: astore        4
51: aload_1
52: getfield      #60
55: istore        5
57: aconst_null
58: astore        6
60: aload_1
61: bipush        35
63: ldc_w         #259
66: ldc           #114
68: aload         6
70: ldc           #12
72: invokevirtual #45
75: ldc           #14
77: invokestatic  #15
80: goto          85
83: astore        7
85: aload_2
86: invokestatic  #51
89: new           #29
92: dup
93: invokespecial #30
96: ldc           #31
98: invokevirtual #32
101: iload_3
102: invokevirtual #33
105: ldc           #34
107: invokevirtual #32
110: iconst_1
111: invokevirtual #33
114: ldc           #31
116: invokevirtual #32
119: invokevirtual #35
122: iload_3
123: iconst_1
124: if_icmpne     131
127: iconst_1
128: goto          132
131: iconst_0
132: invokestatic  #36
135: new           #29
138: dup
139: invokespecial #30
142: ldc           #31
144: invokevirtual #32
147: aload         4
149: invokevirtual #32
152: ldc           #66
154: invokevirtual #32
157: invokevirtual #35
160: aload         4
162: ldc           #67
164: invokestatic  #53
167: new           #29
170: dup
171: invokespecial #30
174: ldc           #31
176: invokevirtual #32
179: iload         5
181: invokevirtual #33
184: ldc           #34
186: invokevirtual #32
189: iconst_1
190: invokevirtual #33
193: ldc           #31
195: invokevirtual #32
198: invokevirtual #35
201: iload         5
203: iconst_1
204: if_icmpne     211
207: iconst_1
208: goto          212
211: iconst_0
212: invokestatic  #36
215: return
Exception table:
from    to  target type
60    80    83   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0289
Start line: 6222
End line: 0
Method source code: 
    public void test0289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0289");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setLeftPadding((int) (byte) 0);
        helpFormatter0.setLongOptPrefix("                                                                                                 ");
        int int9 = helpFormatter0.getDescPadding();
        java.lang.Class<?> wildcardClass10 = helpFormatter0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 3 + "'", int9 == 3);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #391
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: getfield      #63
48: astore_3
49: aload_1
50: iconst_0
51: invokevirtual #193
54: aload_1
55: ldc           #141
57: invokevirtual #49
60: aload_1
61: invokevirtual #118
64: istore        4
66: aload_1
67: invokevirtual #56
70: astore        5
72: new           #29
75: dup
76: invokespecial #30
79: ldc           #31
81: invokevirtual #32
84: iload_2
85: invokevirtual #33
88: ldc           #34
90: invokevirtual #32
93: iconst_1
94: invokevirtual #33
97: ldc           #31
99: invokevirtual #32
102: invokevirtual #35
105: iload_2
106: iconst_1
107: if_icmpne     114
110: iconst_1
111: goto          115
114: iconst_0
115: invokestatic  #36
118: new           #29
121: dup
122: invokespecial #30
125: ldc           #31
127: invokevirtual #32
130: aload_3
131: invokevirtual #32
134: ldc           #66
136: invokevirtual #32
139: invokevirtual #35
142: aload_3
143: ldc           #67
145: invokestatic  #53
148: new           #29
151: dup
152: invokespecial #30
155: ldc           #31
157: invokevirtual #32
160: iload         4
162: invokevirtual #33
165: ldc           #34
167: invokevirtual #32
170: iconst_3
171: invokevirtual #33
174: ldc           #31
176: invokevirtual #32
179: invokevirtual #35
182: iload         4
184: iconst_3
185: if_icmpne     192
188: iconst_1
189: goto          193
192: iconst_0
193: invokestatic  #36
196: aload         5
198: invokestatic  #51
201: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0290
Start line: 6240
End line: 0
Method source code: 
    public void test0290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0290");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.defaultDescPad = '4';
        helpFormatter0.setNewLine("");
        helpFormatter0.setLongOptPrefix(" ");
        java.lang.String str10 = helpFormatter0.getLongOptPrefix();
        java.lang.String str12 = helpFormatter0.createPadding(100);
        int int13 = helpFormatter0.getDescPadding();
        helpFormatter0.setWidth(0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + " " + "'", str10, " ");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "                                                                                                    " + "'", str12, "                                                                                                    ");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #392
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: bipush        52
47: putfield      #76
50: aload_1
51: ldc           #10
53: invokevirtual #131
56: aload_1
57: ldc           #24
59: invokevirtual #49
62: aload_1
63: invokevirtual #48
66: astore_3
67: aload_1
68: bipush        100
70: invokevirtual #108
73: astore        4
75: aload_1
76: invokevirtual #118
79: istore        5
81: aload_1
82: iconst_0
83: invokevirtual #156
86: new           #29
89: dup
90: invokespecial #30
93: ldc           #31
95: invokevirtual #32
98: iload_2
99: invokevirtual #33
102: ldc           #34
104: invokevirtual #32
107: iconst_1
108: invokevirtual #33
111: ldc           #31
113: invokevirtual #32
116: invokevirtual #35
119: iload_2
120: iconst_1
121: if_icmpne     128
124: iconst_1
125: goto          129
128: iconst_0
129: invokestatic  #36
132: new           #29
135: dup
136: invokespecial #30
139: ldc           #31
141: invokevirtual #32
144: aload_3
145: invokevirtual #32
148: ldc           #88
150: invokevirtual #32
153: invokevirtual #35
156: aload_3
157: ldc           #24
159: invokestatic  #53
162: new           #29
165: dup
166: invokespecial #30
169: ldc           #31
171: invokevirtual #32
174: aload         4
176: invokevirtual #32
179: ldc_w         #299
182: invokevirtual #32
185: invokevirtual #35
188: aload         4
190: ldc           #240
192: invokestatic  #53
195: new           #29
198: dup
199: invokespecial #30
202: ldc           #31
204: invokevirtual #32
207: iload         5
209: invokevirtual #33
212: ldc           #34
214: invokevirtual #32
217: bipush        52
219: invokevirtual #33
222: ldc           #31
224: invokevirtual #32
227: invokevirtual #35
230: iload         5
232: bipush        52
234: if_icmpne     241
237: iconst_1
238: goto          242
241: iconst_0
242: invokestatic  #36
245: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0291
Start line: 6260
End line: 0
Method source code: 
    public void test0291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0291");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.defaultDescPad = '4';
        helpFormatter0.setNewLine("");
        helpFormatter0.setSyntaxPrefix("");
        java.lang.String str10 = helpFormatter0.getSyntaxPrefix();
        helpFormatter0.setWidth((-2));
        java.lang.String str13 = helpFormatter0.defaultNewLine;
        java.lang.String str14 = helpFormatter0.getArgName();
        java.lang.String str15 = helpFormatter0.getSyntaxPrefix();
        org.apache.commons.cli.Options options19 = null;
        try {
            helpFormatter0.printHelp((int) (byte) 10, "arg", "                                                                                                    ", options19, "   ", false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "arg" + "'", str14, "arg");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #393
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: bipush        52
47: putfield      #76
50: aload_1
51: ldc           #10
53: invokevirtual #131
56: aload_1
57: ldc           #10
59: invokevirtual #39
62: aload_1
63: invokevirtual #102
66: astore_3
67: aload_1
68: bipush        -2
70: invokevirtual #156
73: aload_1
74: getfield      #23
77: astore        4
79: aload_1
80: invokevirtual #104
83: astore        5
85: aload_1
86: invokevirtual #102
89: astore        6
91: aconst_null
92: astore        7
94: aload_1
95: bipush        10
97: ldc           #79
99: ldc           #240
101: aload         7
103: ldc_w         #259
106: iconst_0
107: invokevirtual #26
110: ldc           #14
112: invokestatic  #15
115: goto          120
118: astore        8
120: new           #29
123: dup
124: invokespecial #30
127: ldc           #31
129: invokevirtual #32
132: iload_2
133: invokevirtual #33
136: ldc           #34
138: invokevirtual #32
141: iconst_1
142: invokevirtual #33
145: ldc           #31
147: invokevirtual #32
150: invokevirtual #35
153: iload_2
154: iconst_1
155: if_icmpne     162
158: iconst_1
159: goto          163
162: iconst_0
163: invokestatic  #36
166: new           #29
169: dup
170: invokespecial #30
173: ldc           #31
175: invokevirtual #32
178: aload_3
179: invokevirtual #32
182: ldc           #68
184: invokevirtual #32
187: invokevirtual #35
190: aload_3
191: ldc           #10
193: invokestatic  #53
196: new           #29
199: dup
200: invokespecial #30
203: ldc           #31
205: invokevirtual #32
208: aload         4
210: invokevirtual #32
213: ldc           #68
215: invokevirtual #32
218: invokevirtual #35
221: aload         4
223: ldc           #10
225: invokestatic  #53
228: new           #29
231: dup
232: invokespecial #30
235: ldc           #31
237: invokevirtual #32
240: aload         5
242: invokevirtual #32
245: ldc           #78
247: invokevirtual #32
250: invokevirtual #35
253: aload         5
255: ldc           #79
257: invokestatic  #53
260: new           #29
263: dup
264: invokespecial #30
267: ldc           #31
269: invokevirtual #32
272: aload         6
274: invokevirtual #32
277: ldc           #68
279: invokevirtual #32
282: invokevirtual #35
285: aload         6
287: ldc           #10
289: invokestatic  #53
292: return
Exception table:
from    to  target type
94   115   118   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0292
Start line: 6290
End line: 0
Method source code: 
    public void test0292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0292");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        int int6 = helpFormatter0.getLeftPadding();
        helpFormatter0.setLongOptSeparator("\n");
        java.lang.String str9 = helpFormatter0.getLongOptPrefix();
        java.lang.String str10 = helpFormatter0.getLongOptPrefix();
        int int11 = helpFormatter0.getWidth();
        helpFormatter0.defaultOptPrefix = " ";
        helpFormatter0.setNewLine(" ");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 74 + "'", int11 == 74);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #394
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #10
36: invokevirtual #11
39: aload_1
40: ldc           #10
42: putfield      #55
45: aload_1
46: getfield      #55
49: astore_2
50: aload_1
51: invokevirtual #22
54: istore_3
55: aload_1
56: ldc           #65
58: invokevirtual #91
61: aload_1
62: invokevirtual #48
65: astore        4
67: aload_1
68: invokevirtual #48
71: astore        5
73: aload_1
74: invokevirtual #129
77: istore        6
79: aload_1
80: ldc           #24
82: putfield      #63
85: aload_1
86: ldc           #24
88: invokevirtual #131
91: new           #29
94: dup
95: invokespecial #30
98: ldc           #31
100: invokevirtual #32
103: aload_2
104: invokevirtual #32
107: ldc           #68
109: invokevirtual #32
112: invokevirtual #35
115: aload_2
116: ldc           #10
118: invokestatic  #53
121: new           #29
124: dup
125: invokespecial #30
128: ldc           #31
130: invokevirtual #32
133: iload_3
134: invokevirtual #33
137: ldc           #34
139: invokevirtual #32
142: iconst_1
143: invokevirtual #33
146: ldc           #31
148: invokevirtual #32
151: invokevirtual #35
154: iload_3
155: iconst_1
156: if_icmpne     163
159: iconst_1
160: goto          164
163: iconst_0
164: invokestatic  #36
167: new           #29
170: dup
171: invokespecial #30
174: ldc           #31
176: invokevirtual #32
179: aload         4
181: invokevirtual #32
184: ldc           #68
186: invokevirtual #32
189: invokevirtual #35
192: aload         4
194: ldc           #10
196: invokestatic  #53
199: new           #29
202: dup
203: invokespecial #30
206: ldc           #31
208: invokevirtual #32
211: aload         5
213: invokevirtual #32
216: ldc           #68
218: invokevirtual #32
221: invokevirtual #35
224: aload         5
226: ldc           #10
228: invokestatic  #53
231: new           #29
234: dup
235: invokespecial #30
238: ldc           #31
240: invokevirtual #32
243: iload         6
245: invokevirtual #33
248: ldc           #34
250: invokevirtual #32
253: bipush        74
255: invokevirtual #33
258: ldc           #31
260: invokevirtual #32
263: invokevirtual #35
266: iload         6
268: bipush        74
270: if_icmpne     277
273: iconst_1
274: goto          278
277: iconst_0
278: invokestatic  #36
281: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0293
Start line: 6312
End line: 0
Method source code: 
    public void test0293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0293");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        int int5 = helpFormatter0.defaultLeftPad;
        helpFormatter0.setOptPrefix("-");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #395
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: getfield      #63
48: astore_3
49: aload_1
50: getfield      #60
53: istore        4
55: aload_1
56: ldc           #67
58: invokevirtual #11
61: new           #29
64: dup
65: invokespecial #30
68: ldc           #31
70: invokevirtual #32
73: iload_2
74: invokevirtual #33
77: ldc           #34
79: invokevirtual #32
82: iconst_1
83: invokevirtual #33
86: ldc           #31
88: invokevirtual #32
91: invokevirtual #35
94: iload_2
95: iconst_1
96: if_icmpne     103
99: iconst_1
100: goto          104
103: iconst_0
104: invokestatic  #36
107: new           #29
110: dup
111: invokespecial #30
114: ldc           #31
116: invokevirtual #32
119: aload_3
120: invokevirtual #32
123: ldc           #66
125: invokevirtual #32
128: invokevirtual #35
131: aload_3
132: ldc           #67
134: invokestatic  #53
137: new           #29
140: dup
141: invokespecial #30
144: ldc           #31
146: invokevirtual #32
149: iload         4
151: invokevirtual #33
154: ldc           #34
156: invokevirtual #32
159: iconst_1
160: invokevirtual #33
163: ldc           #31
165: invokevirtual #32
168: invokevirtual #35
171: iload         4
173: iconst_1
174: if_icmpne     181
177: iconst_1
178: goto          182
181: iconst_0
182: invokestatic  #36
185: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0294
Start line: 6327
End line: 0
Method source code: 
    public void test0294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0294");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setLongOptPrefix(" ");
        helpFormatter0.defaultDescPad = (short) 10;
        helpFormatter0.defaultSyntaxPrefix = "";
        helpFormatter0.setLongOptPrefix("");
        java.lang.String str13 = helpFormatter0.defaultNewLine;
        org.apache.commons.cli.Options options15 = null;
        try {
            helpFormatter0.printHelp("arg", options15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #396
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: getfield      #63
48: astore_3
49: aload_1
50: ldc           #24
52: invokevirtual #49
55: aload_1
56: bipush        10
58: putfield      #76
61: aload_1
62: ldc           #10
64: putfield      #97
67: aload_1
68: ldc           #10
70: invokevirtual #49
73: aload_1
74: getfield      #23
77: astore        4
79: aconst_null
80: astore        5
82: aload_1
83: ldc           #79
85: aload         5
87: invokevirtual #50
90: ldc           #14
92: invokestatic  #15
95: goto          100
98: astore        6
100: new           #29
103: dup
104: invokespecial #30
107: ldc           #31
109: invokevirtual #32
112: iload_2
113: invokevirtual #33
116: ldc           #34
118: invokevirtual #32
121: iconst_1
122: invokevirtual #33
125: ldc           #31
127: invokevirtual #32
130: invokevirtual #35
133: iload_2
134: iconst_1
135: if_icmpne     142
138: iconst_1
139: goto          143
142: iconst_0
143: invokestatic  #36
146: new           #29
149: dup
150: invokespecial #30
153: ldc           #31
155: invokevirtual #32
158: aload_3
159: invokevirtual #32
162: ldc           #66
164: invokevirtual #32
167: invokevirtual #35
170: aload_3
171: ldc           #67
173: invokestatic  #53
176: new           #29
179: dup
180: invokespecial #30
183: ldc           #31
185: invokevirtual #32
188: aload         4
190: invokevirtual #32
193: ldc           #68
195: invokevirtual #32
198: invokevirtual #35
201: aload         4
203: ldc           #10
205: invokestatic  #53
208: return
Exception table:
from    to  target type
82    95    98   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0295
Start line: 6353
End line: 0
Method source code: 
    public void test0295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0295");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setLongOptPrefix(" ");
        helpFormatter0.defaultDescPad = (short) 10;
        helpFormatter0.setLongOptSeparator("");
        helpFormatter0.defaultLeftPad = '4';
        java.lang.String str13 = helpFormatter0.defaultArgName;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "arg" + "'", str13, "arg");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #397
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: getfield      #63
48: astore_3
49: aload_1
50: ldc           #24
52: invokevirtual #49
55: aload_1
56: bipush        10
58: putfield      #76
61: aload_1
62: ldc           #10
64: invokevirtual #91
67: aload_1
68: bipush        52
70: putfield      #60
73: aload_1
74: getfield      #77
77: astore        4
79: new           #29
82: dup
83: invokespecial #30
86: ldc           #31
88: invokevirtual #32
91: iload_2
92: invokevirtual #33
95: ldc           #34
97: invokevirtual #32
100: iconst_1
101: invokevirtual #33
104: ldc           #31
106: invokevirtual #32
109: invokevirtual #35
112: iload_2
113: iconst_1
114: if_icmpne     121
117: iconst_1
118: goto          122
121: iconst_0
122: invokestatic  #36
125: new           #29
128: dup
129: invokespecial #30
132: ldc           #31
134: invokevirtual #32
137: aload_3
138: invokevirtual #32
141: ldc           #66
143: invokevirtual #32
146: invokevirtual #35
149: aload_3
150: ldc           #67
152: invokestatic  #53
155: new           #29
158: dup
159: invokespecial #30
162: ldc           #31
164: invokevirtual #32
167: aload         4
169: invokevirtual #32
172: ldc           #78
174: invokevirtual #32
177: invokevirtual #35
180: aload         4
182: ldc           #79
184: invokestatic  #53
187: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0296
Start line: 6371
End line: 0
Method source code: 
    public void test0296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0296");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.getArgName();
        helpFormatter0.setSyntaxPrefix("usage: ");
        java.lang.String str5 = helpFormatter0.getOptPrefix();
        java.io.PrintWriter printWriter6 = null;
        org.apache.commons.cli.Options options9 = null;
        try {
            helpFormatter0.printUsage(printWriter6, 52, "                                                                                                    ", options9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "arg" + "'", str2, "arg");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "-" + "'", str5, "-");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #398
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: invokevirtual #104
42: astore_3
43: aload_1
44: ldc           #12
46: invokevirtual #39
49: aload_1
50: invokevirtual #123
53: astore        4
55: aconst_null
56: astore        5
58: aconst_null
59: astore        6
61: aload_1
62: aload         5
64: bipush        52
66: ldc           #240
68: aload         6
70: invokevirtual #127
73: ldc           #14
75: invokestatic  #15
78: goto          83
81: astore        7
83: new           #29
86: dup
87: invokespecial #30
90: ldc           #31
92: invokevirtual #32
95: iload_2
96: invokevirtual #33
99: ldc           #34
101: invokevirtual #32
104: iconst_1
105: invokevirtual #33
108: ldc           #31
110: invokevirtual #32
113: invokevirtual #35
116: iload_2
117: iconst_1
118: if_icmpne     125
121: iconst_1
122: goto          126
125: iconst_0
126: invokestatic  #36
129: new           #29
132: dup
133: invokespecial #30
136: ldc           #31
138: invokevirtual #32
141: aload_3
142: invokevirtual #32
145: ldc           #78
147: invokevirtual #32
150: invokevirtual #35
153: aload_3
154: ldc           #79
156: invokestatic  #53
159: new           #29
162: dup
163: invokespecial #30
166: ldc           #31
168: invokevirtual #32
171: aload         4
173: invokevirtual #32
176: ldc           #66
178: invokevirtual #32
181: invokevirtual #35
184: aload         4
186: ldc           #67
188: invokestatic  #53
191: return
Exception table:
from    to  target type
61    78    81   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0297
Start line: 6394
End line: 0
Method source code: 
    public void test0297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0297");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultOptPrefix;
        java.lang.String str6 = helpFormatter0.getLongOptPrefix();
        java.lang.String str7 = helpFormatter0.defaultNewLine;
        int int8 = helpFormatter0.getWidth();
        java.io.PrintWriter printWriter9 = null;
        org.apache.commons.cli.Options options12 = null;
        try {
            helpFormatter0.printUsage(printWriter9, 3, "", options12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\n" + "'", str7, "\n");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 74 + "'", int8 == 74);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #399
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #10
36: invokevirtual #11
39: aload_1
40: ldc           #10
42: putfield      #55
45: aload_1
46: getfield      #63
49: astore_2
50: aload_1
51: invokevirtual #48
54: astore_3
55: aload_1
56: getfield      #23
59: astore        4
61: aload_1
62: invokevirtual #129
65: istore        5
67: aconst_null
68: astore        6
70: aconst_null
71: astore        7
73: aload_1
74: aload         6
76: iconst_3
77: ldc           #10
79: aload         7
81: invokevirtual #127
84: ldc           #14
86: invokestatic  #15
89: goto          94
92: astore        8
94: new           #29
97: dup
98: invokespecial #30
101: ldc           #31
103: invokevirtual #32
106: aload_2
107: invokevirtual #32
110: ldc           #68
112: invokevirtual #32
115: invokevirtual #35
118: aload_2
119: ldc           #10
121: invokestatic  #53
124: new           #29
127: dup
128: invokespecial #30
131: ldc           #31
133: invokevirtual #32
136: aload_3
137: invokevirtual #32
140: ldc           #68
142: invokevirtual #32
145: invokevirtual #35
148: aload_3
149: ldc           #10
151: invokestatic  #53
154: new           #29
157: dup
158: invokespecial #30
161: ldc           #31
163: invokevirtual #32
166: aload         4
168: invokevirtual #32
171: ldc           #74
173: invokevirtual #32
176: invokevirtual #35
179: aload         4
181: ldc           #65
183: invokestatic  #53
186: new           #29
189: dup
190: invokespecial #30
193: ldc           #31
195: invokevirtual #32
198: iload         5
200: invokevirtual #33
203: ldc           #34
205: invokevirtual #32
208: bipush        74
210: invokevirtual #33
213: ldc           #31
215: invokevirtual #32
218: invokevirtual #35
221: iload         5
223: bipush        74
225: if_icmpne     232
228: iconst_1
229: goto          233
232: iconst_0
233: invokestatic  #36
236: return
Exception table:
from    to  target type
73    89    92   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0298
Start line: 6420
End line: 0
Method source code: 
    public void test0298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0298");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        helpFormatter0.defaultDescPad = 0;
        int int8 = helpFormatter0.getLeftPadding();
        helpFormatter0.setNewLine("   ");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #400
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #10
36: invokevirtual #11
39: aload_1
40: ldc           #10
42: putfield      #55
45: aload_1
46: getfield      #55
49: astore_2
50: aload_1
51: iconst_0
52: putfield      #76
55: aload_1
56: invokevirtual #22
59: istore_3
60: aload_1
61: ldc_w         #259
64: invokevirtual #131
67: new           #29
70: dup
71: invokespecial #30
74: ldc           #31
76: invokevirtual #32
79: aload_2
80: invokevirtual #32
83: ldc           #68
85: invokevirtual #32
88: invokevirtual #35
91: aload_2
92: ldc           #10
94: invokestatic  #53
97: new           #29
100: dup
101: invokespecial #30
104: ldc           #31
106: invokevirtual #32
109: iload_3
110: invokevirtual #33
113: ldc           #34
115: invokevirtual #32
118: iconst_1
119: invokevirtual #33
122: ldc           #31
124: invokevirtual #32
127: invokevirtual #35
130: iload_3
131: iconst_1
132: if_icmpne     139
135: iconst_1
136: goto          140
139: iconst_0
140: invokestatic  #36
143: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0299
Start line: 6435
End line: 0
Method source code: 
    public void test0299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0299");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setLongOptPrefix(" ");
        helpFormatter0.defaultOptPrefix = "usage: ";
        org.apache.commons.cli.Options options11 = null;
        try {
            helpFormatter0.printHelp("hi!", "                                                                                                 ", options11, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #401
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: getfield      #63
48: astore_3
49: aload_1
50: ldc           #24
52: invokevirtual #49
55: aload_1
56: ldc           #12
58: putfield      #63
61: aconst_null
62: astore        4
64: aload_1
65: ldc           #25
67: ldc           #141
69: aload         4
71: ldc           #10
73: invokevirtual #13
76: ldc           #14
78: invokestatic  #15
81: goto          86
84: astore        5
86: new           #29
89: dup
90: invokespecial #30
93: ldc           #31
95: invokevirtual #32
98: iload_2
99: invokevirtual #33
102: ldc           #34
104: invokevirtual #32
107: iconst_1
108: invokevirtual #33
111: ldc           #31
113: invokevirtual #32
116: invokevirtual #35
119: iload_2
120: iconst_1
121: if_icmpne     128
124: iconst_1
125: goto          129
128: iconst_0
129: invokestatic  #36
132: new           #29
135: dup
136: invokespecial #30
139: ldc           #31
141: invokevirtual #32
144: aload_3
145: invokevirtual #32
148: ldc           #66
150: invokevirtual #32
153: invokevirtual #35
156: aload_3
157: ldc           #67
159: invokestatic  #53
162: return
Exception table:
from    to  target type
64    81    84   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0300
Start line: 6457
End line: 0
Method source code: 
    public void test0300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0300");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        java.lang.String str6 = helpFormatter0.getOptPrefix();
        java.lang.String str7 = helpFormatter0.getNewLine();
        helpFormatter0.defaultOptPrefix = "";
        helpFormatter0.setNewLine("");
        helpFormatter0.defaultSyntaxPrefix = "usage: ";
        java.lang.String str14 = helpFormatter0.getArgName();
        java.util.Comparator comparator15 = helpFormatter0.optionComparator;
        helpFormatter0.setWidth(0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "-" + "'", str6, "-");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "arg" + "'", str14, "arg");
        org.junit.Assert.assertNotNull(comparator15);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #402
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: bipush        10
47: invokevirtual #38
50: aload_1
51: invokevirtual #123
54: astore_3
55: aload_1
56: invokevirtual #72
59: astore        4
61: aload_1
62: ldc           #10
64: putfield      #63
67: aload_1
68: ldc           #10
70: invokevirtual #131
73: aload_1
74: ldc           #12
76: putfield      #97
79: aload_1
80: invokevirtual #104
83: astore        5
85: aload_1
86: getfield      #47
89: astore        6
91: aload_1
92: iconst_0
93: invokevirtual #156
96: new           #29
99: dup
100: invokespecial #30
103: ldc           #31
105: invokevirtual #32
108: iload_2
109: invokevirtual #33
112: ldc           #34
114: invokevirtual #32
117: iconst_1
118: invokevirtual #33
121: ldc           #31
123: invokevirtual #32
126: invokevirtual #35
129: iload_2
130: iconst_1
131: if_icmpne     138
134: iconst_1
135: goto          139
138: iconst_0
139: invokestatic  #36
142: new           #29
145: dup
146: invokespecial #30
149: ldc           #31
151: invokevirtual #32
154: aload_3
155: invokevirtual #32
158: ldc           #66
160: invokevirtual #32
163: invokevirtual #35
166: aload_3
167: ldc           #67
169: invokestatic  #53
172: new           #29
175: dup
176: invokespecial #30
179: ldc           #31
181: invokevirtual #32
184: aload         4
186: invokevirtual #32
189: ldc           #68
191: invokevirtual #32
194: invokevirtual #35
197: aload         4
199: ldc           #10
201: invokestatic  #53
204: new           #29
207: dup
208: invokespecial #30
211: ldc           #31
213: invokevirtual #32
216: aload         5
218: invokevirtual #32
221: ldc           #78
223: invokevirtual #32
226: invokevirtual #35
229: aload         5
231: ldc           #79
233: invokestatic  #53
236: aload         6
238: invokestatic  #51
241: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0301
Start line: 6480
End line: 0
Method source code: 
    public void test0301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0301");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.util.Comparator comparator1 = helpFormatter0.optionComparator;
        java.io.PrintWriter printWriter2 = null;
        org.apache.commons.cli.Options options6 = null;
        try {
            helpFormatter0.printHelp(printWriter2, 10, "                                                                                                    ", "hi!", options6, 3, (int) (byte) 0, " ");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(comparator1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #403
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: getfield      #47
37: astore_2
38: aconst_null
39: astore_3
40: aconst_null
41: astore        4
43: aload_1
44: aload_3
45: bipush        10
47: ldc           #240
49: ldc           #25
51: aload         4
53: iconst_3
54: iconst_0
55: ldc           #24
57: invokevirtual #42
60: ldc           #14
62: invokestatic  #15
65: goto          70
68: astore        5
70: aload_2
71: invokestatic  #51
74: return
Exception table:
from    to  target type
43    65    68   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0302
Start line: 6498
End line: 0
Method source code: 
    public void test0302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0302");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.setSyntaxPrefix("\n");
        int int5 = helpFormatter0.getWidth();
        helpFormatter0.setArgName("arg");
        java.lang.String str8 = helpFormatter0.getSyntaxPrefix();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 74 + "'", int5 == 74);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\n" + "'", str8, "\n");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #404
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #10
36: invokevirtual #11
39: aload_1
40: ldc           #65
42: invokevirtual #39
45: aload_1
46: invokevirtual #129
49: istore_2
50: aload_1
51: ldc           #79
53: invokevirtual #146
56: aload_1
57: invokevirtual #102
60: astore_3
61: new           #29
64: dup
65: invokespecial #30
68: ldc           #31
70: invokevirtual #32
73: iload_2
74: invokevirtual #33
77: ldc           #34
79: invokevirtual #32
82: bipush        74
84: invokevirtual #33
87: ldc           #31
89: invokevirtual #32
92: invokevirtual #35
95: iload_2
96: bipush        74
98: if_icmpne     105
101: iconst_1
102: goto          106
105: iconst_0
106: invokestatic  #36
109: new           #29
112: dup
113: invokespecial #30
116: ldc           #31
118: invokevirtual #32
121: aload_3
122: invokevirtual #32
125: ldc           #74
127: invokevirtual #32
130: invokevirtual #35
133: aload_3
134: ldc           #65
136: invokestatic  #53
139: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0303
Start line: 6512
End line: 0
Method source code: 
    public void test0303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0303");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        java.lang.String str6 = helpFormatter0.getOptPrefix();
        java.lang.String str7 = helpFormatter0.getNewLine();
        helpFormatter0.defaultOptPrefix = "";
        helpFormatter0.defaultLeftPad = (short) 10;
        int int12 = helpFormatter0.getWidth();
        java.lang.String str13 = helpFormatter0.defaultSyntaxPrefix;
        java.lang.String str14 = helpFormatter0.getNewLine();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "-" + "'", str6, "-");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 74 + "'", int12 == 74);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "usage: " + "'", str13, "usage: ");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #405
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: bipush        10
47: invokevirtual #38
50: aload_1
51: invokevirtual #123
54: astore_3
55: aload_1
56: invokevirtual #72
59: astore        4
61: aload_1
62: ldc           #10
64: putfield      #63
67: aload_1
68: bipush        10
70: putfield      #60
73: aload_1
74: invokevirtual #129
77: istore        5
79: aload_1
80: getfield      #97
83: astore        6
85: aload_1
86: invokevirtual #72
89: astore        7
91: new           #29
94: dup
95: invokespecial #30
98: ldc           #31
100: invokevirtual #32
103: iload_2
104: invokevirtual #33
107: ldc           #34
109: invokevirtual #32
112: iconst_1
113: invokevirtual #33
116: ldc           #31
118: invokevirtual #32
121: invokevirtual #35
124: iload_2
125: iconst_1
126: if_icmpne     133
129: iconst_1
130: goto          134
133: iconst_0
134: invokestatic  #36
137: new           #29
140: dup
141: invokespecial #30
144: ldc           #31
146: invokevirtual #32
149: aload_3
150: invokevirtual #32
153: ldc           #66
155: invokevirtual #32
158: invokevirtual #35
161: aload_3
162: ldc           #67
164: invokestatic  #53
167: new           #29
170: dup
171: invokespecial #30
174: ldc           #31
176: invokevirtual #32
179: aload         4
181: invokevirtual #32
184: ldc           #68
186: invokevirtual #32
189: invokevirtual #35
192: aload         4
194: ldc           #10
196: invokestatic  #53
199: new           #29
202: dup
203: invokespecial #30
206: ldc           #31
208: invokevirtual #32
211: iload         5
213: invokevirtual #33
216: ldc           #34
218: invokevirtual #32
221: bipush        74
223: invokevirtual #33
226: ldc           #31
228: invokevirtual #32
231: invokevirtual #35
234: iload         5
236: bipush        74
238: if_icmpne     245
241: iconst_1
242: goto          246
245: iconst_0
246: invokestatic  #36
249: new           #29
252: dup
253: invokespecial #30
256: ldc           #31
258: invokevirtual #32
261: aload         6
263: invokevirtual #32
266: ldc           #99
268: invokevirtual #32
271: invokevirtual #35
274: aload         6
276: ldc           #12
278: invokestatic  #53
281: new           #29
284: dup
285: invokespecial #30
288: ldc           #31
290: invokevirtual #32
293: aload         7
295: invokevirtual #32
298: ldc           #68
300: invokevirtual #32
303: invokevirtual #35
306: aload         7
308: ldc           #10
310: invokestatic  #53
313: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0304
Start line: 6535
End line: 0
Method source code: 
    public void test0304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0304");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        org.apache.commons.cli.HelpFormatter helpFormatter4 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter4.setOptPrefix("");
        helpFormatter4.defaultLongOptPrefix = "";
        java.lang.String str9 = helpFormatter4.defaultLongOptPrefix;
        helpFormatter4.defaultDescPad = 0;
        org.apache.commons.cli.HelpFormatter helpFormatter12 = new org.apache.commons.cli.HelpFormatter();
        java.util.Comparator comparator13 = helpFormatter12.optionComparator;
        int int14 = helpFormatter12.getLeftPadding();
        int int15 = helpFormatter12.defaultLeftPad;
        java.lang.String str17 = helpFormatter12.createPadding((int) 'a');
        org.apache.commons.cli.HelpFormatter helpFormatter18 = new org.apache.commons.cli.HelpFormatter();
        int int19 = helpFormatter18.getLeftPadding();
        helpFormatter18.defaultNewLine = "";
        helpFormatter18.defaultDescPad = '4';
        helpFormatter18.setNewLine("");
        int int29 = helpFormatter18.findWrapPos("\n", (int) ' ', 3);
        java.util.Comparator comparator30 = helpFormatter18.optionComparator;
        helpFormatter12.setOptionComparator(comparator30);
        helpFormatter4.setOptionComparator(comparator30);
        helpFormatter0.optionComparator = comparator30;
        int int34 = helpFormatter0.defaultWidth;
        helpFormatter0.setOptPrefix("                                                    ");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(comparator13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "                                                                                                 " + "'", str17, "                                                                                                 ");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(comparator30);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 74 + "'", int34 == 74);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #406
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: new           #8
47: dup
48: invokespecial #9
51: astore_3
52: aload_3
53: ldc           #10
55: invokevirtual #11
58: aload_3
59: ldc           #10
61: putfield      #55
64: aload_3
65: getfield      #55
68: astore        4
70: aload_3
71: iconst_0
72: putfield      #76
75: new           #8
78: dup
79: invokespecial #9
82: astore        5
84: aload         5
86: getfield      #47
89: astore        6
91: aload         5
93: invokevirtual #22
96: istore        7
98: aload         5
100: getfield      #60
103: istore        8
105: aload         5
107: bipush        97
109: invokevirtual #108
112: astore        9
114: new           #8
117: dup
118: invokespecial #9
121: astore        10
123: aload         10
125: invokevirtual #22
128: istore        11
130: aload         10
132: ldc           #10
134: putfield      #23
137: aload         10
139: bipush        52
141: putfield      #76
144: aload         10
146: ldc           #10
148: invokevirtual #131
151: aload         10
153: ldc           #65
155: bipush        32
157: iconst_3
158: invokevirtual #93
161: istore        12
163: aload         10
165: getfield      #47
168: astore        13
170: aload         5
172: aload         13
174: invokevirtual #152
177: aload_3
178: aload         13
180: invokevirtual #152
183: aload_1
184: aload         13
186: putfield      #47
189: aload_1
190: getfield      #110
193: istore        14
195: aload_1
196: ldc_w         #313
199: invokevirtual #11
202: new           #29
205: dup
206: invokespecial #30
209: ldc           #31
211: invokevirtual #32
214: iload_2
215: invokevirtual #33
218: ldc           #34
220: invokevirtual #32
223: iconst_1
224: invokevirtual #33
227: ldc           #31
229: invokevirtual #32
232: invokevirtual #35
235: iload_2
236: iconst_1
237: if_icmpne     244
240: iconst_1
241: goto          245
244: iconst_0
245: invokestatic  #36
248: new           #29
251: dup
252: invokespecial #30
255: ldc           #31
257: invokevirtual #32
260: aload         4
262: invokevirtual #32
265: ldc           #68
267: invokevirtual #32
270: invokevirtual #35
273: aload         4
275: ldc           #10
277: invokestatic  #53
280: aload         6
282: invokestatic  #51
285: new           #29
288: dup
289: invokespecial #30
292: ldc           #31
294: invokevirtual #32
297: iload         7
299: invokevirtual #33
302: ldc           #34
304: invokevirtual #32
307: iconst_1
308: invokevirtual #33
311: ldc           #31
313: invokevirtual #32
316: invokevirtual #35
319: iload         7
321: iconst_1
322: if_icmpne     329
325: iconst_1
326: goto          330
329: iconst_0
330: invokestatic  #36
333: new           #29
336: dup
337: invokespecial #30
340: ldc           #31
342: invokevirtual #32
345: iload         8
347: invokevirtual #33
350: ldc           #34
352: invokevirtual #32
355: iconst_1
356: invokevirtual #33
359: ldc           #31
361: invokevirtual #32
364: invokevirtual #35
367: iload         8
369: iconst_1
370: if_icmpne     377
373: iconst_1
374: goto          378
377: iconst_0
378: invokestatic  #36
381: new           #29
384: dup
385: invokespecial #30
388: ldc           #31
390: invokevirtual #32
393: aload         9
395: invokevirtual #32
398: ldc           #185
400: invokevirtual #32
403: invokevirtual #35
406: aload         9
408: ldc           #141
410: invokestatic  #53
413: new           #29
416: dup
417: invokespecial #30
420: ldc           #31
422: invokevirtual #32
425: iload         11
427: invokevirtual #33
430: ldc           #34
432: invokevirtual #32
435: iconst_1
436: invokevirtual #33
439: ldc           #31
441: invokevirtual #32
444: invokevirtual #35
447: iload         11
449: iconst_1
450: if_icmpne     457
453: iconst_1
454: goto          458
457: iconst_0
458: invokestatic  #36
461: new           #29
464: dup
465: invokespecial #30
468: ldc           #31
470: invokevirtual #32
473: iload         12
475: invokevirtual #33
478: ldc           #34
480: invokevirtual #32
483: iconst_m1
484: invokevirtual #33
487: ldc           #31
489: invokevirtual #32
492: invokevirtual #35
495: iload         12
497: iconst_m1
498: if_icmpne     505
501: iconst_1
502: goto          506
505: iconst_0
506: invokestatic  #36
509: aload         13
511: invokestatic  #51
514: new           #29
517: dup
518: invokespecial #30
521: ldc           #31
523: invokevirtual #32
526: iload         14
528: invokevirtual #33
531: ldc           #34
533: invokevirtual #32
536: bipush        74
538: invokevirtual #33
541: ldc           #31
543: invokevirtual #32
546: invokevirtual #35
549: iload         14
551: bipush        74
553: if_icmpne     560
556: iconst_1
557: goto          561
560: iconst_0
561: invokestatic  #36
564: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0305
Start line: 6576
End line: 0
Method source code: 
    public void test0305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0305");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultOptPrefix;
        java.lang.String str6 = helpFormatter0.getLongOptPrefix();
        helpFormatter0.defaultArgName = "                                                                                                 ";
        org.apache.commons.cli.Options options11 = null;
        try {
            helpFormatter0.printHelp(" ", "   ", options11, "--");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #407
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #10
36: invokevirtual #11
39: aload_1
40: ldc           #10
42: putfield      #55
45: aload_1
46: getfield      #63
49: astore_2
50: aload_1
51: invokevirtual #48
54: astore_3
55: aload_1
56: ldc           #141
58: putfield      #77
61: aconst_null
62: astore        4
64: aload_1
65: ldc           #24
67: ldc_w         #259
70: aload         4
72: ldc           #44
74: invokevirtual #13
77: ldc           #14
79: invokestatic  #15
82: goto          87
85: astore        5
87: new           #29
90: dup
91: invokespecial #30
94: ldc           #31
96: invokevirtual #32
99: aload_2
100: invokevirtual #32
103: ldc           #68
105: invokevirtual #32
108: invokevirtual #35
111: aload_2
112: ldc           #10
114: invokestatic  #53
117: new           #29
120: dup
121: invokespecial #30
124: ldc           #31
126: invokevirtual #32
129: aload_3
130: invokevirtual #32
133: ldc           #68
135: invokevirtual #32
138: invokevirtual #35
141: aload_3
142: ldc           #10
144: invokestatic  #53
147: return
Exception table:
from    to  target type
64    82    85   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0306
Start line: 6598
End line: 0
Method source code: 
    public void test0306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0306");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        int int4 = helpFormatter0.defaultWidth;
        helpFormatter0.setOptPrefix("");
        helpFormatter0.setOptPrefix("arg");
        int int9 = helpFormatter0.getWidth();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 74 + "'", int4 == 74);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 74 + "'", int9 == 74);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #408
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: getfield      #110
48: istore_3
49: aload_1
50: ldc           #10
52: invokevirtual #11
55: aload_1
56: ldc           #79
58: invokevirtual #11
61: aload_1
62: invokevirtual #129
65: istore        4
67: new           #29
70: dup
71: invokespecial #30
74: ldc           #31
76: invokevirtual #32
79: iload_2
80: invokevirtual #33
83: ldc           #34
85: invokevirtual #32
88: iconst_1
89: invokevirtual #33
92: ldc           #31
94: invokevirtual #32
97: invokevirtual #35
100: iload_2
101: iconst_1
102: if_icmpne     109
105: iconst_1
106: goto          110
109: iconst_0
110: invokestatic  #36
113: new           #29
116: dup
117: invokespecial #30
120: ldc           #31
122: invokevirtual #32
125: iload_3
126: invokevirtual #33
129: ldc           #34
131: invokevirtual #32
134: bipush        74
136: invokevirtual #33
139: ldc           #31
141: invokevirtual #32
144: invokevirtual #35
147: iload_3
148: bipush        74
150: if_icmpne     157
153: iconst_1
154: goto          158
157: iconst_0
158: invokestatic  #36
161: new           #29
164: dup
165: invokespecial #30
168: ldc           #31
170: invokevirtual #32
173: iload         4
175: invokevirtual #33
178: ldc           #34
180: invokevirtual #32
183: bipush        74
185: invokevirtual #33
188: ldc           #31
190: invokevirtual #32
193: invokevirtual #35
196: iload         4
198: bipush        74
200: if_icmpne     207
203: iconst_1
204: goto          208
207: iconst_0
208: invokestatic  #36
211: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0307
Start line: 6614
End line: 0
Method source code: 
    public void test0307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0307");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        java.lang.String str6 = helpFormatter0.rtrim("");
        java.lang.String str8 = helpFormatter0.rtrim("-");
        helpFormatter0.defaultOptPrefix = "--";
        helpFormatter0.defaultDescPad = 0;
        int int16 = helpFormatter0.findWrapPos("", (-1), (int) (short) 0);
        java.lang.String str17 = helpFormatter0.defaultOptPrefix;
        org.apache.commons.cli.HelpFormatter helpFormatter18 = new org.apache.commons.cli.HelpFormatter();
        int int19 = helpFormatter18.getLeftPadding();
        helpFormatter18.defaultNewLine = "";
        helpFormatter18.setDescPadding(10);
        helpFormatter18.setSyntaxPrefix(" ");
        java.util.Comparator comparator26 = helpFormatter18.getOptionComparator();
        helpFormatter0.setOptionComparator(comparator26);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "-" + "'", str8, "-");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "--" + "'", str17, "--");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(comparator26);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #409
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: getfield      #63
48: astore_3
49: aload_1
50: ldc           #10
52: invokevirtual #64
55: astore        4
57: aload_1
58: ldc           #67
60: invokevirtual #64
63: astore        5
65: aload_1
66: ldc           #44
68: putfield      #63
71: aload_1
72: iconst_0
73: putfield      #76
76: aload_1
77: ldc           #10
79: iconst_m1
80: iconst_0
81: invokevirtual #93
84: istore        6
86: aload_1
87: getfield      #63
90: astore        7
92: new           #8
95: dup
96: invokespecial #9
99: astore        8
101: aload         8
103: invokevirtual #22
106: istore        9
108: aload         8
110: ldc           #10
112: putfield      #23
115: aload         8
117: bipush        10
119: invokevirtual #38
122: aload         8
124: ldc           #24
126: invokevirtual #39
129: aload         8
131: invokevirtual #106
134: astore        10
136: aload_1
137: aload         10
139: invokevirtual #152
142: new           #29
145: dup
146: invokespecial #30
149: ldc           #31
151: invokevirtual #32
154: iload_2
155: invokevirtual #33
158: ldc           #34
160: invokevirtual #32
163: iconst_1
164: invokevirtual #33
167: ldc           #31
169: invokevirtual #32
172: invokevirtual #35
175: iload_2
176: iconst_1
177: if_icmpne     184
180: iconst_1
181: goto          185
184: iconst_0
185: invokestatic  #36
188: new           #29
191: dup
192: invokespecial #30
195: ldc           #31
197: invokevirtual #32
200: aload_3
201: invokevirtual #32
204: ldc           #66
206: invokevirtual #32
209: invokevirtual #35
212: aload_3
213: ldc           #67
215: invokestatic  #53
218: new           #29
221: dup
222: invokespecial #30
225: ldc           #31
227: invokevirtual #32
230: aload         4
232: invokevirtual #32
235: ldc           #68
237: invokevirtual #32
240: invokevirtual #35
243: aload         4
245: ldc           #10
247: invokestatic  #53
250: new           #29
253: dup
254: invokespecial #30
257: ldc           #31
259: invokevirtual #32
262: aload         5
264: invokevirtual #32
267: ldc           #66
269: invokevirtual #32
272: invokevirtual #35
275: aload         5
277: ldc           #67
279: invokestatic  #53
282: new           #29
285: dup
286: invokespecial #30
289: ldc           #31
291: invokevirtual #32
294: iload         6
296: invokevirtual #33
299: ldc           #34
301: invokevirtual #32
304: iconst_m1
305: invokevirtual #33
308: ldc           #31
310: invokevirtual #32
313: invokevirtual #35
316: iload         6
318: iconst_m1
319: if_icmpne     326
322: iconst_1
323: goto          327
326: iconst_0
327: invokestatic  #36
330: new           #29
333: dup
334: invokespecial #30
337: ldc           #31
339: invokevirtual #32
342: aload         7
344: invokevirtual #32
347: ldc           #52
349: invokevirtual #32
352: invokevirtual #35
355: aload         7
357: ldc           #44
359: invokestatic  #53
362: new           #29
365: dup
366: invokespecial #30
369: ldc           #31
371: invokevirtual #32
374: iload         9
376: invokevirtual #33
379: ldc           #34
381: invokevirtual #32
384: iconst_1
385: invokevirtual #33
388: ldc           #31
390: invokevirtual #32
393: invokevirtual #35
396: iload         9
398: iconst_1
399: if_icmpne     406
402: iconst_1
403: goto          407
406: iconst_0
407: invokestatic  #36
410: aload         10
412: invokestatic  #51
415: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0308
Start line: 6645
End line: 0
Method source code: 
    public void test0308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0308");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.lang.String str1 = helpFormatter0.getSyntaxPrefix();
        java.lang.String str2 = helpFormatter0.defaultNewLine;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "usage: " + "'", str1, "usage: ");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "\n" + "'", str2, "\n");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #410
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #102
37: astore_2
38: aload_1
39: getfield      #23
42: astore_3
43: new           #29
46: dup
47: invokespecial #30
50: ldc           #31
52: invokevirtual #32
55: aload_2
56: invokevirtual #32
59: ldc           #99
61: invokevirtual #32
64: invokevirtual #35
67: aload_2
68: ldc           #12
70: invokestatic  #53
73: new           #29
76: dup
77: invokespecial #30
80: ldc           #31
82: invokevirtual #32
85: aload_3
86: invokevirtual #32
89: ldc           #74
91: invokevirtual #32
94: invokevirtual #35
97: aload_3
98: ldc           #65
100: invokestatic  #53
103: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0309
Start line: 6656
End line: 0
Method source code: 
    public void test0309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0309");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.defaultLongOptPrefix = "hi!";
        int int3 = helpFormatter0.getWidth();
        helpFormatter0.setLongOptPrefix("          ");
        int int6 = helpFormatter0.getDescPadding();
        java.lang.String str7 = helpFormatter0.getNewLine();
        int int8 = helpFormatter0.defaultDescPad;
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 74 + "'", int3 == 74);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 3 + "'", int6 == 3);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\n" + "'", str7, "\n");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 3 + "'", int8 == 3);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #411
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #25
36: putfield      #55
39: aload_1
40: invokevirtual #129
43: istore_2
44: aload_1
45: ldc           #114
47: invokevirtual #49
50: aload_1
51: invokevirtual #118
54: istore_3
55: aload_1
56: invokevirtual #72
59: astore        4
61: aload_1
62: getfield      #76
65: istore        5
67: new           #29
70: dup
71: invokespecial #30
74: ldc           #31
76: invokevirtual #32
79: iload_2
80: invokevirtual #33
83: ldc           #34
85: invokevirtual #32
88: bipush        74
90: invokevirtual #33
93: ldc           #31
95: invokevirtual #32
98: invokevirtual #35
101: iload_2
102: bipush        74
104: if_icmpne     111
107: iconst_1
108: goto          112
111: iconst_0
112: invokestatic  #36
115: new           #29
118: dup
119: invokespecial #30
122: ldc           #31
124: invokevirtual #32
127: iload_3
128: invokevirtual #33
131: ldc           #34
133: invokevirtual #32
136: iconst_3
137: invokevirtual #33
140: ldc           #31
142: invokevirtual #32
145: invokevirtual #35
148: iload_3
149: iconst_3
150: if_icmpne     157
153: iconst_1
154: goto          158
157: iconst_0
158: invokestatic  #36
161: new           #29
164: dup
165: invokespecial #30
168: ldc           #31
170: invokevirtual #32
173: aload         4
175: invokevirtual #32
178: ldc           #74
180: invokevirtual #32
183: invokevirtual #35
186: aload         4
188: ldc           #65
190: invokestatic  #53
193: new           #29
196: dup
197: invokespecial #30
200: ldc           #31
202: invokevirtual #32
205: iload         5
207: invokevirtual #33
210: ldc           #34
212: invokevirtual #32
215: iconst_3
216: invokevirtual #33
219: ldc           #31
221: invokevirtual #32
224: invokevirtual #35
227: iload         5
229: iconst_3
230: if_icmpne     237
233: iconst_1
234: goto          238
237: iconst_0
238: invokestatic  #36
241: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0310
Start line: 6673
End line: 0
Method source code: 
    public void test0310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0310");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.lang.String str1 = helpFormatter0.defaultSyntaxPrefix;
        java.util.Comparator comparator2 = helpFormatter0.optionComparator;
        java.lang.String str3 = helpFormatter0.defaultArgName;
        int int4 = helpFormatter0.getLeftPadding();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "usage: " + "'", str1, "usage: ");
        org.junit.Assert.assertNotNull(comparator2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "arg" + "'", str3, "arg");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #412
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: getfield      #97
37: astore_2
38: aload_1
39: getfield      #47
42: astore_3
43: aload_1
44: getfield      #77
47: astore        4
49: aload_1
50: invokevirtual #22
53: istore        5
55: new           #29
58: dup
59: invokespecial #30
62: ldc           #31
64: invokevirtual #32
67: aload_2
68: invokevirtual #32
71: ldc           #99
73: invokevirtual #32
76: invokevirtual #35
79: aload_2
80: ldc           #12
82: invokestatic  #53
85: aload_3
86: invokestatic  #51
89: new           #29
92: dup
93: invokespecial #30
96: ldc           #31
98: invokevirtual #32
101: aload         4
103: invokevirtual #32
106: ldc           #78
108: invokevirtual #32
111: invokevirtual #35
114: aload         4
116: ldc           #79
118: invokestatic  #53
121: new           #29
124: dup
125: invokespecial #30
128: ldc           #31
130: invokevirtual #32
133: iload         5
135: invokevirtual #33
138: ldc           #34
140: invokevirtual #32
143: iconst_1
144: invokevirtual #33
147: ldc           #31
149: invokevirtual #32
152: invokevirtual #35
155: iload         5
157: iconst_1
158: if_icmpne     165
161: iconst_1
162: goto          166
165: iconst_0
166: invokestatic  #36
169: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0311
Start line: 6688
End line: 0
Method source code: 
    public void test0311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0311");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        int int5 = helpFormatter0.defaultDescPad;
        org.apache.commons.cli.Options options8 = null;
        try {
            helpFormatter0.printHelp("hi!", "usage: ", options8, " ", true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 3 + "'", int5 == 3);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #413
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: getfield      #63
48: astore_3
49: aload_1
50: getfield      #76
53: istore        4
55: aconst_null
56: astore        5
58: aload_1
59: ldc           #25
61: ldc           #12
63: aload         5
65: ldc           #24
67: iconst_1
68: invokevirtual #73
71: ldc           #14
73: invokestatic  #15
76: goto          81
79: astore        6
81: new           #29
84: dup
85: invokespecial #30
88: ldc           #31
90: invokevirtual #32
93: iload_2
94: invokevirtual #33
97: ldc           #34
99: invokevirtual #32
102: iconst_1
103: invokevirtual #33
106: ldc           #31
108: invokevirtual #32
111: invokevirtual #35
114: iload_2
115: iconst_1
116: if_icmpne     123
119: iconst_1
120: goto          124
123: iconst_0
124: invokestatic  #36
127: new           #29
130: dup
131: invokespecial #30
134: ldc           #31
136: invokevirtual #32
139: aload_3
140: invokevirtual #32
143: ldc           #66
145: invokevirtual #32
148: invokevirtual #35
151: aload_3
152: ldc           #67
154: invokestatic  #53
157: new           #29
160: dup
161: invokespecial #30
164: ldc           #31
166: invokevirtual #32
169: iload         4
171: invokevirtual #33
174: ldc           #34
176: invokevirtual #32
179: iconst_3
180: invokevirtual #33
183: ldc           #31
185: invokevirtual #32
188: invokevirtual #35
191: iload         4
193: iconst_3
194: if_icmpne     201
197: iconst_1
198: goto          202
201: iconst_0
202: invokestatic  #36
205: return
Exception table:
from    to  target type
58    76    79   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0312
Start line: 6710
End line: 0
Method source code: 
    public void test0312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0312");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultOptPrefix;
        java.lang.String str6 = helpFormatter0.getLongOptPrefix();
        java.util.Comparator comparator7 = helpFormatter0.getOptionComparator();
        java.io.PrintWriter printWriter8 = null;
        org.apache.commons.cli.Options options10 = null;
        try {
            helpFormatter0.printOptions(printWriter8, 0, options10, (int) '4', (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(comparator7);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #414
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #10
36: invokevirtual #11
39: aload_1
40: ldc           #10
42: putfield      #55
45: aload_1
46: getfield      #63
49: astore_2
50: aload_1
51: invokevirtual #48
54: astore_3
55: aload_1
56: invokevirtual #106
59: astore        4
61: aconst_null
62: astore        5
64: aconst_null
65: astore        6
67: aload_1
68: aload         5
70: iconst_0
71: aload         6
73: bipush        52
75: bipush        100
77: invokevirtual #18
80: ldc           #14
82: invokestatic  #15
85: goto          90
88: astore        7
90: new           #29
93: dup
94: invokespecial #30
97: ldc           #31
99: invokevirtual #32
102: aload_2
103: invokevirtual #32
106: ldc           #68
108: invokevirtual #32
111: invokevirtual #35
114: aload_2
115: ldc           #10
117: invokestatic  #53
120: new           #29
123: dup
124: invokespecial #30
127: ldc           #31
129: invokevirtual #32
132: aload_3
133: invokevirtual #32
136: ldc           #68
138: invokevirtual #32
141: invokevirtual #35
144: aload_3
145: ldc           #10
147: invokestatic  #53
150: aload         4
152: invokestatic  #51
155: return
Exception table:
from    to  target type
67    85    88   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0313
Start line: 6734
End line: 0
Method source code: 
    public void test0313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0313");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str3 = helpFormatter0.getOptPrefix();
        java.util.Comparator comparator4 = helpFormatter0.getOptionComparator();
        java.lang.String str5 = helpFormatter0.defaultSyntaxPrefix;
        java.util.Comparator comparator6 = null;
        helpFormatter0.optionComparator = comparator6;
        java.io.PrintWriter printWriter8 = null;
        org.apache.commons.cli.Options options10 = null;
        try {
            helpFormatter0.printOptions(printWriter8, 0, options10, (int) '#', (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "--" + "'", str2, "--");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "-" + "'", str3, "-");
        org.junit.Assert.assertNotNull(comparator4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "usage: " + "'", str5, "usage: ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #415
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: getfield      #55
42: astore_3
43: aload_1
44: invokevirtual #123
47: astore        4
49: aload_1
50: invokevirtual #106
53: astore        5
55: aload_1
56: getfield      #97
59: astore        6
61: aconst_null
62: astore        7
64: aload_1
65: aload         7
67: putfield      #47
70: aconst_null
71: astore        8
73: aconst_null
74: astore        9
76: aload_1
77: aload         8
79: iconst_0
80: aload         9
82: bipush        35
84: iconst_1
85: invokevirtual #18
88: ldc           #14
90: invokestatic  #15
93: goto          98
96: astore        10
98: new           #29
101: dup
102: invokespecial #30
105: ldc           #31
107: invokevirtual #32
110: iload_2
111: invokevirtual #33
114: ldc           #34
116: invokevirtual #32
119: iconst_1
120: invokevirtual #33
123: ldc           #31
125: invokevirtual #32
128: invokevirtual #35
131: iload_2
132: iconst_1
133: if_icmpne     140
136: iconst_1
137: goto          141
140: iconst_0
141: invokestatic  #36
144: new           #29
147: dup
148: invokespecial #30
151: ldc           #31
153: invokevirtual #32
156: aload_3
157: invokevirtual #32
160: ldc           #52
162: invokevirtual #32
165: invokevirtual #35
168: aload_3
169: ldc           #44
171: invokestatic  #53
174: new           #29
177: dup
178: invokespecial #30
181: ldc           #31
183: invokevirtual #32
186: aload         4
188: invokevirtual #32
191: ldc           #66
193: invokevirtual #32
196: invokevirtual #35
199: aload         4
201: ldc           #67
203: invokestatic  #53
206: aload         5
208: invokestatic  #51
211: new           #29
214: dup
215: invokespecial #30
218: ldc           #31
220: invokevirtual #32
223: aload         6
225: invokevirtual #32
228: ldc           #99
230: invokevirtual #32
233: invokevirtual #35
236: aload         6
238: ldc           #12
240: invokestatic  #53
243: return
Exception table:
from    to  target type
76    93    96   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0314
Start line: 6762
End line: 0
Method source code: 
    public void test0314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0314");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.lang.String str1 = helpFormatter0.defaultSyntaxPrefix;
        java.util.Comparator comparator2 = helpFormatter0.optionComparator;
        java.lang.String str3 = helpFormatter0.defaultArgName;
        java.util.Comparator comparator4 = helpFormatter0.optionComparator;
        int int5 = helpFormatter0.defaultDescPad;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "usage: " + "'", str1, "usage: ");
        org.junit.Assert.assertNotNull(comparator2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "arg" + "'", str3, "arg");
        org.junit.Assert.assertNotNull(comparator4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 3 + "'", int5 == 3);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #416
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: getfield      #97
37: astore_2
38: aload_1
39: getfield      #47
42: astore_3
43: aload_1
44: getfield      #77
47: astore        4
49: aload_1
50: getfield      #47
53: astore        5
55: aload_1
56: getfield      #76
59: istore        6
61: new           #29
64: dup
65: invokespecial #30
68: ldc           #31
70: invokevirtual #32
73: aload_2
74: invokevirtual #32
77: ldc           #99
79: invokevirtual #32
82: invokevirtual #35
85: aload_2
86: ldc           #12
88: invokestatic  #53
91: aload_3
92: invokestatic  #51
95: new           #29
98: dup
99: invokespecial #30
102: ldc           #31
104: invokevirtual #32
107: aload         4
109: invokevirtual #32
112: ldc           #78
114: invokevirtual #32
117: invokevirtual #35
120: aload         4
122: ldc           #79
124: invokestatic  #53
127: aload         5
129: invokestatic  #51
132: new           #29
135: dup
136: invokespecial #30
139: ldc           #31
141: invokevirtual #32
144: iload         6
146: invokevirtual #33
149: ldc           #34
151: invokevirtual #32
154: iconst_3
155: invokevirtual #33
158: ldc           #31
160: invokevirtual #32
163: invokevirtual #35
166: iload         6
168: iconst_3
169: if_icmpne     176
172: iconst_1
173: goto          177
176: iconst_0
177: invokestatic  #36
180: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0315
Start line: 6779
End line: 0
Method source code: 
    public void test0315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0315");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.defaultLongOptPrefix = "hi!";
        int int3 = helpFormatter0.getWidth();
        helpFormatter0.setLongOptPrefix("          ");
        int int6 = helpFormatter0.getDescPadding();
        java.lang.String str7 = helpFormatter0.getNewLine();
        int int8 = helpFormatter0.defaultLeftPad;
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 74 + "'", int3 == 74);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 3 + "'", int6 == 3);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\n" + "'", str7, "\n");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #417
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #25
36: putfield      #55
39: aload_1
40: invokevirtual #129
43: istore_2
44: aload_1
45: ldc           #114
47: invokevirtual #49
50: aload_1
51: invokevirtual #118
54: istore_3
55: aload_1
56: invokevirtual #72
59: astore        4
61: aload_1
62: getfield      #60
65: istore        5
67: new           #29
70: dup
71: invokespecial #30
74: ldc           #31
76: invokevirtual #32
79: iload_2
80: invokevirtual #33
83: ldc           #34
85: invokevirtual #32
88: bipush        74
90: invokevirtual #33
93: ldc           #31
95: invokevirtual #32
98: invokevirtual #35
101: iload_2
102: bipush        74
104: if_icmpne     111
107: iconst_1
108: goto          112
111: iconst_0
112: invokestatic  #36
115: new           #29
118: dup
119: invokespecial #30
122: ldc           #31
124: invokevirtual #32
127: iload_3
128: invokevirtual #33
131: ldc           #34
133: invokevirtual #32
136: iconst_3
137: invokevirtual #33
140: ldc           #31
142: invokevirtual #32
145: invokevirtual #35
148: iload_3
149: iconst_3
150: if_icmpne     157
153: iconst_1
154: goto          158
157: iconst_0
158: invokestatic  #36
161: new           #29
164: dup
165: invokespecial #30
168: ldc           #31
170: invokevirtual #32
173: aload         4
175: invokevirtual #32
178: ldc           #74
180: invokevirtual #32
183: invokevirtual #35
186: aload         4
188: ldc           #65
190: invokestatic  #53
193: new           #29
196: dup
197: invokespecial #30
200: ldc           #31
202: invokevirtual #32
205: iload         5
207: invokevirtual #33
210: ldc           #34
212: invokevirtual #32
215: iconst_1
216: invokevirtual #33
219: ldc           #31
221: invokevirtual #32
224: invokevirtual #35
227: iload         5
229: iconst_1
230: if_icmpne     237
233: iconst_1
234: goto          238
237: iconst_0
238: invokestatic  #36
241: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0316
Start line: 6796
End line: 0
Method source code: 
    public void test0316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0316");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.defaultDescPad = '4';
        helpFormatter0.setNewLine("");
        helpFormatter0.defaultWidth = 0;
        helpFormatter0.setDescPadding((int) 'a');
        java.io.PrintWriter printWriter12 = null;
        try {
            helpFormatter0.printUsage(printWriter12, (int) (short) -1, " ");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #418
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: bipush        52
47: putfield      #76
50: aload_1
51: ldc           #10
53: invokevirtual #131
56: aload_1
57: iconst_0
58: putfield      #110
61: aload_1
62: bipush        97
64: invokevirtual #38
67: aconst_null
68: astore_3
69: aload_1
70: aload_3
71: iconst_m1
72: ldc           #24
74: invokevirtual #87
77: ldc           #14
79: invokestatic  #15
82: goto          87
85: astore        4
87: new           #29
90: dup
91: invokespecial #30
94: ldc           #31
96: invokevirtual #32
99: iload_2
100: invokevirtual #33
103: ldc           #34
105: invokevirtual #32
108: iconst_1
109: invokevirtual #33
112: ldc           #31
114: invokevirtual #32
117: invokevirtual #35
120: iload_2
121: iconst_1
122: if_icmpne     129
125: iconst_1
126: goto          130
129: iconst_0
130: invokestatic  #36
133: return
Exception table:
from    to  target type
69    82    85   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0317
Start line: 6818
End line: 0
Method source code: 
    public void test0317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0317");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultOptPrefix;
        java.lang.String str6 = helpFormatter0.getLongOptPrefix();
        helpFormatter0.defaultArgName = "                                                                                                 ";
        int int9 = helpFormatter0.defaultLeftPad;
        helpFormatter0.setNewLine(" ");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #419
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #10
36: invokevirtual #11
39: aload_1
40: ldc           #10
42: putfield      #55
45: aload_1
46: getfield      #63
49: astore_2
50: aload_1
51: invokevirtual #48
54: astore_3
55: aload_1
56: ldc           #141
58: putfield      #77
61: aload_1
62: getfield      #60
65: istore        4
67: aload_1
68: ldc           #24
70: invokevirtual #131
73: new           #29
76: dup
77: invokespecial #30
80: ldc           #31
82: invokevirtual #32
85: aload_2
86: invokevirtual #32
89: ldc           #68
91: invokevirtual #32
94: invokevirtual #35
97: aload_2
98: ldc           #10
100: invokestatic  #53
103: new           #29
106: dup
107: invokespecial #30
110: ldc           #31
112: invokevirtual #32
115: aload_3
116: invokevirtual #32
119: ldc           #68
121: invokevirtual #32
124: invokevirtual #35
127: aload_3
128: ldc           #10
130: invokestatic  #53
133: new           #29
136: dup
137: invokespecial #30
140: ldc           #31
142: invokevirtual #32
145: iload         4
147: invokevirtual #33
150: ldc           #34
152: invokevirtual #32
155: iconst_1
156: invokevirtual #33
159: ldc           #31
161: invokevirtual #32
164: invokevirtual #35
167: iload         4
169: iconst_1
170: if_icmpne     177
173: iconst_1
174: goto          178
177: iconst_0
178: invokestatic  #36
181: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0318
Start line: 6835
End line: 0
Method source code: 
    public void test0318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0318");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        int int4 = helpFormatter0.defaultDescPad;
        java.io.PrintWriter printWriter5 = null;
        org.apache.commons.cli.Options options9 = null;
        try {
            helpFormatter0.printHelp(printWriter5, 10, "                                                    ", "\n", options9, (int) (short) -1, (-2), "--", false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 3 + "'", int4 == 3);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #420
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: getfield      #76
48: istore_3
49: aconst_null
50: astore        4
52: aconst_null
53: astore        5
55: aload_1
56: aload         4
58: bipush        10
60: ldc_w         #313
63: ldc           #65
65: aload         5
67: iconst_m1
68: bipush        -2
70: ldc           #44
72: iconst_0
73: invokevirtual #40
76: ldc           #14
78: invokestatic  #15
81: goto          86
84: astore        6
86: new           #29
89: dup
90: invokespecial #30
93: ldc           #31
95: invokevirtual #32
98: iload_2
99: invokevirtual #33
102: ldc           #34
104: invokevirtual #32
107: iconst_1
108: invokevirtual #33
111: ldc           #31
113: invokevirtual #32
116: invokevirtual #35
119: iload_2
120: iconst_1
121: if_icmpne     128
124: iconst_1
125: goto          129
128: iconst_0
129: invokestatic  #36
132: new           #29
135: dup
136: invokespecial #30
139: ldc           #31
141: invokevirtual #32
144: iload_3
145: invokevirtual #33
148: ldc           #34
150: invokevirtual #32
153: iconst_3
154: invokevirtual #33
157: ldc           #31
159: invokevirtual #32
162: invokevirtual #35
165: iload_3
166: iconst_3
167: if_icmpne     174
170: iconst_1
171: goto          175
174: iconst_0
175: invokestatic  #36
178: return
Exception table:
from    to  target type
55    81    84   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0319
Start line: 6856
End line: 0
Method source code: 
    public void test0319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0319");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        java.lang.String str6 = helpFormatter0.rtrim("");
        java.lang.String str8 = helpFormatter0.rtrim("-");
        helpFormatter0.defaultOptPrefix = "--";
        helpFormatter0.defaultDescPad = 0;
        int int16 = helpFormatter0.findWrapPos("", (-1), (int) (short) 0);
        org.apache.commons.cli.Options options19 = null;
        try {
            helpFormatter0.printHelp("-", " ", options19, "                                                                                                 ");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "-" + "'", str8, "-");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #421
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: getfield      #63
48: astore_3
49: aload_1
50: ldc           #10
52: invokevirtual #64
55: astore        4
57: aload_1
58: ldc           #67
60: invokevirtual #64
63: astore        5
65: aload_1
66: ldc           #44
68: putfield      #63
71: aload_1
72: iconst_0
73: putfield      #76
76: aload_1
77: ldc           #10
79: iconst_m1
80: iconst_0
81: invokevirtual #93
84: istore        6
86: aconst_null
87: astore        7
89: aload_1
90: ldc           #67
92: ldc           #24
94: aload         7
96: ldc           #141
98: invokevirtual #13
101: ldc           #14
103: invokestatic  #15
106: goto          111
109: astore        8
111: new           #29
114: dup
115: invokespecial #30
118: ldc           #31
120: invokevirtual #32
123: iload_2
124: invokevirtual #33
127: ldc           #34
129: invokevirtual #32
132: iconst_1
133: invokevirtual #33
136: ldc           #31
138: invokevirtual #32
141: invokevirtual #35
144: iload_2
145: iconst_1
146: if_icmpne     153
149: iconst_1
150: goto          154
153: iconst_0
154: invokestatic  #36
157: new           #29
160: dup
161: invokespecial #30
164: ldc           #31
166: invokevirtual #32
169: aload_3
170: invokevirtual #32
173: ldc           #66
175: invokevirtual #32
178: invokevirtual #35
181: aload_3
182: ldc           #67
184: invokestatic  #53
187: new           #29
190: dup
191: invokespecial #30
194: ldc           #31
196: invokevirtual #32
199: aload         4
201: invokevirtual #32
204: ldc           #68
206: invokevirtual #32
209: invokevirtual #35
212: aload         4
214: ldc           #10
216: invokestatic  #53
219: new           #29
222: dup
223: invokespecial #30
226: ldc           #31
228: invokevirtual #32
231: aload         5
233: invokevirtual #32
236: ldc           #66
238: invokevirtual #32
241: invokevirtual #35
244: aload         5
246: ldc           #67
248: invokestatic  #53
251: new           #29
254: dup
255: invokespecial #30
258: ldc           #31
260: invokevirtual #32
263: iload         6
265: invokevirtual #33
268: ldc           #34
270: invokevirtual #32
273: iconst_m1
274: invokevirtual #33
277: ldc           #31
279: invokevirtual #32
282: invokevirtual #35
285: iload         6
287: iconst_m1
288: if_icmpne     295
291: iconst_1
292: goto          296
295: iconst_0
296: invokestatic  #36
299: return
Exception table:
from    to  target type
89   106   109   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0320
Start line: 6884
End line: 0
Method source code: 
    public void test0320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0320");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.defaultDescPad = '4';
        helpFormatter0.setNewLine("");
        helpFormatter0.setSyntaxPrefix("");
        java.lang.String str10 = helpFormatter0.getSyntaxPrefix();
        helpFormatter0.setWidth((-2));
        java.lang.String str13 = helpFormatter0.getOptPrefix();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "-" + "'", str13, "-");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #422
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: bipush        52
47: putfield      #76
50: aload_1
51: ldc           #10
53: invokevirtual #131
56: aload_1
57: ldc           #10
59: invokevirtual #39
62: aload_1
63: invokevirtual #102
66: astore_3
67: aload_1
68: bipush        -2
70: invokevirtual #156
73: aload_1
74: invokevirtual #123
77: astore        4
79: new           #29
82: dup
83: invokespecial #30
86: ldc           #31
88: invokevirtual #32
91: iload_2
92: invokevirtual #33
95: ldc           #34
97: invokevirtual #32
100: iconst_1
101: invokevirtual #33
104: ldc           #31
106: invokevirtual #32
109: invokevirtual #35
112: iload_2
113: iconst_1
114: if_icmpne     121
117: iconst_1
118: goto          122
121: iconst_0
122: invokestatic  #36
125: new           #29
128: dup
129: invokespecial #30
132: ldc           #31
134: invokevirtual #32
137: aload_3
138: invokevirtual #32
141: ldc           #68
143: invokevirtual #32
146: invokevirtual #35
149: aload_3
150: ldc           #10
152: invokestatic  #53
155: new           #29
158: dup
159: invokespecial #30
162: ldc           #31
164: invokevirtual #32
167: aload         4
169: invokevirtual #32
172: ldc           #66
174: invokevirtual #32
177: invokevirtual #35
180: aload         4
182: ldc           #67
184: invokestatic  #53
187: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0321
Start line: 6902
End line: 0
Method source code: 
    public void test0321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0321");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.lang.String str1 = helpFormatter0.getArgName();
        int int5 = helpFormatter0.findWrapPos("arg", 0, (int) (byte) 10);
        org.apache.commons.cli.Options options8 = null;
        try {
            helpFormatter0.printHelp("                                                                                                 ", "--", options8, "                                                                                                 ");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "arg" + "'", str1, "arg");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #423
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #104
37: astore_2
38: aload_1
39: ldc           #79
41: iconst_0
42: bipush        10
44: invokevirtual #93
47: istore_3
48: aconst_null
49: astore        4
51: aload_1
52: ldc           #141
54: ldc           #44
56: aload         4
58: ldc           #141
60: invokevirtual #13
63: ldc           #14
65: invokestatic  #15
68: goto          73
71: astore        5
73: new           #29
76: dup
77: invokespecial #30
80: ldc           #31
82: invokevirtual #32
85: aload_2
86: invokevirtual #32
89: ldc           #78
91: invokevirtual #32
94: invokevirtual #35
97: aload_2
98: ldc           #79
100: invokestatic  #53
103: new           #29
106: dup
107: invokespecial #30
110: ldc           #31
112: invokevirtual #32
115: iload_3
116: invokevirtual #33
119: ldc           #34
121: invokevirtual #32
124: iconst_m1
125: invokevirtual #33
128: ldc           #31
130: invokevirtual #32
133: invokevirtual #35
136: iload_3
137: iconst_m1
138: if_icmpne     145
141: iconst_1
142: goto          146
145: iconst_0
146: invokestatic  #36
149: return
Exception table:
from    to  target type
51    68    71   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0322
Start line: 6921
End line: 0
Method source code: 
    public void test0322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0322");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        java.lang.String str3 = helpFormatter0.getLongOptSeparator();
        helpFormatter0.defaultDescPad = 0;
        helpFormatter0.defaultWidth = 1;
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + " " + "'", str3, " ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #424
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #10
36: invokevirtual #11
39: aload_1
40: invokevirtual #86
43: astore_2
44: aload_1
45: iconst_0
46: putfield      #76
49: aload_1
50: iconst_1
51: putfield      #110
54: new           #29
57: dup
58: invokespecial #30
61: ldc           #31
63: invokevirtual #32
66: aload_2
67: invokevirtual #32
70: ldc           #88
72: invokevirtual #32
75: invokevirtual #35
78: aload_2
79: ldc           #24
81: invokestatic  #53
84: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0323
Start line: 6933
End line: 0
Method source code: 
    public void test0323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0323");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.util.Comparator comparator1 = helpFormatter0.optionComparator;
        java.lang.String str3 = helpFormatter0.rtrim("");
        helpFormatter0.setLongOptSeparator(" ");
        org.apache.commons.cli.HelpFormatter helpFormatter6 = new org.apache.commons.cli.HelpFormatter();
        int int7 = helpFormatter6.getLeftPadding();
        helpFormatter6.defaultNewLine = "";
        helpFormatter6.defaultDescPad = '4';
        helpFormatter6.setNewLine("");
        int int17 = helpFormatter6.findWrapPos("\n", (int) ' ', 3);
        java.util.Comparator comparator18 = helpFormatter6.optionComparator;
        helpFormatter0.setOptionComparator(comparator18);
        helpFormatter0.setLeftPadding((int) ' ');
        org.junit.Assert.assertNotNull(comparator1);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(comparator18);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #425
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: getfield      #47
37: astore_2
38: aload_1
39: ldc           #10
41: invokevirtual #64
44: astore_3
45: aload_1
46: ldc           #24
48: invokevirtual #91
51: new           #8
54: dup
55: invokespecial #9
58: astore        4
60: aload         4
62: invokevirtual #22
65: istore        5
67: aload         4
69: ldc           #10
71: putfield      #23
74: aload         4
76: bipush        52
78: putfield      #76
81: aload         4
83: ldc           #10
85: invokevirtual #131
88: aload         4
90: ldc           #65
92: bipush        32
94: iconst_3
95: invokevirtual #93
98: istore        6
100: aload         4
102: getfield      #47
105: astore        7
107: aload_1
108: aload         7
110: invokevirtual #152
113: aload_1
114: bipush        32
116: invokevirtual #193
119: aload_2
120: invokestatic  #51
123: new           #29
126: dup
127: invokespecial #30
130: ldc           #31
132: invokevirtual #32
135: aload_3
136: invokevirtual #32
139: ldc           #68
141: invokevirtual #32
144: invokevirtual #35
147: aload_3
148: ldc           #10
150: invokestatic  #53
153: new           #29
156: dup
157: invokespecial #30
160: ldc           #31
162: invokevirtual #32
165: iload         5
167: invokevirtual #33
170: ldc           #34
172: invokevirtual #32
175: iconst_1
176: invokevirtual #33
179: ldc           #31
181: invokevirtual #32
184: invokevirtual #35
187: iload         5
189: iconst_1
190: if_icmpne     197
193: iconst_1
194: goto          198
197: iconst_0
198: invokestatic  #36
201: new           #29
204: dup
205: invokespecial #30
208: ldc           #31
210: invokevirtual #32
213: iload         6
215: invokevirtual #33
218: ldc           #34
220: invokevirtual #32
223: iconst_m1
224: invokevirtual #33
227: ldc           #31
229: invokevirtual #32
232: invokevirtual #35
235: iload         6
237: iconst_m1
238: if_icmpne     245
241: iconst_1
242: goto          246
245: iconst_0
246: invokestatic  #36
249: aload         7
251: invokestatic  #51
254: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0324
Start line: 6957
End line: 0
Method source code: 
    public void test0324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0324");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        helpFormatter0.defaultArgName = "hi!";
        helpFormatter0.setOptPrefix("hi!");
        java.io.PrintWriter printWriter10 = null;
        org.apache.commons.cli.Options options14 = null;
        try {
            helpFormatter0.printHelp(printWriter10, 52, "usage: ", "arg", options14, 3, (int) (short) 1, "          ", false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #426
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: bipush        10
47: invokevirtual #38
50: aload_1
51: ldc           #25
53: putfield      #77
56: aload_1
57: ldc           #25
59: invokevirtual #11
62: aconst_null
63: astore_3
64: aconst_null
65: astore        4
67: aload_1
68: aload_3
69: bipush        52
71: ldc           #12
73: ldc           #79
75: aload         4
77: iconst_3
78: iconst_1
79: ldc           #114
81: iconst_0
82: invokevirtual #40
85: ldc           #14
87: invokestatic  #15
90: goto          95
93: astore        5
95: new           #29
98: dup
99: invokespecial #30
102: ldc           #31
104: invokevirtual #32
107: iload_2
108: invokevirtual #33
111: ldc           #34
113: invokevirtual #32
116: iconst_1
117: invokevirtual #33
120: ldc           #31
122: invokevirtual #32
125: invokevirtual #35
128: iload_2
129: iconst_1
130: if_icmpne     137
133: iconst_1
134: goto          138
137: iconst_0
138: invokestatic  #36
141: return
Exception table:
from    to  target type
67    90    93   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0325
Start line: 6979
End line: 0
Method source code: 
    public void test0325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0325");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str6 = helpFormatter0.getNewLine();
        java.util.Comparator comparator7 = helpFormatter0.getOptionComparator();
        helpFormatter0.setDescPadding(3);
        int int10 = helpFormatter0.defaultLeftPad;
        helpFormatter0.defaultOptPrefix = "                                                                                                    ";
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\n" + "'", str6, "\n");
        org.junit.Assert.assertNotNull(comparator7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #427
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #10
36: invokevirtual #11
39: aload_1
40: ldc           #10
42: putfield      #55
45: aload_1
46: getfield      #55
49: astore_2
50: aload_1
51: invokevirtual #72
54: astore_3
55: aload_1
56: invokevirtual #106
59: astore        4
61: aload_1
62: iconst_3
63: invokevirtual #38
66: aload_1
67: getfield      #60
70: istore        5
72: aload_1
73: ldc           #240
75: putfield      #63
78: new           #29
81: dup
82: invokespecial #30
85: ldc           #31
87: invokevirtual #32
90: aload_2
91: invokevirtual #32
94: ldc           #68
96: invokevirtual #32
99: invokevirtual #35
102: aload_2
103: ldc           #10
105: invokestatic  #53
108: new           #29
111: dup
112: invokespecial #30
115: ldc           #31
117: invokevirtual #32
120: aload_3
121: invokevirtual #32
124: ldc           #74
126: invokevirtual #32
129: invokevirtual #35
132: aload_3
133: ldc           #65
135: invokestatic  #53
138: aload         4
140: invokestatic  #51
143: new           #29
146: dup
147: invokespecial #30
150: ldc           #31
152: invokevirtual #32
155: iload         5
157: invokevirtual #33
160: ldc           #34
162: invokevirtual #32
165: iconst_1
166: invokevirtual #33
169: ldc           #31
171: invokevirtual #32
174: invokevirtual #35
177: iload         5
179: iconst_1
180: if_icmpne     187
183: iconst_1
184: goto          188
187: iconst_0
188: invokestatic  #36
191: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0326
Start line: 6998
End line: 0
Method source code: 
    public void test0326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0326");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.getArgName();
        helpFormatter0.setSyntaxPrefix("usage: ");
        java.lang.String str5 = helpFormatter0.defaultSyntaxPrefix;
        java.lang.String str6 = helpFormatter0.defaultSyntaxPrefix;
        helpFormatter0.defaultArgName = "--";
        int int9 = helpFormatter0.defaultLeftPad;
        helpFormatter0.defaultSyntaxPrefix = "";
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "arg" + "'", str2, "arg");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "usage: " + "'", str5, "usage: ");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "usage: " + "'", str6, "usage: ");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #428
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: invokevirtual #104
42: astore_3
43: aload_1
44: ldc           #12
46: invokevirtual #39
49: aload_1
50: getfield      #97
53: astore        4
55: aload_1
56: getfield      #97
59: astore        5
61: aload_1
62: ldc           #44
64: putfield      #77
67: aload_1
68: getfield      #60
71: istore        6
73: aload_1
74: ldc           #10
76: putfield      #97
79: new           #29
82: dup
83: invokespecial #30
86: ldc           #31
88: invokevirtual #32
91: iload_2
92: invokevirtual #33
95: ldc           #34
97: invokevirtual #32
100: iconst_1
101: invokevirtual #33
104: ldc           #31
106: invokevirtual #32
109: invokevirtual #35
112: iload_2
113: iconst_1
114: if_icmpne     121
117: iconst_1
118: goto          122
121: iconst_0
122: invokestatic  #36
125: new           #29
128: dup
129: invokespecial #30
132: ldc           #31
134: invokevirtual #32
137: aload_3
138: invokevirtual #32
141: ldc           #78
143: invokevirtual #32
146: invokevirtual #35
149: aload_3
150: ldc           #79
152: invokestatic  #53
155: new           #29
158: dup
159: invokespecial #30
162: ldc           #31
164: invokevirtual #32
167: aload         4
169: invokevirtual #32
172: ldc           #99
174: invokevirtual #32
177: invokevirtual #35
180: aload         4
182: ldc           #12
184: invokestatic  #53
187: new           #29
190: dup
191: invokespecial #30
194: ldc           #31
196: invokevirtual #32
199: aload         5
201: invokevirtual #32
204: ldc           #99
206: invokevirtual #32
209: invokevirtual #35
212: aload         5
214: ldc           #12
216: invokestatic  #53
219: new           #29
222: dup
223: invokespecial #30
226: ldc           #31
228: invokevirtual #32
231: iload         6
233: invokevirtual #33
236: ldc           #34
238: invokevirtual #32
241: iconst_1
242: invokevirtual #33
245: ldc           #31
247: invokevirtual #32
250: invokevirtual #35
253: iload         6
255: iconst_1
256: if_icmpne     263
259: iconst_1
260: goto          264
263: iconst_0
264: invokestatic  #36
267: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0327
Start line: 7018
End line: 0
Method source code: 
    public void test0327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0327");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultOptPrefix;
        java.lang.String str6 = helpFormatter0.getLongOptPrefix();
        helpFormatter0.defaultLeftPad = 0;
        java.lang.String str9 = helpFormatter0.defaultNewLine;
        java.lang.String str10 = helpFormatter0.getLongOptSeparator();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\n" + "'", str9, "\n");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + " " + "'", str10, " ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #429
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #10
36: invokevirtual #11
39: aload_1
40: ldc           #10
42: putfield      #55
45: aload_1
46: getfield      #63
49: astore_2
50: aload_1
51: invokevirtual #48
54: astore_3
55: aload_1
56: iconst_0
57: putfield      #60
60: aload_1
61: getfield      #23
64: astore        4
66: aload_1
67: invokevirtual #86
70: astore        5
72: new           #29
75: dup
76: invokespecial #30
79: ldc           #31
81: invokevirtual #32
84: aload_2
85: invokevirtual #32
88: ldc           #68
90: invokevirtual #32
93: invokevirtual #35
96: aload_2
97: ldc           #10
99: invokestatic  #53
102: new           #29
105: dup
106: invokespecial #30
109: ldc           #31
111: invokevirtual #32
114: aload_3
115: invokevirtual #32
118: ldc           #68
120: invokevirtual #32
123: invokevirtual #35
126: aload_3
127: ldc           #10
129: invokestatic  #53
132: new           #29
135: dup
136: invokespecial #30
139: ldc           #31
141: invokevirtual #32
144: aload         4
146: invokevirtual #32
149: ldc           #74
151: invokevirtual #32
154: invokevirtual #35
157: aload         4
159: ldc           #65
161: invokestatic  #53
164: new           #29
167: dup
168: invokespecial #30
171: ldc           #31
173: invokevirtual #32
176: aload         5
178: invokevirtual #32
181: ldc           #88
183: invokevirtual #32
186: invokevirtual #35
189: aload         5
191: ldc           #24
193: invokestatic  #53
196: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0328
Start line: 7036
End line: 0
Method source code: 
    public void test0328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0328");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        int int6 = helpFormatter0.getLeftPadding();
        helpFormatter0.setLongOptSeparator("\n");
        java.lang.String str9 = helpFormatter0.getLongOptPrefix();
        helpFormatter0.setLeftPadding((int) ' ');
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #430
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #10
36: invokevirtual #11
39: aload_1
40: ldc           #10
42: putfield      #55
45: aload_1
46: getfield      #55
49: astore_2
50: aload_1
51: invokevirtual #22
54: istore_3
55: aload_1
56: ldc           #65
58: invokevirtual #91
61: aload_1
62: invokevirtual #48
65: astore        4
67: aload_1
68: bipush        32
70: invokevirtual #193
73: new           #29
76: dup
77: invokespecial #30
80: ldc           #31
82: invokevirtual #32
85: aload_2
86: invokevirtual #32
89: ldc           #68
91: invokevirtual #32
94: invokevirtual #35
97: aload_2
98: ldc           #10
100: invokestatic  #53
103: new           #29
106: dup
107: invokespecial #30
110: ldc           #31
112: invokevirtual #32
115: iload_3
116: invokevirtual #33
119: ldc           #34
121: invokevirtual #32
124: iconst_1
125: invokevirtual #33
128: ldc           #31
130: invokevirtual #32
133: invokevirtual #35
136: iload_3
137: iconst_1
138: if_icmpne     145
141: iconst_1
142: goto          146
145: iconst_0
146: invokestatic  #36
149: new           #29
152: dup
153: invokespecial #30
156: ldc           #31
158: invokevirtual #32
161: aload         4
163: invokevirtual #32
166: ldc           #68
168: invokevirtual #32
171: invokevirtual #35
174: aload         4
176: ldc           #10
178: invokestatic  #53
181: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0329
Start line: 7053
End line: 0
Method source code: 
    public void test0329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0329");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.defaultLongOptPrefix;
        helpFormatter0.defaultSyntaxPrefix = "--";
        org.apache.commons.cli.Options options8 = null;
        try {
            helpFormatter0.printHelp((int) (byte) -1, "\n", "hi!", options8, "\n");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "--" + "'", str2, "--");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #431
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: getfield      #55
42: astore_3
43: aload_1
44: ldc           #44
46: putfield      #97
49: aconst_null
50: astore        4
52: aload_1
53: iconst_m1
54: ldc           #65
56: ldc           #25
58: aload         4
60: ldc           #65
62: invokevirtual #45
65: ldc           #14
67: invokestatic  #15
70: goto          75
73: astore        5
75: new           #29
78: dup
79: invokespecial #30
82: ldc           #31
84: invokevirtual #32
87: iload_2
88: invokevirtual #33
91: ldc           #34
93: invokevirtual #32
96: iconst_1
97: invokevirtual #33
100: ldc           #31
102: invokevirtual #32
105: invokevirtual #35
108: iload_2
109: iconst_1
110: if_icmpne     117
113: iconst_1
114: goto          118
117: iconst_0
118: invokestatic  #36
121: new           #29
124: dup
125: invokespecial #30
128: ldc           #31
130: invokevirtual #32
133: aload_3
134: invokevirtual #32
137: ldc           #52
139: invokevirtual #32
142: invokevirtual #35
145: aload_3
146: ldc           #44
148: invokestatic  #53
151: return
Exception table:
from    to  target type
52    70    73   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0330
Start line: 7073
End line: 0
Method source code: 
    public void test0330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0330");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.lang.String str1 = helpFormatter0.defaultSyntaxPrefix;
        java.util.Comparator comparator2 = helpFormatter0.optionComparator;
        java.lang.String str3 = helpFormatter0.defaultArgName;
        java.util.Comparator comparator4 = helpFormatter0.optionComparator;
        helpFormatter0.defaultNewLine = "";
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "usage: " + "'", str1, "usage: ");
        org.junit.Assert.assertNotNull(comparator2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "arg" + "'", str3, "arg");
        org.junit.Assert.assertNotNull(comparator4);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #432
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: getfield      #97
37: astore_2
38: aload_1
39: getfield      #47
42: astore_3
43: aload_1
44: getfield      #77
47: astore        4
49: aload_1
50: getfield      #47
53: astore        5
55: aload_1
56: ldc           #10
58: putfield      #23
61: new           #29
64: dup
65: invokespecial #30
68: ldc           #31
70: invokevirtual #32
73: aload_2
74: invokevirtual #32
77: ldc           #99
79: invokevirtual #32
82: invokevirtual #35
85: aload_2
86: ldc           #12
88: invokestatic  #53
91: aload_3
92: invokestatic  #51
95: new           #29
98: dup
99: invokespecial #30
102: ldc           #31
104: invokevirtual #32
107: aload         4
109: invokevirtual #32
112: ldc           #78
114: invokevirtual #32
117: invokevirtual #35
120: aload         4
122: ldc           #79
124: invokestatic  #53
127: aload         5
129: invokestatic  #51
132: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0331
Start line: 7089
End line: 0
Method source code: 
    public void test0331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0331");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setLeftPadding((int) (byte) 0);
        helpFormatter0.setLongOptPrefix("                                                                                                 ");
        int int9 = helpFormatter0.getDescPadding();
        java.util.Comparator comparator10 = helpFormatter0.optionComparator;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 3 + "'", int9 == 3);
        org.junit.Assert.assertNotNull(comparator10);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #433
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: getfield      #63
48: astore_3
49: aload_1
50: iconst_0
51: invokevirtual #193
54: aload_1
55: ldc           #141
57: invokevirtual #49
60: aload_1
61: invokevirtual #118
64: istore        4
66: aload_1
67: getfield      #47
70: astore        5
72: new           #29
75: dup
76: invokespecial #30
79: ldc           #31
81: invokevirtual #32
84: iload_2
85: invokevirtual #33
88: ldc           #34
90: invokevirtual #32
93: iconst_1
94: invokevirtual #33
97: ldc           #31
99: invokevirtual #32
102: invokevirtual #35
105: iload_2
106: iconst_1
107: if_icmpne     114
110: iconst_1
111: goto          115
114: iconst_0
115: invokestatic  #36
118: new           #29
121: dup
122: invokespecial #30
125: ldc           #31
127: invokevirtual #32
130: aload_3
131: invokevirtual #32
134: ldc           #66
136: invokevirtual #32
139: invokevirtual #35
142: aload_3
143: ldc           #67
145: invokestatic  #53
148: new           #29
151: dup
152: invokespecial #30
155: ldc           #31
157: invokevirtual #32
160: iload         4
162: invokevirtual #33
165: ldc           #34
167: invokevirtual #32
170: iconst_3
171: invokevirtual #33
174: ldc           #31
176: invokevirtual #32
179: invokevirtual #35
182: iload         4
184: iconst_3
185: if_icmpne     192
188: iconst_1
189: goto          193
192: iconst_0
193: invokestatic  #36
196: aload         5
198: invokestatic  #51
201: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0332
Start line: 7107
End line: 0
Method source code: 
    public void test0332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0332");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.defaultDescPad = '4';
        helpFormatter0.setNewLine("");
        helpFormatter0.setSyntaxPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #434
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: bipush        52
47: putfield      #76
50: aload_1
51: ldc           #10
53: invokevirtual #131
56: aload_1
57: ldc           #10
59: invokevirtual #39
62: aload_1
63: ldc           #10
65: putfield      #55
68: new           #29
71: dup
72: invokespecial #30
75: ldc           #31
77: invokevirtual #32
80: iload_2
81: invokevirtual #33
84: ldc           #34
86: invokevirtual #32
89: iconst_1
90: invokevirtual #33
93: ldc           #31
95: invokevirtual #32
98: invokevirtual #35
101: iload_2
102: iconst_1
103: if_icmpne     110
106: iconst_1
107: goto          111
110: iconst_0
111: invokestatic  #36
114: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0333
Start line: 7121
End line: 0
Method source code: 
    public void test0333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0333");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str6 = helpFormatter0.getNewLine();
        helpFormatter0.setSyntaxPrefix(" ");
        java.io.PrintWriter printWriter9 = null;
        org.apache.commons.cli.Options options12 = null;
        try {
            helpFormatter0.printUsage(printWriter9, 97, "hi!", options12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\n" + "'", str6, "\n");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #435
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #10
36: invokevirtual #11
39: aload_1
40: ldc           #10
42: putfield      #55
45: aload_1
46: getfield      #55
49: astore_2
50: aload_1
51: invokevirtual #72
54: astore_3
55: aload_1
56: ldc           #24
58: invokevirtual #39
61: aconst_null
62: astore        4
64: aconst_null
65: astore        5
67: aload_1
68: aload         4
70: bipush        97
72: ldc           #25
74: aload         5
76: invokevirtual #127
79: ldc           #14
81: invokestatic  #15
84: goto          89
87: astore        6
89: new           #29
92: dup
93: invokespecial #30
96: ldc           #31
98: invokevirtual #32
101: aload_2
102: invokevirtual #32
105: ldc           #68
107: invokevirtual #32
110: invokevirtual #35
113: aload_2
114: ldc           #10
116: invokestatic  #53
119: new           #29
122: dup
123: invokespecial #30
126: ldc           #31
128: invokevirtual #32
131: aload_3
132: invokevirtual #32
135: ldc           #74
137: invokevirtual #32
140: invokevirtual #35
143: aload_3
144: ldc           #65
146: invokestatic  #53
149: return
Exception table:
from    to  target type
67    84    87   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0334
Start line: 7144
End line: 0
Method source code: 
    public void test0334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0334");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        int int2 = helpFormatter0.getWidth();
        helpFormatter0.defaultOptPrefix = "   ";
        java.io.PrintWriter printWriter5 = null;
        org.apache.commons.cli.Options options7 = null;
        try {
            helpFormatter0.printOptions(printWriter5, 52, options7, (-2), (-2));
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: null");
        } catch (java.lang.NegativeArraySizeException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 74 + "'", int2 == 74);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #436
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: invokevirtual #129
42: istore_3
43: aload_1
44: ldc_w         #259
47: putfield      #63
50: aconst_null
51: astore        4
53: aconst_null
54: astore        5
56: aload_1
57: aload         4
59: bipush        52
61: aload         5
63: bipush        -2
65: bipush        -2
67: invokevirtual #18
70: ldc           #19
72: invokestatic  #15
75: goto          80
78: astore        6
80: new           #29
83: dup
84: invokespecial #30
87: ldc           #31
89: invokevirtual #32
92: iload_2
93: invokevirtual #33
96: ldc           #34
98: invokevirtual #32
101: iconst_1
102: invokevirtual #33
105: ldc           #31
107: invokevirtual #32
110: invokevirtual #35
113: iload_2
114: iconst_1
115: if_icmpne     122
118: iconst_1
119: goto          123
122: iconst_0
123: invokestatic  #36
126: new           #29
129: dup
130: invokespecial #30
133: ldc           #31
135: invokevirtual #32
138: iload_3
139: invokevirtual #33
142: ldc           #34
144: invokevirtual #32
147: bipush        74
149: invokevirtual #33
152: ldc           #31
154: invokevirtual #32
157: invokevirtual #35
160: iload_3
161: bipush        74
163: if_icmpne     170
166: iconst_1
167: goto          171
170: iconst_0
171: invokestatic  #36
174: return
Exception table:
from    to  target type
56    75    78   Class java/lang/NegativeArraySizeException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0335
Start line: 7165
End line: 0
Method source code: 
    public void test0335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0335");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.util.Comparator comparator1 = helpFormatter0.optionComparator;
        int int2 = helpFormatter0.getLeftPadding();
        helpFormatter0.setOptPrefix("arg");
        org.junit.Assert.assertNotNull(comparator1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #437
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: getfield      #47
37: astore_2
38: aload_1
39: invokevirtual #22
42: istore_3
43: aload_1
44: ldc           #79
46: invokevirtual #11
49: aload_2
50: invokestatic  #51
53: new           #29
56: dup
57: invokespecial #30
60: ldc           #31
62: invokevirtual #32
65: iload_3
66: invokevirtual #33
69: ldc           #34
71: invokevirtual #32
74: iconst_1
75: invokevirtual #33
78: ldc           #31
80: invokevirtual #32
83: invokevirtual #35
86: iload_3
87: iconst_1
88: if_icmpne     95
91: iconst_1
92: goto          96
95: iconst_0
96: invokestatic  #36
99: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0336
Start line: 7177
End line: 0
Method source code: 
    public void test0336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0336");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        int int4 = helpFormatter0.defaultWidth;
        java.lang.String str5 = helpFormatter0.getNewLine();
        java.lang.String str6 = helpFormatter0.defaultNewLine;
        java.io.PrintWriter printWriter7 = null;
        try {
            helpFormatter0.printUsage(printWriter7, (int) (short) 10, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 74 + "'", int4 == 74);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #438
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: getfield      #110
48: istore_3
49: aload_1
50: invokevirtual #72
53: astore        4
55: aload_1
56: getfield      #23
59: astore        5
61: aconst_null
62: astore        6
64: aload_1
65: aload         6
67: bipush        10
69: ldc           #10
71: invokevirtual #87
74: ldc           #14
76: invokestatic  #15
79: goto          84
82: astore        7
84: new           #29
87: dup
88: invokespecial #30
91: ldc           #31
93: invokevirtual #32
96: iload_2
97: invokevirtual #33
100: ldc           #34
102: invokevirtual #32
105: iconst_1
106: invokevirtual #33
109: ldc           #31
111: invokevirtual #32
114: invokevirtual #35
117: iload_2
118: iconst_1
119: if_icmpne     126
122: iconst_1
123: goto          127
126: iconst_0
127: invokestatic  #36
130: new           #29
133: dup
134: invokespecial #30
137: ldc           #31
139: invokevirtual #32
142: iload_3
143: invokevirtual #33
146: ldc           #34
148: invokevirtual #32
151: bipush        74
153: invokevirtual #33
156: ldc           #31
158: invokevirtual #32
161: invokevirtual #35
164: iload_3
165: bipush        74
167: if_icmpne     174
170: iconst_1
171: goto          175
174: iconst_0
175: invokestatic  #36
178: new           #29
181: dup
182: invokespecial #30
185: ldc           #31
187: invokevirtual #32
190: aload         4
192: invokevirtual #32
195: ldc           #68
197: invokevirtual #32
200: invokevirtual #35
203: aload         4
205: ldc           #10
207: invokestatic  #53
210: new           #29
213: dup
214: invokespecial #30
217: ldc           #31
219: invokevirtual #32
222: aload         5
224: invokevirtual #32
227: ldc           #68
229: invokevirtual #32
232: invokevirtual #35
235: aload         5
237: ldc           #10
239: invokestatic  #53
242: return
Exception table:
from    to  target type
64    79    82   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0337
Start line: 7201
End line: 0
Method source code: 
    public void test0337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0337");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        java.lang.String str6 = helpFormatter0.rtrim("");
        java.lang.String str8 = helpFormatter0.rtrim("-");
        helpFormatter0.defaultOptPrefix = "--";
        java.lang.String str11 = helpFormatter0.defaultNewLine;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "-" + "'", str8, "-");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #439
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: getfield      #63
48: astore_3
49: aload_1
50: ldc           #10
52: invokevirtual #64
55: astore        4
57: aload_1
58: ldc           #67
60: invokevirtual #64
63: astore        5
65: aload_1
66: ldc           #44
68: putfield      #63
71: aload_1
72: getfield      #23
75: astore        6
77: new           #29
80: dup
81: invokespecial #30
84: ldc           #31
86: invokevirtual #32
89: iload_2
90: invokevirtual #33
93: ldc           #34
95: invokevirtual #32
98: iconst_1
99: invokevirtual #33
102: ldc           #31
104: invokevirtual #32
107: invokevirtual #35
110: iload_2
111: iconst_1
112: if_icmpne     119
115: iconst_1
116: goto          120
119: iconst_0
120: invokestatic  #36
123: new           #29
126: dup
127: invokespecial #30
130: ldc           #31
132: invokevirtual #32
135: aload_3
136: invokevirtual #32
139: ldc           #66
141: invokevirtual #32
144: invokevirtual #35
147: aload_3
148: ldc           #67
150: invokestatic  #53
153: new           #29
156: dup
157: invokespecial #30
160: ldc           #31
162: invokevirtual #32
165: aload         4
167: invokevirtual #32
170: ldc           #68
172: invokevirtual #32
175: invokevirtual #35
178: aload         4
180: ldc           #10
182: invokestatic  #53
185: new           #29
188: dup
189: invokespecial #30
192: ldc           #31
194: invokevirtual #32
197: aload         5
199: invokevirtual #32
202: ldc           #66
204: invokevirtual #32
207: invokevirtual #35
210: aload         5
212: ldc           #67
214: invokestatic  #53
217: new           #29
220: dup
221: invokespecial #30
224: ldc           #31
226: invokevirtual #32
229: aload         6
231: invokevirtual #32
234: ldc           #68
236: invokevirtual #32
239: invokevirtual #35
242: aload         6
244: ldc           #10
246: invokestatic  #53
249: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0338
Start line: 7220
End line: 0
Method source code: 
    public void test0338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0338");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.defaultLongOptPrefix = "hi!";
        helpFormatter0.defaultLongOptPrefix = "arg";
        helpFormatter0.defaultArgName = "--";
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #440
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #25
36: putfield      #55
39: aload_1
40: ldc           #79
42: putfield      #55
45: aload_1
46: ldc           #44
48: putfield      #77
51: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0339
Start line: 7230
End line: 0
Method source code: 
    public void test0339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0339");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.defaultDescPad = '4';
        helpFormatter0.setNewLine("");
        helpFormatter0.setSyntaxPrefix("");
        java.lang.String str10 = helpFormatter0.getSyntaxPrefix();
        helpFormatter0.setWidth((-2));
        helpFormatter0.defaultOptPrefix = "usage: ";
        java.io.PrintWriter printWriter15 = null;
        try {
            helpFormatter0.printUsage(printWriter15, 52, "                                                                                                 ");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #441
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: bipush        52
47: putfield      #76
50: aload_1
51: ldc           #10
53: invokevirtual #131
56: aload_1
57: ldc           #10
59: invokevirtual #39
62: aload_1
63: invokevirtual #102
66: astore_3
67: aload_1
68: bipush        -2
70: invokevirtual #156
73: aload_1
74: ldc           #12
76: putfield      #63
79: aconst_null
80: astore        4
82: aload_1
83: aload         4
85: bipush        52
87: ldc           #141
89: invokevirtual #87
92: ldc           #14
94: invokestatic  #15
97: goto          102
100: astore        5
102: new           #29
105: dup
106: invokespecial #30
109: ldc           #31
111: invokevirtual #32
114: iload_2
115: invokevirtual #33
118: ldc           #34
120: invokevirtual #32
123: iconst_1
124: invokevirtual #33
127: ldc           #31
129: invokevirtual #32
132: invokevirtual #35
135: iload_2
136: iconst_1
137: if_icmpne     144
140: iconst_1
141: goto          145
144: iconst_0
145: invokestatic  #36
148: new           #29
151: dup
152: invokespecial #30
155: ldc           #31
157: invokevirtual #32
160: aload_3
161: invokevirtual #32
164: ldc           #68
166: invokevirtual #32
169: invokevirtual #35
172: aload_3
173: ldc           #10
175: invokestatic  #53
178: return
Exception table:
from    to  target type
82    97   100   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0340
Start line: 7255
End line: 0
Method source code: 
    public void test0340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0340");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str6 = helpFormatter0.getNewLine();
        java.lang.String str7 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setDescPadding(74);
        java.util.Comparator comparator10 = helpFormatter0.getOptionComparator();
        java.lang.String str11 = helpFormatter0.getArgName();
        java.lang.String str12 = helpFormatter0.getSyntaxPrefix();
        helpFormatter0.setLongOptSeparator("                                                                                                    ");
        java.lang.StringBuffer stringBuffer15 = null;
        org.apache.commons.cli.Options options17 = null;
        try {
            java.lang.StringBuffer stringBuffer20 = helpFormatter0.renderOptions(stringBuffer15, (int) 'a', options17, (int) (byte) 1, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\n" + "'", str6, "\n");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(comparator10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "arg" + "'", str11, "arg");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "usage: " + "'", str12, "usage: ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #442
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #10
36: invokevirtual #11
39: aload_1
40: ldc           #10
42: putfield      #55
45: aload_1
46: getfield      #55
49: astore_2
50: aload_1
51: invokevirtual #72
54: astore_3
55: aload_1
56: getfield      #63
59: astore        4
61: aload_1
62: bipush        74
64: invokevirtual #38
67: aload_1
68: invokevirtual #106
71: astore        5
73: aload_1
74: invokevirtual #104
77: astore        6
79: aload_1
80: invokevirtual #102
83: astore        7
85: aload_1
86: ldc           #240
88: invokevirtual #91
91: aconst_null
92: astore        8
94: aconst_null
95: astore        9
97: aload_1
98: aload         8
100: bipush        97
102: aload         9
104: iconst_1
105: bipush        10
107: invokevirtual #98
110: astore        10
112: ldc           #14
114: invokestatic  #15
117: goto          122
120: astore        10
122: new           #29
125: dup
126: invokespecial #30
129: ldc           #31
131: invokevirtual #32
134: aload_2
135: invokevirtual #32
138: ldc           #68
140: invokevirtual #32
143: invokevirtual #35
146: aload_2
147: ldc           #10
149: invokestatic  #53
152: new           #29
155: dup
156: invokespecial #30
159: ldc           #31
161: invokevirtual #32
164: aload_3
165: invokevirtual #32
168: ldc           #74
170: invokevirtual #32
173: invokevirtual #35
176: aload_3
177: ldc           #65
179: invokestatic  #53
182: new           #29
185: dup
186: invokespecial #30
189: ldc           #31
191: invokevirtual #32
194: aload         4
196: invokevirtual #32
199: ldc           #68
201: invokevirtual #32
204: invokevirtual #35
207: aload         4
209: ldc           #10
211: invokestatic  #53
214: aload         5
216: invokestatic  #51
219: new           #29
222: dup
223: invokespecial #30
226: ldc           #31
228: invokevirtual #32
231: aload         6
233: invokevirtual #32
236: ldc           #78
238: invokevirtual #32
241: invokevirtual #35
244: aload         6
246: ldc           #79
248: invokestatic  #53
251: new           #29
254: dup
255: invokespecial #30
258: ldc           #31
260: invokevirtual #32
263: aload         7
265: invokevirtual #32
268: ldc           #99
270: invokevirtual #32
273: invokevirtual #35
276: aload         7
278: ldc           #12
280: invokestatic  #53
283: return
Exception table:
from    to  target type
97   117   120   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0341
Start line: 7287
End line: 0
Method source code: 
    public void test0341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0341");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        int int5 = helpFormatter0.defaultDescPad;
        java.lang.String str6 = helpFormatter0.getLongOptSeparator();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 3 + "'", int5 == 3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + " " + "'", str6, " ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #443
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: getfield      #63
48: astore_3
49: aload_1
50: getfield      #76
53: istore        4
55: aload_1
56: invokevirtual #86
59: astore        5
61: new           #29
64: dup
65: invokespecial #30
68: ldc           #31
70: invokevirtual #32
73: iload_2
74: invokevirtual #33
77: ldc           #34
79: invokevirtual #32
82: iconst_1
83: invokevirtual #33
86: ldc           #31
88: invokevirtual #32
91: invokevirtual #35
94: iload_2
95: iconst_1
96: if_icmpne     103
99: iconst_1
100: goto          104
103: iconst_0
104: invokestatic  #36
107: new           #29
110: dup
111: invokespecial #30
114: ldc           #31
116: invokevirtual #32
119: aload_3
120: invokevirtual #32
123: ldc           #66
125: invokevirtual #32
128: invokevirtual #35
131: aload_3
132: ldc           #67
134: invokestatic  #53
137: new           #29
140: dup
141: invokespecial #30
144: ldc           #31
146: invokevirtual #32
149: iload         4
151: invokevirtual #33
154: ldc           #34
156: invokevirtual #32
159: iconst_3
160: invokevirtual #33
163: ldc           #31
165: invokevirtual #32
168: invokevirtual #35
171: iload         4
173: iconst_3
174: if_icmpne     181
177: iconst_1
178: goto          182
181: iconst_0
182: invokestatic  #36
185: new           #29
188: dup
189: invokespecial #30
192: ldc           #31
194: invokevirtual #32
197: aload         5
199: invokevirtual #32
202: ldc           #88
204: invokevirtual #32
207: invokevirtual #35
210: aload         5
212: ldc           #24
214: invokestatic  #53
217: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0342
Start line: 7303
End line: 0
Method source code: 
    public void test0342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0342");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        helpFormatter0.setSyntaxPrefix(" ");
        java.util.Comparator comparator8 = helpFormatter0.getOptionComparator();
        java.lang.String str9 = helpFormatter0.getOptPrefix();
        java.lang.String str10 = helpFormatter0.getLongOptPrefix();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(comparator8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-" + "'", str9, "-");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "--" + "'", str10, "--");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #444
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: bipush        10
47: invokevirtual #38
50: aload_1
51: ldc           #24
53: invokevirtual #39
56: aload_1
57: invokevirtual #106
60: astore_3
61: aload_1
62: invokevirtual #123
65: astore        4
67: aload_1
68: invokevirtual #48
71: astore        5
73: new           #29
76: dup
77: invokespecial #30
80: ldc           #31
82: invokevirtual #32
85: iload_2
86: invokevirtual #33
89: ldc           #34
91: invokevirtual #32
94: iconst_1
95: invokevirtual #33
98: ldc           #31
100: invokevirtual #32
103: invokevirtual #35
106: iload_2
107: iconst_1
108: if_icmpne     115
111: iconst_1
112: goto          116
115: iconst_0
116: invokestatic  #36
119: aload_3
120: invokestatic  #51
123: new           #29
126: dup
127: invokespecial #30
130: ldc           #31
132: invokevirtual #32
135: aload         4
137: invokevirtual #32
140: ldc           #66
142: invokevirtual #32
145: invokevirtual #35
148: aload         4
150: ldc           #67
152: invokestatic  #53
155: new           #29
158: dup
159: invokespecial #30
162: ldc           #31
164: invokevirtual #32
167: aload         5
169: invokevirtual #32
172: ldc           #52
174: invokevirtual #32
177: invokevirtual #35
180: aload         5
182: ldc           #44
184: invokestatic  #53
187: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0343
Start line: 7321
End line: 0
Method source code: 
    public void test0343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0343");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str6 = helpFormatter0.getNewLine();
        java.util.Comparator comparator7 = helpFormatter0.getOptionComparator();
        org.apache.commons.cli.HelpFormatter helpFormatter8 = new org.apache.commons.cli.HelpFormatter();
        int int9 = helpFormatter8.getLeftPadding();
        helpFormatter8.defaultNewLine = "";
        java.lang.String str12 = helpFormatter8.defaultOptPrefix;
        helpFormatter8.setLongOptPrefix(" ");
        helpFormatter8.defaultDescPad = (short) 10;
        java.lang.String str17 = helpFormatter8.defaultArgName;
        java.util.Comparator comparator18 = helpFormatter8.optionComparator;
        helpFormatter0.setOptionComparator(comparator18);
        helpFormatter0.defaultSyntaxPrefix = "                                                                                                 ";
        org.apache.commons.cli.HelpFormatter helpFormatter22 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter22.setOptPrefix("");
        helpFormatter22.defaultLongOptPrefix = "";
        java.lang.String str27 = helpFormatter22.defaultLongOptPrefix;
        helpFormatter22.defaultDescPad = 0;
        org.apache.commons.cli.HelpFormatter helpFormatter30 = new org.apache.commons.cli.HelpFormatter();
        java.util.Comparator comparator31 = helpFormatter30.optionComparator;
        int int32 = helpFormatter30.getLeftPadding();
        int int33 = helpFormatter30.defaultLeftPad;
        java.lang.String str35 = helpFormatter30.createPadding((int) 'a');
        org.apache.commons.cli.HelpFormatter helpFormatter36 = new org.apache.commons.cli.HelpFormatter();
        int int37 = helpFormatter36.getLeftPadding();
        helpFormatter36.defaultNewLine = "";
        helpFormatter36.defaultDescPad = '4';
        helpFormatter36.setNewLine("");
        int int47 = helpFormatter36.findWrapPos("\n", (int) ' ', 3);
        java.util.Comparator comparator48 = helpFormatter36.optionComparator;
        helpFormatter30.setOptionComparator(comparator48);
        helpFormatter22.setOptionComparator(comparator48);
        helpFormatter0.setOptionComparator(comparator48);
        helpFormatter0.setDescPadding(0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\n" + "'", str6, "\n");
        org.junit.Assert.assertNotNull(comparator7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "-" + "'", str12, "-");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "arg" + "'", str17, "arg");
        org.junit.Assert.assertNotNull(comparator18);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(comparator31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "                                                                                                 " + "'", str35, "                                                                                                 ");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(comparator48);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #445
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #10
36: invokevirtual #11
39: aload_1
40: ldc           #10
42: putfield      #55
45: aload_1
46: getfield      #55
49: astore_2
50: aload_1
51: invokevirtual #72
54: astore_3
55: aload_1
56: invokevirtual #106
59: astore        4
61: new           #8
64: dup
65: invokespecial #9
68: astore        5
70: aload         5
72: invokevirtual #22
75: istore        6
77: aload         5
79: ldc           #10
81: putfield      #23
84: aload         5
86: getfield      #63
89: astore        7
91: aload         5
93: ldc           #24
95: invokevirtual #49
98: aload         5
100: bipush        10
102: putfield      #76
105: aload         5
107: getfield      #77
110: astore        8
112: aload         5
114: getfield      #47
117: astore        9
119: aload_1
120: aload         9
122: invokevirtual #152
125: aload_1
126: ldc           #141
128: putfield      #97
131: new           #8
134: dup
135: invokespecial #9
138: astore        10
140: aload         10
142: ldc           #10
144: invokevirtual #11
147: aload         10
149: ldc           #10
151: putfield      #55
154: aload         10
156: getfield      #55
159: astore        11
161: aload         10
163: iconst_0
164: putfield      #76
167: new           #8
170: dup
171: invokespecial #9
174: astore        12
176: aload         12
178: getfield      #47
181: astore        13
183: aload         12
185: invokevirtual #22
188: istore        14
190: aload         12
192: getfield      #60
195: istore        15
197: aload         12
199: bipush        97
201: invokevirtual #108
204: astore        16
206: new           #8
209: dup
210: invokespecial #9
213: astore        17
215: aload         17
217: invokevirtual #22
220: istore        18
222: aload         17
224: ldc           #10
226: putfield      #23
229: aload         17
231: bipush        52
233: putfield      #76
236: aload         17
238: ldc           #10
240: invokevirtual #131
243: aload         17
245: ldc           #65
247: bipush        32
249: iconst_3
250: invokevirtual #93
253: istore        19
255: aload         17
257: getfield      #47
260: astore        20
262: aload         12
264: aload         20
266: invokevirtual #152
269: aload         10
271: aload         20
273: invokevirtual #152
276: aload_1
277: aload         20
279: invokevirtual #152
282: aload_1
283: iconst_0
284: invokevirtual #38
287: new           #29
290: dup
291: invokespecial #30
294: ldc           #31
296: invokevirtual #32
299: aload_2
300: invokevirtual #32
303: ldc           #68
305: invokevirtual #32
308: invokevirtual #35
311: aload_2
312: ldc           #10
314: invokestatic  #53
317: new           #29
320: dup
321: invokespecial #30
324: ldc           #31
326: invokevirtual #32
329: aload_3
330: invokevirtual #32
333: ldc           #74
335: invokevirtual #32
338: invokevirtual #35
341: aload_3
342: ldc           #65
344: invokestatic  #53
347: aload         4
349: invokestatic  #51
352: new           #29
355: dup
356: invokespecial #30
359: ldc           #31
361: invokevirtual #32
364: iload         6
366: invokevirtual #33
369: ldc           #34
371: invokevirtual #32
374: iconst_1
375: invokevirtual #33
378: ldc           #31
380: invokevirtual #32
383: invokevirtual #35
386: iload         6
388: iconst_1
389: if_icmpne     396
392: iconst_1
393: goto          397
396: iconst_0
397: invokestatic  #36
400: new           #29
403: dup
404: invokespecial #30
407: ldc           #31
409: invokevirtual #32
412: aload         7
414: invokevirtual #32
417: ldc           #66
419: invokevirtual #32
422: invokevirtual #35
425: aload         7
427: ldc           #67
429: invokestatic  #53
432: new           #29
435: dup
436: invokespecial #30
439: ldc           #31
441: invokevirtual #32
444: aload         8
446: invokevirtual #32
449: ldc           #78
451: invokevirtual #32
454: invokevirtual #35
457: aload         8
459: ldc           #79
461: invokestatic  #53
464: aload         9
466: invokestatic  #51
469: new           #29
472: dup
473: invokespecial #30
476: ldc           #31
478: invokevirtual #32
481: aload         11
483: invokevirtual #32
486: ldc           #68
488: invokevirtual #32
491: invokevirtual #35
494: aload         11
496: ldc           #10
498: invokestatic  #53
501: aload         13
503: invokestatic  #51
506: new           #29
509: dup
510: invokespecial #30
513: ldc           #31
515: invokevirtual #32
518: iload         14
520: invokevirtual #33
523: ldc           #34
525: invokevirtual #32
528: iconst_1
529: invokevirtual #33
532: ldc           #31
534: invokevirtual #32
537: invokevirtual #35
540: iload         14
542: iconst_1
543: if_icmpne     550
546: iconst_1
547: goto          551
550: iconst_0
551: invokestatic  #36
554: new           #29
557: dup
558: invokespecial #30
561: ldc           #31
563: invokevirtual #32
566: iload         15
568: invokevirtual #33
571: ldc           #34
573: invokevirtual #32
576: iconst_1
577: invokevirtual #33
580: ldc           #31
582: invokevirtual #32
585: invokevirtual #35
588: iload         15
590: iconst_1
591: if_icmpne     598
594: iconst_1
595: goto          599
598: iconst_0
599: invokestatic  #36
602: new           #29
605: dup
606: invokespecial #30
609: ldc           #31
611: invokevirtual #32
614: aload         16
616: invokevirtual #32
619: ldc           #185
621: invokevirtual #32
624: invokevirtual #35
627: aload         16
629: ldc           #141
631: invokestatic  #53
634: new           #29
637: dup
638: invokespecial #30
641: ldc           #31
643: invokevirtual #32
646: iload         18
648: invokevirtual #33
651: ldc           #34
653: invokevirtual #32
656: iconst_1
657: invokevirtual #33
660: ldc           #31
662: invokevirtual #32
665: invokevirtual #35
668: iload         18
670: iconst_1
671: if_icmpne     678
674: iconst_1
675: goto          679
678: iconst_0
679: invokestatic  #36
682: new           #29
685: dup
686: invokespecial #30
689: ldc           #31
691: invokevirtual #32
694: iload         19
696: invokevirtual #33
699: ldc           #34
701: invokevirtual #32
704: iconst_m1
705: invokevirtual #33
708: ldc           #31
710: invokevirtual #32
713: invokevirtual #35
716: iload         19
718: iconst_m1
719: if_icmpne     726
722: iconst_1
723: goto          727
726: iconst_0
727: invokestatic  #36
730: aload         20
732: invokestatic  #51
735: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0344
Start line: 7379
End line: 0
Method source code: 
    public void test0344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0344");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str6 = helpFormatter0.getNewLine();
        java.util.Comparator comparator7 = helpFormatter0.getOptionComparator();
        org.apache.commons.cli.HelpFormatter helpFormatter8 = new org.apache.commons.cli.HelpFormatter();
        int int9 = helpFormatter8.getLeftPadding();
        helpFormatter8.defaultNewLine = "";
        java.lang.String str12 = helpFormatter8.defaultOptPrefix;
        helpFormatter8.setLongOptPrefix(" ");
        helpFormatter8.defaultDescPad = (short) 10;
        java.lang.String str17 = helpFormatter8.defaultArgName;
        java.util.Comparator comparator18 = helpFormatter8.optionComparator;
        helpFormatter0.setOptionComparator(comparator18);
        helpFormatter0.defaultSyntaxPrefix = "                                                                                                 ";
        org.apache.commons.cli.Options options23 = null;
        try {
            helpFormatter0.printHelp("                                                                                                 ", options23, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\n" + "'", str6, "\n");
        org.junit.Assert.assertNotNull(comparator7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "-" + "'", str12, "-");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "arg" + "'", str17, "arg");
        org.junit.Assert.assertNotNull(comparator18);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #446
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #10
36: invokevirtual #11
39: aload_1
40: ldc           #10
42: putfield      #55
45: aload_1
46: getfield      #55
49: astore_2
50: aload_1
51: invokevirtual #72
54: astore_3
55: aload_1
56: invokevirtual #106
59: astore        4
61: new           #8
64: dup
65: invokespecial #9
68: astore        5
70: aload         5
72: invokevirtual #22
75: istore        6
77: aload         5
79: ldc           #10
81: putfield      #23
84: aload         5
86: getfield      #63
89: astore        7
91: aload         5
93: ldc           #24
95: invokevirtual #49
98: aload         5
100: bipush        10
102: putfield      #76
105: aload         5
107: getfield      #77
110: astore        8
112: aload         5
114: getfield      #47
117: astore        9
119: aload_1
120: aload         9
122: invokevirtual #152
125: aload_1
126: ldc           #141
128: putfield      #97
131: aconst_null
132: astore        10
134: aload_1
135: ldc           #141
137: aload         10
139: iconst_0
140: invokevirtual #135
143: ldc           #14
145: invokestatic  #15
148: goto          153
151: astore        11
153: new           #29
156: dup
157: invokespecial #30
160: ldc           #31
162: invokevirtual #32
165: aload_2
166: invokevirtual #32
169: ldc           #68
171: invokevirtual #32
174: invokevirtual #35
177: aload_2
178: ldc           #10
180: invokestatic  #53
183: new           #29
186: dup
187: invokespecial #30
190: ldc           #31
192: invokevirtual #32
195: aload_3
196: invokevirtual #32
199: ldc           #74
201: invokevirtual #32
204: invokevirtual #35
207: aload_3
208: ldc           #65
210: invokestatic  #53
213: aload         4
215: invokestatic  #51
218: new           #29
221: dup
222: invokespecial #30
225: ldc           #31
227: invokevirtual #32
230: iload         6
232: invokevirtual #33
235: ldc           #34
237: invokevirtual #32
240: iconst_1
241: invokevirtual #33
244: ldc           #31
246: invokevirtual #32
249: invokevirtual #35
252: iload         6
254: iconst_1
255: if_icmpne     262
258: iconst_1
259: goto          263
262: iconst_0
263: invokestatic  #36
266: new           #29
269: dup
270: invokespecial #30
273: ldc           #31
275: invokevirtual #32
278: aload         7
280: invokevirtual #32
283: ldc           #66
285: invokevirtual #32
288: invokevirtual #35
291: aload         7
293: ldc           #67
295: invokestatic  #53
298: new           #29
301: dup
302: invokespecial #30
305: ldc           #31
307: invokevirtual #32
310: aload         8
312: invokevirtual #32
315: ldc           #78
317: invokevirtual #32
320: invokevirtual #35
323: aload         8
325: ldc           #79
327: invokestatic  #53
330: aload         9
332: invokestatic  #51
335: return
Exception table:
from    to  target type
134   148   151   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0345
Start line: 7416
End line: 0
Method source code: 
    public void test0345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0345");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        int int5 = helpFormatter0.defaultDescPad;
        java.util.Comparator comparator6 = helpFormatter0.optionComparator;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 3 + "'", int5 == 3);
        org.junit.Assert.assertNotNull(comparator6);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #447
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: getfield      #63
48: astore_3
49: aload_1
50: getfield      #76
53: istore        4
55: aload_1
56: getfield      #47
59: astore        5
61: new           #29
64: dup
65: invokespecial #30
68: ldc           #31
70: invokevirtual #32
73: iload_2
74: invokevirtual #33
77: ldc           #34
79: invokevirtual #32
82: iconst_1
83: invokevirtual #33
86: ldc           #31
88: invokevirtual #32
91: invokevirtual #35
94: iload_2
95: iconst_1
96: if_icmpne     103
99: iconst_1
100: goto          104
103: iconst_0
104: invokestatic  #36
107: new           #29
110: dup
111: invokespecial #30
114: ldc           #31
116: invokevirtual #32
119: aload_3
120: invokevirtual #32
123: ldc           #66
125: invokevirtual #32
128: invokevirtual #35
131: aload_3
132: ldc           #67
134: invokestatic  #53
137: new           #29
140: dup
141: invokespecial #30
144: ldc           #31
146: invokevirtual #32
149: iload         4
151: invokevirtual #33
154: ldc           #34
156: invokevirtual #32
159: iconst_3
160: invokevirtual #33
163: ldc           #31
165: invokevirtual #32
168: invokevirtual #35
171: iload         4
173: iconst_3
174: if_icmpne     181
177: iconst_1
178: goto          182
181: iconst_0
182: invokestatic  #36
185: aload         5
187: invokestatic  #51
190: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0346
Start line: 7432
End line: 0
Method source code: 
    public void test0346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0346");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.getArgName();
        helpFormatter0.setSyntaxPrefix("usage: ");
        java.lang.String str5 = helpFormatter0.defaultOptPrefix;
        int int9 = helpFormatter0.findWrapPos("   ", (int) (short) 0, (int) (byte) 100);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "arg" + "'", str2, "arg");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "-" + "'", str5, "-");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #448
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: invokevirtual #104
42: astore_3
43: aload_1
44: ldc           #12
46: invokevirtual #39
49: aload_1
50: getfield      #63
53: astore        4
55: aload_1
56: ldc_w         #259
59: iconst_0
60: bipush        100
62: invokevirtual #93
65: istore        5
67: new           #29
70: dup
71: invokespecial #30
74: ldc           #31
76: invokevirtual #32
79: iload_2
80: invokevirtual #33
83: ldc           #34
85: invokevirtual #32
88: iconst_1
89: invokevirtual #33
92: ldc           #31
94: invokevirtual #32
97: invokevirtual #35
100: iload_2
101: iconst_1
102: if_icmpne     109
105: iconst_1
106: goto          110
109: iconst_0
110: invokestatic  #36
113: new           #29
116: dup
117: invokespecial #30
120: ldc           #31
122: invokevirtual #32
125: aload_3
126: invokevirtual #32
129: ldc           #78
131: invokevirtual #32
134: invokevirtual #35
137: aload_3
138: ldc           #79
140: invokestatic  #53
143: new           #29
146: dup
147: invokespecial #30
150: ldc           #31
152: invokevirtual #32
155: aload         4
157: invokevirtual #32
160: ldc           #66
162: invokevirtual #32
165: invokevirtual #35
168: aload         4
170: ldc           #67
172: invokestatic  #53
175: new           #29
178: dup
179: invokespecial #30
182: ldc           #31
184: invokevirtual #32
187: iload         5
189: invokevirtual #33
192: ldc           #34
194: invokevirtual #32
197: iconst_m1
198: invokevirtual #33
201: ldc           #31
203: invokevirtual #32
206: invokevirtual #35
209: iload         5
211: iconst_m1
212: if_icmpne     219
215: iconst_1
216: goto          220
219: iconst_0
220: invokestatic  #36
223: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0347
Start line: 7448
End line: 0
Method source code: 
    public void test0347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0347");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setLeftPadding((int) (byte) 0);
        helpFormatter0.setLongOptPrefix("                                                                                                 ");
        helpFormatter0.setSyntaxPrefix("                                                                                                 ");
        helpFormatter0.setNewLine("                                                    ");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #449
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: getfield      #63
48: astore_3
49: aload_1
50: iconst_0
51: invokevirtual #193
54: aload_1
55: ldc           #141
57: invokevirtual #49
60: aload_1
61: ldc           #141
63: invokevirtual #39
66: aload_1
67: ldc_w         #313
70: invokevirtual #131
73: new           #29
76: dup
77: invokespecial #30
80: ldc           #31
82: invokevirtual #32
85: iload_2
86: invokevirtual #33
89: ldc           #34
91: invokevirtual #32
94: iconst_1
95: invokevirtual #33
98: ldc           #31
100: invokevirtual #32
103: invokevirtual #35
106: iload_2
107: iconst_1
108: if_icmpne     115
111: iconst_1
112: goto          116
115: iconst_0
116: invokestatic  #36
119: new           #29
122: dup
123: invokespecial #30
126: ldc           #31
128: invokevirtual #32
131: aload_3
132: invokevirtual #32
135: ldc           #66
137: invokevirtual #32
140: invokevirtual #35
143: aload_3
144: ldc           #67
146: invokestatic  #53
149: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0348
Start line: 7464
End line: 0
Method source code: 
    public void test0348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0348");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str6 = helpFormatter0.getNewLine();
        java.lang.String str7 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setDescPadding(74);
        helpFormatter0.setLeftPadding(52);
        java.lang.String str13 = helpFormatter0.rtrim("-");
        helpFormatter0.setLeftPadding((int) 'a');
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\n" + "'", str6, "\n");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "-" + "'", str13, "-");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #450
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #10
36: invokevirtual #11
39: aload_1
40: ldc           #10
42: putfield      #55
45: aload_1
46: getfield      #55
49: astore_2
50: aload_1
51: invokevirtual #72
54: astore_3
55: aload_1
56: getfield      #63
59: astore        4
61: aload_1
62: bipush        74
64: invokevirtual #38
67: aload_1
68: bipush        52
70: invokevirtual #193
73: aload_1
74: ldc           #67
76: invokevirtual #64
79: astore        5
81: aload_1
82: bipush        97
84: invokevirtual #193
87: new           #29
90: dup
91: invokespecial #30
94: ldc           #31
96: invokevirtual #32
99: aload_2
100: invokevirtual #32
103: ldc           #68
105: invokevirtual #32
108: invokevirtual #35
111: aload_2
112: ldc           #10
114: invokestatic  #53
117: new           #29
120: dup
121: invokespecial #30
124: ldc           #31
126: invokevirtual #32
129: aload_3
130: invokevirtual #32
133: ldc           #74
135: invokevirtual #32
138: invokevirtual #35
141: aload_3
142: ldc           #65
144: invokestatic  #53
147: new           #29
150: dup
151: invokespecial #30
154: ldc           #31
156: invokevirtual #32
159: aload         4
161: invokevirtual #32
164: ldc           #68
166: invokevirtual #32
169: invokevirtual #35
172: aload         4
174: ldc           #10
176: invokestatic  #53
179: new           #29
182: dup
183: invokespecial #30
186: ldc           #31
188: invokevirtual #32
191: aload         5
193: invokevirtual #32
196: ldc           #66
198: invokevirtual #32
201: invokevirtual #35
204: aload         5
206: ldc           #67
208: invokestatic  #53
211: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0349
Start line: 7484
End line: 0
Method source code: 
    public void test0349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0349");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        helpFormatter0.setWidth(0);
        java.io.PrintWriter printWriter8 = null;
        try {
            helpFormatter0.printWrapped(printWriter8, (-1), (int) (byte) 10, "                                                                                                 ");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #451
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #10
36: invokevirtual #11
39: aload_1
40: ldc           #10
42: putfield      #55
45: aload_1
46: getfield      #55
49: astore_2
50: aload_1
51: iconst_0
52: invokevirtual #156
55: aconst_null
56: astore_3
57: aload_1
58: aload_3
59: iconst_m1
60: bipush        10
62: ldc           #141
64: invokevirtual #61
67: ldc           #14
69: invokestatic  #15
72: goto          77
75: astore        4
77: new           #29
80: dup
81: invokespecial #30
84: ldc           #31
86: invokevirtual #32
89: aload_2
90: invokevirtual #32
93: ldc           #68
95: invokevirtual #32
98: invokevirtual #35
101: aload_2
102: ldc           #10
104: invokestatic  #53
107: return
Exception table:
from    to  target type
57    72    75   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0350
Start line: 7504
End line: 0
Method source code: 
    public void test0350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0350");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str6 = helpFormatter0.getNewLine();
        java.lang.String str7 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setDescPadding(74);
        java.util.Comparator comparator10 = helpFormatter0.getOptionComparator();
        java.lang.String str11 = helpFormatter0.getArgName();
        helpFormatter0.defaultArgName = "";
        helpFormatter0.setDescPadding((int) '4');
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\n" + "'", str6, "\n");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(comparator10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "arg" + "'", str11, "arg");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #452
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #10
36: invokevirtual #11
39: aload_1
40: ldc           #10
42: putfield      #55
45: aload_1
46: getfield      #55
49: astore_2
50: aload_1
51: invokevirtual #72
54: astore_3
55: aload_1
56: getfield      #63
59: astore        4
61: aload_1
62: bipush        74
64: invokevirtual #38
67: aload_1
68: invokevirtual #106
71: astore        5
73: aload_1
74: invokevirtual #104
77: astore        6
79: aload_1
80: ldc           #10
82: putfield      #77
85: aload_1
86: bipush        52
88: invokevirtual #38
91: new           #29
94: dup
95: invokespecial #30
98: ldc           #31
100: invokevirtual #32
103: aload_2
104: invokevirtual #32
107: ldc           #68
109: invokevirtual #32
112: invokevirtual #35
115: aload_2
116: ldc           #10
118: invokestatic  #53
121: new           #29
124: dup
125: invokespecial #30
128: ldc           #31
130: invokevirtual #32
133: aload_3
134: invokevirtual #32
137: ldc           #74
139: invokevirtual #32
142: invokevirtual #35
145: aload_3
146: ldc           #65
148: invokestatic  #53
151: new           #29
154: dup
155: invokespecial #30
158: ldc           #31
160: invokevirtual #32
163: aload         4
165: invokevirtual #32
168: ldc           #68
170: invokevirtual #32
173: invokevirtual #35
176: aload         4
178: ldc           #10
180: invokestatic  #53
183: aload         5
185: invokestatic  #51
188: new           #29
191: dup
192: invokespecial #30
195: ldc           #31
197: invokevirtual #32
200: aload         6
202: invokevirtual #32
205: ldc           #78
207: invokevirtual #32
210: invokevirtual #35
213: aload         6
215: ldc           #79
217: invokestatic  #53
220: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0351
Start line: 7526
End line: 0
Method source code: 
    public void test0351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0351");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        java.lang.String str6 = helpFormatter0.rtrim("");
        java.lang.String str8 = helpFormatter0.rtrim("-");
        helpFormatter0.defaultOptPrefix = "--";
        helpFormatter0.defaultDescPad = (short) 1;
        helpFormatter0.setLongOptSeparator("arg");
        java.lang.String str15 = helpFormatter0.defaultArgName;
        org.apache.commons.cli.HelpFormatter helpFormatter16 = new org.apache.commons.cli.HelpFormatter();
        int int17 = helpFormatter16.getLeftPadding();
        helpFormatter16.defaultNewLine = "";
        helpFormatter16.defaultDescPad = '4';
        helpFormatter16.setNewLine("");
        int int27 = helpFormatter16.findWrapPos("\n", (int) ' ', 3);
        java.util.Comparator comparator28 = helpFormatter16.optionComparator;
        helpFormatter0.optionComparator = comparator28;
        org.apache.commons.cli.HelpFormatter helpFormatter30 = new org.apache.commons.cli.HelpFormatter();
        int int31 = helpFormatter30.getLeftPadding();
        helpFormatter30.defaultNewLine = "";
        helpFormatter30.setDescPadding(10);
        java.lang.String str36 = helpFormatter30.defaultNewLine;
        helpFormatter30.setDescPadding(10);
        org.apache.commons.cli.HelpFormatter helpFormatter39 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter39.setOptPrefix("");
        helpFormatter39.defaultLongOptPrefix = "";
        java.lang.String str44 = helpFormatter39.defaultLongOptPrefix;
        java.lang.String str45 = helpFormatter39.getNewLine();
        java.util.Comparator comparator46 = helpFormatter39.getOptionComparator();
        helpFormatter30.optionComparator = comparator46;
        helpFormatter0.optionComparator = comparator46;
        java.lang.String str49 = helpFormatter0.getLongOptSeparator();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "-" + "'", str8, "-");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "arg" + "'", str15, "arg");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(comparator28);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "\n" + "'", str45, "\n");
        org.junit.Assert.assertNotNull(comparator46);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "arg" + "'", str49, "arg");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #453
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: getfield      #63
48: astore_3
49: aload_1
50: ldc           #10
52: invokevirtual #64
55: astore        4
57: aload_1
58: ldc           #67
60: invokevirtual #64
63: astore        5
65: aload_1
66: ldc           #44
68: putfield      #63
71: aload_1
72: iconst_1
73: putfield      #76
76: aload_1
77: ldc           #79
79: invokevirtual #91
82: aload_1
83: getfield      #77
86: astore        6
88: new           #8
91: dup
92: invokespecial #9
95: astore        7
97: aload         7
99: invokevirtual #22
102: istore        8
104: aload         7
106: ldc           #10
108: putfield      #23
111: aload         7
113: bipush        52
115: putfield      #76
118: aload         7
120: ldc           #10
122: invokevirtual #131
125: aload         7
127: ldc           #65
129: bipush        32
131: iconst_3
132: invokevirtual #93
135: istore        9
137: aload         7
139: getfield      #47
142: astore        10
144: aload_1
145: aload         10
147: putfield      #47
150: new           #8
153: dup
154: invokespecial #9
157: astore        11
159: aload         11
161: invokevirtual #22
164: istore        12
166: aload         11
168: ldc           #10
170: putfield      #23
173: aload         11
175: bipush        10
177: invokevirtual #38
180: aload         11
182: getfield      #23
185: astore        13
187: aload         11
189: bipush        10
191: invokevirtual #38
194: new           #8
197: dup
198: invokespecial #9
201: astore        14
203: aload         14
205: ldc           #10
207: invokevirtual #11
210: aload         14
212: ldc           #10
214: putfield      #55
217: aload         14
219: getfield      #55
222: astore        15
224: aload         14
226: invokevirtual #72
229: astore        16
231: aload         14
233: invokevirtual #106
236: astore        17
238: aload         11
240: aload         17
242: putfield      #47
245: aload_1
246: aload         17
248: putfield      #47
251: aload_1
252: invokevirtual #86
255: astore        18
257: new           #29
260: dup
261: invokespecial #30
264: ldc           #31
266: invokevirtual #32
269: iload_2
270: invokevirtual #33
273: ldc           #34
275: invokevirtual #32
278: iconst_1
279: invokevirtual #33
282: ldc           #31
284: invokevirtual #32
287: invokevirtual #35
290: iload_2
291: iconst_1
292: if_icmpne     299
295: iconst_1
296: goto          300
299: iconst_0
300: invokestatic  #36
303: new           #29
306: dup
307: invokespecial #30
310: ldc           #31
312: invokevirtual #32
315: aload_3
316: invokevirtual #32
319: ldc           #66
321: invokevirtual #32
324: invokevirtual #35
327: aload_3
328: ldc           #67
330: invokestatic  #53
333: new           #29
336: dup
337: invokespecial #30
340: ldc           #31
342: invokevirtual #32
345: aload         4
347: invokevirtual #32
350: ldc           #68
352: invokevirtual #32
355: invokevirtual #35
358: aload         4
360: ldc           #10
362: invokestatic  #53
365: new           #29
368: dup
369: invokespecial #30
372: ldc           #31
374: invokevirtual #32
377: aload         5
379: invokevirtual #32
382: ldc           #66
384: invokevirtual #32
387: invokevirtual #35
390: aload         5
392: ldc           #67
394: invokestatic  #53
397: new           #29
400: dup
401: invokespecial #30
404: ldc           #31
406: invokevirtual #32
409: aload         6
411: invokevirtual #32
414: ldc           #78
416: invokevirtual #32
419: invokevirtual #35
422: aload         6
424: ldc           #79
426: invokestatic  #53
429: new           #29
432: dup
433: invokespecial #30
436: ldc           #31
438: invokevirtual #32
441: iload         8
443: invokevirtual #33
446: ldc           #34
448: invokevirtual #32
451: iconst_1
452: invokevirtual #33
455: ldc           #31
457: invokevirtual #32
460: invokevirtual #35
463: iload         8
465: iconst_1
466: if_icmpne     473
469: iconst_1
470: goto          474
473: iconst_0
474: invokestatic  #36
477: new           #29
480: dup
481: invokespecial #30
484: ldc           #31
486: invokevirtual #32
489: iload         9
491: invokevirtual #33
494: ldc           #34
496: invokevirtual #32
499: iconst_m1
500: invokevirtual #33
503: ldc           #31
505: invokevirtual #32
508: invokevirtual #35
511: iload         9
513: iconst_m1
514: if_icmpne     521
517: iconst_1
518: goto          522
521: iconst_0
522: invokestatic  #36
525: aload         10
527: invokestatic  #51
530: new           #29
533: dup
534: invokespecial #30
537: ldc           #31
539: invokevirtual #32
542: iload         12
544: invokevirtual #33
547: ldc           #34
549: invokevirtual #32
552: iconst_1
553: invokevirtual #33
556: ldc           #31
558: invokevirtual #32
561: invokevirtual #35
564: iload         12
566: iconst_1
567: if_icmpne     574
570: iconst_1
571: goto          575
574: iconst_0
575: invokestatic  #36
578: new           #29
581: dup
582: invokespecial #30
585: ldc           #31
587: invokevirtual #32
590: aload         13
592: invokevirtual #32
595: ldc           #68
597: invokevirtual #32
600: invokevirtual #35
603: aload         13
605: ldc           #10
607: invokestatic  #53
610: new           #29
613: dup
614: invokespecial #30
617: ldc           #31
619: invokevirtual #32
622: aload         15
624: invokevirtual #32
627: ldc           #68
629: invokevirtual #32
632: invokevirtual #35
635: aload         15
637: ldc           #10
639: invokestatic  #53
642: new           #29
645: dup
646: invokespecial #30
649: ldc           #31
651: invokevirtual #32
654: aload         16
656: invokevirtual #32
659: ldc           #74
661: invokevirtual #32
664: invokevirtual #35
667: aload         16
669: ldc           #65
671: invokestatic  #53
674: aload         17
676: invokestatic  #51
679: new           #29
682: dup
683: invokespecial #30
686: ldc           #31
688: invokevirtual #32
691: aload         18
693: invokevirtual #32
696: ldc           #78
698: invokevirtual #32
701: invokevirtual #35
704: aload         18
706: ldc           #79
708: invokestatic  #53
711: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0352
Start line: 7579
End line: 0
Method source code: 
    public void test0352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0352");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.getArgName();
        helpFormatter0.setArgName("arg");
        java.lang.String str8 = helpFormatter0.createPadding((int) ' ');
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "arg" + "'", str4, "arg");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "                                " + "'", str8, "                                ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #454
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: invokevirtual #104
48: astore_3
49: aload_1
50: ldc           #79
52: invokevirtual #146
55: aload_1
56: bipush        32
58: invokevirtual #108
61: astore        4
63: new           #29
66: dup
67: invokespecial #30
70: ldc           #31
72: invokevirtual #32
75: iload_2
76: invokevirtual #33
79: ldc           #34
81: invokevirtual #32
84: iconst_1
85: invokevirtual #33
88: ldc           #31
90: invokevirtual #32
93: invokevirtual #35
96: iload_2
97: iconst_1
98: if_icmpne     105
101: iconst_1
102: goto          106
105: iconst_0
106: invokestatic  #36
109: new           #29
112: dup
113: invokespecial #30
116: ldc           #31
118: invokevirtual #32
121: aload_3
122: invokevirtual #32
125: ldc           #78
127: invokevirtual #32
130: invokevirtual #35
133: aload_3
134: ldc           #79
136: invokestatic  #53
139: new           #29
142: dup
143: invokespecial #30
146: ldc           #31
148: invokevirtual #32
151: aload         4
153: invokevirtual #32
156: ldc_w         #455
159: invokevirtual #32
162: invokevirtual #35
165: aload         4
167: ldc_w         #456
170: invokestatic  #53
173: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0353
Start line: 7594
End line: 0
Method source code: 
    public void test0353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0353");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setLongOptPrefix(" ");
        helpFormatter0.defaultDescPad = (short) 10;
        java.lang.String str9 = helpFormatter0.defaultArgName;
        helpFormatter0.setSyntaxPrefix("");
        helpFormatter0.defaultOptPrefix = "                                                                                                 ";
        helpFormatter0.setLongOptPrefix("          ");
        helpFormatter0.defaultArgName = "\n";
        java.lang.StringBuffer stringBuffer18 = null;
        org.apache.commons.cli.Options options20 = null;
        try {
            java.lang.StringBuffer stringBuffer23 = helpFormatter0.renderOptions(stringBuffer18, (int) (short) -1, options20, (int) '#', 97);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "arg" + "'", str9, "arg");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #457
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: getfield      #63
48: astore_3
49: aload_1
50: ldc           #24
52: invokevirtual #49
55: aload_1
56: bipush        10
58: putfield      #76
61: aload_1
62: getfield      #77
65: astore        4
67: aload_1
68: ldc           #10
70: invokevirtual #39
73: aload_1
74: ldc           #141
76: putfield      #63
79: aload_1
80: ldc           #114
82: invokevirtual #49
85: aload_1
86: ldc           #65
88: putfield      #77
91: aconst_null
92: astore        5
94: aconst_null
95: astore        6
97: aload_1
98: aload         5
100: iconst_m1
101: aload         6
103: bipush        35
105: bipush        97
107: invokevirtual #98
110: astore        7
112: ldc           #14
114: invokestatic  #15
117: goto          122
120: astore        7
122: new           #29
125: dup
126: invokespecial #30
129: ldc           #31
131: invokevirtual #32
134: iload_2
135: invokevirtual #33
138: ldc           #34
140: invokevirtual #32
143: iconst_1
144: invokevirtual #33
147: ldc           #31
149: invokevirtual #32
152: invokevirtual #35
155: iload_2
156: iconst_1
157: if_icmpne     164
160: iconst_1
161: goto          165
164: iconst_0
165: invokestatic  #36
168: new           #29
171: dup
172: invokespecial #30
175: ldc           #31
177: invokevirtual #32
180: aload_3
181: invokevirtual #32
184: ldc           #66
186: invokevirtual #32
189: invokevirtual #35
192: aload_3
193: ldc           #67
195: invokestatic  #53
198: new           #29
201: dup
202: invokespecial #30
205: ldc           #31
207: invokevirtual #32
210: aload         4
212: invokevirtual #32
215: ldc           #78
217: invokevirtual #32
220: invokevirtual #35
223: aload         4
225: ldc           #79
227: invokestatic  #53
230: return
Exception table:
from    to  target type
97   117   120   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0354
Start line: 7623
End line: 0
Method source code: 
    public void test0354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0354");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str6 = helpFormatter0.getNewLine();
        java.lang.String str7 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setDescPadding(74);
        helpFormatter0.setLeftPadding(52);
        java.util.Comparator comparator12 = helpFormatter0.getOptionComparator();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\n" + "'", str6, "\n");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(comparator12);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #458
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #10
36: invokevirtual #11
39: aload_1
40: ldc           #10
42: putfield      #55
45: aload_1
46: getfield      #55
49: astore_2
50: aload_1
51: invokevirtual #72
54: astore_3
55: aload_1
56: getfield      #63
59: astore        4
61: aload_1
62: bipush        74
64: invokevirtual #38
67: aload_1
68: bipush        52
70: invokevirtual #193
73: aload_1
74: invokevirtual #106
77: astore        5
79: new           #29
82: dup
83: invokespecial #30
86: ldc           #31
88: invokevirtual #32
91: aload_2
92: invokevirtual #32
95: ldc           #68
97: invokevirtual #32
100: invokevirtual #35
103: aload_2
104: ldc           #10
106: invokestatic  #53
109: new           #29
112: dup
113: invokespecial #30
116: ldc           #31
118: invokevirtual #32
121: aload_3
122: invokevirtual #32
125: ldc           #74
127: invokevirtual #32
130: invokevirtual #35
133: aload_3
134: ldc           #65
136: invokestatic  #53
139: new           #29
142: dup
143: invokespecial #30
146: ldc           #31
148: invokevirtual #32
151: aload         4
153: invokevirtual #32
156: ldc           #68
158: invokevirtual #32
161: invokevirtual #35
164: aload         4
166: ldc           #10
168: invokestatic  #53
171: aload         5
173: invokestatic  #51
176: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0355
Start line: 7642
End line: 0
Method source code: 
    public void test0355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0355");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        java.lang.String str6 = helpFormatter0.getLongOptSeparator();
        helpFormatter0.setLongOptSeparator("          ");
        java.lang.String str9 = helpFormatter0.getOptPrefix();
        helpFormatter0.setOptPrefix("usage: ");
        int int12 = helpFormatter0.getDescPadding();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + " " + "'", str6, " ");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-" + "'", str9, "-");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 10 + "'", int12 == 10);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #459
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: bipush        10
47: invokevirtual #38
50: aload_1
51: invokevirtual #86
54: astore_3
55: aload_1
56: ldc           #114
58: invokevirtual #91
61: aload_1
62: invokevirtual #123
65: astore        4
67: aload_1
68: ldc           #12
70: invokevirtual #11
73: aload_1
74: invokevirtual #118
77: istore        5
79: new           #29
82: dup
83: invokespecial #30
86: ldc           #31
88: invokevirtual #32
91: iload_2
92: invokevirtual #33
95: ldc           #34
97: invokevirtual #32
100: iconst_1
101: invokevirtual #33
104: ldc           #31
106: invokevirtual #32
109: invokevirtual #35
112: iload_2
113: iconst_1
114: if_icmpne     121
117: iconst_1
118: goto          122
121: iconst_0
122: invokestatic  #36
125: new           #29
128: dup
129: invokespecial #30
132: ldc           #31
134: invokevirtual #32
137: aload_3
138: invokevirtual #32
141: ldc           #88
143: invokevirtual #32
146: invokevirtual #35
149: aload_3
150: ldc           #24
152: invokestatic  #53
155: new           #29
158: dup
159: invokespecial #30
162: ldc           #31
164: invokevirtual #32
167: aload         4
169: invokevirtual #32
172: ldc           #66
174: invokevirtual #32
177: invokevirtual #35
180: aload         4
182: ldc           #67
184: invokestatic  #53
187: new           #29
190: dup
191: invokespecial #30
194: ldc           #31
196: invokevirtual #32
199: iload         5
201: invokevirtual #33
204: ldc           #34
206: invokevirtual #32
209: bipush        10
211: invokevirtual #33
214: ldc           #31
216: invokevirtual #32
219: invokevirtual #35
222: iload         5
224: bipush        10
226: if_icmpne     233
229: iconst_1
230: goto          234
233: iconst_0
234: invokestatic  #36
237: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0356
Start line: 7661
End line: 0
Method source code: 
    public void test0356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0356");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setLongOptPrefix(" ");
        helpFormatter0.defaultDescPad = (short) 10;
        java.lang.String str9 = helpFormatter0.defaultArgName;
        helpFormatter0.setSyntaxPrefix("");
        helpFormatter0.defaultOptPrefix = "                                                                                                 ";
        helpFormatter0.setLongOptPrefix("          ");
        java.lang.String str16 = helpFormatter0.defaultArgName;
        org.apache.commons.cli.Options options19 = null;
        try {
            helpFormatter0.printHelp("", "\n", options19, "", false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: cmdLineSyntax not provided");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "arg" + "'", str9, "arg");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "arg" + "'", str16, "arg");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #460
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: getfield      #63
48: astore_3
49: aload_1
50: ldc           #24
52: invokevirtual #49
55: aload_1
56: bipush        10
58: putfield      #76
61: aload_1
62: getfield      #77
65: astore        4
67: aload_1
68: ldc           #10
70: invokevirtual #39
73: aload_1
74: ldc           #141
76: putfield      #63
79: aload_1
80: ldc           #114
82: invokevirtual #49
85: aload_1
86: getfield      #77
89: astore        5
91: aconst_null
92: astore        6
94: aload_1
95: ldc           #10
97: ldc           #65
99: aload         6
101: ldc           #10
103: iconst_0
104: invokevirtual #73
107: ldc           #27
109: invokestatic  #15
112: goto          117
115: astore        7
117: new           #29
120: dup
121: invokespecial #30
124: ldc           #31
126: invokevirtual #32
129: iload_2
130: invokevirtual #33
133: ldc           #34
135: invokevirtual #32
138: iconst_1
139: invokevirtual #33
142: ldc           #31
144: invokevirtual #32
147: invokevirtual #35
150: iload_2
151: iconst_1
152: if_icmpne     159
155: iconst_1
156: goto          160
159: iconst_0
160: invokestatic  #36
163: new           #29
166: dup
167: invokespecial #30
170: ldc           #31
172: invokevirtual #32
175: aload_3
176: invokevirtual #32
179: ldc           #66
181: invokevirtual #32
184: invokevirtual #35
187: aload_3
188: ldc           #67
190: invokestatic  #53
193: new           #29
196: dup
197: invokespecial #30
200: ldc           #31
202: invokevirtual #32
205: aload         4
207: invokevirtual #32
210: ldc           #78
212: invokevirtual #32
215: invokevirtual #35
218: aload         4
220: ldc           #79
222: invokestatic  #53
225: new           #29
228: dup
229: invokespecial #30
232: ldc           #31
234: invokevirtual #32
237: aload         5
239: invokevirtual #32
242: ldc           #78
244: invokevirtual #32
247: invokevirtual #35
250: aload         5
252: ldc           #79
254: invokestatic  #53
257: return
Exception table:
from    to  target type
94   112   115   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0357
Start line: 7690
End line: 0
Method source code: 
    public void test0357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0357");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setArgName("arg");
        int int8 = helpFormatter0.defaultDescPad;
        java.io.PrintWriter printWriter9 = null;
        org.apache.commons.cli.Options options12 = null;
        try {
            helpFormatter0.printUsage(printWriter9, (int) (byte) 0, " ", options12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 3 + "'", int8 == 3);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #461
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #10
36: invokevirtual #11
39: aload_1
40: ldc           #10
42: putfield      #55
45: aload_1
46: getfield      #63
49: astore_2
50: aload_1
51: ldc           #79
53: invokevirtual #146
56: aload_1
57: getfield      #76
60: istore_3
61: aconst_null
62: astore        4
64: aconst_null
65: astore        5
67: aload_1
68: aload         4
70: iconst_0
71: ldc           #24
73: aload         5
75: invokevirtual #127
78: ldc           #14
80: invokestatic  #15
83: goto          88
86: astore        6
88: new           #29
91: dup
92: invokespecial #30
95: ldc           #31
97: invokevirtual #32
100: aload_2
101: invokevirtual #32
104: ldc           #68
106: invokevirtual #32
109: invokevirtual #35
112: aload_2
113: ldc           #10
115: invokestatic  #53
118: new           #29
121: dup
122: invokespecial #30
125: ldc           #31
127: invokevirtual #32
130: iload_3
131: invokevirtual #33
134: ldc           #34
136: invokevirtual #32
139: iconst_3
140: invokevirtual #33
143: ldc           #31
145: invokevirtual #32
148: invokevirtual #35
151: iload_3
152: iconst_3
153: if_icmpne     160
156: iconst_1
157: goto          161
160: iconst_0
161: invokestatic  #36
164: return
Exception table:
from    to  target type
67    83    86   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0358
Start line: 7713
End line: 0
Method source code: 
    public void test0358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0358");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.getArgName();
        helpFormatter0.setSyntaxPrefix("usage: ");
        org.apache.commons.cli.HelpFormatter helpFormatter5 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter5.setOptPrefix("");
        helpFormatter5.defaultLongOptPrefix = "";
        java.lang.String str10 = helpFormatter5.defaultLongOptPrefix;
        java.lang.String str11 = helpFormatter5.getNewLine();
        java.lang.String str12 = helpFormatter5.defaultOptPrefix;
        helpFormatter5.setDescPadding(74);
        java.util.Comparator comparator15 = helpFormatter5.getOptionComparator();
        helpFormatter0.optionComparator = comparator15;
        helpFormatter0.defaultSyntaxPrefix = "";
        java.lang.Class<?> wildcardClass19 = helpFormatter0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "arg" + "'", str2, "arg");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\n" + "'", str11, "\n");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(comparator15);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #462
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: invokevirtual #104
42: astore_3
43: aload_1
44: ldc           #12
46: invokevirtual #39
49: new           #8
52: dup
53: invokespecial #9
56: astore        4
58: aload         4
60: ldc           #10
62: invokevirtual #11
65: aload         4
67: ldc           #10
69: putfield      #55
72: aload         4
74: getfield      #55
77: astore        5
79: aload         4
81: invokevirtual #72
84: astore        6
86: aload         4
88: getfield      #63
91: astore        7
93: aload         4
95: bipush        74
97: invokevirtual #38
100: aload         4
102: invokevirtual #106
105: astore        8
107: aload_1
108: aload         8
110: putfield      #47
113: aload_1
114: ldc           #10
116: putfield      #97
119: aload_1
120: invokevirtual #56
123: astore        9
125: new           #29
128: dup
129: invokespecial #30
132: ldc           #31
134: invokevirtual #32
137: iload_2
138: invokevirtual #33
141: ldc           #34
143: invokevirtual #32
146: iconst_1
147: invokevirtual #33
150: ldc           #31
152: invokevirtual #32
155: invokevirtual #35
158: iload_2
159: iconst_1
160: if_icmpne     167
163: iconst_1
164: goto          168
167: iconst_0
168: invokestatic  #36
171: new           #29
174: dup
175: invokespecial #30
178: ldc           #31
180: invokevirtual #32
183: aload_3
184: invokevirtual #32
187: ldc           #78
189: invokevirtual #32
192: invokevirtual #35
195: aload_3
196: ldc           #79
198: invokestatic  #53
201: new           #29
204: dup
205: invokespecial #30
208: ldc           #31
210: invokevirtual #32
213: aload         5
215: invokevirtual #32
218: ldc           #68
220: invokevirtual #32
223: invokevirtual #35
226: aload         5
228: ldc           #10
230: invokestatic  #53
233: new           #29
236: dup
237: invokespecial #30
240: ldc           #31
242: invokevirtual #32
245: aload         6
247: invokevirtual #32
250: ldc           #74
252: invokevirtual #32
255: invokevirtual #35
258: aload         6
260: ldc           #65
262: invokestatic  #53
265: new           #29
268: dup
269: invokespecial #30
272: ldc           #31
274: invokevirtual #32
277: aload         7
279: invokevirtual #32
282: ldc           #68
284: invokevirtual #32
287: invokevirtual #35
290: aload         7
292: ldc           #10
294: invokestatic  #53
297: aload         8
299: invokestatic  #51
302: aload         9
304: invokestatic  #51
307: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0359
Start line: 7741
End line: 0
Method source code: 
    public void test0359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0359");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        int int6 = helpFormatter0.defaultWidth;
        java.lang.String str7 = helpFormatter0.getLongOptPrefix();
        java.lang.String str8 = helpFormatter0.getLongOptPrefix();
        helpFormatter0.setLongOptSeparator("hi!");
        int int11 = helpFormatter0.getLeftPadding();
        java.lang.String str12 = helpFormatter0.getLongOptSeparator();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "--" + "'", str5, "--");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 74 + "'", int6 == 74);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "--" + "'", str7, "--");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "--" + "'", str8, "--");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #463
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: getfield      #63
48: astore_3
49: aload_1
50: getfield      #55
53: astore        4
55: aload_1
56: getfield      #110
59: istore        5
61: aload_1
62: invokevirtual #48
65: astore        6
67: aload_1
68: invokevirtual #48
71: astore        7
73: aload_1
74: ldc           #25
76: invokevirtual #91
79: aload_1
80: invokevirtual #22
83: istore        8
85: aload_1
86: invokevirtual #86
89: astore        9
91: new           #29
94: dup
95: invokespecial #30
98: ldc           #31
100: invokevirtual #32
103: iload_2
104: invokevirtual #33
107: ldc           #34
109: invokevirtual #32
112: iconst_1
113: invokevirtual #33
116: ldc           #31
118: invokevirtual #32
121: invokevirtual #35
124: iload_2
125: iconst_1
126: if_icmpne     133
129: iconst_1
130: goto          134
133: iconst_0
134: invokestatic  #36
137: new           #29
140: dup
141: invokespecial #30
144: ldc           #31
146: invokevirtual #32
149: aload_3
150: invokevirtual #32
153: ldc           #66
155: invokevirtual #32
158: invokevirtual #35
161: aload_3
162: ldc           #67
164: invokestatic  #53
167: new           #29
170: dup
171: invokespecial #30
174: ldc           #31
176: invokevirtual #32
179: aload         4
181: invokevirtual #32
184: ldc           #52
186: invokevirtual #32
189: invokevirtual #35
192: aload         4
194: ldc           #44
196: invokestatic  #53
199: new           #29
202: dup
203: invokespecial #30
206: ldc           #31
208: invokevirtual #32
211: iload         5
213: invokevirtual #33
216: ldc           #34
218: invokevirtual #32
221: bipush        74
223: invokevirtual #33
226: ldc           #31
228: invokevirtual #32
231: invokevirtual #35
234: iload         5
236: bipush        74
238: if_icmpne     245
241: iconst_1
242: goto          246
245: iconst_0
246: invokestatic  #36
249: new           #29
252: dup
253: invokespecial #30
256: ldc           #31
258: invokevirtual #32
261: aload         6
263: invokevirtual #32
266: ldc           #52
268: invokevirtual #32
271: invokevirtual #35
274: aload         6
276: ldc           #44
278: invokestatic  #53
281: new           #29
284: dup
285: invokespecial #30
288: ldc           #31
290: invokevirtual #32
293: aload         7
295: invokevirtual #32
298: ldc           #52
300: invokevirtual #32
303: invokevirtual #35
306: aload         7
308: ldc           #44
310: invokestatic  #53
313: new           #29
316: dup
317: invokespecial #30
320: ldc           #31
322: invokevirtual #32
325: iload         8
327: invokevirtual #33
330: ldc           #34
332: invokevirtual #32
335: iconst_1
336: invokevirtual #33
339: ldc           #31
341: invokevirtual #32
344: invokevirtual #35
347: iload         8
349: iconst_1
350: if_icmpne     357
353: iconst_1
354: goto          358
357: iconst_0
358: invokestatic  #36
361: new           #29
364: dup
365: invokespecial #30
368: ldc           #31
370: invokevirtual #32
373: aload         9
375: invokevirtual #32
378: ldc_w         #372
381: invokevirtual #32
384: invokevirtual #35
387: aload         9
389: ldc           #25
391: invokestatic  #53
394: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0360
Start line: 7766
End line: 0
Method source code: 
    public void test0360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0360");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        helpFormatter0.setSyntaxPrefix(" ");
        java.util.Comparator comparator8 = helpFormatter0.getOptionComparator();
        java.lang.String str10 = helpFormatter0.createPadding(1);
        java.lang.String str11 = helpFormatter0.getSyntaxPrefix();
        java.util.Comparator comparator12 = helpFormatter0.optionComparator;
        java.lang.String str13 = helpFormatter0.getNewLine();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(comparator8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + " " + "'", str10, " ");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + " " + "'", str11, " ");
        org.junit.Assert.assertNotNull(comparator12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #464
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: bipush        10
47: invokevirtual #38
50: aload_1
51: ldc           #24
53: invokevirtual #39
56: aload_1
57: invokevirtual #106
60: astore_3
61: aload_1
62: iconst_1
63: invokevirtual #108
66: astore        4
68: aload_1
69: invokevirtual #102
72: astore        5
74: aload_1
75: getfield      #47
78: astore        6
80: aload_1
81: invokevirtual #72
84: astore        7
86: new           #29
89: dup
90: invokespecial #30
93: ldc           #31
95: invokevirtual #32
98: iload_2
99: invokevirtual #33
102: ldc           #34
104: invokevirtual #32
107: iconst_1
108: invokevirtual #33
111: ldc           #31
113: invokevirtual #32
116: invokevirtual #35
119: iload_2
120: iconst_1
121: if_icmpne     128
124: iconst_1
125: goto          129
128: iconst_0
129: invokestatic  #36
132: aload_3
133: invokestatic  #51
136: new           #29
139: dup
140: invokespecial #30
143: ldc           #31
145: invokevirtual #32
148: aload         4
150: invokevirtual #32
153: ldc           #88
155: invokevirtual #32
158: invokevirtual #35
161: aload         4
163: ldc           #24
165: invokestatic  #53
168: new           #29
171: dup
172: invokespecial #30
175: ldc           #31
177: invokevirtual #32
180: aload         5
182: invokevirtual #32
185: ldc           #88
187: invokevirtual #32
190: invokevirtual #35
193: aload         5
195: ldc           #24
197: invokestatic  #53
200: aload         6
202: invokestatic  #51
205: new           #29
208: dup
209: invokespecial #30
212: ldc           #31
214: invokevirtual #32
217: aload         7
219: invokevirtual #32
222: ldc           #68
224: invokevirtual #32
227: invokevirtual #35
230: aload         7
232: ldc           #10
234: invokestatic  #53
237: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0361
Start line: 7788
End line: 0
Method source code: 
    public void test0361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0361");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        int int6 = helpFormatter0.defaultWidth;
        java.lang.String str7 = helpFormatter0.defaultNewLine;
        helpFormatter0.defaultArgName = "                                                                                                    ";
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "--" + "'", str5, "--");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 74 + "'", int6 == 74);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #465
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: getfield      #63
48: astore_3
49: aload_1
50: getfield      #55
53: astore        4
55: aload_1
56: getfield      #110
59: istore        5
61: aload_1
62: getfield      #23
65: astore        6
67: aload_1
68: ldc           #240
70: putfield      #77
73: new           #29
76: dup
77: invokespecial #30
80: ldc           #31
82: invokevirtual #32
85: iload_2
86: invokevirtual #33
89: ldc           #34
91: invokevirtual #32
94: iconst_1
95: invokevirtual #33
98: ldc           #31
100: invokevirtual #32
103: invokevirtual #35
106: iload_2
107: iconst_1
108: if_icmpne     115
111: iconst_1
112: goto          116
115: iconst_0
116: invokestatic  #36
119: new           #29
122: dup
123: invokespecial #30
126: ldc           #31
128: invokevirtual #32
131: aload_3
132: invokevirtual #32
135: ldc           #66
137: invokevirtual #32
140: invokevirtual #35
143: aload_3
144: ldc           #67
146: invokestatic  #53
149: new           #29
152: dup
153: invokespecial #30
156: ldc           #31
158: invokevirtual #32
161: aload         4
163: invokevirtual #32
166: ldc           #52
168: invokevirtual #32
171: invokevirtual #35
174: aload         4
176: ldc           #44
178: invokestatic  #53
181: new           #29
184: dup
185: invokespecial #30
188: ldc           #31
190: invokevirtual #32
193: iload         5
195: invokevirtual #33
198: ldc           #34
200: invokevirtual #32
203: bipush        74
205: invokevirtual #33
208: ldc           #31
210: invokevirtual #32
213: invokevirtual #35
216: iload         5
218: bipush        74
220: if_icmpne     227
223: iconst_1
224: goto          228
227: iconst_0
228: invokestatic  #36
231: new           #29
234: dup
235: invokespecial #30
238: ldc           #31
240: invokevirtual #32
243: aload         6
245: invokevirtual #32
248: ldc           #68
250: invokevirtual #32
253: invokevirtual #35
256: aload         6
258: ldc           #10
260: invokestatic  #53
263: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0362
Start line: 7807
End line: 0
Method source code: 
    public void test0362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0362");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        helpFormatter0.setSyntaxPrefix(" ");
        int int8 = helpFormatter0.defaultLeftPad;
        java.lang.String str9 = helpFormatter0.getNewLine();
        helpFormatter0.setOptPrefix("                                                                                                 ");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #466
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: bipush        10
47: invokevirtual #38
50: aload_1
51: ldc           #24
53: invokevirtual #39
56: aload_1
57: getfield      #60
60: istore_3
61: aload_1
62: invokevirtual #72
65: astore        4
67: aload_1
68: ldc           #141
70: invokevirtual #11
73: new           #29
76: dup
77: invokespecial #30
80: ldc           #31
82: invokevirtual #32
85: iload_2
86: invokevirtual #33
89: ldc           #34
91: invokevirtual #32
94: iconst_1
95: invokevirtual #33
98: ldc           #31
100: invokevirtual #32
103: invokevirtual #35
106: iload_2
107: iconst_1
108: if_icmpne     115
111: iconst_1
112: goto          116
115: iconst_0
116: invokestatic  #36
119: new           #29
122: dup
123: invokespecial #30
126: ldc           #31
128: invokevirtual #32
131: iload_3
132: invokevirtual #33
135: ldc           #34
137: invokevirtual #32
140: iconst_1
141: invokevirtual #33
144: ldc           #31
146: invokevirtual #32
149: invokevirtual #35
152: iload_3
153: iconst_1
154: if_icmpne     161
157: iconst_1
158: goto          162
161: iconst_0
162: invokestatic  #36
165: new           #29
168: dup
169: invokespecial #30
172: ldc           #31
174: invokevirtual #32
177: aload         4
179: invokevirtual #32
182: ldc           #68
184: invokevirtual #32
187: invokevirtual #35
190: aload         4
192: ldc           #10
194: invokestatic  #53
197: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0363
Start line: 7824
End line: 0
Method source code: 
    public void test0363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0363");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        java.lang.String str6 = helpFormatter0.defaultNewLine;
        helpFormatter0.setDescPadding(10);
        java.lang.String str9 = helpFormatter0.defaultLongOptPrefix;
        helpFormatter0.defaultLeftPad = 10;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "--" + "'", str9, "--");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #467
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: bipush        10
47: invokevirtual #38
50: aload_1
51: getfield      #23
54: astore_3
55: aload_1
56: bipush        10
58: invokevirtual #38
61: aload_1
62: getfield      #55
65: astore        4
67: aload_1
68: bipush        10
70: putfield      #60
73: new           #29
76: dup
77: invokespecial #30
80: ldc           #31
82: invokevirtual #32
85: iload_2
86: invokevirtual #33
89: ldc           #34
91: invokevirtual #32
94: iconst_1
95: invokevirtual #33
98: ldc           #31
100: invokevirtual #32
103: invokevirtual #35
106: iload_2
107: iconst_1
108: if_icmpne     115
111: iconst_1
112: goto          116
115: iconst_0
116: invokestatic  #36
119: new           #29
122: dup
123: invokespecial #30
126: ldc           #31
128: invokevirtual #32
131: aload_3
132: invokevirtual #32
135: ldc           #68
137: invokevirtual #32
140: invokevirtual #35
143: aload_3
144: ldc           #10
146: invokestatic  #53
149: new           #29
152: dup
153: invokespecial #30
156: ldc           #31
158: invokevirtual #32
161: aload         4
163: invokevirtual #32
166: ldc           #52
168: invokevirtual #32
171: invokevirtual #35
174: aload         4
176: ldc           #44
178: invokestatic  #53
181: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0364
Start line: 7841
End line: 0
Method source code: 
    public void test0364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0364");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.defaultDescPad = '4';
        helpFormatter0.setNewLine("");
        helpFormatter0.setSyntaxPrefix("");
        java.lang.String str10 = helpFormatter0.getSyntaxPrefix();
        helpFormatter0.setWidth((-2));
        helpFormatter0.defaultOptPrefix = "usage: ";
        java.lang.String str15 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setArgName("   ");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "usage: " + "'", str15, "usage: ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #468
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: bipush        52
47: putfield      #76
50: aload_1
51: ldc           #10
53: invokevirtual #131
56: aload_1
57: ldc           #10
59: invokevirtual #39
62: aload_1
63: invokevirtual #102
66: astore_3
67: aload_1
68: bipush        -2
70: invokevirtual #156
73: aload_1
74: ldc           #12
76: putfield      #63
79: aload_1
80: getfield      #63
83: astore        4
85: aload_1
86: ldc_w         #259
89: invokevirtual #146
92: new           #29
95: dup
96: invokespecial #30
99: ldc           #31
101: invokevirtual #32
104: iload_2
105: invokevirtual #33
108: ldc           #34
110: invokevirtual #32
113: iconst_1
114: invokevirtual #33
117: ldc           #31
119: invokevirtual #32
122: invokevirtual #35
125: iload_2
126: iconst_1
127: if_icmpne     134
130: iconst_1
131: goto          135
134: iconst_0
135: invokestatic  #36
138: new           #29
141: dup
142: invokespecial #30
145: ldc           #31
147: invokevirtual #32
150: aload_3
151: invokevirtual #32
154: ldc           #68
156: invokevirtual #32
159: invokevirtual #35
162: aload_3
163: ldc           #10
165: invokestatic  #53
168: new           #29
171: dup
172: invokespecial #30
175: ldc           #31
177: invokevirtual #32
180: aload         4
182: invokevirtual #32
185: ldc           #99
187: invokevirtual #32
190: invokevirtual #35
193: aload         4
195: ldc           #12
197: invokestatic  #53
200: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0365
Start line: 7861
End line: 0
Method source code: 
    public void test0365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0365");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.defaultDescPad = '4';
        helpFormatter0.setNewLine("");
        helpFormatter0.defaultWidth = '4';
        java.io.PrintWriter printWriter10 = null;
        org.apache.commons.cli.Options options14 = null;
        try {
            helpFormatter0.printHelp(printWriter10, 3, "hi!", "usage: ", options14, 0, (int) (short) 1, "                                ", true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #469
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: bipush        52
47: putfield      #76
50: aload_1
51: ldc           #10
53: invokevirtual #131
56: aload_1
57: bipush        52
59: putfield      #110
62: aconst_null
63: astore_3
64: aconst_null
65: astore        4
67: aload_1
68: aload_3
69: iconst_3
70: ldc           #25
72: ldc           #12
74: aload         4
76: iconst_0
77: iconst_1
78: ldc_w         #456
81: iconst_1
82: invokevirtual #40
85: ldc           #14
87: invokestatic  #15
90: goto          95
93: astore        5
95: new           #29
98: dup
99: invokespecial #30
102: ldc           #31
104: invokevirtual #32
107: iload_2
108: invokevirtual #33
111: ldc           #34
113: invokevirtual #32
116: iconst_1
117: invokevirtual #33
120: ldc           #31
122: invokevirtual #32
125: invokevirtual #35
128: iload_2
129: iconst_1
130: if_icmpne     137
133: iconst_1
134: goto          138
137: iconst_0
138: invokestatic  #36
141: return
Exception table:
from    to  target type
67    90    93   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0366
Start line: 7883
End line: 0
Method source code: 
    public void test0366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0366");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultOptPrefix;
        java.lang.String str6 = helpFormatter0.defaultNewLine;
        java.lang.StringBuffer stringBuffer7 = null;
        org.apache.commons.cli.Options options9 = null;
        try {
            java.lang.StringBuffer stringBuffer12 = helpFormatter0.renderOptions(stringBuffer7, (int) (short) 100, options9, (int) ' ', 52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\n" + "'", str6, "\n");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #470
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #10
36: invokevirtual #11
39: aload_1
40: ldc           #10
42: putfield      #55
45: aload_1
46: getfield      #63
49: astore_2
50: aload_1
51: getfield      #23
54: astore_3
55: aconst_null
56: astore        4
58: aconst_null
59: astore        5
61: aload_1
62: aload         4
64: bipush        100
66: aload         5
68: bipush        32
70: bipush        52
72: invokevirtual #98
75: astore        6
77: ldc           #14
79: invokestatic  #15
82: goto          87
85: astore        6
87: new           #29
90: dup
91: invokespecial #30
94: ldc           #31
96: invokevirtual #32
99: aload_2
100: invokevirtual #32
103: ldc           #68
105: invokevirtual #32
108: invokevirtual #35
111: aload_2
112: ldc           #10
114: invokestatic  #53
117: new           #29
120: dup
121: invokespecial #30
124: ldc           #31
126: invokevirtual #32
129: aload_3
130: invokevirtual #32
133: ldc           #74
135: invokevirtual #32
138: invokevirtual #35
141: aload_3
142: ldc           #65
144: invokestatic  #53
147: return
Exception table:
from    to  target type
61    82    85   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0367
Start line: 7905
End line: 0
Method source code: 
    public void test0367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0367");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        int int6 = helpFormatter0.defaultWidth;
        java.lang.String str7 = helpFormatter0.getLongOptPrefix();
        java.lang.String str8 = helpFormatter0.getLongOptPrefix();
        helpFormatter0.setLongOptSeparator("hi!");
        int int11 = helpFormatter0.getWidth();
        java.lang.String str12 = helpFormatter0.defaultSyntaxPrefix;
        java.lang.StringBuffer stringBuffer13 = null;
        try {
            java.lang.StringBuffer stringBuffer17 = helpFormatter0.renderWrappedText(stringBuffer13, (int) (byte) 1, 100, "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "--" + "'", str5, "--");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 74 + "'", int6 == 74);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "--" + "'", str7, "--");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "--" + "'", str8, "--");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 74 + "'", int11 == 74);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "usage: " + "'", str12, "usage: ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #471
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: getfield      #63
48: astore_3
49: aload_1
50: getfield      #55
53: astore        4
55: aload_1
56: getfield      #110
59: istore        5
61: aload_1
62: invokevirtual #48
65: astore        6
67: aload_1
68: invokevirtual #48
71: astore        7
73: aload_1
74: ldc           #25
76: invokevirtual #91
79: aload_1
80: invokevirtual #129
83: istore        8
85: aload_1
86: getfield      #97
89: astore        9
91: aconst_null
92: astore        10
94: aload_1
95: aload         10
97: iconst_1
98: bipush        100
100: ldc           #25
102: invokevirtual #70
105: astore        11
107: ldc           #14
109: invokestatic  #15
112: goto          117
115: astore        11
117: new           #29
120: dup
121: invokespecial #30
124: ldc           #31
126: invokevirtual #32
129: iload_2
130: invokevirtual #33
133: ldc           #34
135: invokevirtual #32
138: iconst_1
139: invokevirtual #33
142: ldc           #31
144: invokevirtual #32
147: invokevirtual #35
150: iload_2
151: iconst_1
152: if_icmpne     159
155: iconst_1
156: goto          160
159: iconst_0
160: invokestatic  #36
163: new           #29
166: dup
167: invokespecial #30
170: ldc           #31
172: invokevirtual #32
175: aload_3
176: invokevirtual #32
179: ldc           #66
181: invokevirtual #32
184: invokevirtual #35
187: aload_3
188: ldc           #67
190: invokestatic  #53
193: new           #29
196: dup
197: invokespecial #30
200: ldc           #31
202: invokevirtual #32
205: aload         4
207: invokevirtual #32
210: ldc           #52
212: invokevirtual #32
215: invokevirtual #35
218: aload         4
220: ldc           #44
222: invokestatic  #53
225: new           #29
228: dup
229: invokespecial #30
232: ldc           #31
234: invokevirtual #32
237: iload         5
239: invokevirtual #33
242: ldc           #34
244: invokevirtual #32
247: bipush        74
249: invokevirtual #33
252: ldc           #31
254: invokevirtual #32
257: invokevirtual #35
260: iload         5
262: bipush        74
264: if_icmpne     271
267: iconst_1
268: goto          272
271: iconst_0
272: invokestatic  #36
275: new           #29
278: dup
279: invokespecial #30
282: ldc           #31
284: invokevirtual #32
287: aload         6
289: invokevirtual #32
292: ldc           #52
294: invokevirtual #32
297: invokevirtual #35
300: aload         6
302: ldc           #44
304: invokestatic  #53
307: new           #29
310: dup
311: invokespecial #30
314: ldc           #31
316: invokevirtual #32
319: aload         7
321: invokevirtual #32
324: ldc           #52
326: invokevirtual #32
329: invokevirtual #35
332: aload         7
334: ldc           #44
336: invokestatic  #53
339: new           #29
342: dup
343: invokespecial #30
346: ldc           #31
348: invokevirtual #32
351: iload         8
353: invokevirtual #33
356: ldc           #34
358: invokevirtual #32
361: bipush        74
363: invokevirtual #33
366: ldc           #31
368: invokevirtual #32
371: invokevirtual #35
374: iload         8
376: bipush        74
378: if_icmpne     385
381: iconst_1
382: goto          386
385: iconst_0
386: invokestatic  #36
389: new           #29
392: dup
393: invokespecial #30
396: ldc           #31
398: invokevirtual #32
401: aload         9
403: invokevirtual #32
406: ldc           #99
408: invokevirtual #32
411: invokevirtual #35
414: aload         9
416: ldc           #12
418: invokestatic  #53
421: return
Exception table:
from    to  target type
94   112   115   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0368
Start line: 7938
End line: 0
Method source code: 
    public void test0368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0368");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.defaultDescPad = '4';
        helpFormatter0.setNewLine("");
        helpFormatter0.defaultWidth = '4';
        helpFormatter0.setWidth((int) (short) 10);
        java.io.PrintWriter printWriter12 = null;
        org.apache.commons.cli.Options options15 = null;
        try {
            helpFormatter0.printUsage(printWriter12, 74, "-", options15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #472
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: bipush        52
47: putfield      #76
50: aload_1
51: ldc           #10
53: invokevirtual #131
56: aload_1
57: bipush        52
59: putfield      #110
62: aload_1
63: bipush        10
65: invokevirtual #156
68: aconst_null
69: astore_3
70: aconst_null
71: astore        4
73: aload_1
74: aload_3
75: bipush        74
77: ldc           #67
79: aload         4
81: invokevirtual #127
84: ldc           #14
86: invokestatic  #15
89: goto          94
92: astore        5
94: new           #29
97: dup
98: invokespecial #30
101: ldc           #31
103: invokevirtual #32
106: iload_2
107: invokevirtual #33
110: ldc           #34
112: invokevirtual #32
115: iconst_1
116: invokevirtual #33
119: ldc           #31
121: invokevirtual #32
124: invokevirtual #35
127: iload_2
128: iconst_1
129: if_icmpne     136
132: iconst_1
133: goto          137
136: iconst_0
137: invokestatic  #36
140: return
Exception table:
from    to  target type
73    89    92   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0369
Start line: 7961
End line: 0
Method source code: 
    public void test0369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0369");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.setSyntaxPrefix("\n");
        org.apache.commons.cli.Options options7 = null;
        try {
            helpFormatter0.printHelp("                                                    ", "                                                                                                    ", options7, "", true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #473
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #10
36: invokevirtual #11
39: aload_1
40: ldc           #65
42: invokevirtual #39
45: aconst_null
46: astore_2
47: aload_1
48: ldc_w         #313
51: ldc           #240
53: aload_2
54: ldc           #10
56: iconst_1
57: invokevirtual #73
60: ldc           #14
62: invokestatic  #15
65: goto          69
68: astore_3
69: return
Exception table:
from    to  target type
47    65    68   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0370
Start line: 7978
End line: 0
Method source code: 
    public void test0370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0370");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.util.Comparator comparator1 = helpFormatter0.optionComparator;
        java.lang.String str3 = helpFormatter0.rtrim("");
        int int4 = helpFormatter0.getDescPadding();
        java.lang.String str5 = helpFormatter0.defaultSyntaxPrefix;
        java.lang.Class<?> wildcardClass6 = helpFormatter0.getClass();
        org.junit.Assert.assertNotNull(comparator1);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 3 + "'", int4 == 3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "usage: " + "'", str5, "usage: ");
        org.junit.Assert.assertNotNull(wildcardClass6);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #474
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: getfield      #47
37: astore_2
38: aload_1
39: ldc           #10
41: invokevirtual #64
44: astore_3
45: aload_1
46: invokevirtual #118
49: istore        4
51: aload_1
52: getfield      #97
55: astore        5
57: aload_1
58: invokevirtual #56
61: astore        6
63: aload_2
64: invokestatic  #51
67: new           #29
70: dup
71: invokespecial #30
74: ldc           #31
76: invokevirtual #32
79: aload_3
80: invokevirtual #32
83: ldc           #68
85: invokevirtual #32
88: invokevirtual #35
91: aload_3
92: ldc           #10
94: invokestatic  #53
97: new           #29
100: dup
101: invokespecial #30
104: ldc           #31
106: invokevirtual #32
109: iload         4
111: invokevirtual #33
114: ldc           #34
116: invokevirtual #32
119: iconst_3
120: invokevirtual #33
123: ldc           #31
125: invokevirtual #32
128: invokevirtual #35
131: iload         4
133: iconst_3
134: if_icmpne     141
137: iconst_1
138: goto          142
141: iconst_0
142: invokestatic  #36
145: new           #29
148: dup
149: invokespecial #30
152: ldc           #31
154: invokevirtual #32
157: aload         5
159: invokevirtual #32
162: ldc           #99
164: invokevirtual #32
167: invokevirtual #35
170: aload         5
172: ldc           #12
174: invokestatic  #53
177: aload         6
179: invokestatic  #51
182: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0371
Start line: 7995
End line: 0
Method source code: 
    public void test0371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0371");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.util.Comparator comparator1 = helpFormatter0.optionComparator;
        int int2 = helpFormatter0.getLeftPadding();
        int int3 = helpFormatter0.defaultLeftPad;
        java.lang.String str5 = helpFormatter0.createPadding((int) 'a');
        org.apache.commons.cli.HelpFormatter helpFormatter6 = new org.apache.commons.cli.HelpFormatter();
        int int7 = helpFormatter6.getLeftPadding();
        helpFormatter6.defaultNewLine = "";
        helpFormatter6.defaultDescPad = '4';
        helpFormatter6.setNewLine("");
        int int17 = helpFormatter6.findWrapPos("\n", (int) ' ', 3);
        java.util.Comparator comparator18 = helpFormatter6.optionComparator;
        helpFormatter0.setOptionComparator(comparator18);
        java.lang.String str20 = helpFormatter0.defaultNewLine;
        helpFormatter0.defaultLeftPad = '#';
        org.junit.Assert.assertNotNull(comparator1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "                                                                                                 " + "'", str5, "                                                                                                 ");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(comparator18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "\n" + "'", str20, "\n");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #475
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: getfield      #47
37: astore_2
38: aload_1
39: invokevirtual #22
42: istore_3
43: aload_1
44: getfield      #60
47: istore        4
49: aload_1
50: bipush        97
52: invokevirtual #108
55: astore        5
57: new           #8
60: dup
61: invokespecial #9
64: astore        6
66: aload         6
68: invokevirtual #22
71: istore        7
73: aload         6
75: ldc           #10
77: putfield      #23
80: aload         6
82: bipush        52
84: putfield      #76
87: aload         6
89: ldc           #10
91: invokevirtual #131
94: aload         6
96: ldc           #65
98: bipush        32
100: iconst_3
101: invokevirtual #93
104: istore        8
106: aload         6
108: getfield      #47
111: astore        9
113: aload_1
114: aload         9
116: invokevirtual #152
119: aload_1
120: getfield      #23
123: astore        10
125: aload_1
126: bipush        35
128: putfield      #60
131: aload_2
132: invokestatic  #51
135: new           #29
138: dup
139: invokespecial #30
142: ldc           #31
144: invokevirtual #32
147: iload_3
148: invokevirtual #33
151: ldc           #34
153: invokevirtual #32
156: iconst_1
157: invokevirtual #33
160: ldc           #31
162: invokevirtual #32
165: invokevirtual #35
168: iload_3
169: iconst_1
170: if_icmpne     177
173: iconst_1
174: goto          178
177: iconst_0
178: invokestatic  #36
181: new           #29
184: dup
185: invokespecial #30
188: ldc           #31
190: invokevirtual #32
193: iload         4
195: invokevirtual #33
198: ldc           #34
200: invokevirtual #32
203: iconst_1
204: invokevirtual #33
207: ldc           #31
209: invokevirtual #32
212: invokevirtual #35
215: iload         4
217: iconst_1
218: if_icmpne     225
221: iconst_1
222: goto          226
225: iconst_0
226: invokestatic  #36
229: new           #29
232: dup
233: invokespecial #30
236: ldc           #31
238: invokevirtual #32
241: aload         5
243: invokevirtual #32
246: ldc           #185
248: invokevirtual #32
251: invokevirtual #35
254: aload         5
256: ldc           #141
258: invokestatic  #53
261: new           #29
264: dup
265: invokespecial #30
268: ldc           #31
270: invokevirtual #32
273: iload         7
275: invokevirtual #33
278: ldc           #34
280: invokevirtual #32
283: iconst_1
284: invokevirtual #33
287: ldc           #31
289: invokevirtual #32
292: invokevirtual #35
295: iload         7
297: iconst_1
298: if_icmpne     305
301: iconst_1
302: goto          306
305: iconst_0
306: invokestatic  #36
309: new           #29
312: dup
313: invokespecial #30
316: ldc           #31
318: invokevirtual #32
321: iload         8
323: invokevirtual #33
326: ldc           #34
328: invokevirtual #32
331: iconst_m1
332: invokevirtual #33
335: ldc           #31
337: invokevirtual #32
340: invokevirtual #35
343: iload         8
345: iconst_m1
346: if_icmpne     353
349: iconst_1
350: goto          354
353: iconst_0
354: invokestatic  #36
357: aload         9
359: invokestatic  #51
362: new           #29
365: dup
366: invokespecial #30
369: ldc           #31
371: invokevirtual #32
374: aload         10
376: invokevirtual #32
379: ldc           #74
381: invokevirtual #32
384: invokevirtual #35
387: aload         10
389: ldc           #65
391: invokestatic  #53
394: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0372
Start line: 8024
End line: 0
Method source code: 
    public void test0372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0372");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.util.Comparator comparator1 = helpFormatter0.optionComparator;
        java.lang.String str2 = helpFormatter0.getLongOptPrefix();
        int int3 = helpFormatter0.defaultDescPad;
        java.lang.Class<?> wildcardClass4 = helpFormatter0.getClass();
        org.junit.Assert.assertNotNull(comparator1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "--" + "'", str2, "--");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 3 + "'", int3 == 3);
        org.junit.Assert.assertNotNull(wildcardClass4);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #476
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: getfield      #47
37: astore_2
38: aload_1
39: invokevirtual #48
42: astore_3
43: aload_1
44: getfield      #76
47: istore        4
49: aload_1
50: invokevirtual #56
53: astore        5
55: aload_2
56: invokestatic  #51
59: new           #29
62: dup
63: invokespecial #30
66: ldc           #31
68: invokevirtual #32
71: aload_3
72: invokevirtual #32
75: ldc           #52
77: invokevirtual #32
80: invokevirtual #35
83: aload_3
84: ldc           #44
86: invokestatic  #53
89: new           #29
92: dup
93: invokespecial #30
96: ldc           #31
98: invokevirtual #32
101: iload         4
103: invokevirtual #33
106: ldc           #34
108: invokevirtual #32
111: iconst_3
112: invokevirtual #33
115: ldc           #31
117: invokevirtual #32
120: invokevirtual #35
123: iload         4
125: iconst_3
126: if_icmpne     133
129: iconst_1
130: goto          134
133: iconst_0
134: invokestatic  #36
137: aload         5
139: invokestatic  #51
142: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0373
Start line: 8039
End line: 0
Method source code: 
    public void test0373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0373");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        java.lang.String str6 = helpFormatter0.rtrim("");
        java.lang.String str8 = helpFormatter0.rtrim("-");
        java.lang.String str9 = helpFormatter0.getLongOptSeparator();
        java.lang.String str10 = helpFormatter0.getLongOptSeparator();
        java.io.PrintWriter printWriter11 = null;
        org.apache.commons.cli.Options options14 = null;
        try {
            helpFormatter0.printUsage(printWriter11, (int) ' ', " ", options14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "-" + "'", str8, "-");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + " " + "'", str9, " ");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + " " + "'", str10, " ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #477
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: getfield      #63
48: astore_3
49: aload_1
50: ldc           #10
52: invokevirtual #64
55: astore        4
57: aload_1
58: ldc           #67
60: invokevirtual #64
63: astore        5
65: aload_1
66: invokevirtual #86
69: astore        6
71: aload_1
72: invokevirtual #86
75: astore        7
77: aconst_null
78: astore        8
80: aconst_null
81: astore        9
83: aload_1
84: aload         8
86: bipush        32
88: ldc           #24
90: aload         9
92: invokevirtual #127
95: ldc           #14
97: invokestatic  #15
100: goto          105
103: astore        10
105: new           #29
108: dup
109: invokespecial #30
112: ldc           #31
114: invokevirtual #32
117: iload_2
118: invokevirtual #33
121: ldc           #34
123: invokevirtual #32
126: iconst_1
127: invokevirtual #33
130: ldc           #31
132: invokevirtual #32
135: invokevirtual #35
138: iload_2
139: iconst_1
140: if_icmpne     147
143: iconst_1
144: goto          148
147: iconst_0
148: invokestatic  #36
151: new           #29
154: dup
155: invokespecial #30
158: ldc           #31
160: invokevirtual #32
163: aload_3
164: invokevirtual #32
167: ldc           #66
169: invokevirtual #32
172: invokevirtual #35
175: aload_3
176: ldc           #67
178: invokestatic  #53
181: new           #29
184: dup
185: invokespecial #30
188: ldc           #31
190: invokevirtual #32
193: aload         4
195: invokevirtual #32
198: ldc           #68
200: invokevirtual #32
203: invokevirtual #35
206: aload         4
208: ldc           #10
210: invokestatic  #53
213: new           #29
216: dup
217: invokespecial #30
220: ldc           #31
222: invokevirtual #32
225: aload         5
227: invokevirtual #32
230: ldc           #66
232: invokevirtual #32
235: invokevirtual #35
238: aload         5
240: ldc           #67
242: invokestatic  #53
245: new           #29
248: dup
249: invokespecial #30
252: ldc           #31
254: invokevirtual #32
257: aload         6
259: invokevirtual #32
262: ldc           #88
264: invokevirtual #32
267: invokevirtual #35
270: aload         6
272: ldc           #24
274: invokestatic  #53
277: new           #29
280: dup
281: invokespecial #30
284: ldc           #31
286: invokevirtual #32
289: aload         7
291: invokevirtual #32
294: ldc           #88
296: invokevirtual #32
299: invokevirtual #35
302: aload         7
304: ldc           #24
306: invokestatic  #53
309: return
Exception table:
from    to  target type
83   100   103   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0374
Start line: 8068
End line: 0
Method source code: 
    public void test0374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0374");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        int int6 = helpFormatter0.defaultWidth;
        java.lang.String str7 = helpFormatter0.getLongOptPrefix();
        java.lang.String str8 = helpFormatter0.getLongOptPrefix();
        helpFormatter0.setLongOptSeparator("hi!");
        int int11 = helpFormatter0.getWidth();
        java.lang.String str12 = helpFormatter0.defaultLongOptPrefix;
        helpFormatter0.setDescPadding(1);
        java.lang.String str15 = helpFormatter0.defaultLongOptPrefix;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "--" + "'", str5, "--");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 74 + "'", int6 == 74);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "--" + "'", str7, "--");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "--" + "'", str8, "--");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 74 + "'", int11 == 74);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "--" + "'", str12, "--");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "--" + "'", str15, "--");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #478
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: getfield      #63
48: astore_3
49: aload_1
50: getfield      #55
53: astore        4
55: aload_1
56: getfield      #110
59: istore        5
61: aload_1
62: invokevirtual #48
65: astore        6
67: aload_1
68: invokevirtual #48
71: astore        7
73: aload_1
74: ldc           #25
76: invokevirtual #91
79: aload_1
80: invokevirtual #129
83: istore        8
85: aload_1
86: getfield      #55
89: astore        9
91: aload_1
92: iconst_1
93: invokevirtual #38
96: aload_1
97: getfield      #55
100: astore        10
102: new           #29
105: dup
106: invokespecial #30
109: ldc           #31
111: invokevirtual #32
114: iload_2
115: invokevirtual #33
118: ldc           #34
120: invokevirtual #32
123: iconst_1
124: invokevirtual #33
127: ldc           #31
129: invokevirtual #32
132: invokevirtual #35
135: iload_2
136: iconst_1
137: if_icmpne     144
140: iconst_1
141: goto          145
144: iconst_0
145: invokestatic  #36
148: new           #29
151: dup
152: invokespecial #30
155: ldc           #31
157: invokevirtual #32
160: aload_3
161: invokevirtual #32
164: ldc           #66
166: invokevirtual #32
169: invokevirtual #35
172: aload_3
173: ldc           #67
175: invokestatic  #53
178: new           #29
181: dup
182: invokespecial #30
185: ldc           #31
187: invokevirtual #32
190: aload         4
192: invokevirtual #32
195: ldc           #52
197: invokevirtual #32
200: invokevirtual #35
203: aload         4
205: ldc           #44
207: invokestatic  #53
210: new           #29
213: dup
214: invokespecial #30
217: ldc           #31
219: invokevirtual #32
222: iload         5
224: invokevirtual #33
227: ldc           #34
229: invokevirtual #32
232: bipush        74
234: invokevirtual #33
237: ldc           #31
239: invokevirtual #32
242: invokevirtual #35
245: iload         5
247: bipush        74
249: if_icmpne     256
252: iconst_1
253: goto          257
256: iconst_0
257: invokestatic  #36
260: new           #29
263: dup
264: invokespecial #30
267: ldc           #31
269: invokevirtual #32
272: aload         6
274: invokevirtual #32
277: ldc           #52
279: invokevirtual #32
282: invokevirtual #35
285: aload         6
287: ldc           #44
289: invokestatic  #53
292: new           #29
295: dup
296: invokespecial #30
299: ldc           #31
301: invokevirtual #32
304: aload         7
306: invokevirtual #32
309: ldc           #52
311: invokevirtual #32
314: invokevirtual #35
317: aload         7
319: ldc           #44
321: invokestatic  #53
324: new           #29
327: dup
328: invokespecial #30
331: ldc           #31
333: invokevirtual #32
336: iload         8
338: invokevirtual #33
341: ldc           #34
343: invokevirtual #32
346: bipush        74
348: invokevirtual #33
351: ldc           #31
353: invokevirtual #32
356: invokevirtual #35
359: iload         8
361: bipush        74
363: if_icmpne     370
366: iconst_1
367: goto          371
370: iconst_0
371: invokestatic  #36
374: new           #29
377: dup
378: invokespecial #30
381: ldc           #31
383: invokevirtual #32
386: aload         9
388: invokevirtual #32
391: ldc           #52
393: invokevirtual #32
396: invokevirtual #35
399: aload         9
401: ldc           #44
403: invokestatic  #53
406: new           #29
409: dup
410: invokespecial #30
413: ldc           #31
415: invokevirtual #32
418: aload         10
420: invokevirtual #32
423: ldc           #52
425: invokevirtual #32
428: invokevirtual #35
431: aload         10
433: ldc           #44
435: invokestatic  #53
438: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0375
Start line: 8096
End line: 0
Method source code: 
    public void test0375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0375");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        java.lang.String str6 = helpFormatter0.defaultNewLine;
        helpFormatter0.setDescPadding(10);
        int int9 = helpFormatter0.defaultLeftPad;
        int int10 = helpFormatter0.getLeftPadding();
        helpFormatter0.setLongOptSeparator("                                                                                                    ");
        java.lang.String str13 = helpFormatter0.defaultSyntaxPrefix;
        java.lang.StringBuffer stringBuffer14 = null;
        org.apache.commons.cli.Options options16 = null;
        try {
            java.lang.StringBuffer stringBuffer19 = helpFormatter0.renderOptions(stringBuffer14, 52, options16, 97, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "usage: " + "'", str13, "usage: ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #479
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: bipush        10
47: invokevirtual #38
50: aload_1
51: getfield      #23
54: astore_3
55: aload_1
56: bipush        10
58: invokevirtual #38
61: aload_1
62: getfield      #60
65: istore        4
67: aload_1
68: invokevirtual #22
71: istore        5
73: aload_1
74: ldc           #240
76: invokevirtual #91
79: aload_1
80: getfield      #97
83: astore        6
85: aconst_null
86: astore        7
88: aconst_null
89: astore        8
91: aload_1
92: aload         7
94: bipush        52
96: aload         8
98: bipush        97
100: iconst_0
101: invokevirtual #98
104: astore        9
106: ldc           #14
108: invokestatic  #15
111: goto          116
114: astore        9
116: new           #29
119: dup
120: invokespecial #30
123: ldc           #31
125: invokevirtual #32
128: iload_2
129: invokevirtual #33
132: ldc           #34
134: invokevirtual #32
137: iconst_1
138: invokevirtual #33
141: ldc           #31
143: invokevirtual #32
146: invokevirtual #35
149: iload_2
150: iconst_1
151: if_icmpne     158
154: iconst_1
155: goto          159
158: iconst_0
159: invokestatic  #36
162: new           #29
165: dup
166: invokespecial #30
169: ldc           #31
171: invokevirtual #32
174: aload_3
175: invokevirtual #32
178: ldc           #68
180: invokevirtual #32
183: invokevirtual #35
186: aload_3
187: ldc           #10
189: invokestatic  #53
192: new           #29
195: dup
196: invokespecial #30
199: ldc           #31
201: invokevirtual #32
204: iload         4
206: invokevirtual #33
209: ldc           #34
211: invokevirtual #32
214: iconst_1
215: invokevirtual #33
218: ldc           #31
220: invokevirtual #32
223: invokevirtual #35
226: iload         4
228: iconst_1
229: if_icmpne     236
232: iconst_1
233: goto          237
236: iconst_0
237: invokestatic  #36
240: new           #29
243: dup
244: invokespecial #30
247: ldc           #31
249: invokevirtual #32
252: iload         5
254: invokevirtual #33
257: ldc           #34
259: invokevirtual #32
262: iconst_1
263: invokevirtual #33
266: ldc           #31
268: invokevirtual #32
271: invokevirtual #35
274: iload         5
276: iconst_1
277: if_icmpne     284
280: iconst_1
281: goto          285
284: iconst_0
285: invokestatic  #36
288: new           #29
291: dup
292: invokespecial #30
295: ldc           #31
297: invokevirtual #32
300: aload         6
302: invokevirtual #32
305: ldc           #99
307: invokevirtual #32
310: invokevirtual #35
313: aload         6
315: ldc           #12
317: invokestatic  #53
320: return
Exception table:
from    to  target type
91   111   114   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0376
Start line: 8126
End line: 0
Method source code: 
    public void test0376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0376");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        java.lang.String str6 = helpFormatter0.getLongOptSeparator();
        java.lang.String str7 = helpFormatter0.getLongOptSeparator();
        int int8 = helpFormatter0.defaultLeftPad;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + " " + "'", str6, " ");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + " " + "'", str7, " ");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #480
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: bipush        10
47: invokevirtual #38
50: aload_1
51: invokevirtual #86
54: astore_3
55: aload_1
56: invokevirtual #86
59: astore        4
61: aload_1
62: getfield      #60
65: istore        5
67: new           #29
70: dup
71: invokespecial #30
74: ldc           #31
76: invokevirtual #32
79: iload_2
80: invokevirtual #33
83: ldc           #34
85: invokevirtual #32
88: iconst_1
89: invokevirtual #33
92: ldc           #31
94: invokevirtual #32
97: invokevirtual #35
100: iload_2
101: iconst_1
102: if_icmpne     109
105: iconst_1
106: goto          110
109: iconst_0
110: invokestatic  #36
113: new           #29
116: dup
117: invokespecial #30
120: ldc           #31
122: invokevirtual #32
125: aload_3
126: invokevirtual #32
129: ldc           #88
131: invokevirtual #32
134: invokevirtual #35
137: aload_3
138: ldc           #24
140: invokestatic  #53
143: new           #29
146: dup
147: invokespecial #30
150: ldc           #31
152: invokevirtual #32
155: aload         4
157: invokevirtual #32
160: ldc           #88
162: invokevirtual #32
165: invokevirtual #35
168: aload         4
170: ldc           #24
172: invokestatic  #53
175: new           #29
178: dup
179: invokespecial #30
182: ldc           #31
184: invokevirtual #32
187: iload         5
189: invokevirtual #33
192: ldc           #34
194: invokevirtual #32
197: iconst_1
198: invokevirtual #33
201: ldc           #31
203: invokevirtual #32
206: invokevirtual #35
209: iload         5
211: iconst_1
212: if_icmpne     219
215: iconst_1
216: goto          220
219: iconst_0
220: invokestatic  #36
223: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0377
Start line: 8143
End line: 0
Method source code: 
    public void test0377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0377");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        int int6 = helpFormatter0.defaultWidth;
        java.lang.String str7 = helpFormatter0.getLongOptPrefix();
        java.lang.String str8 = helpFormatter0.getLongOptPrefix();
        helpFormatter0.setLongOptSeparator("hi!");
        int int11 = helpFormatter0.getWidth();
        java.lang.String str12 = helpFormatter0.defaultSyntaxPrefix;
        java.lang.String str13 = helpFormatter0.defaultSyntaxPrefix;
        java.io.PrintWriter printWriter14 = null;
        org.apache.commons.cli.Options options16 = null;
        try {
            helpFormatter0.printOptions(printWriter14, 0, options16, (int) '#', (-2));
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: null");
        } catch (java.lang.NegativeArraySizeException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "--" + "'", str5, "--");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 74 + "'", int6 == 74);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "--" + "'", str7, "--");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "--" + "'", str8, "--");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 74 + "'", int11 == 74);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "usage: " + "'", str12, "usage: ");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "usage: " + "'", str13, "usage: ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #481
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: getfield      #63
48: astore_3
49: aload_1
50: getfield      #55
53: astore        4
55: aload_1
56: getfield      #110
59: istore        5
61: aload_1
62: invokevirtual #48
65: astore        6
67: aload_1
68: invokevirtual #48
71: astore        7
73: aload_1
74: ldc           #25
76: invokevirtual #91
79: aload_1
80: invokevirtual #129
83: istore        8
85: aload_1
86: getfield      #97
89: astore        9
91: aload_1
92: getfield      #97
95: astore        10
97: aconst_null
98: astore        11
100: aconst_null
101: astore        12
103: aload_1
104: aload         11
106: iconst_0
107: aload         12
109: bipush        35
111: bipush        -2
113: invokevirtual #18
116: ldc           #19
118: invokestatic  #15
121: goto          126
124: astore        13
126: new           #29
129: dup
130: invokespecial #30
133: ldc           #31
135: invokevirtual #32
138: iload_2
139: invokevirtual #33
142: ldc           #34
144: invokevirtual #32
147: iconst_1
148: invokevirtual #33
151: ldc           #31
153: invokevirtual #32
156: invokevirtual #35
159: iload_2
160: iconst_1
161: if_icmpne     168
164: iconst_1
165: goto          169
168: iconst_0
169: invokestatic  #36
172: new           #29
175: dup
176: invokespecial #30
179: ldc           #31
181: invokevirtual #32
184: aload_3
185: invokevirtual #32
188: ldc           #66
190: invokevirtual #32
193: invokevirtual #35
196: aload_3
197: ldc           #67
199: invokestatic  #53
202: new           #29
205: dup
206: invokespecial #30
209: ldc           #31
211: invokevirtual #32
214: aload         4
216: invokevirtual #32
219: ldc           #52
221: invokevirtual #32
224: invokevirtual #35
227: aload         4
229: ldc           #44
231: invokestatic  #53
234: new           #29
237: dup
238: invokespecial #30
241: ldc           #31
243: invokevirtual #32
246: iload         5
248: invokevirtual #33
251: ldc           #34
253: invokevirtual #32
256: bipush        74
258: invokevirtual #33
261: ldc           #31
263: invokevirtual #32
266: invokevirtual #35
269: iload         5
271: bipush        74
273: if_icmpne     280
276: iconst_1
277: goto          281
280: iconst_0
281: invokestatic  #36
284: new           #29
287: dup
288: invokespecial #30
291: ldc           #31
293: invokevirtual #32
296: aload         6
298: invokevirtual #32
301: ldc           #52
303: invokevirtual #32
306: invokevirtual #35
309: aload         6
311: ldc           #44
313: invokestatic  #53
316: new           #29
319: dup
320: invokespecial #30
323: ldc           #31
325: invokevirtual #32
328: aload         7
330: invokevirtual #32
333: ldc           #52
335: invokevirtual #32
338: invokevirtual #35
341: aload         7
343: ldc           #44
345: invokestatic  #53
348: new           #29
351: dup
352: invokespecial #30
355: ldc           #31
357: invokevirtual #32
360: iload         8
362: invokevirtual #33
365: ldc           #34
367: invokevirtual #32
370: bipush        74
372: invokevirtual #33
375: ldc           #31
377: invokevirtual #32
380: invokevirtual #35
383: iload         8
385: bipush        74
387: if_icmpne     394
390: iconst_1
391: goto          395
394: iconst_0
395: invokestatic  #36
398: new           #29
401: dup
402: invokespecial #30
405: ldc           #31
407: invokevirtual #32
410: aload         9
412: invokevirtual #32
415: ldc           #99
417: invokevirtual #32
420: invokevirtual #35
423: aload         9
425: ldc           #12
427: invokestatic  #53
430: new           #29
433: dup
434: invokespecial #30
437: ldc           #31
439: invokevirtual #32
442: aload         10
444: invokevirtual #32
447: ldc           #99
449: invokevirtual #32
452: invokevirtual #35
455: aload         10
457: ldc           #12
459: invokestatic  #53
462: return
Exception table:
from    to  target type
103   121   124   Class java/lang/NegativeArraySizeException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0378
Start line: 8179
End line: 0
Method source code: 
    public void test0378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0378");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.util.Comparator comparator1 = helpFormatter0.optionComparator;
        int int2 = helpFormatter0.getLeftPadding();
        java.lang.String str4 = helpFormatter0.rtrim("-");
        int int5 = helpFormatter0.defaultLeftPad;
        java.lang.String str6 = helpFormatter0.getLongOptPrefix();
        java.io.PrintWriter printWriter7 = null;
        org.apache.commons.cli.Options options9 = null;
        try {
            helpFormatter0.printOptions(printWriter7, (int) (byte) -1, options9, 0, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(comparator1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "--" + "'", str6, "--");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #482
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: getfield      #47
37: astore_2
38: aload_1
39: invokevirtual #22
42: istore_3
43: aload_1
44: ldc           #67
46: invokevirtual #64
49: astore        4
51: aload_1
52: getfield      #60
55: istore        5
57: aload_1
58: invokevirtual #48
61: astore        6
63: aconst_null
64: astore        7
66: aconst_null
67: astore        8
69: aload_1
70: aload         7
72: iconst_m1
73: aload         8
75: iconst_0
76: bipush        100
78: invokevirtual #18
81: ldc           #14
83: invokestatic  #15
86: goto          91
89: astore        9
91: aload_2
92: invokestatic  #51
95: new           #29
98: dup
99: invokespecial #30
102: ldc           #31
104: invokevirtual #32
107: iload_3
108: invokevirtual #33
111: ldc           #34
113: invokevirtual #32
116: iconst_1
117: invokevirtual #33
120: ldc           #31
122: invokevirtual #32
125: invokevirtual #35
128: iload_3
129: iconst_1
130: if_icmpne     137
133: iconst_1
134: goto          138
137: iconst_0
138: invokestatic  #36
141: new           #29
144: dup
145: invokespecial #30
148: ldc           #31
150: invokevirtual #32
153: aload         4
155: invokevirtual #32
158: ldc           #66
160: invokevirtual #32
163: invokevirtual #35
166: aload         4
168: ldc           #67
170: invokestatic  #53
173: new           #29
176: dup
177: invokespecial #30
180: ldc           #31
182: invokevirtual #32
185: iload         5
187: invokevirtual #33
190: ldc           #34
192: invokevirtual #32
195: iconst_1
196: invokevirtual #33
199: ldc           #31
201: invokevirtual #32
204: invokevirtual #35
207: iload         5
209: iconst_1
210: if_icmpne     217
213: iconst_1
214: goto          218
217: iconst_0
218: invokestatic  #36
221: new           #29
224: dup
225: invokespecial #30
228: ldc           #31
230: invokevirtual #32
233: aload         6
235: invokevirtual #32
238: ldc           #52
240: invokevirtual #32
243: invokevirtual #35
246: aload         6
248: ldc           #44
250: invokestatic  #53
253: return
Exception table:
from    to  target type
69    86    89   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0379
Start line: 8205
End line: 0
Method source code: 
    public void test0379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0379");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.defaultLongOptPrefix = "hi!";
        java.lang.String str4 = helpFormatter0.createPadding(10);
        org.apache.commons.cli.Options options8 = null;
        try {
            helpFormatter0.printHelp((int) 'a', "", " ", options8, "hi!", false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: cmdLineSyntax not provided");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "          " + "'", str4, "          ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #483
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #25
36: putfield      #55
39: aload_1
40: bipush        10
42: invokevirtual #108
45: astore_2
46: aconst_null
47: astore_3
48: aload_1
49: bipush        97
51: ldc           #10
53: ldc           #24
55: aload_3
56: ldc           #25
58: iconst_0
59: invokevirtual #26
62: ldc           #27
64: invokestatic  #15
67: goto          72
70: astore        4
72: new           #29
75: dup
76: invokespecial #30
79: ldc           #31
81: invokevirtual #32
84: aload_2
85: invokevirtual #32
88: ldc           #204
90: invokevirtual #32
93: invokevirtual #35
96: aload_2
97: ldc           #114
99: invokestatic  #53
102: return
Exception table:
from    to  target type
48    67    70   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0380
Start line: 8223
End line: 0
Method source code: 
    public void test0380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0380");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.defaultDescPad = '4';
        helpFormatter0.setNewLine("");
        helpFormatter0.setLongOptPrefix(" ");
        java.lang.String str10 = helpFormatter0.getLongOptPrefix();
        helpFormatter0.setLongOptSeparator("hi!");
        java.lang.String str13 = helpFormatter0.defaultLongOptPrefix;
        int int14 = helpFormatter0.defaultWidth;
        java.lang.String str15 = helpFormatter0.getLongOptPrefix();
        helpFormatter0.defaultDescPad = '4';
        org.apache.commons.cli.Options options21 = null;
        try {
            helpFormatter0.printHelp((int) (short) 10, " ", "          ", options21, "hi!", false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + " " + "'", str10, " ");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + " " + "'", str13, " ");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 74 + "'", int14 == 74);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + " " + "'", str15, " ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #484
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: bipush        52
47: putfield      #76
50: aload_1
51: ldc           #10
53: invokevirtual #131
56: aload_1
57: ldc           #24
59: invokevirtual #49
62: aload_1
63: invokevirtual #48
66: astore_3
67: aload_1
68: ldc           #25
70: invokevirtual #91
73: aload_1
74: getfield      #55
77: astore        4
79: aload_1
80: getfield      #110
83: istore        5
85: aload_1
86: invokevirtual #48
89: astore        6
91: aload_1
92: bipush        52
94: putfield      #76
97: aconst_null
98: astore        7
100: aload_1
101: bipush        10
103: ldc           #24
105: ldc           #114
107: aload         7
109: ldc           #25
111: iconst_0
112: invokevirtual #26
115: ldc           #14
117: invokestatic  #15
120: goto          125
123: astore        8
125: new           #29
128: dup
129: invokespecial #30
132: ldc           #31
134: invokevirtual #32
137: iload_2
138: invokevirtual #33
141: ldc           #34
143: invokevirtual #32
146: iconst_1
147: invokevirtual #33
150: ldc           #31
152: invokevirtual #32
155: invokevirtual #35
158: iload_2
159: iconst_1
160: if_icmpne     167
163: iconst_1
164: goto          168
167: iconst_0
168: invokestatic  #36
171: new           #29
174: dup
175: invokespecial #30
178: ldc           #31
180: invokevirtual #32
183: aload_3
184: invokevirtual #32
187: ldc           #88
189: invokevirtual #32
192: invokevirtual #35
195: aload_3
196: ldc           #24
198: invokestatic  #53
201: new           #29
204: dup
205: invokespecial #30
208: ldc           #31
210: invokevirtual #32
213: aload         4
215: invokevirtual #32
218: ldc           #88
220: invokevirtual #32
223: invokevirtual #35
226: aload         4
228: ldc           #24
230: invokestatic  #53
233: new           #29
236: dup
237: invokespecial #30
240: ldc           #31
242: invokevirtual #32
245: iload         5
247: invokevirtual #33
250: ldc           #34
252: invokevirtual #32
255: bipush        74
257: invokevirtual #33
260: ldc           #31
262: invokevirtual #32
265: invokevirtual #35
268: iload         5
270: bipush        74
272: if_icmpne     279
275: iconst_1
276: goto          280
279: iconst_0
280: invokestatic  #36
283: new           #29
286: dup
287: invokespecial #30
290: ldc           #31
292: invokevirtual #32
295: aload         6
297: invokevirtual #32
300: ldc           #88
302: invokevirtual #32
305: invokevirtual #35
308: aload         6
310: ldc           #24
312: invokestatic  #53
315: return
Exception table:
from    to  target type
100   120   123   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0381
Start line: 8254
End line: 0
Method source code: 
    public void test0381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0381");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        int int4 = helpFormatter0.defaultWidth;
        java.util.Comparator comparator5 = helpFormatter0.getOptionComparator();
        java.lang.String str6 = helpFormatter0.getLongOptSeparator();
        helpFormatter0.setArgName("hi!");
        java.lang.String str9 = helpFormatter0.defaultArgName;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 74 + "'", int4 == 74);
        org.junit.Assert.assertNotNull(comparator5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + " " + "'", str6, " ");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #485
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: getfield      #110
48: istore_3
49: aload_1
50: invokevirtual #106
53: astore        4
55: aload_1
56: invokevirtual #86
59: astore        5
61: aload_1
62: ldc           #25
64: invokevirtual #146
67: aload_1
68: getfield      #77
71: astore        6
73: new           #29
76: dup
77: invokespecial #30
80: ldc           #31
82: invokevirtual #32
85: iload_2
86: invokevirtual #33
89: ldc           #34
91: invokevirtual #32
94: iconst_1
95: invokevirtual #33
98: ldc           #31
100: invokevirtual #32
103: invokevirtual #35
106: iload_2
107: iconst_1
108: if_icmpne     115
111: iconst_1
112: goto          116
115: iconst_0
116: invokestatic  #36
119: new           #29
122: dup
123: invokespecial #30
126: ldc           #31
128: invokevirtual #32
131: iload_3
132: invokevirtual #33
135: ldc           #34
137: invokevirtual #32
140: bipush        74
142: invokevirtual #33
145: ldc           #31
147: invokevirtual #32
150: invokevirtual #35
153: iload_3
154: bipush        74
156: if_icmpne     163
159: iconst_1
160: goto          164
163: iconst_0
164: invokestatic  #36
167: aload         4
169: invokestatic  #51
172: new           #29
175: dup
176: invokespecial #30
179: ldc           #31
181: invokevirtual #32
184: aload         5
186: invokevirtual #32
189: ldc           #88
191: invokevirtual #32
194: invokevirtual #35
197: aload         5
199: ldc           #24
201: invokestatic  #53
204: new           #29
207: dup
208: invokespecial #30
211: ldc           #31
213: invokevirtual #32
216: aload         6
218: invokevirtual #32
221: ldc_w         #372
224: invokevirtual #32
227: invokevirtual #35
230: aload         6
232: ldc           #25
234: invokestatic  #53
237: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0382
Start line: 8273
End line: 0
Method source code: 
    public void test0382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0382");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str3 = helpFormatter0.getOptPrefix();
        java.util.Comparator comparator4 = helpFormatter0.optionComparator;
        helpFormatter0.defaultSyntaxPrefix = "                                                                                                 ";
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "--" + "'", str2, "--");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "-" + "'", str3, "-");
        org.junit.Assert.assertNotNull(comparator4);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #486
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: getfield      #55
42: astore_3
43: aload_1
44: invokevirtual #123
47: astore        4
49: aload_1
50: getfield      #47
53: astore        5
55: aload_1
56: ldc           #141
58: putfield      #97
61: new           #29
64: dup
65: invokespecial #30
68: ldc           #31
70: invokevirtual #32
73: iload_2
74: invokevirtual #33
77: ldc           #34
79: invokevirtual #32
82: iconst_1
83: invokevirtual #33
86: ldc           #31
88: invokevirtual #32
91: invokevirtual #35
94: iload_2
95: iconst_1
96: if_icmpne     103
99: iconst_1
100: goto          104
103: iconst_0
104: invokestatic  #36
107: new           #29
110: dup
111: invokespecial #30
114: ldc           #31
116: invokevirtual #32
119: aload_3
120: invokevirtual #32
123: ldc           #52
125: invokevirtual #32
128: invokevirtual #35
131: aload_3
132: ldc           #44
134: invokestatic  #53
137: new           #29
140: dup
141: invokespecial #30
144: ldc           #31
146: invokevirtual #32
149: aload         4
151: invokevirtual #32
154: ldc           #66
156: invokevirtual #32
159: invokevirtual #35
162: aload         4
164: ldc           #67
166: invokestatic  #53
169: aload         5
171: invokestatic  #51
174: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0383
Start line: 8289
End line: 0
Method source code: 
    public void test0383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0383");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.util.Comparator comparator1 = helpFormatter0.optionComparator;
        int int2 = helpFormatter0.getLeftPadding();
        int int6 = helpFormatter0.findWrapPos("-", 100, (-1));
        java.lang.String str7 = helpFormatter0.defaultArgName;
        org.junit.Assert.assertNotNull(comparator1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "arg" + "'", str7, "arg");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #487
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: getfield      #47
37: astore_2
38: aload_1
39: invokevirtual #22
42: istore_3
43: aload_1
44: ldc           #67
46: bipush        100
48: iconst_m1
49: invokevirtual #93
52: istore        4
54: aload_1
55: getfield      #77
58: astore        5
60: aload_2
61: invokestatic  #51
64: new           #29
67: dup
68: invokespecial #30
71: ldc           #31
73: invokevirtual #32
76: iload_3
77: invokevirtual #33
80: ldc           #34
82: invokevirtual #32
85: iconst_1
86: invokevirtual #33
89: ldc           #31
91: invokevirtual #32
94: invokevirtual #35
97: iload_3
98: iconst_1
99: if_icmpne     106
102: iconst_1
103: goto          107
106: iconst_0
107: invokestatic  #36
110: new           #29
113: dup
114: invokespecial #30
117: ldc           #31
119: invokevirtual #32
122: iload         4
124: invokevirtual #33
127: ldc           #34
129: invokevirtual #32
132: iconst_m1
133: invokevirtual #33
136: ldc           #31
138: invokevirtual #32
141: invokevirtual #35
144: iload         4
146: iconst_m1
147: if_icmpne     154
150: iconst_1
151: goto          155
154: iconst_0
155: invokestatic  #36
158: new           #29
161: dup
162: invokespecial #30
165: ldc           #31
167: invokevirtual #32
170: aload         5
172: invokevirtual #32
175: ldc           #78
177: invokevirtual #32
180: invokevirtual #35
183: aload         5
185: ldc           #79
187: invokestatic  #53
190: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0384
Start line: 8304
End line: 0
Method source code: 
    public void test0384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0384");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        helpFormatter0.setSyntaxPrefix(" ");
        java.util.Comparator comparator8 = helpFormatter0.getOptionComparator();
        java.lang.String str10 = helpFormatter0.createPadding(1);
        java.lang.String str11 = helpFormatter0.getSyntaxPrefix();
        java.util.Comparator comparator12 = helpFormatter0.optionComparator;
        java.io.PrintWriter printWriter13 = null;
        org.apache.commons.cli.Options options17 = null;
        try {
            helpFormatter0.printHelp(printWriter13, (int) (short) -1, " ", "usage: ", options17, (-2), (-2), "usage: ");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(comparator8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + " " + "'", str10, " ");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + " " + "'", str11, " ");
        org.junit.Assert.assertNotNull(comparator12);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #488
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: bipush        10
47: invokevirtual #38
50: aload_1
51: ldc           #24
53: invokevirtual #39
56: aload_1
57: invokevirtual #106
60: astore_3
61: aload_1
62: iconst_1
63: invokevirtual #108
66: astore        4
68: aload_1
69: invokevirtual #102
72: astore        5
74: aload_1
75: getfield      #47
78: astore        6
80: aconst_null
81: astore        7
83: aconst_null
84: astore        8
86: aload_1
87: aload         7
89: iconst_m1
90: ldc           #24
92: ldc           #12
94: aload         8
96: bipush        -2
98: bipush        -2
100: ldc           #12
102: invokevirtual #42
105: ldc           #14
107: invokestatic  #15
110: goto          115
113: astore        9
115: new           #29
118: dup
119: invokespecial #30
122: ldc           #31
124: invokevirtual #32
127: iload_2
128: invokevirtual #33
131: ldc           #34
133: invokevirtual #32
136: iconst_1
137: invokevirtual #33
140: ldc           #31
142: invokevirtual #32
145: invokevirtual #35
148: iload_2
149: iconst_1
150: if_icmpne     157
153: iconst_1
154: goto          158
157: iconst_0
158: invokestatic  #36
161: aload_3
162: invokestatic  #51
165: new           #29
168: dup
169: invokespecial #30
172: ldc           #31
174: invokevirtual #32
177: aload         4
179: invokevirtual #32
182: ldc           #88
184: invokevirtual #32
187: invokevirtual #35
190: aload         4
192: ldc           #24
194: invokestatic  #53
197: new           #29
200: dup
201: invokespecial #30
204: ldc           #31
206: invokevirtual #32
209: aload         5
211: invokevirtual #32
214: ldc           #88
216: invokevirtual #32
219: invokevirtual #35
222: aload         5
224: ldc           #24
226: invokestatic  #53
229: aload         6
231: invokestatic  #51
234: return
Exception table:
from    to  target type
86   110   113   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0385
Start line: 8333
End line: 0
Method source code: 
    public void test0385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0385");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.util.Comparator comparator1 = helpFormatter0.optionComparator;
        java.lang.String str3 = helpFormatter0.rtrim("");
        int int4 = helpFormatter0.getDescPadding();
        helpFormatter0.setLongOptSeparator("-");
        org.apache.commons.cli.Options options10 = null;
        try {
            helpFormatter0.printHelp((-1), " ", "                                ", options10, "                                                                                                    ");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(comparator1);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 3 + "'", int4 == 3);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #489
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: getfield      #47
37: astore_2
38: aload_1
39: ldc           #10
41: invokevirtual #64
44: astore_3
45: aload_1
46: invokevirtual #118
49: istore        4
51: aload_1
52: ldc           #67
54: invokevirtual #91
57: aconst_null
58: astore        5
60: aload_1
61: iconst_m1
62: ldc           #24
64: ldc_w         #456
67: aload         5
69: ldc           #240
71: invokevirtual #45
74: ldc           #14
76: invokestatic  #15
79: goto          84
82: astore        6
84: aload_2
85: invokestatic  #51
88: new           #29
91: dup
92: invokespecial #30
95: ldc           #31
97: invokevirtual #32
100: aload_3
101: invokevirtual #32
104: ldc           #68
106: invokevirtual #32
109: invokevirtual #35
112: aload_3
113: ldc           #10
115: invokestatic  #53
118: new           #29
121: dup
122: invokespecial #30
125: ldc           #31
127: invokevirtual #32
130: iload         4
132: invokevirtual #33
135: ldc           #34
137: invokevirtual #32
140: iconst_3
141: invokevirtual #33
144: ldc           #31
146: invokevirtual #32
149: invokevirtual #35
152: iload         4
154: iconst_3
155: if_icmpne     162
158: iconst_1
159: goto          163
162: iconst_0
163: invokestatic  #36
166: return
Exception table:
from    to  target type
60    79    82   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0386
Start line: 8355
End line: 0
Method source code: 
    public void test0386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0386");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        java.lang.String str6 = helpFormatter0.getLongOptSeparator();
        helpFormatter0.setLongOptSeparator("          ");
        java.lang.String str9 = helpFormatter0.getOptPrefix();
        java.lang.String str10 = helpFormatter0.defaultLongOptPrefix;
        org.apache.commons.cli.Options options13 = null;
        try {
            helpFormatter0.printHelp("--", "                                ", options13, "--");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + " " + "'", str6, " ");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-" + "'", str9, "-");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "--" + "'", str10, "--");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #490
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: bipush        10
47: invokevirtual #38
50: aload_1
51: invokevirtual #86
54: astore_3
55: aload_1
56: ldc           #114
58: invokevirtual #91
61: aload_1
62: invokevirtual #123
65: astore        4
67: aload_1
68: getfield      #55
71: astore        5
73: aconst_null
74: astore        6
76: aload_1
77: ldc           #44
79: ldc_w         #456
82: aload         6
84: ldc           #44
86: invokevirtual #13
89: ldc           #14
91: invokestatic  #15
94: goto          99
97: astore        7
99: new           #29
102: dup
103: invokespecial #30
106: ldc           #31
108: invokevirtual #32
111: iload_2
112: invokevirtual #33
115: ldc           #34
117: invokevirtual #32
120: iconst_1
121: invokevirtual #33
124: ldc           #31
126: invokevirtual #32
129: invokevirtual #35
132: iload_2
133: iconst_1
134: if_icmpne     141
137: iconst_1
138: goto          142
141: iconst_0
142: invokestatic  #36
145: new           #29
148: dup
149: invokespecial #30
152: ldc           #31
154: invokevirtual #32
157: aload_3
158: invokevirtual #32
161: ldc           #88
163: invokevirtual #32
166: invokevirtual #35
169: aload_3
170: ldc           #24
172: invokestatic  #53
175: new           #29
178: dup
179: invokespecial #30
182: ldc           #31
184: invokevirtual #32
187: aload         4
189: invokevirtual #32
192: ldc           #66
194: invokevirtual #32
197: invokevirtual #35
200: aload         4
202: ldc           #67
204: invokestatic  #53
207: new           #29
210: dup
211: invokespecial #30
214: ldc           #31
216: invokevirtual #32
219: aload         5
221: invokevirtual #32
224: ldc           #52
226: invokevirtual #32
229: invokevirtual #35
232: aload         5
234: ldc           #44
236: invokestatic  #53
239: return
Exception table:
from    to  target type
76    94    97   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0387
Start line: 8381
End line: 0
Method source code: 
    public void test0387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0387");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        java.lang.String str6 = helpFormatter0.defaultNewLine;
        helpFormatter0.setDescPadding(10);
        java.lang.String str9 = helpFormatter0.defaultLongOptPrefix;
        java.lang.StringBuffer stringBuffer10 = null;
        try {
            java.lang.StringBuffer stringBuffer14 = helpFormatter0.renderWrappedText(stringBuffer10, (int) '#', (int) (short) 10, "usage: ");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "--" + "'", str9, "--");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #491
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: bipush        10
47: invokevirtual #38
50: aload_1
51: getfield      #23
54: astore_3
55: aload_1
56: bipush        10
58: invokevirtual #38
61: aload_1
62: getfield      #55
65: astore        4
67: aconst_null
68: astore        5
70: aload_1
71: aload         5
73: bipush        35
75: bipush        10
77: ldc           #12
79: invokevirtual #70
82: astore        6
84: ldc           #14
86: invokestatic  #15
89: goto          94
92: astore        6
94: new           #29
97: dup
98: invokespecial #30
101: ldc           #31
103: invokevirtual #32
106: iload_2
107: invokevirtual #33
110: ldc           #34
112: invokevirtual #32
115: iconst_1
116: invokevirtual #33
119: ldc           #31
121: invokevirtual #32
124: invokevirtual #35
127: iload_2
128: iconst_1
129: if_icmpne     136
132: iconst_1
133: goto          137
136: iconst_0
137: invokestatic  #36
140: new           #29
143: dup
144: invokespecial #30
147: ldc           #31
149: invokevirtual #32
152: aload_3
153: invokevirtual #32
156: ldc           #68
158: invokevirtual #32
161: invokevirtual #35
164: aload_3
165: ldc           #10
167: invokestatic  #53
170: new           #29
173: dup
174: invokespecial #30
177: ldc           #31
179: invokevirtual #32
182: aload         4
184: invokevirtual #32
187: ldc           #52
189: invokevirtual #32
192: invokevirtual #35
195: aload         4
197: ldc           #44
199: invokestatic  #53
202: return
Exception table:
from    to  target type
70    89    92   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0388
Start line: 8405
End line: 0
Method source code: 
    public void test0388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0388");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        java.lang.String str3 = helpFormatter0.getLongOptSeparator();
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        int int5 = helpFormatter0.defaultWidth;
        helpFormatter0.defaultLongOptPrefix = "--";
        org.apache.commons.cli.HelpFormatter helpFormatter8 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter8.setOptPrefix("");
        helpFormatter8.defaultLongOptPrefix = "";
        java.lang.String str13 = helpFormatter8.defaultLongOptPrefix;
        helpFormatter8.defaultDescPad = 0;
        org.apache.commons.cli.HelpFormatter helpFormatter16 = new org.apache.commons.cli.HelpFormatter();
        java.util.Comparator comparator17 = helpFormatter16.optionComparator;
        int int18 = helpFormatter16.getLeftPadding();
        int int19 = helpFormatter16.defaultLeftPad;
        java.lang.String str21 = helpFormatter16.createPadding((int) 'a');
        org.apache.commons.cli.HelpFormatter helpFormatter22 = new org.apache.commons.cli.HelpFormatter();
        int int23 = helpFormatter22.getLeftPadding();
        helpFormatter22.defaultNewLine = "";
        helpFormatter22.defaultDescPad = '4';
        helpFormatter22.setNewLine("");
        int int33 = helpFormatter22.findWrapPos("\n", (int) ' ', 3);
        java.util.Comparator comparator34 = helpFormatter22.optionComparator;
        helpFormatter16.setOptionComparator(comparator34);
        helpFormatter8.setOptionComparator(comparator34);
        helpFormatter0.optionComparator = comparator34;
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + " " + "'", str3, " ");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 74 + "'", int5 == 74);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(comparator17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "                                                                                                 " + "'", str21, "                                                                                                 ");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(comparator34);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #492
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #10
36: invokevirtual #11
39: aload_1
40: invokevirtual #86
43: astore_2
44: aload_1
45: getfield      #63
48: astore_3
49: aload_1
50: getfield      #110
53: istore        4
55: aload_1
56: ldc           #44
58: putfield      #55
61: new           #8
64: dup
65: invokespecial #9
68: astore        5
70: aload         5
72: ldc           #10
74: invokevirtual #11
77: aload         5
79: ldc           #10
81: putfield      #55
84: aload         5
86: getfield      #55
89: astore        6
91: aload         5
93: iconst_0
94: putfield      #76
97: new           #8
100: dup
101: invokespecial #9
104: astore        7
106: aload         7
108: getfield      #47
111: astore        8
113: aload         7
115: invokevirtual #22
118: istore        9
120: aload         7
122: getfield      #60
125: istore        10
127: aload         7
129: bipush        97
131: invokevirtual #108
134: astore        11
136: new           #8
139: dup
140: invokespecial #9
143: astore        12
145: aload         12
147: invokevirtual #22
150: istore        13
152: aload         12
154: ldc           #10
156: putfield      #23
159: aload         12
161: bipush        52
163: putfield      #76
166: aload         12
168: ldc           #10
170: invokevirtual #131
173: aload         12
175: ldc           #65
177: bipush        32
179: iconst_3
180: invokevirtual #93
183: istore        14
185: aload         12
187: getfield      #47
190: astore        15
192: aload         7
194: aload         15
196: invokevirtual #152
199: aload         5
201: aload         15
203: invokevirtual #152
206: aload_1
207: aload         15
209: putfield      #47
212: new           #29
215: dup
216: invokespecial #30
219: ldc           #31
221: invokevirtual #32
224: aload_2
225: invokevirtual #32
228: ldc           #88
230: invokevirtual #32
233: invokevirtual #35
236: aload_2
237: ldc           #24
239: invokestatic  #53
242: new           #29
245: dup
246: invokespecial #30
249: ldc           #31
251: invokevirtual #32
254: aload_3
255: invokevirtual #32
258: ldc           #68
260: invokevirtual #32
263: invokevirtual #35
266: aload_3
267: ldc           #10
269: invokestatic  #53
272: new           #29
275: dup
276: invokespecial #30
279: ldc           #31
281: invokevirtual #32
284: iload         4
286: invokevirtual #33
289: ldc           #34
291: invokevirtual #32
294: bipush        74
296: invokevirtual #33
299: ldc           #31
301: invokevirtual #32
304: invokevirtual #35
307: iload         4
309: bipush        74
311: if_icmpne     318
314: iconst_1
315: goto          319
318: iconst_0
319: invokestatic  #36
322: new           #29
325: dup
326: invokespecial #30
329: ldc           #31
331: invokevirtual #32
334: aload         6
336: invokevirtual #32
339: ldc           #68
341: invokevirtual #32
344: invokevirtual #35
347: aload         6
349: ldc           #10
351: invokestatic  #53
354: aload         8
356: invokestatic  #51
359: new           #29
362: dup
363: invokespecial #30
366: ldc           #31
368: invokevirtual #32
371: iload         9
373: invokevirtual #33
376: ldc           #34
378: invokevirtual #32
381: iconst_1
382: invokevirtual #33
385: ldc           #31
387: invokevirtual #32
390: invokevirtual #35
393: iload         9
395: iconst_1
396: if_icmpne     403
399: iconst_1
400: goto          404
403: iconst_0
404: invokestatic  #36
407: new           #29
410: dup
411: invokespecial #30
414: ldc           #31
416: invokevirtual #32
419: iload         10
421: invokevirtual #33
424: ldc           #34
426: invokevirtual #32
429: iconst_1
430: invokevirtual #33
433: ldc           #31
435: invokevirtual #32
438: invokevirtual #35
441: iload         10
443: iconst_1
444: if_icmpne     451
447: iconst_1
448: goto          452
451: iconst_0
452: invokestatic  #36
455: new           #29
458: dup
459: invokespecial #30
462: ldc           #31
464: invokevirtual #32
467: aload         11
469: invokevirtual #32
472: ldc           #185
474: invokevirtual #32
477: invokevirtual #35
480: aload         11
482: ldc           #141
484: invokestatic  #53
487: new           #29
490: dup
491: invokespecial #30
494: ldc           #31
496: invokevirtual #32
499: iload         13
501: invokevirtual #33
504: ldc           #34
506: invokevirtual #32
509: iconst_1
510: invokevirtual #33
513: ldc           #31
515: invokevirtual #32
518: invokevirtual #35
521: iload         13
523: iconst_1
524: if_icmpne     531
527: iconst_1
528: goto          532
531: iconst_0
532: invokestatic  #36
535: new           #29
538: dup
539: invokespecial #30
542: ldc           #31
544: invokevirtual #32
547: iload         14
549: invokevirtual #33
552: ldc           #34
554: invokevirtual #32
557: iconst_m1
558: invokevirtual #33
561: ldc           #31
563: invokevirtual #32
566: invokevirtual #35
569: iload         14
571: iconst_m1
572: if_icmpne     579
575: iconst_1
576: goto          580
579: iconst_0
580: invokestatic  #36
583: aload         15
585: invokestatic  #51
588: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0389
Start line: 8448
End line: 0
Method source code: 
    public void test0389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0389");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setLongOptPrefix(" ");
        helpFormatter0.defaultDescPad = (short) 10;
        java.lang.String str9 = helpFormatter0.defaultArgName;
        helpFormatter0.setSyntaxPrefix("");
        helpFormatter0.setWidth(3);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "arg" + "'", str9, "arg");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #493
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: getfield      #63
48: astore_3
49: aload_1
50: ldc           #24
52: invokevirtual #49
55: aload_1
56: bipush        10
58: putfield      #76
61: aload_1
62: getfield      #77
65: astore        4
67: aload_1
68: ldc           #10
70: invokevirtual #39
73: aload_1
74: iconst_3
75: invokevirtual #156
78: new           #29
81: dup
82: invokespecial #30
85: ldc           #31
87: invokevirtual #32
90: iload_2
91: invokevirtual #33
94: ldc           #34
96: invokevirtual #32
99: iconst_1
100: invokevirtual #33
103: ldc           #31
105: invokevirtual #32
108: invokevirtual #35
111: iload_2
112: iconst_1
113: if_icmpne     120
116: iconst_1
117: goto          121
120: iconst_0
121: invokestatic  #36
124: new           #29
127: dup
128: invokespecial #30
131: ldc           #31
133: invokevirtual #32
136: aload_3
137: invokevirtual #32
140: ldc           #66
142: invokevirtual #32
145: invokevirtual #35
148: aload_3
149: ldc           #67
151: invokestatic  #53
154: new           #29
157: dup
158: invokespecial #30
161: ldc           #31
163: invokevirtual #32
166: aload         4
168: invokevirtual #32
171: ldc           #78
173: invokevirtual #32
176: invokevirtual #35
179: aload         4
181: ldc           #79
183: invokestatic  #53
186: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0390
Start line: 8466
End line: 0
Method source code: 
    public void test0390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0390");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        helpFormatter0.setWidth(1);
        org.apache.commons.cli.Options options10 = null;
        try {
            helpFormatter0.printHelp("", "arg", options10, "                                                                                                 ", false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: cmdLineSyntax not provided");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #494
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #10
36: invokevirtual #11
39: aload_1
40: ldc           #10
42: putfield      #55
45: aload_1
46: getfield      #55
49: astore_2
50: aload_1
51: iconst_1
52: invokevirtual #156
55: aconst_null
56: astore_3
57: aload_1
58: ldc           #10
60: ldc           #79
62: aload_3
63: ldc           #141
65: iconst_0
66: invokevirtual #73
69: ldc           #27
71: invokestatic  #15
74: goto          79
77: astore        4
79: new           #29
82: dup
83: invokespecial #30
86: ldc           #31
88: invokevirtual #32
91: aload_2
92: invokevirtual #32
95: ldc           #68
97: invokevirtual #32
100: invokevirtual #35
103: aload_2
104: ldc           #10
106: invokestatic  #53
109: return
Exception table:
from    to  target type
57    74    77   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0391
Start line: 8486
End line: 0
Method source code: 
    public void test0391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0391");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        java.lang.String str6 = helpFormatter0.getOptPrefix();
        java.lang.String str7 = helpFormatter0.getNewLine();
        helpFormatter0.defaultOptPrefix = "";
        helpFormatter0.setNewLine("");
        java.lang.String str12 = helpFormatter0.getArgName();
        java.lang.String str13 = helpFormatter0.getSyntaxPrefix();
        helpFormatter0.setSyntaxPrefix("                                                                                                    ");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "-" + "'", str6, "-");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "arg" + "'", str12, "arg");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "usage: " + "'", str13, "usage: ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #495
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: bipush        10
47: invokevirtual #38
50: aload_1
51: invokevirtual #123
54: astore_3
55: aload_1
56: invokevirtual #72
59: astore        4
61: aload_1
62: ldc           #10
64: putfield      #63
67: aload_1
68: ldc           #10
70: invokevirtual #131
73: aload_1
74: invokevirtual #104
77: astore        5
79: aload_1
80: invokevirtual #102
83: astore        6
85: aload_1
86: ldc           #240
88: invokevirtual #39
91: new           #29
94: dup
95: invokespecial #30
98: ldc           #31
100: invokevirtual #32
103: iload_2
104: invokevirtual #33
107: ldc           #34
109: invokevirtual #32
112: iconst_1
113: invokevirtual #33
116: ldc           #31
118: invokevirtual #32
121: invokevirtual #35
124: iload_2
125: iconst_1
126: if_icmpne     133
129: iconst_1
130: goto          134
133: iconst_0
134: invokestatic  #36
137: new           #29
140: dup
141: invokespecial #30
144: ldc           #31
146: invokevirtual #32
149: aload_3
150: invokevirtual #32
153: ldc           #66
155: invokevirtual #32
158: invokevirtual #35
161: aload_3
162: ldc           #67
164: invokestatic  #53
167: new           #29
170: dup
171: invokespecial #30
174: ldc           #31
176: invokevirtual #32
179: aload         4
181: invokevirtual #32
184: ldc           #68
186: invokevirtual #32
189: invokevirtual #35
192: aload         4
194: ldc           #10
196: invokestatic  #53
199: new           #29
202: dup
203: invokespecial #30
206: ldc           #31
208: invokevirtual #32
211: aload         5
213: invokevirtual #32
216: ldc           #78
218: invokevirtual #32
221: invokevirtual #35
224: aload         5
226: ldc           #79
228: invokestatic  #53
231: new           #29
234: dup
235: invokespecial #30
238: ldc           #31
240: invokevirtual #32
243: aload         6
245: invokevirtual #32
248: ldc           #99
250: invokevirtual #32
253: invokevirtual #35
256: aload         6
258: ldc           #12
260: invokestatic  #53
263: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0392
Start line: 8508
End line: 0
Method source code: 
    public void test0392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0392");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.getArgName();
        helpFormatter0.defaultNewLine = "\n";
        helpFormatter0.defaultLeftPad = (byte) -1;
        helpFormatter0.setLongOptSeparator("");
        helpFormatter0.setLongOptSeparator("-");
        java.lang.String str11 = helpFormatter0.getSyntaxPrefix();
        java.lang.String str13 = helpFormatter0.createPadding(100);
        helpFormatter0.defaultSyntaxPrefix = "          ";
        helpFormatter0.setDescPadding(3);
        java.lang.String str18 = helpFormatter0.defaultSyntaxPrefix;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "arg" + "'", str2, "arg");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "usage: " + "'", str11, "usage: ");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "                                                                                                    " + "'", str13, "                                                                                                    ");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "          " + "'", str18, "          ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #496
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: invokevirtual #104
42: astore_3
43: aload_1
44: ldc           #65
46: putfield      #23
49: aload_1
50: iconst_m1
51: putfield      #60
54: aload_1
55: ldc           #10
57: invokevirtual #91
60: aload_1
61: ldc           #67
63: invokevirtual #91
66: aload_1
67: invokevirtual #102
70: astore        4
72: aload_1
73: bipush        100
75: invokevirtual #108
78: astore        5
80: aload_1
81: ldc           #114
83: putfield      #97
86: aload_1
87: iconst_3
88: invokevirtual #38
91: aload_1
92: getfield      #97
95: astore        6
97: new           #29
100: dup
101: invokespecial #30
104: ldc           #31
106: invokevirtual #32
109: iload_2
110: invokevirtual #33
113: ldc           #34
115: invokevirtual #32
118: iconst_1
119: invokevirtual #33
122: ldc           #31
124: invokevirtual #32
127: invokevirtual #35
130: iload_2
131: iconst_1
132: if_icmpne     139
135: iconst_1
136: goto          140
139: iconst_0
140: invokestatic  #36
143: new           #29
146: dup
147: invokespecial #30
150: ldc           #31
152: invokevirtual #32
155: aload_3
156: invokevirtual #32
159: ldc           #78
161: invokevirtual #32
164: invokevirtual #35
167: aload_3
168: ldc           #79
170: invokestatic  #53
173: new           #29
176: dup
177: invokespecial #30
180: ldc           #31
182: invokevirtual #32
185: aload         4
187: invokevirtual #32
190: ldc           #99
192: invokevirtual #32
195: invokevirtual #35
198: aload         4
200: ldc           #12
202: invokestatic  #53
205: new           #29
208: dup
209: invokespecial #30
212: ldc           #31
214: invokevirtual #32
217: aload         5
219: invokevirtual #32
222: ldc_w         #299
225: invokevirtual #32
228: invokevirtual #35
231: aload         5
233: ldc           #240
235: invokestatic  #53
238: new           #29
241: dup
242: invokespecial #30
245: ldc           #31
247: invokevirtual #32
250: aload         6
252: invokevirtual #32
255: ldc           #204
257: invokevirtual #32
260: invokevirtual #35
263: aload         6
265: ldc           #114
267: invokestatic  #53
270: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0393
Start line: 8531
End line: 0
Method source code: 
    public void test0393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0393");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.getArgName();
        helpFormatter0.setSyntaxPrefix("usage: ");
        java.lang.String str5 = helpFormatter0.defaultSyntaxPrefix;
        java.lang.String str6 = helpFormatter0.defaultSyntaxPrefix;
        helpFormatter0.defaultArgName = "--";
        int int9 = helpFormatter0.defaultLeftPad;
        helpFormatter0.setLeftPadding(0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "arg" + "'", str2, "arg");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "usage: " + "'", str5, "usage: ");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "usage: " + "'", str6, "usage: ");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #497
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: invokevirtual #104
42: astore_3
43: aload_1
44: ldc           #12
46: invokevirtual #39
49: aload_1
50: getfield      #97
53: astore        4
55: aload_1
56: getfield      #97
59: astore        5
61: aload_1
62: ldc           #44
64: putfield      #77
67: aload_1
68: getfield      #60
71: istore        6
73: aload_1
74: iconst_0
75: invokevirtual #193
78: new           #29
81: dup
82: invokespecial #30
85: ldc           #31
87: invokevirtual #32
90: iload_2
91: invokevirtual #33
94: ldc           #34
96: invokevirtual #32
99: iconst_1
100: invokevirtual #33
103: ldc           #31
105: invokevirtual #32
108: invokevirtual #35
111: iload_2
112: iconst_1
113: if_icmpne     120
116: iconst_1
117: goto          121
120: iconst_0
121: invokestatic  #36
124: new           #29
127: dup
128: invokespecial #30
131: ldc           #31
133: invokevirtual #32
136: aload_3
137: invokevirtual #32
140: ldc           #78
142: invokevirtual #32
145: invokevirtual #35
148: aload_3
149: ldc           #79
151: invokestatic  #53
154: new           #29
157: dup
158: invokespecial #30
161: ldc           #31
163: invokevirtual #32
166: aload         4
168: invokevirtual #32
171: ldc           #99
173: invokevirtual #32
176: invokevirtual #35
179: aload         4
181: ldc           #12
183: invokestatic  #53
186: new           #29
189: dup
190: invokespecial #30
193: ldc           #31
195: invokevirtual #32
198: aload         5
200: invokevirtual #32
203: ldc           #99
205: invokevirtual #32
208: invokevirtual #35
211: aload         5
213: ldc           #12
215: invokestatic  #53
218: new           #29
221: dup
222: invokespecial #30
225: ldc           #31
227: invokevirtual #32
230: iload         6
232: invokevirtual #33
235: ldc           #34
237: invokevirtual #32
240: iconst_1
241: invokevirtual #33
244: ldc           #31
246: invokevirtual #32
249: invokevirtual #35
252: iload         6
254: iconst_1
255: if_icmpne     262
258: iconst_1
259: goto          263
262: iconst_0
263: invokestatic  #36
266: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0394
Start line: 8551
End line: 0
Method source code: 
    public void test0394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0394");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str3 = helpFormatter0.getOptPrefix();
        int int4 = helpFormatter0.defaultDescPad;
        helpFormatter0.setOptPrefix("");
        java.lang.String str7 = helpFormatter0.defaultArgName;
        helpFormatter0.setLongOptPrefix("                                                                                                 ");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "--" + "'", str2, "--");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "-" + "'", str3, "-");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 3 + "'", int4 == 3);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "arg" + "'", str7, "arg");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #498
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: getfield      #55
42: astore_3
43: aload_1
44: invokevirtual #123
47: astore        4
49: aload_1
50: getfield      #76
53: istore        5
55: aload_1
56: ldc           #10
58: invokevirtual #11
61: aload_1
62: getfield      #77
65: astore        6
67: aload_1
68: ldc           #141
70: invokevirtual #49
73: new           #29
76: dup
77: invokespecial #30
80: ldc           #31
82: invokevirtual #32
85: iload_2
86: invokevirtual #33
89: ldc           #34
91: invokevirtual #32
94: iconst_1
95: invokevirtual #33
98: ldc           #31
100: invokevirtual #32
103: invokevirtual #35
106: iload_2
107: iconst_1
108: if_icmpne     115
111: iconst_1
112: goto          116
115: iconst_0
116: invokestatic  #36
119: new           #29
122: dup
123: invokespecial #30
126: ldc           #31
128: invokevirtual #32
131: aload_3
132: invokevirtual #32
135: ldc           #52
137: invokevirtual #32
140: invokevirtual #35
143: aload_3
144: ldc           #44
146: invokestatic  #53
149: new           #29
152: dup
153: invokespecial #30
156: ldc           #31
158: invokevirtual #32
161: aload         4
163: invokevirtual #32
166: ldc           #66
168: invokevirtual #32
171: invokevirtual #35
174: aload         4
176: ldc           #67
178: invokestatic  #53
181: new           #29
184: dup
185: invokespecial #30
188: ldc           #31
190: invokevirtual #32
193: iload         5
195: invokevirtual #33
198: ldc           #34
200: invokevirtual #32
203: iconst_3
204: invokevirtual #33
207: ldc           #31
209: invokevirtual #32
212: invokevirtual #35
215: iload         5
217: iconst_3
218: if_icmpne     225
221: iconst_1
222: goto          226
225: iconst_0
226: invokestatic  #36
229: new           #29
232: dup
233: invokespecial #30
236: ldc           #31
238: invokevirtual #32
241: aload         6
243: invokevirtual #32
246: ldc           #78
248: invokevirtual #32
251: invokevirtual #35
254: aload         6
256: ldc           #79
258: invokestatic  #53
261: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0395
Start line: 8570
End line: 0
Method source code: 
    public void test0395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0395");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        int int4 = helpFormatter0.defaultWidth;
        helpFormatter0.setOptPrefix("");
        java.lang.String str8 = helpFormatter0.rtrim("usage: ");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 74 + "'", int4 == 74);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "usage:" + "'", str8, "usage:");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #499
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: getfield      #110
48: istore_3
49: aload_1
50: ldc           #10
52: invokevirtual #11
55: aload_1
56: ldc           #12
58: invokevirtual #64
61: astore        4
63: new           #29
66: dup
67: invokespecial #30
70: ldc           #31
72: invokevirtual #32
75: iload_2
76: invokevirtual #33
79: ldc           #34
81: invokevirtual #32
84: iconst_1
85: invokevirtual #33
88: ldc           #31
90: invokevirtual #32
93: invokevirtual #35
96: iload_2
97: iconst_1
98: if_icmpne     105
101: iconst_1
102: goto          106
105: iconst_0
106: invokestatic  #36
109: new           #29
112: dup
113: invokespecial #30
116: ldc           #31
118: invokevirtual #32
121: iload_3
122: invokevirtual #33
125: ldc           #34
127: invokevirtual #32
130: bipush        74
132: invokevirtual #33
135: ldc           #31
137: invokevirtual #32
140: invokevirtual #35
143: iload_3
144: bipush        74
146: if_icmpne     153
149: iconst_1
150: goto          154
153: iconst_0
154: invokestatic  #36
157: new           #29
160: dup
161: invokespecial #30
164: ldc           #31
166: invokevirtual #32
169: aload         4
171: invokevirtual #32
174: ldc_w         #500
177: invokevirtual #32
180: invokevirtual #35
183: aload         4
185: ldc_w         #501
188: invokestatic  #53
191: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0396
Start line: 8585
End line: 0
Method source code: 
    public void test0396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0396");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        java.lang.String str6 = helpFormatter0.rtrim("");
        int int7 = helpFormatter0.getDescPadding();
        int int8 = helpFormatter0.getDescPadding();
        helpFormatter0.setWidth((int) '4');
        helpFormatter0.setLongOptSeparator("\n");
        helpFormatter0.defaultArgName = "hi!";
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 3 + "'", int7 == 3);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 3 + "'", int8 == 3);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #502
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: getfield      #63
48: astore_3
49: aload_1
50: ldc           #10
52: invokevirtual #64
55: astore        4
57: aload_1
58: invokevirtual #118
61: istore        5
63: aload_1
64: invokevirtual #118
67: istore        6
69: aload_1
70: bipush        52
72: invokevirtual #156
75: aload_1
76: ldc           #65
78: invokevirtual #91
81: aload_1
82: ldc           #25
84: putfield      #77
87: new           #29
90: dup
91: invokespecial #30
94: ldc           #31
96: invokevirtual #32
99: iload_2
100: invokevirtual #33
103: ldc           #34
105: invokevirtual #32
108: iconst_1
109: invokevirtual #33
112: ldc           #31
114: invokevirtual #32
117: invokevirtual #35
120: iload_2
121: iconst_1
122: if_icmpne     129
125: iconst_1
126: goto          130
129: iconst_0
130: invokestatic  #36
133: new           #29
136: dup
137: invokespecial #30
140: ldc           #31
142: invokevirtual #32
145: aload_3
146: invokevirtual #32
149: ldc           #66
151: invokevirtual #32
154: invokevirtual #35
157: aload_3
158: ldc           #67
160: invokestatic  #53
163: new           #29
166: dup
167: invokespecial #30
170: ldc           #31
172: invokevirtual #32
175: aload         4
177: invokevirtual #32
180: ldc           #68
182: invokevirtual #32
185: invokevirtual #35
188: aload         4
190: ldc           #10
192: invokestatic  #53
195: new           #29
198: dup
199: invokespecial #30
202: ldc           #31
204: invokevirtual #32
207: iload         5
209: invokevirtual #33
212: ldc           #34
214: invokevirtual #32
217: iconst_3
218: invokevirtual #33
221: ldc           #31
223: invokevirtual #32
226: invokevirtual #35
229: iload         5
231: iconst_3
232: if_icmpne     239
235: iconst_1
236: goto          240
239: iconst_0
240: invokestatic  #36
243: new           #29
246: dup
247: invokespecial #30
250: ldc           #31
252: invokevirtual #32
255: iload         6
257: invokevirtual #33
260: ldc           #34
262: invokevirtual #32
265: iconst_3
266: invokevirtual #33
269: ldc           #31
271: invokevirtual #32
274: invokevirtual #35
277: iload         6
279: iconst_3
280: if_icmpne     287
283: iconst_1
284: goto          288
287: iconst_0
288: invokestatic  #36
291: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0397
Start line: 8606
End line: 0
Method source code: 
    public void test0397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0397");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        int int4 = helpFormatter0.defaultWidth;
        java.util.Comparator comparator5 = helpFormatter0.getOptionComparator();
        java.lang.String str6 = helpFormatter0.defaultOptPrefix;
        org.apache.commons.cli.Options options8 = null;
        try {
            helpFormatter0.printHelp("          ", options8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 74 + "'", int4 == 74);
        org.junit.Assert.assertNotNull(comparator5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "-" + "'", str6, "-");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #503
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: getfield      #110
48: istore_3
49: aload_1
50: invokevirtual #106
53: astore        4
55: aload_1
56: getfield      #63
59: astore        5
61: aconst_null
62: astore        6
64: aload_1
65: ldc           #114
67: aload         6
69: invokevirtual #50
72: ldc           #14
74: invokestatic  #15
77: goto          82
80: astore        7
82: new           #29
85: dup
86: invokespecial #30
89: ldc           #31
91: invokevirtual #32
94: iload_2
95: invokevirtual #33
98: ldc           #34
100: invokevirtual #32
103: iconst_1
104: invokevirtual #33
107: ldc           #31
109: invokevirtual #32
112: invokevirtual #35
115: iload_2
116: iconst_1
117: if_icmpne     124
120: iconst_1
121: goto          125
124: iconst_0
125: invokestatic  #36
128: new           #29
131: dup
132: invokespecial #30
135: ldc           #31
137: invokevirtual #32
140: iload_3
141: invokevirtual #33
144: ldc           #34
146: invokevirtual #32
149: bipush        74
151: invokevirtual #33
154: ldc           #31
156: invokevirtual #32
159: invokevirtual #35
162: iload_3
163: bipush        74
165: if_icmpne     172
168: iconst_1
169: goto          173
172: iconst_0
173: invokestatic  #36
176: aload         4
178: invokestatic  #51
181: new           #29
184: dup
185: invokespecial #30
188: ldc           #31
190: invokevirtual #32
193: aload         5
195: invokevirtual #32
198: ldc           #66
200: invokevirtual #32
203: invokevirtual #35
206: aload         5
208: ldc           #67
210: invokestatic  #53
213: return
Exception table:
from    to  target type
64    77    80   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0398
Start line: 8630
End line: 0
Method source code: 
    public void test0398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0398");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setArgName("arg");
        java.lang.String str8 = helpFormatter0.defaultSyntaxPrefix;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "usage: " + "'", str8, "usage: ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #504
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #10
36: invokevirtual #11
39: aload_1
40: ldc           #10
42: putfield      #55
45: aload_1
46: getfield      #63
49: astore_2
50: aload_1
51: ldc           #79
53: invokevirtual #146
56: aload_1
57: getfield      #97
60: astore_3
61: new           #29
64: dup
65: invokespecial #30
68: ldc           #31
70: invokevirtual #32
73: aload_2
74: invokevirtual #32
77: ldc           #68
79: invokevirtual #32
82: invokevirtual #35
85: aload_2
86: ldc           #10
88: invokestatic  #53
91: new           #29
94: dup
95: invokespecial #30
98: ldc           #31
100: invokevirtual #32
103: aload_3
104: invokevirtual #32
107: ldc           #99
109: invokevirtual #32
112: invokevirtual #35
115: aload_3
116: ldc           #12
118: invokestatic  #53
121: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0399
Start line: 8644
End line: 0
Method source code: 
    public void test0399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0399");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str3 = helpFormatter0.getOptPrefix();
        int int4 = helpFormatter0.defaultDescPad;
        helpFormatter0.setOptPrefix("");
        java.lang.String str7 = helpFormatter0.defaultArgName;
        java.io.PrintWriter printWriter8 = null;
        try {
            helpFormatter0.printWrapped(printWriter8, 10, (int) (short) 0, "\n");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "--" + "'", str2, "--");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "-" + "'", str3, "-");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 3 + "'", int4 == 3);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "arg" + "'", str7, "arg");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #505
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: getfield      #55
42: astore_3
43: aload_1
44: invokevirtual #123
47: astore        4
49: aload_1
50: getfield      #76
53: istore        5
55: aload_1
56: ldc           #10
58: invokevirtual #11
61: aload_1
62: getfield      #77
65: astore        6
67: aconst_null
68: astore        7
70: aload_1
71: aload         7
73: bipush        10
75: iconst_0
76: ldc           #65
78: invokevirtual #61
81: ldc           #14
83: invokestatic  #15
86: goto          91
89: astore        8
91: new           #29
94: dup
95: invokespecial #30
98: ldc           #31
100: invokevirtual #32
103: iload_2
104: invokevirtual #33
107: ldc           #34
109: invokevirtual #32
112: iconst_1
113: invokevirtual #33
116: ldc           #31
118: invokevirtual #32
121: invokevirtual #35
124: iload_2
125: iconst_1
126: if_icmpne     133
129: iconst_1
130: goto          134
133: iconst_0
134: invokestatic  #36
137: new           #29
140: dup
141: invokespecial #30
144: ldc           #31
146: invokevirtual #32
149: aload_3
150: invokevirtual #32
153: ldc           #52
155: invokevirtual #32
158: invokevirtual #35
161: aload_3
162: ldc           #44
164: invokestatic  #53
167: new           #29
170: dup
171: invokespecial #30
174: ldc           #31
176: invokevirtual #32
179: aload         4
181: invokevirtual #32
184: ldc           #66
186: invokevirtual #32
189: invokevirtual #35
192: aload         4
194: ldc           #67
196: invokestatic  #53
199: new           #29
202: dup
203: invokespecial #30
206: ldc           #31
208: invokevirtual #32
211: iload         5
213: invokevirtual #33
216: ldc           #34
218: invokevirtual #32
221: iconst_3
222: invokevirtual #33
225: ldc           #31
227: invokevirtual #32
230: invokevirtual #35
233: iload         5
235: iconst_3
236: if_icmpne     243
239: iconst_1
240: goto          244
243: iconst_0
244: invokestatic  #36
247: new           #29
250: dup
251: invokespecial #30
254: ldc           #31
256: invokevirtual #32
259: aload         6
261: invokevirtual #32
264: ldc           #78
266: invokevirtual #32
269: invokevirtual #35
272: aload         6
274: ldc           #79
276: invokestatic  #53
279: return
Exception table:
from    to  target type
70    86    89   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0400
Start line: 8670
End line: 0
Method source code: 
    public void test0400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0400");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str3 = helpFormatter0.getOptPrefix();
        java.util.Comparator comparator4 = helpFormatter0.optionComparator;
        java.lang.String str5 = helpFormatter0.getOptPrefix();
        helpFormatter0.setLongOptSeparator("                                                                                                    ");
        org.apache.commons.cli.Options options9 = null;
        try {
            helpFormatter0.printHelp("hi!", options9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "--" + "'", str2, "--");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "-" + "'", str3, "-");
        org.junit.Assert.assertNotNull(comparator4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "-" + "'", str5, "-");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #506
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: getfield      #55
42: astore_3
43: aload_1
44: invokevirtual #123
47: astore        4
49: aload_1
50: getfield      #47
53: astore        5
55: aload_1
56: invokevirtual #123
59: astore        6
61: aload_1
62: ldc           #240
64: invokevirtual #91
67: aconst_null
68: astore        7
70: aload_1
71: ldc           #25
73: aload         7
75: invokevirtual #50
78: ldc           #14
80: invokestatic  #15
83: goto          88
86: astore        8
88: new           #29
91: dup
92: invokespecial #30
95: ldc           #31
97: invokevirtual #32
100: iload_2
101: invokevirtual #33
104: ldc           #34
106: invokevirtual #32
109: iconst_1
110: invokevirtual #33
113: ldc           #31
115: invokevirtual #32
118: invokevirtual #35
121: iload_2
122: iconst_1
123: if_icmpne     130
126: iconst_1
127: goto          131
130: iconst_0
131: invokestatic  #36
134: new           #29
137: dup
138: invokespecial #30
141: ldc           #31
143: invokevirtual #32
146: aload_3
147: invokevirtual #32
150: ldc           #52
152: invokevirtual #32
155: invokevirtual #35
158: aload_3
159: ldc           #44
161: invokestatic  #53
164: new           #29
167: dup
168: invokespecial #30
171: ldc           #31
173: invokevirtual #32
176: aload         4
178: invokevirtual #32
181: ldc           #66
183: invokevirtual #32
186: invokevirtual #35
189: aload         4
191: ldc           #67
193: invokestatic  #53
196: aload         5
198: invokestatic  #51
201: new           #29
204: dup
205: invokespecial #30
208: ldc           #31
210: invokevirtual #32
213: aload         6
215: invokevirtual #32
218: ldc           #66
220: invokevirtual #32
223: invokevirtual #35
226: aload         6
228: ldc           #67
230: invokestatic  #53
233: return
Exception table:
from    to  target type
70    83    86   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0401
Start line: 8696
End line: 0
Method source code: 
    public void test0401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0401");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        java.lang.String str6 = helpFormatter0.rtrim("");
        int int7 = helpFormatter0.getDescPadding();
        int int8 = helpFormatter0.getDescPadding();
        int int9 = helpFormatter0.getDescPadding();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 3 + "'", int7 == 3);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 3 + "'", int8 == 3);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 3 + "'", int9 == 3);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #507
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: getfield      #63
48: astore_3
49: aload_1
50: ldc           #10
52: invokevirtual #64
55: astore        4
57: aload_1
58: invokevirtual #118
61: istore        5
63: aload_1
64: invokevirtual #118
67: istore        6
69: aload_1
70: invokevirtual #118
73: istore        7
75: new           #29
78: dup
79: invokespecial #30
82: ldc           #31
84: invokevirtual #32
87: iload_2
88: invokevirtual #33
91: ldc           #34
93: invokevirtual #32
96: iconst_1
97: invokevirtual #33
100: ldc           #31
102: invokevirtual #32
105: invokevirtual #35
108: iload_2
109: iconst_1
110: if_icmpne     117
113: iconst_1
114: goto          118
117: iconst_0
118: invokestatic  #36
121: new           #29
124: dup
125: invokespecial #30
128: ldc           #31
130: invokevirtual #32
133: aload_3
134: invokevirtual #32
137: ldc           #66
139: invokevirtual #32
142: invokevirtual #35
145: aload_3
146: ldc           #67
148: invokestatic  #53
151: new           #29
154: dup
155: invokespecial #30
158: ldc           #31
160: invokevirtual #32
163: aload         4
165: invokevirtual #32
168: ldc           #68
170: invokevirtual #32
173: invokevirtual #35
176: aload         4
178: ldc           #10
180: invokestatic  #53
183: new           #29
186: dup
187: invokespecial #30
190: ldc           #31
192: invokevirtual #32
195: iload         5
197: invokevirtual #33
200: ldc           #34
202: invokevirtual #32
205: iconst_3
206: invokevirtual #33
209: ldc           #31
211: invokevirtual #32
214: invokevirtual #35
217: iload         5
219: iconst_3
220: if_icmpne     227
223: iconst_1
224: goto          228
227: iconst_0
228: invokestatic  #36
231: new           #29
234: dup
235: invokespecial #30
238: ldc           #31
240: invokevirtual #32
243: iload         6
245: invokevirtual #33
248: ldc           #34
250: invokevirtual #32
253: iconst_3
254: invokevirtual #33
257: ldc           #31
259: invokevirtual #32
262: invokevirtual #35
265: iload         6
267: iconst_3
268: if_icmpne     275
271: iconst_1
272: goto          276
275: iconst_0
276: invokestatic  #36
279: new           #29
282: dup
283: invokespecial #30
286: ldc           #31
288: invokevirtual #32
291: iload         7
293: invokevirtual #33
296: ldc           #34
298: invokevirtual #32
301: iconst_3
302: invokevirtual #33
305: ldc           #31
307: invokevirtual #32
310: invokevirtual #35
313: iload         7
315: iconst_3
316: if_icmpne     323
319: iconst_1
320: goto          324
323: iconst_0
324: invokestatic  #36
327: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0402
Start line: 8716
End line: 0
Method source code: 
    public void test0402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0402");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.getArgName();
        java.lang.String str5 = helpFormatter0.getLongOptSeparator();
        helpFormatter0.setDescPadding(74);
        org.apache.commons.cli.Options options10 = null;
        try {
            helpFormatter0.printHelp("arg", "                                ", options10, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "arg" + "'", str4, "arg");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + " " + "'", str5, " ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #508
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: invokevirtual #104
48: astore_3
49: aload_1
50: invokevirtual #86
53: astore        4
55: aload_1
56: bipush        74
58: invokevirtual #38
61: aconst_null
62: astore        5
64: aload_1
65: ldc           #79
67: ldc_w         #456
70: aload         5
72: ldc           #10
74: invokevirtual #13
77: ldc           #14
79: invokestatic  #15
82: goto          87
85: astore        6
87: new           #29
90: dup
91: invokespecial #30
94: ldc           #31
96: invokevirtual #32
99: iload_2
100: invokevirtual #33
103: ldc           #34
105: invokevirtual #32
108: iconst_1
109: invokevirtual #33
112: ldc           #31
114: invokevirtual #32
117: invokevirtual #35
120: iload_2
121: iconst_1
122: if_icmpne     129
125: iconst_1
126: goto          130
129: iconst_0
130: invokestatic  #36
133: new           #29
136: dup
137: invokespecial #30
140: ldc           #31
142: invokevirtual #32
145: aload_3
146: invokevirtual #32
149: ldc           #78
151: invokevirtual #32
154: invokevirtual #35
157: aload_3
158: ldc           #79
160: invokestatic  #53
163: new           #29
166: dup
167: invokespecial #30
170: ldc           #31
172: invokevirtual #32
175: aload         4
177: invokevirtual #32
180: ldc           #88
182: invokevirtual #32
185: invokevirtual #35
188: aload         4
190: ldc           #24
192: invokestatic  #53
195: return
Exception table:
from    to  target type
64    82    85   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0403
Start line: 8739
End line: 0
Method source code: 
    public void test0403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0403");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        java.lang.String str6 = helpFormatter0.defaultNewLine;
        helpFormatter0.setDescPadding(10);
        java.lang.String str9 = helpFormatter0.defaultLongOptPrefix;
        java.io.PrintWriter printWriter10 = null;
        try {
            helpFormatter0.printWrapped(printWriter10, 97, " ");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "--" + "'", str9, "--");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #509
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: bipush        10
47: invokevirtual #38
50: aload_1
51: getfield      #23
54: astore_3
55: aload_1
56: bipush        10
58: invokevirtual #38
61: aload_1
62: getfield      #55
65: astore        4
67: aconst_null
68: astore        5
70: aload_1
71: aload         5
73: bipush        97
75: ldc           #24
77: invokevirtual #82
80: ldc           #14
82: invokestatic  #15
85: goto          90
88: astore        6
90: new           #29
93: dup
94: invokespecial #30
97: ldc           #31
99: invokevirtual #32
102: iload_2
103: invokevirtual #33
106: ldc           #34
108: invokevirtual #32
111: iconst_1
112: invokevirtual #33
115: ldc           #31
117: invokevirtual #32
120: invokevirtual #35
123: iload_2
124: iconst_1
125: if_icmpne     132
128: iconst_1
129: goto          133
132: iconst_0
133: invokestatic  #36
136: new           #29
139: dup
140: invokespecial #30
143: ldc           #31
145: invokevirtual #32
148: aload_3
149: invokevirtual #32
152: ldc           #68
154: invokevirtual #32
157: invokevirtual #35
160: aload_3
161: ldc           #10
163: invokestatic  #53
166: new           #29
169: dup
170: invokespecial #30
173: ldc           #31
175: invokevirtual #32
178: aload         4
180: invokevirtual #32
183: ldc           #52
185: invokevirtual #32
188: invokevirtual #35
191: aload         4
193: ldc           #44
195: invokestatic  #53
198: return
Exception table:
from    to  target type
70    85    88   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0404
Start line: 8763
End line: 0
Method source code: 
    public void test0404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0404");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.util.Comparator comparator1 = helpFormatter0.optionComparator;
        java.lang.String str2 = helpFormatter0.getLongOptPrefix();
        helpFormatter0.setLongOptPrefix("");
        int int5 = helpFormatter0.getDescPadding();
        java.lang.String str6 = helpFormatter0.defaultArgName;
        org.junit.Assert.assertNotNull(comparator1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "--" + "'", str2, "--");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 3 + "'", int5 == 3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "arg" + "'", str6, "arg");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #510
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: getfield      #47
37: astore_2
38: aload_1
39: invokevirtual #48
42: astore_3
43: aload_1
44: ldc           #10
46: invokevirtual #49
49: aload_1
50: invokevirtual #118
53: istore        4
55: aload_1
56: getfield      #77
59: astore        5
61: aload_2
62: invokestatic  #51
65: new           #29
68: dup
69: invokespecial #30
72: ldc           #31
74: invokevirtual #32
77: aload_3
78: invokevirtual #32
81: ldc           #52
83: invokevirtual #32
86: invokevirtual #35
89: aload_3
90: ldc           #44
92: invokestatic  #53
95: new           #29
98: dup
99: invokespecial #30
102: ldc           #31
104: invokevirtual #32
107: iload         4
109: invokevirtual #33
112: ldc           #34
114: invokevirtual #32
117: iconst_3
118: invokevirtual #33
121: ldc           #31
123: invokevirtual #32
126: invokevirtual #35
129: iload         4
131: iconst_3
132: if_icmpne     139
135: iconst_1
136: goto          140
139: iconst_0
140: invokestatic  #36
143: new           #29
146: dup
147: invokespecial #30
150: ldc           #31
152: invokevirtual #32
155: aload         5
157: invokevirtual #32
160: ldc           #78
162: invokevirtual #32
165: invokevirtual #35
168: aload         5
170: ldc           #79
172: invokestatic  #53
175: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0405
Start line: 8779
End line: 0
Method source code: 
    public void test0405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0405");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setLongOptPrefix(" ");
        java.lang.String str7 = helpFormatter0.getLongOptPrefix();
        helpFormatter0.setLeftPadding((int) ' ');
        int int10 = helpFormatter0.getLeftPadding();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + " " + "'", str7, " ");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 32 + "'", int10 == 32);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #511
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: getfield      #63
48: astore_3
49: aload_1
50: ldc           #24
52: invokevirtual #49
55: aload_1
56: invokevirtual #48
59: astore        4
61: aload_1
62: bipush        32
64: invokevirtual #193
67: aload_1
68: invokevirtual #22
71: istore        5
73: new           #29
76: dup
77: invokespecial #30
80: ldc           #31
82: invokevirtual #32
85: iload_2
86: invokevirtual #33
89: ldc           #34
91: invokevirtual #32
94: iconst_1
95: invokevirtual #33
98: ldc           #31
100: invokevirtual #32
103: invokevirtual #35
106: iload_2
107: iconst_1
108: if_icmpne     115
111: iconst_1
112: goto          116
115: iconst_0
116: invokestatic  #36
119: new           #29
122: dup
123: invokespecial #30
126: ldc           #31
128: invokevirtual #32
131: aload_3
132: invokevirtual #32
135: ldc           #66
137: invokevirtual #32
140: invokevirtual #35
143: aload_3
144: ldc           #67
146: invokestatic  #53
149: new           #29
152: dup
153: invokespecial #30
156: ldc           #31
158: invokevirtual #32
161: aload         4
163: invokevirtual #32
166: ldc           #88
168: invokevirtual #32
171: invokevirtual #35
174: aload         4
176: ldc           #24
178: invokestatic  #53
181: new           #29
184: dup
185: invokespecial #30
188: ldc           #31
190: invokevirtual #32
193: iload         5
195: invokevirtual #33
198: ldc           #34
200: invokevirtual #32
203: bipush        32
205: invokevirtual #33
208: ldc           #31
210: invokevirtual #32
213: invokevirtual #35
216: iload         5
218: bipush        32
220: if_icmpne     227
223: iconst_1
224: goto          228
227: iconst_0
228: invokestatic  #36
231: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0406
Start line: 8797
End line: 0
Method source code: 
    public void test0406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0406");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        java.lang.String str6 = helpFormatter0.rtrim("");
        java.lang.String str8 = helpFormatter0.rtrim("-");
        helpFormatter0.defaultOptPrefix = "--";
        helpFormatter0.defaultDescPad = (short) 1;
        helpFormatter0.setNewLine("                                                                                                 ");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "-" + "'", str8, "-");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #512
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: getfield      #63
48: astore_3
49: aload_1
50: ldc           #10
52: invokevirtual #64
55: astore        4
57: aload_1
58: ldc           #67
60: invokevirtual #64
63: astore        5
65: aload_1
66: ldc           #44
68: putfield      #63
71: aload_1
72: iconst_1
73: putfield      #76
76: aload_1
77: ldc           #141
79: invokevirtual #131
82: new           #29
85: dup
86: invokespecial #30
89: ldc           #31
91: invokevirtual #32
94: iload_2
95: invokevirtual #33
98: ldc           #34
100: invokevirtual #32
103: iconst_1
104: invokevirtual #33
107: ldc           #31
109: invokevirtual #32
112: invokevirtual #35
115: iload_2
116: iconst_1
117: if_icmpne     124
120: iconst_1
121: goto          125
124: iconst_0
125: invokestatic  #36
128: new           #29
131: dup
132: invokespecial #30
135: ldc           #31
137: invokevirtual #32
140: aload_3
141: invokevirtual #32
144: ldc           #66
146: invokevirtual #32
149: invokevirtual #35
152: aload_3
153: ldc           #67
155: invokestatic  #53
158: new           #29
161: dup
162: invokespecial #30
165: ldc           #31
167: invokevirtual #32
170: aload         4
172: invokevirtual #32
175: ldc           #68
177: invokevirtual #32
180: invokevirtual #35
183: aload         4
185: ldc           #10
187: invokestatic  #53
190: new           #29
193: dup
194: invokespecial #30
197: ldc           #31
199: invokevirtual #32
202: aload         5
204: invokevirtual #32
207: ldc           #66
209: invokevirtual #32
212: invokevirtual #35
215: aload         5
217: ldc           #67
219: invokestatic  #53
222: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0407
Start line: 8816
End line: 0
Method source code: 
    public void test0407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0407");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.defaultLongOptPrefix;
        int int6 = helpFormatter0.findWrapPos("", 100, (int) (byte) 0);
        helpFormatter0.defaultNewLine = "          ";
        java.lang.String str9 = helpFormatter0.getArgName();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "--" + "'", str2, "--");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "arg" + "'", str9, "arg");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #513
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: getfield      #55
42: astore_3
43: aload_1
44: ldc           #10
46: bipush        100
48: iconst_0
49: invokevirtual #93
52: istore        4
54: aload_1
55: ldc           #114
57: putfield      #23
60: aload_1
61: invokevirtual #104
64: astore        5
66: new           #29
69: dup
70: invokespecial #30
73: ldc           #31
75: invokevirtual #32
78: iload_2
79: invokevirtual #33
82: ldc           #34
84: invokevirtual #32
87: iconst_1
88: invokevirtual #33
91: ldc           #31
93: invokevirtual #32
96: invokevirtual #35
99: iload_2
100: iconst_1
101: if_icmpne     108
104: iconst_1
105: goto          109
108: iconst_0
109: invokestatic  #36
112: new           #29
115: dup
116: invokespecial #30
119: ldc           #31
121: invokevirtual #32
124: aload_3
125: invokevirtual #32
128: ldc           #52
130: invokevirtual #32
133: invokevirtual #35
136: aload_3
137: ldc           #44
139: invokestatic  #53
142: new           #29
145: dup
146: invokespecial #30
149: ldc           #31
151: invokevirtual #32
154: iload         4
156: invokevirtual #33
159: ldc           #34
161: invokevirtual #32
164: iconst_m1
165: invokevirtual #33
168: ldc           #31
170: invokevirtual #32
173: invokevirtual #35
176: iload         4
178: iconst_m1
179: if_icmpne     186
182: iconst_1
183: goto          187
186: iconst_0
187: invokestatic  #36
190: new           #29
193: dup
194: invokespecial #30
197: ldc           #31
199: invokevirtual #32
202: aload         5
204: invokevirtual #32
207: ldc           #78
209: invokevirtual #32
212: invokevirtual #35
215: aload         5
217: ldc           #79
219: invokestatic  #53
222: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0408
Start line: 8832
End line: 0
Method source code: 
    public void test0408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0408");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        java.lang.String str6 = helpFormatter0.defaultNewLine;
        helpFormatter0.setDescPadding(10);
        int int9 = helpFormatter0.defaultLeftPad;
        int int10 = helpFormatter0.getLeftPadding();
        helpFormatter0.setLongOptSeparator("                                                                                                    ");
        java.lang.String str13 = helpFormatter0.defaultLongOptPrefix;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "--" + "'", str13, "--");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #514
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: bipush        10
47: invokevirtual #38
50: aload_1
51: getfield      #23
54: astore_3
55: aload_1
56: bipush        10
58: invokevirtual #38
61: aload_1
62: getfield      #60
65: istore        4
67: aload_1
68: invokevirtual #22
71: istore        5
73: aload_1
74: ldc           #240
76: invokevirtual #91
79: aload_1
80: getfield      #55
83: astore        6
85: new           #29
88: dup
89: invokespecial #30
92: ldc           #31
94: invokevirtual #32
97: iload_2
98: invokevirtual #33
101: ldc           #34
103: invokevirtual #32
106: iconst_1
107: invokevirtual #33
110: ldc           #31
112: invokevirtual #32
115: invokevirtual #35
118: iload_2
119: iconst_1
120: if_icmpne     127
123: iconst_1
124: goto          128
127: iconst_0
128: invokestatic  #36
131: new           #29
134: dup
135: invokespecial #30
138: ldc           #31
140: invokevirtual #32
143: aload_3
144: invokevirtual #32
147: ldc           #68
149: invokevirtual #32
152: invokevirtual #35
155: aload_3
156: ldc           #10
158: invokestatic  #53
161: new           #29
164: dup
165: invokespecial #30
168: ldc           #31
170: invokevirtual #32
173: iload         4
175: invokevirtual #33
178: ldc           #34
180: invokevirtual #32
183: iconst_1
184: invokevirtual #33
187: ldc           #31
189: invokevirtual #32
192: invokevirtual #35
195: iload         4
197: iconst_1
198: if_icmpne     205
201: iconst_1
202: goto          206
205: iconst_0
206: invokestatic  #36
209: new           #29
212: dup
213: invokespecial #30
216: ldc           #31
218: invokevirtual #32
221: iload         5
223: invokevirtual #33
226: ldc           #34
228: invokevirtual #32
231: iconst_1
232: invokevirtual #33
235: ldc           #31
237: invokevirtual #32
240: invokevirtual #35
243: iload         5
245: iconst_1
246: if_icmpne     253
249: iconst_1
250: goto          254
253: iconst_0
254: invokestatic  #36
257: new           #29
260: dup
261: invokespecial #30
264: ldc           #31
266: invokevirtual #32
269: aload         6
271: invokevirtual #32
274: ldc           #52
276: invokevirtual #32
279: invokevirtual #35
282: aload         6
284: ldc           #44
286: invokestatic  #53
289: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0409
Start line: 8853
End line: 0
Method source code: 
    public void test0409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0409");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        int int9 = helpFormatter0.findWrapPos(" ", (int) (byte) 10, (int) '4');
        helpFormatter0.defaultOptPrefix = "arg";
        int int12 = helpFormatter0.defaultLeftPad;
        java.io.PrintWriter printWriter13 = null;
        try {
            helpFormatter0.printWrapped(printWriter13, (int) (byte) 1, (int) ' ', "                                                                                                    ");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #515
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #10
36: invokevirtual #11
39: aload_1
40: ldc           #10
42: putfield      #55
45: aload_1
46: getfield      #55
49: astore_2
50: aload_1
51: ldc           #24
53: bipush        10
55: bipush        52
57: invokevirtual #93
60: istore_3
61: aload_1
62: ldc           #79
64: putfield      #63
67: aload_1
68: getfield      #60
71: istore        4
73: aconst_null
74: astore        5
76: aload_1
77: aload         5
79: iconst_1
80: bipush        32
82: ldc           #240
84: invokevirtual #61
87: ldc           #14
89: invokestatic  #15
92: goto          97
95: astore        6
97: new           #29
100: dup
101: invokespecial #30
104: ldc           #31
106: invokevirtual #32
109: aload_2
110: invokevirtual #32
113: ldc           #68
115: invokevirtual #32
118: invokevirtual #35
121: aload_2
122: ldc           #10
124: invokestatic  #53
127: new           #29
130: dup
131: invokespecial #30
134: ldc           #31
136: invokevirtual #32
139: iload_3
140: invokevirtual #33
143: ldc           #34
145: invokevirtual #32
148: iconst_m1
149: invokevirtual #33
152: ldc           #31
154: invokevirtual #32
157: invokevirtual #35
160: iload_3
161: iconst_m1
162: if_icmpne     169
165: iconst_1
166: goto          170
169: iconst_0
170: invokestatic  #36
173: new           #29
176: dup
177: invokespecial #30
180: ldc           #31
182: invokevirtual #32
185: iload         4
187: invokevirtual #33
190: ldc           #34
192: invokevirtual #32
195: iconst_1
196: invokevirtual #33
199: ldc           #31
201: invokevirtual #32
204: invokevirtual #35
207: iload         4
209: iconst_1
210: if_icmpne     217
213: iconst_1
214: goto          218
217: iconst_0
218: invokestatic  #36
221: return
Exception table:
from    to  target type
76    92    95   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0410
Start line: 8877
End line: 0
Method source code: 
    public void test0410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0410");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        java.lang.String str6 = helpFormatter0.rtrim("");
        java.lang.String str8 = helpFormatter0.rtrim("-");
        helpFormatter0.defaultOptPrefix = "--";
        helpFormatter0.defaultDescPad = 0;
        int int13 = helpFormatter0.getWidth();
        helpFormatter0.setOptPrefix(" ");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "-" + "'", str8, "-");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 74 + "'", int13 == 74);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #516
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: getfield      #63
48: astore_3
49: aload_1
50: ldc           #10
52: invokevirtual #64
55: astore        4
57: aload_1
58: ldc           #67
60: invokevirtual #64
63: astore        5
65: aload_1
66: ldc           #44
68: putfield      #63
71: aload_1
72: iconst_0
73: putfield      #76
76: aload_1
77: invokevirtual #129
80: istore        6
82: aload_1
83: ldc           #24
85: invokevirtual #11
88: new           #29
91: dup
92: invokespecial #30
95: ldc           #31
97: invokevirtual #32
100: iload_2
101: invokevirtual #33
104: ldc           #34
106: invokevirtual #32
109: iconst_1
110: invokevirtual #33
113: ldc           #31
115: invokevirtual #32
118: invokevirtual #35
121: iload_2
122: iconst_1
123: if_icmpne     130
126: iconst_1
127: goto          131
130: iconst_0
131: invokestatic  #36
134: new           #29
137: dup
138: invokespecial #30
141: ldc           #31
143: invokevirtual #32
146: aload_3
147: invokevirtual #32
150: ldc           #66
152: invokevirtual #32
155: invokevirtual #35
158: aload_3
159: ldc           #67
161: invokestatic  #53
164: new           #29
167: dup
168: invokespecial #30
171: ldc           #31
173: invokevirtual #32
176: aload         4
178: invokevirtual #32
181: ldc           #68
183: invokevirtual #32
186: invokevirtual #35
189: aload         4
191: ldc           #10
193: invokestatic  #53
196: new           #29
199: dup
200: invokespecial #30
203: ldc           #31
205: invokevirtual #32
208: aload         5
210: invokevirtual #32
213: ldc           #66
215: invokevirtual #32
218: invokevirtual #35
221: aload         5
223: ldc           #67
225: invokestatic  #53
228: new           #29
231: dup
232: invokespecial #30
235: ldc           #31
237: invokevirtual #32
240: iload         6
242: invokevirtual #33
245: ldc           #34
247: invokevirtual #32
250: bipush        74
252: invokevirtual #33
255: ldc           #31
257: invokevirtual #32
260: invokevirtual #35
263: iload         6
265: bipush        74
267: if_icmpne     274
270: iconst_1
271: goto          275
274: iconst_0
275: invokestatic  #36
278: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0411
Start line: 8898
End line: 0
Method source code: 
    public void test0411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0411");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setLongOptPrefix(" ");
        helpFormatter0.defaultDescPad = (short) 10;
        helpFormatter0.setLongOptSeparator("");
        org.apache.commons.cli.Options options14 = null;
        try {
            helpFormatter0.printHelp((int) (byte) 100, "hi!", "                                                    ", options14, "                                                    ", true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #517
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: getfield      #63
48: astore_3
49: aload_1
50: ldc           #24
52: invokevirtual #49
55: aload_1
56: bipush        10
58: putfield      #76
61: aload_1
62: ldc           #10
64: invokevirtual #91
67: aconst_null
68: astore        4
70: aload_1
71: bipush        100
73: ldc           #25
75: ldc_w         #313
78: aload         4
80: ldc_w         #313
83: iconst_1
84: invokevirtual #26
87: ldc           #14
89: invokestatic  #15
92: goto          97
95: astore        5
97: new           #29
100: dup
101: invokespecial #30
104: ldc           #31
106: invokevirtual #32
109: iload_2
110: invokevirtual #33
113: ldc           #34
115: invokevirtual #32
118: iconst_1
119: invokevirtual #33
122: ldc           #31
124: invokevirtual #32
127: invokevirtual #35
130: iload_2
131: iconst_1
132: if_icmpne     139
135: iconst_1
136: goto          140
139: iconst_0
140: invokestatic  #36
143: new           #29
146: dup
147: invokespecial #30
150: ldc           #31
152: invokevirtual #32
155: aload_3
156: invokevirtual #32
159: ldc           #66
161: invokevirtual #32
164: invokevirtual #35
167: aload_3
168: ldc           #67
170: invokestatic  #53
173: return
Exception table:
from    to  target type
70    92    95   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0412
Start line: 8921
End line: 0
Method source code: 
    public void test0412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0412");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        helpFormatter0.defaultArgName = "hi!";
        java.util.Comparator comparator8 = helpFormatter0.getOptionComparator();
        helpFormatter0.setDescPadding(0);
        java.lang.String str11 = helpFormatter0.getArgName();
        java.lang.String str12 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str14 = helpFormatter0.createPadding(0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(comparator8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "--" + "'", str12, "--");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #518
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: bipush        10
47: invokevirtual #38
50: aload_1
51: ldc           #25
53: putfield      #77
56: aload_1
57: invokevirtual #106
60: astore_3
61: aload_1
62: iconst_0
63: invokevirtual #38
66: aload_1
67: invokevirtual #104
70: astore        4
72: aload_1
73: getfield      #55
76: astore        5
78: aload_1
79: iconst_0
80: invokevirtual #108
83: astore        6
85: new           #29
88: dup
89: invokespecial #30
92: ldc           #31
94: invokevirtual #32
97: iload_2
98: invokevirtual #33
101: ldc           #34
103: invokevirtual #32
106: iconst_1
107: invokevirtual #33
110: ldc           #31
112: invokevirtual #32
115: invokevirtual #35
118: iload_2
119: iconst_1
120: if_icmpne     127
123: iconst_1
124: goto          128
127: iconst_0
128: invokestatic  #36
131: aload_3
132: invokestatic  #51
135: new           #29
138: dup
139: invokespecial #30
142: ldc           #31
144: invokevirtual #32
147: aload         4
149: invokevirtual #32
152: ldc_w         #372
155: invokevirtual #32
158: invokevirtual #35
161: aload         4
163: ldc           #25
165: invokestatic  #53
168: new           #29
171: dup
172: invokespecial #30
175: ldc           #31
177: invokevirtual #32
180: aload         5
182: invokevirtual #32
185: ldc           #52
187: invokevirtual #32
190: invokevirtual #35
193: aload         5
195: ldc           #44
197: invokestatic  #53
200: new           #29
203: dup
204: invokespecial #30
207: ldc           #31
209: invokevirtual #32
212: aload         6
214: invokevirtual #32
217: ldc           #68
219: invokevirtual #32
222: invokevirtual #35
225: aload         6
227: ldc           #10
229: invokestatic  #53
232: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0413
Start line: 8942
End line: 0
Method source code: 
    public void test0413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0413");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        java.lang.String str6 = helpFormatter0.getOptPrefix();
        java.lang.String str7 = helpFormatter0.getNewLine();
        helpFormatter0.defaultOptPrefix = "";
        helpFormatter0.defaultLeftPad = (short) 10;
        int int12 = helpFormatter0.getWidth();
        java.lang.String str13 = helpFormatter0.defaultSyntaxPrefix;
        helpFormatter0.defaultWidth = '#';
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "-" + "'", str6, "-");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 74 + "'", int12 == 74);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "usage: " + "'", str13, "usage: ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #519
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: bipush        10
47: invokevirtual #38
50: aload_1
51: invokevirtual #123
54: astore_3
55: aload_1
56: invokevirtual #72
59: astore        4
61: aload_1
62: ldc           #10
64: putfield      #63
67: aload_1
68: bipush        10
70: putfield      #60
73: aload_1
74: invokevirtual #129
77: istore        5
79: aload_1
80: getfield      #97
83: astore        6
85: aload_1
86: bipush        35
88: putfield      #110
91: new           #29
94: dup
95: invokespecial #30
98: ldc           #31
100: invokevirtual #32
103: iload_2
104: invokevirtual #33
107: ldc           #34
109: invokevirtual #32
112: iconst_1
113: invokevirtual #33
116: ldc           #31
118: invokevirtual #32
121: invokevirtual #35
124: iload_2
125: iconst_1
126: if_icmpne     133
129: iconst_1
130: goto          134
133: iconst_0
134: invokestatic  #36
137: new           #29
140: dup
141: invokespecial #30
144: ldc           #31
146: invokevirtual #32
149: aload_3
150: invokevirtual #32
153: ldc           #66
155: invokevirtual #32
158: invokevirtual #35
161: aload_3
162: ldc           #67
164: invokestatic  #53
167: new           #29
170: dup
171: invokespecial #30
174: ldc           #31
176: invokevirtual #32
179: aload         4
181: invokevirtual #32
184: ldc           #68
186: invokevirtual #32
189: invokevirtual #35
192: aload         4
194: ldc           #10
196: invokestatic  #53
199: new           #29
202: dup
203: invokespecial #30
206: ldc           #31
208: invokevirtual #32
211: iload         5
213: invokevirtual #33
216: ldc           #34
218: invokevirtual #32
221: bipush        74
223: invokevirtual #33
226: ldc           #31
228: invokevirtual #32
231: invokevirtual #35
234: iload         5
236: bipush        74
238: if_icmpne     245
241: iconst_1
242: goto          246
245: iconst_0
246: invokestatic  #36
249: new           #29
252: dup
253: invokespecial #30
256: ldc           #31
258: invokevirtual #32
261: aload         6
263: invokevirtual #32
266: ldc           #99
268: invokevirtual #32
271: invokevirtual #35
274: aload         6
276: ldc           #12
278: invokestatic  #53
281: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0414
Start line: 8964
End line: 0
Method source code: 
    public void test0414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0414");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.lang.String str1 = helpFormatter0.defaultSyntaxPrefix;
        int int2 = helpFormatter0.getWidth();
        java.lang.String str3 = helpFormatter0.defaultOptPrefix;
        java.lang.String str4 = helpFormatter0.defaultSyntaxPrefix;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "usage: " + "'", str1, "usage: ");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 74 + "'", int2 == 74);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "-" + "'", str3, "-");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "usage: " + "'", str4, "usage: ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #520
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: getfield      #97
37: astore_2
38: aload_1
39: invokevirtual #129
42: istore_3
43: aload_1
44: getfield      #63
47: astore        4
49: aload_1
50: getfield      #97
53: astore        5
55: new           #29
58: dup
59: invokespecial #30
62: ldc           #31
64: invokevirtual #32
67: aload_2
68: invokevirtual #32
71: ldc           #99
73: invokevirtual #32
76: invokevirtual #35
79: aload_2
80: ldc           #12
82: invokestatic  #53
85: new           #29
88: dup
89: invokespecial #30
92: ldc           #31
94: invokevirtual #32
97: iload_3
98: invokevirtual #33
101: ldc           #34
103: invokevirtual #32
106: bipush        74
108: invokevirtual #33
111: ldc           #31
113: invokevirtual #32
116: invokevirtual #35
119: iload_3
120: bipush        74
122: if_icmpne     129
125: iconst_1
126: goto          130
129: iconst_0
130: invokestatic  #36
133: new           #29
136: dup
137: invokespecial #30
140: ldc           #31
142: invokevirtual #32
145: aload         4
147: invokevirtual #32
150: ldc           #66
152: invokevirtual #32
155: invokevirtual #35
158: aload         4
160: ldc           #67
162: invokestatic  #53
165: new           #29
168: dup
169: invokespecial #30
172: ldc           #31
174: invokevirtual #32
177: aload         5
179: invokevirtual #32
182: ldc           #99
184: invokevirtual #32
187: invokevirtual #35
190: aload         5
192: ldc           #12
194: invokestatic  #53
197: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0415
Start line: 8979
End line: 0
Method source code: 
    public void test0415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0415");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        helpFormatter0.defaultArgName = "hi!";
        java.lang.String str9 = helpFormatter0.createPadding((int) (byte) 10);
        helpFormatter0.setSyntaxPrefix(" ");
        org.apache.commons.cli.Options options15 = null;
        try {
            helpFormatter0.printHelp(10, "                                                    ", "                                                                                                 ", options15, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "          " + "'", str9, "          ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #521
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: bipush        10
47: invokevirtual #38
50: aload_1
51: ldc           #25
53: putfield      #77
56: aload_1
57: bipush        10
59: invokevirtual #108
62: astore_3
63: aload_1
64: ldc           #24
66: invokevirtual #39
69: aconst_null
70: astore        4
72: aload_1
73: bipush        10
75: ldc_w         #313
78: ldc           #141
80: aload         4
82: ldc           #10
84: invokevirtual #45
87: ldc           #14
89: invokestatic  #15
92: goto          97
95: astore        5
97: new           #29
100: dup
101: invokespecial #30
104: ldc           #31
106: invokevirtual #32
109: iload_2
110: invokevirtual #33
113: ldc           #34
115: invokevirtual #32
118: iconst_1
119: invokevirtual #33
122: ldc           #31
124: invokevirtual #32
127: invokevirtual #35
130: iload_2
131: iconst_1
132: if_icmpne     139
135: iconst_1
136: goto          140
139: iconst_0
140: invokestatic  #36
143: new           #29
146: dup
147: invokespecial #30
150: ldc           #31
152: invokevirtual #32
155: aload_3
156: invokevirtual #32
159: ldc           #204
161: invokevirtual #32
164: invokevirtual #35
167: aload_3
168: ldc           #114
170: invokestatic  #53
173: return
Exception table:
from    to  target type
72    92    95   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0416
Start line: 9002
End line: 0
Method source code: 
    public void test0416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0416");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.util.Comparator comparator1 = helpFormatter0.optionComparator;
        java.lang.String str2 = helpFormatter0.getLongOptPrefix();
        helpFormatter0.defaultLongOptPrefix = "arg";
        int int5 = helpFormatter0.defaultDescPad;
        org.junit.Assert.assertNotNull(comparator1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "--" + "'", str2, "--");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 3 + "'", int5 == 3);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #522
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: getfield      #47
37: astore_2
38: aload_1
39: invokevirtual #48
42: astore_3
43: aload_1
44: ldc           #79
46: putfield      #55
49: aload_1
50: getfield      #76
53: istore        4
55: aload_2
56: invokestatic  #51
59: new           #29
62: dup
63: invokespecial #30
66: ldc           #31
68: invokevirtual #32
71: aload_3
72: invokevirtual #32
75: ldc           #52
77: invokevirtual #32
80: invokevirtual #35
83: aload_3
84: ldc           #44
86: invokestatic  #53
89: new           #29
92: dup
93: invokespecial #30
96: ldc           #31
98: invokevirtual #32
101: iload         4
103: invokevirtual #33
106: ldc           #34
108: invokevirtual #32
111: iconst_3
112: invokevirtual #33
115: ldc           #31
117: invokevirtual #32
120: invokevirtual #35
123: iload         4
125: iconst_3
126: if_icmpne     133
129: iconst_1
130: goto          134
133: iconst_0
134: invokestatic  #36
137: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0417
Start line: 9016
End line: 0
Method source code: 
    public void test0417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0417");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str3 = helpFormatter0.getOptPrefix();
        helpFormatter0.setNewLine("");
        java.lang.String str6 = helpFormatter0.defaultNewLine;
        java.lang.String str7 = helpFormatter0.defaultSyntaxPrefix;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "--" + "'", str2, "--");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "-" + "'", str3, "-");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "usage: " + "'", str7, "usage: ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #523
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: getfield      #55
42: astore_3
43: aload_1
44: invokevirtual #123
47: astore        4
49: aload_1
50: ldc           #10
52: invokevirtual #131
55: aload_1
56: getfield      #23
59: astore        5
61: aload_1
62: getfield      #97
65: astore        6
67: new           #29
70: dup
71: invokespecial #30
74: ldc           #31
76: invokevirtual #32
79: iload_2
80: invokevirtual #33
83: ldc           #34
85: invokevirtual #32
88: iconst_1
89: invokevirtual #33
92: ldc           #31
94: invokevirtual #32
97: invokevirtual #35
100: iload_2
101: iconst_1
102: if_icmpne     109
105: iconst_1
106: goto          110
109: iconst_0
110: invokestatic  #36
113: new           #29
116: dup
117: invokespecial #30
120: ldc           #31
122: invokevirtual #32
125: aload_3
126: invokevirtual #32
129: ldc           #52
131: invokevirtual #32
134: invokevirtual #35
137: aload_3
138: ldc           #44
140: invokestatic  #53
143: new           #29
146: dup
147: invokespecial #30
150: ldc           #31
152: invokevirtual #32
155: aload         4
157: invokevirtual #32
160: ldc           #66
162: invokevirtual #32
165: invokevirtual #35
168: aload         4
170: ldc           #67
172: invokestatic  #53
175: new           #29
178: dup
179: invokespecial #30
182: ldc           #31
184: invokevirtual #32
187: aload         5
189: invokevirtual #32
192: ldc           #68
194: invokevirtual #32
197: invokevirtual #35
200: aload         5
202: ldc           #10
204: invokestatic  #53
207: new           #29
210: dup
211: invokespecial #30
214: ldc           #31
216: invokevirtual #32
219: aload         6
221: invokevirtual #32
224: ldc           #99
226: invokevirtual #32
229: invokevirtual #35
232: aload         6
234: ldc           #12
236: invokestatic  #53
239: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0418
Start line: 9034
End line: 0
Method source code: 
    public void test0418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0418");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setLongOptPrefix(" ");
        org.apache.commons.cli.Options options10 = null;
        try {
            helpFormatter0.printHelp((int) (short) 100, "usage:", "", options10, "--");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #524
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: getfield      #63
48: astore_3
49: aload_1
50: ldc           #24
52: invokevirtual #49
55: aconst_null
56: astore        4
58: aload_1
59: bipush        100
61: ldc_w         #501
64: ldc           #10
66: aload         4
68: ldc           #44
70: invokevirtual #45
73: ldc           #14
75: invokestatic  #15
78: goto          83
81: astore        5
83: new           #29
86: dup
87: invokespecial #30
90: ldc           #31
92: invokevirtual #32
95: iload_2
96: invokevirtual #33
99: ldc           #34
101: invokevirtual #32
104: iconst_1
105: invokevirtual #33
108: ldc           #31
110: invokevirtual #32
113: invokevirtual #35
116: iload_2
117: iconst_1
118: if_icmpne     125
121: iconst_1
122: goto          126
125: iconst_0
126: invokestatic  #36
129: new           #29
132: dup
133: invokespecial #30
136: ldc           #31
138: invokevirtual #32
141: aload_3
142: invokevirtual #32
145: ldc           #66
147: invokevirtual #32
150: invokevirtual #35
153: aload_3
154: ldc           #67
156: invokestatic  #53
159: return
Exception table:
from    to  target type
58    78    81   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0419
Start line: 9055
End line: 0
Method source code: 
    public void test0419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0419");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultOptPrefix;
        int int6 = helpFormatter0.getDescPadding();
        java.lang.String str7 = helpFormatter0.getArgName();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 3 + "'", int6 == 3);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "arg" + "'", str7, "arg");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #525
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #10
36: invokevirtual #11
39: aload_1
40: ldc           #10
42: putfield      #55
45: aload_1
46: getfield      #63
49: astore_2
50: aload_1
51: invokevirtual #118
54: istore_3
55: aload_1
56: invokevirtual #104
59: astore        4
61: new           #29
64: dup
65: invokespecial #30
68: ldc           #31
70: invokevirtual #32
73: aload_2
74: invokevirtual #32
77: ldc           #68
79: invokevirtual #32
82: invokevirtual #35
85: aload_2
86: ldc           #10
88: invokestatic  #53
91: new           #29
94: dup
95: invokespecial #30
98: ldc           #31
100: invokevirtual #32
103: iload_3
104: invokevirtual #33
107: ldc           #34
109: invokevirtual #32
112: iconst_3
113: invokevirtual #33
116: ldc           #31
118: invokevirtual #32
121: invokevirtual #35
124: iload_3
125: iconst_3
126: if_icmpne     133
129: iconst_1
130: goto          134
133: iconst_0
134: invokestatic  #36
137: new           #29
140: dup
141: invokespecial #30
144: ldc           #31
146: invokevirtual #32
149: aload         4
151: invokevirtual #32
154: ldc           #78
156: invokevirtual #32
159: invokevirtual #35
162: aload         4
164: ldc           #79
166: invokestatic  #53
169: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0420
Start line: 9070
End line: 0
Method source code: 
    public void test0420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0420");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setLongOptPrefix(" ");
        helpFormatter0.defaultDescPad = (short) 10;
        java.lang.String str9 = helpFormatter0.defaultArgName;
        helpFormatter0.setSyntaxPrefix("");
        helpFormatter0.defaultOptPrefix = "                                                                                                 ";
        helpFormatter0.setLongOptPrefix("          ");
        int int16 = helpFormatter0.getLeftPadding();
        org.apache.commons.cli.HelpFormatter helpFormatter17 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter17.setOptPrefix("");
        helpFormatter17.defaultLongOptPrefix = "";
        java.lang.String str22 = helpFormatter17.defaultLongOptPrefix;
        java.lang.String str23 = helpFormatter17.getNewLine();
        java.lang.String str24 = helpFormatter17.defaultOptPrefix;
        helpFormatter17.setDescPadding(74);
        helpFormatter17.setLeftPadding(52);
        int int29 = helpFormatter17.defaultWidth;
        helpFormatter17.setDescPadding((int) (short) 0);
        java.util.Comparator comparator32 = helpFormatter17.getOptionComparator();
        helpFormatter0.setOptionComparator(comparator32);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "arg" + "'", str9, "arg");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "\n" + "'", str23, "\n");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 74 + "'", int29 == 74);
        org.junit.Assert.assertNotNull(comparator32);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #526
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: getfield      #63
48: astore_3
49: aload_1
50: ldc           #24
52: invokevirtual #49
55: aload_1
56: bipush        10
58: putfield      #76
61: aload_1
62: getfield      #77
65: astore        4
67: aload_1
68: ldc           #10
70: invokevirtual #39
73: aload_1
74: ldc           #141
76: putfield      #63
79: aload_1
80: ldc           #114
82: invokevirtual #49
85: aload_1
86: invokevirtual #22
89: istore        5
91: new           #8
94: dup
95: invokespecial #9
98: astore        6
100: aload         6
102: ldc           #10
104: invokevirtual #11
107: aload         6
109: ldc           #10
111: putfield      #55
114: aload         6
116: getfield      #55
119: astore        7
121: aload         6
123: invokevirtual #72
126: astore        8
128: aload         6
130: getfield      #63
133: astore        9
135: aload         6
137: bipush        74
139: invokevirtual #38
142: aload         6
144: bipush        52
146: invokevirtual #193
149: aload         6
151: getfield      #110
154: istore        10
156: aload         6
158: iconst_0
159: invokevirtual #38
162: aload         6
164: invokevirtual #106
167: astore        11
169: aload_1
170: aload         11
172: invokevirtual #152
175: new           #29
178: dup
179: invokespecial #30
182: ldc           #31
184: invokevirtual #32
187: iload_2
188: invokevirtual #33
191: ldc           #34
193: invokevirtual #32
196: iconst_1
197: invokevirtual #33
200: ldc           #31
202: invokevirtual #32
205: invokevirtual #35
208: iload_2
209: iconst_1
210: if_icmpne     217
213: iconst_1
214: goto          218
217: iconst_0
218: invokestatic  #36
221: new           #29
224: dup
225: invokespecial #30
228: ldc           #31
230: invokevirtual #32
233: aload_3
234: invokevirtual #32
237: ldc           #66
239: invokevirtual #32
242: invokevirtual #35
245: aload_3
246: ldc           #67
248: invokestatic  #53
251: new           #29
254: dup
255: invokespecial #30
258: ldc           #31
260: invokevirtual #32
263: aload         4
265: invokevirtual #32
268: ldc           #78
270: invokevirtual #32
273: invokevirtual #35
276: aload         4
278: ldc           #79
280: invokestatic  #53
283: new           #29
286: dup
287: invokespecial #30
290: ldc           #31
292: invokevirtual #32
295: iload         5
297: invokevirtual #33
300: ldc           #34
302: invokevirtual #32
305: iconst_1
306: invokevirtual #33
309: ldc           #31
311: invokevirtual #32
314: invokevirtual #35
317: iload         5
319: iconst_1
320: if_icmpne     327
323: iconst_1
324: goto          328
327: iconst_0
328: invokestatic  #36
331: new           #29
334: dup
335: invokespecial #30
338: ldc           #31
340: invokevirtual #32
343: aload         7
345: invokevirtual #32
348: ldc           #68
350: invokevirtual #32
353: invokevirtual #35
356: aload         7
358: ldc           #10
360: invokestatic  #53
363: new           #29
366: dup
367: invokespecial #30
370: ldc           #31
372: invokevirtual #32
375: aload         8
377: invokevirtual #32
380: ldc           #74
382: invokevirtual #32
385: invokevirtual #35
388: aload         8
390: ldc           #65
392: invokestatic  #53
395: new           #29
398: dup
399: invokespecial #30
402: ldc           #31
404: invokevirtual #32
407: aload         9
409: invokevirtual #32
412: ldc           #68
414: invokevirtual #32
417: invokevirtual #35
420: aload         9
422: ldc           #10
424: invokestatic  #53
427: new           #29
430: dup
431: invokespecial #30
434: ldc           #31
436: invokevirtual #32
439: iload         10
441: invokevirtual #33
444: ldc           #34
446: invokevirtual #32
449: bipush        74
451: invokevirtual #33
454: ldc           #31
456: invokevirtual #32
459: invokevirtual #35
462: iload         10
464: bipush        74
466: if_icmpne     473
469: iconst_1
470: goto          474
473: iconst_0
474: invokestatic  #36
477: aload         11
479: invokestatic  #51
482: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0421
Start line: 9108
End line: 0
Method source code: 
    public void test0421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0421");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.defaultDescPad = '4';
        helpFormatter0.setNewLine("");
        helpFormatter0.setLongOptPrefix(" ");
        java.lang.String str10 = helpFormatter0.getLongOptPrefix();
        java.lang.String str12 = helpFormatter0.createPadding(100);
        java.lang.String str13 = helpFormatter0.getLongOptPrefix();
        java.util.Comparator comparator14 = helpFormatter0.optionComparator;
        helpFormatter0.setLongOptPrefix("-");
        java.util.Comparator comparator17 = helpFormatter0.optionComparator;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + " " + "'", str10, " ");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "                                                                                                    " + "'", str12, "                                                                                                    ");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + " " + "'", str13, " ");
        org.junit.Assert.assertNotNull(comparator14);
        org.junit.Assert.assertNotNull(comparator17);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #527
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: bipush        52
47: putfield      #76
50: aload_1
51: ldc           #10
53: invokevirtual #131
56: aload_1
57: ldc           #24
59: invokevirtual #49
62: aload_1
63: invokevirtual #48
66: astore_3
67: aload_1
68: bipush        100
70: invokevirtual #108
73: astore        4
75: aload_1
76: invokevirtual #48
79: astore        5
81: aload_1
82: getfield      #47
85: astore        6
87: aload_1
88: ldc           #67
90: invokevirtual #49
93: aload_1
94: getfield      #47
97: astore        7
99: new           #29
102: dup
103: invokespecial #30
106: ldc           #31
108: invokevirtual #32
111: iload_2
112: invokevirtual #33
115: ldc           #34
117: invokevirtual #32
120: iconst_1
121: invokevirtual #33
124: ldc           #31
126: invokevirtual #32
129: invokevirtual #35
132: iload_2
133: iconst_1
134: if_icmpne     141
137: iconst_1
138: goto          142
141: iconst_0
142: invokestatic  #36
145: new           #29
148: dup
149: invokespecial #30
152: ldc           #31
154: invokevirtual #32
157: aload_3
158: invokevirtual #32
161: ldc           #88
163: invokevirtual #32
166: invokevirtual #35
169: aload_3
170: ldc           #24
172: invokestatic  #53
175: new           #29
178: dup
179: invokespecial #30
182: ldc           #31
184: invokevirtual #32
187: aload         4
189: invokevirtual #32
192: ldc_w         #299
195: invokevirtual #32
198: invokevirtual #35
201: aload         4
203: ldc           #240
205: invokestatic  #53
208: new           #29
211: dup
212: invokespecial #30
215: ldc           #31
217: invokevirtual #32
220: aload         5
222: invokevirtual #32
225: ldc           #88
227: invokevirtual #32
230: invokevirtual #35
233: aload         5
235: ldc           #24
237: invokestatic  #53
240: aload         6
242: invokestatic  #51
245: aload         7
247: invokestatic  #51
250: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0422
Start line: 9132
End line: 0
Method source code: 
    public void test0422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0422");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.getArgName();
        helpFormatter0.setSyntaxPrefix("usage: ");
        java.lang.String str5 = helpFormatter0.getArgName();
        java.lang.String str6 = helpFormatter0.defaultNewLine;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "arg" + "'", str2, "arg");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "arg" + "'", str5, "arg");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\n" + "'", str6, "\n");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #528
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: invokevirtual #104
42: astore_3
43: aload_1
44: ldc           #12
46: invokevirtual #39
49: aload_1
50: invokevirtual #104
53: astore        4
55: aload_1
56: getfield      #23
59: astore        5
61: new           #29
64: dup
65: invokespecial #30
68: ldc           #31
70: invokevirtual #32
73: iload_2
74: invokevirtual #33
77: ldc           #34
79: invokevirtual #32
82: iconst_1
83: invokevirtual #33
86: ldc           #31
88: invokevirtual #32
91: invokevirtual #35
94: iload_2
95: iconst_1
96: if_icmpne     103
99: iconst_1
100: goto          104
103: iconst_0
104: invokestatic  #36
107: new           #29
110: dup
111: invokespecial #30
114: ldc           #31
116: invokevirtual #32
119: aload_3
120: invokevirtual #32
123: ldc           #78
125: invokevirtual #32
128: invokevirtual #35
131: aload_3
132: ldc           #79
134: invokestatic  #53
137: new           #29
140: dup
141: invokespecial #30
144: ldc           #31
146: invokevirtual #32
149: aload         4
151: invokevirtual #32
154: ldc           #78
156: invokevirtual #32
159: invokevirtual #35
162: aload         4
164: ldc           #79
166: invokestatic  #53
169: new           #29
172: dup
173: invokespecial #30
176: ldc           #31
178: invokevirtual #32
181: aload         5
183: invokevirtual #32
186: ldc           #74
188: invokevirtual #32
191: invokevirtual #35
194: aload         5
196: ldc           #65
198: invokestatic  #53
201: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0423
Start line: 9148
End line: 0
Method source code: 
    public void test0423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0423");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        java.lang.String str6 = helpFormatter0.getLongOptSeparator();
        java.lang.String str7 = helpFormatter0.getLongOptSeparator();
        int int8 = helpFormatter0.getWidth();
        org.apache.commons.cli.Options options10 = null;
        try {
            helpFormatter0.printHelp("", options10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: cmdLineSyntax not provided");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + " " + "'", str6, " ");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + " " + "'", str7, " ");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 74 + "'", int8 == 74);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #529
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: bipush        10
47: invokevirtual #38
50: aload_1
51: invokevirtual #86
54: astore_3
55: aload_1
56: invokevirtual #86
59: astore        4
61: aload_1
62: invokevirtual #129
65: istore        5
67: aconst_null
68: astore        6
70: aload_1
71: ldc           #10
73: aload         6
75: invokevirtual #50
78: ldc           #27
80: invokestatic  #15
83: goto          88
86: astore        7
88: new           #29
91: dup
92: invokespecial #30
95: ldc           #31
97: invokevirtual #32
100: iload_2
101: invokevirtual #33
104: ldc           #34
106: invokevirtual #32
109: iconst_1
110: invokevirtual #33
113: ldc           #31
115: invokevirtual #32
118: invokevirtual #35
121: iload_2
122: iconst_1
123: if_icmpne     130
126: iconst_1
127: goto          131
130: iconst_0
131: invokestatic  #36
134: new           #29
137: dup
138: invokespecial #30
141: ldc           #31
143: invokevirtual #32
146: aload_3
147: invokevirtual #32
150: ldc           #88
152: invokevirtual #32
155: invokevirtual #35
158: aload_3
159: ldc           #24
161: invokestatic  #53
164: new           #29
167: dup
168: invokespecial #30
171: ldc           #31
173: invokevirtual #32
176: aload         4
178: invokevirtual #32
181: ldc           #88
183: invokevirtual #32
186: invokevirtual #35
189: aload         4
191: ldc           #24
193: invokestatic  #53
196: new           #29
199: dup
200: invokespecial #30
203: ldc           #31
205: invokevirtual #32
208: iload         5
210: invokevirtual #33
213: ldc           #34
215: invokevirtual #32
218: bipush        74
220: invokevirtual #33
223: ldc           #31
225: invokevirtual #32
228: invokevirtual #35
231: iload         5
233: bipush        74
235: if_icmpne     242
238: iconst_1
239: goto          243
242: iconst_0
243: invokestatic  #36
246: return
Exception table:
from    to  target type
70    83    86   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0424
Start line: 9173
End line: 0
Method source code: 
    public void test0424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0424");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str6 = helpFormatter0.getNewLine();
        helpFormatter0.setSyntaxPrefix(" ");
        java.lang.String str9 = helpFormatter0.defaultNewLine;
        helpFormatter0.defaultWidth = (short) -1;
        helpFormatter0.setLongOptSeparator("usage: ");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\n" + "'", str6, "\n");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\n" + "'", str9, "\n");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #530
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #10
36: invokevirtual #11
39: aload_1
40: ldc           #10
42: putfield      #55
45: aload_1
46: getfield      #55
49: astore_2
50: aload_1
51: invokevirtual #72
54: astore_3
55: aload_1
56: ldc           #24
58: invokevirtual #39
61: aload_1
62: getfield      #23
65: astore        4
67: aload_1
68: iconst_m1
69: putfield      #110
72: aload_1
73: ldc           #12
75: invokevirtual #91
78: new           #29
81: dup
82: invokespecial #30
85: ldc           #31
87: invokevirtual #32
90: aload_2
91: invokevirtual #32
94: ldc           #68
96: invokevirtual #32
99: invokevirtual #35
102: aload_2
103: ldc           #10
105: invokestatic  #53
108: new           #29
111: dup
112: invokespecial #30
115: ldc           #31
117: invokevirtual #32
120: aload_3
121: invokevirtual #32
124: ldc           #74
126: invokevirtual #32
129: invokevirtual #35
132: aload_3
133: ldc           #65
135: invokestatic  #53
138: new           #29
141: dup
142: invokespecial #30
145: ldc           #31
147: invokevirtual #32
150: aload         4
152: invokevirtual #32
155: ldc           #74
157: invokevirtual #32
160: invokevirtual #35
163: aload         4
165: ldc           #65
167: invokestatic  #53
170: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0425
Start line: 9191
End line: 0
Method source code: 
    public void test0425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0425");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str6 = helpFormatter0.getNewLine();
        java.lang.String str7 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setDescPadding(74);
        helpFormatter0.setLeftPadding(52);
        java.lang.String str13 = helpFormatter0.rtrim("arg");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\n" + "'", str6, "\n");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "arg" + "'", str13, "arg");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #531
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #10
36: invokevirtual #11
39: aload_1
40: ldc           #10
42: putfield      #55
45: aload_1
46: getfield      #55
49: astore_2
50: aload_1
51: invokevirtual #72
54: astore_3
55: aload_1
56: getfield      #63
59: astore        4
61: aload_1
62: bipush        74
64: invokevirtual #38
67: aload_1
68: bipush        52
70: invokevirtual #193
73: aload_1
74: ldc           #79
76: invokevirtual #64
79: astore        5
81: new           #29
84: dup
85: invokespecial #30
88: ldc           #31
90: invokevirtual #32
93: aload_2
94: invokevirtual #32
97: ldc           #68
99: invokevirtual #32
102: invokevirtual #35
105: aload_2
106: ldc           #10
108: invokestatic  #53
111: new           #29
114: dup
115: invokespecial #30
118: ldc           #31
120: invokevirtual #32
123: aload_3
124: invokevirtual #32
127: ldc           #74
129: invokevirtual #32
132: invokevirtual #35
135: aload_3
136: ldc           #65
138: invokestatic  #53
141: new           #29
144: dup
145: invokespecial #30
148: ldc           #31
150: invokevirtual #32
153: aload         4
155: invokevirtual #32
158: ldc           #68
160: invokevirtual #32
163: invokevirtual #35
166: aload         4
168: ldc           #10
170: invokestatic  #53
173: new           #29
176: dup
177: invokespecial #30
180: ldc           #31
182: invokevirtual #32
185: aload         5
187: invokevirtual #32
190: ldc           #78
192: invokevirtual #32
195: invokevirtual #35
198: aload         5
200: ldc           #79
202: invokestatic  #53
205: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0426
Start line: 9210
End line: 0
Method source code: 
    public void test0426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0426");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        java.lang.String str6 = helpFormatter0.rtrim("");
        int int7 = helpFormatter0.getDescPadding();
        int int8 = helpFormatter0.getDescPadding();
        java.lang.String str9 = helpFormatter0.getArgName();
        helpFormatter0.setDescPadding(0);
        helpFormatter0.defaultDescPad = (short) 100;
        java.util.Comparator comparator14 = helpFormatter0.optionComparator;
        java.lang.String str15 = helpFormatter0.getNewLine();
        try {
            java.lang.String str17 = helpFormatter0.createPadding((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: null");
        } catch (java.lang.NegativeArraySizeException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 3 + "'", int7 == 3);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 3 + "'", int8 == 3);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "arg" + "'", str9, "arg");
        org.junit.Assert.assertNotNull(comparator14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #532
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: getfield      #63
48: astore_3
49: aload_1
50: ldc           #10
52: invokevirtual #64
55: astore        4
57: aload_1
58: invokevirtual #118
61: istore        5
63: aload_1
64: invokevirtual #118
67: istore        6
69: aload_1
70: invokevirtual #104
73: astore        7
75: aload_1
76: iconst_0
77: invokevirtual #38
80: aload_1
81: bipush        100
83: putfield      #76
86: aload_1
87: getfield      #47
90: astore        8
92: aload_1
93: invokevirtual #72
96: astore        9
98: aload_1
99: iconst_m1
100: invokevirtual #108
103: astore        10
105: ldc           #19
107: invokestatic  #15
110: goto          115
113: astore        10
115: new           #29
118: dup
119: invokespecial #30
122: ldc           #31
124: invokevirtual #32
127: iload_2
128: invokevirtual #33
131: ldc           #34
133: invokevirtual #32
136: iconst_1
137: invokevirtual #33
140: ldc           #31
142: invokevirtual #32
145: invokevirtual #35
148: iload_2
149: iconst_1
150: if_icmpne     157
153: iconst_1
154: goto          158
157: iconst_0
158: invokestatic  #36
161: new           #29
164: dup
165: invokespecial #30
168: ldc           #31
170: invokevirtual #32
173: aload_3
174: invokevirtual #32
177: ldc           #66
179: invokevirtual #32
182: invokevirtual #35
185: aload_3
186: ldc           #67
188: invokestatic  #53
191: new           #29
194: dup
195: invokespecial #30
198: ldc           #31
200: invokevirtual #32
203: aload         4
205: invokevirtual #32
208: ldc           #68
210: invokevirtual #32
213: invokevirtual #35
216: aload         4
218: ldc           #10
220: invokestatic  #53
223: new           #29
226: dup
227: invokespecial #30
230: ldc           #31
232: invokevirtual #32
235: iload         5
237: invokevirtual #33
240: ldc           #34
242: invokevirtual #32
245: iconst_3
246: invokevirtual #33
249: ldc           #31
251: invokevirtual #32
254: invokevirtual #35
257: iload         5
259: iconst_3
260: if_icmpne     267
263: iconst_1
264: goto          268
267: iconst_0
268: invokestatic  #36
271: new           #29
274: dup
275: invokespecial #30
278: ldc           #31
280: invokevirtual #32
283: iload         6
285: invokevirtual #33
288: ldc           #34
290: invokevirtual #32
293: iconst_3
294: invokevirtual #33
297: ldc           #31
299: invokevirtual #32
302: invokevirtual #35
305: iload         6
307: iconst_3
308: if_icmpne     315
311: iconst_1
312: goto          316
315: iconst_0
316: invokestatic  #36
319: new           #29
322: dup
323: invokespecial #30
326: ldc           #31
328: invokevirtual #32
331: aload         7
333: invokevirtual #32
336: ldc           #78
338: invokevirtual #32
341: invokevirtual #35
344: aload         7
346: ldc           #79
348: invokestatic  #53
351: aload         8
353: invokestatic  #51
356: new           #29
359: dup
360: invokespecial #30
363: ldc           #31
365: invokevirtual #32
368: aload         9
370: invokevirtual #32
373: ldc           #68
375: invokevirtual #32
378: invokevirtual #35
381: aload         9
383: ldc           #10
385: invokestatic  #53
388: return
Exception table:
from    to  target type
98   110   113   Class java/lang/NegativeArraySizeException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0427
Start line: 9243
End line: 0
Method source code: 
    public void test0427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0427");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        helpFormatter0.setSyntaxPrefix(" ");
        int int8 = helpFormatter0.defaultLeftPad;
        helpFormatter0.setNewLine("-");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #533
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: bipush        10
47: invokevirtual #38
50: aload_1
51: ldc           #24
53: invokevirtual #39
56: aload_1
57: getfield      #60
60: istore_3
61: aload_1
62: ldc           #67
64: invokevirtual #131
67: new           #29
70: dup
71: invokespecial #30
74: ldc           #31
76: invokevirtual #32
79: iload_2
80: invokevirtual #33
83: ldc           #34
85: invokevirtual #32
88: iconst_1
89: invokevirtual #33
92: ldc           #31
94: invokevirtual #32
97: invokevirtual #35
100: iload_2
101: iconst_1
102: if_icmpne     109
105: iconst_1
106: goto          110
109: iconst_0
110: invokestatic  #36
113: new           #29
116: dup
117: invokespecial #30
120: ldc           #31
122: invokevirtual #32
125: iload_3
126: invokevirtual #33
129: ldc           #34
131: invokevirtual #32
134: iconst_1
135: invokevirtual #33
138: ldc           #31
140: invokevirtual #32
143: invokevirtual #35
146: iload_3
147: iconst_1
148: if_icmpne     155
151: iconst_1
152: goto          156
155: iconst_0
156: invokestatic  #36
159: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0428
Start line: 9258
End line: 0
Method source code: 
    public void test0428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0428");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.util.Comparator comparator1 = helpFormatter0.optionComparator;
        java.lang.String str3 = helpFormatter0.rtrim("");
        int int4 = helpFormatter0.getDescPadding();
        helpFormatter0.defaultArgName = "                                                                                                 ";
        helpFormatter0.defaultLongOptPrefix = "   ";
        org.junit.Assert.assertNotNull(comparator1);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 3 + "'", int4 == 3);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #534
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: getfield      #47
37: astore_2
38: aload_1
39: ldc           #10
41: invokevirtual #64
44: astore_3
45: aload_1
46: invokevirtual #118
49: istore        4
51: aload_1
52: ldc           #141
54: putfield      #77
57: aload_1
58: ldc_w         #259
61: putfield      #55
64: aload_2
65: invokestatic  #51
68: new           #29
71: dup
72: invokespecial #30
75: ldc           #31
77: invokevirtual #32
80: aload_3
81: invokevirtual #32
84: ldc           #68
86: invokevirtual #32
89: invokevirtual #35
92: aload_3
93: ldc           #10
95: invokestatic  #53
98: new           #29
101: dup
102: invokespecial #30
105: ldc           #31
107: invokevirtual #32
110: iload         4
112: invokevirtual #33
115: ldc           #34
117: invokevirtual #32
120: iconst_3
121: invokevirtual #33
124: ldc           #31
126: invokevirtual #32
129: invokevirtual #35
132: iload         4
134: iconst_3
135: if_icmpne     142
138: iconst_1
139: goto          143
142: iconst_0
143: invokestatic  #36
146: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0429
Start line: 9273
End line: 0
Method source code: 
    public void test0429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0429");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.defaultDescPad = '4';
        helpFormatter0.setNewLine("");
        helpFormatter0.setSyntaxPrefix("");
        java.lang.String str10 = helpFormatter0.getSyntaxPrefix();
        helpFormatter0.setWidth((-2));
        java.lang.String str13 = helpFormatter0.defaultNewLine;
        helpFormatter0.defaultLongOptPrefix = "                                ";
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #535
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: bipush        52
47: putfield      #76
50: aload_1
51: ldc           #10
53: invokevirtual #131
56: aload_1
57: ldc           #10
59: invokevirtual #39
62: aload_1
63: invokevirtual #102
66: astore_3
67: aload_1
68: bipush        -2
70: invokevirtual #156
73: aload_1
74: getfield      #23
77: astore        4
79: aload_1
80: ldc_w         #456
83: putfield      #55
86: new           #29
89: dup
90: invokespecial #30
93: ldc           #31
95: invokevirtual #32
98: iload_2
99: invokevirtual #33
102: ldc           #34
104: invokevirtual #32
107: iconst_1
108: invokevirtual #33
111: ldc           #31
113: invokevirtual #32
116: invokevirtual #35
119: iload_2
120: iconst_1
121: if_icmpne     128
124: iconst_1
125: goto          129
128: iconst_0
129: invokestatic  #36
132: new           #29
135: dup
136: invokespecial #30
139: ldc           #31
141: invokevirtual #32
144: aload_3
145: invokevirtual #32
148: ldc           #68
150: invokevirtual #32
153: invokevirtual #35
156: aload_3
157: ldc           #10
159: invokestatic  #53
162: new           #29
165: dup
166: invokespecial #30
169: ldc           #31
171: invokevirtual #32
174: aload         4
176: invokevirtual #32
179: ldc           #68
181: invokevirtual #32
184: invokevirtual #35
187: aload         4
189: ldc           #10
191: invokestatic  #53
194: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0430
Start line: 9292
End line: 0
Method source code: 
    public void test0430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0430");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str3 = helpFormatter0.getOptPrefix();
        int int4 = helpFormatter0.defaultDescPad;
        int int5 = helpFormatter0.defaultLeftPad;
        int int6 = helpFormatter0.defaultLeftPad;
        int int10 = helpFormatter0.findWrapPos("                                                                                                 ", (int) (byte) 100, (-2));
        int int14 = helpFormatter0.findWrapPos("", 100, 74);
        int int15 = helpFormatter0.getLeftPadding();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "--" + "'", str2, "--");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "-" + "'", str3, "-");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 3 + "'", int4 == 3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #536
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: getfield      #55
42: astore_3
43: aload_1
44: invokevirtual #123
47: astore        4
49: aload_1
50: getfield      #76
53: istore        5
55: aload_1
56: getfield      #60
59: istore        6
61: aload_1
62: getfield      #60
65: istore        7
67: aload_1
68: ldc           #141
70: bipush        100
72: bipush        -2
74: invokevirtual #93
77: istore        8
79: aload_1
80: ldc           #10
82: bipush        100
84: bipush        74
86: invokevirtual #93
89: istore        9
91: aload_1
92: invokevirtual #22
95: istore        10
97: new           #29
100: dup
101: invokespecial #30
104: ldc           #31
106: invokevirtual #32
109: iload_2
110: invokevirtual #33
113: ldc           #34
115: invokevirtual #32
118: iconst_1
119: invokevirtual #33
122: ldc           #31
124: invokevirtual #32
127: invokevirtual #35
130: iload_2
131: iconst_1
132: if_icmpne     139
135: iconst_1
136: goto          140
139: iconst_0
140: invokestatic  #36
143: new           #29
146: dup
147: invokespecial #30
150: ldc           #31
152: invokevirtual #32
155: aload_3
156: invokevirtual #32
159: ldc           #52
161: invokevirtual #32
164: invokevirtual #35
167: aload_3
168: ldc           #44
170: invokestatic  #53
173: new           #29
176: dup
177: invokespecial #30
180: ldc           #31
182: invokevirtual #32
185: aload         4
187: invokevirtual #32
190: ldc           #66
192: invokevirtual #32
195: invokevirtual #35
198: aload         4
200: ldc           #67
202: invokestatic  #53
205: new           #29
208: dup
209: invokespecial #30
212: ldc           #31
214: invokevirtual #32
217: iload         5
219: invokevirtual #33
222: ldc           #34
224: invokevirtual #32
227: iconst_3
228: invokevirtual #33
231: ldc           #31
233: invokevirtual #32
236: invokevirtual #35
239: iload         5
241: iconst_3
242: if_icmpne     249
245: iconst_1
246: goto          250
249: iconst_0
250: invokestatic  #36
253: new           #29
256: dup
257: invokespecial #30
260: ldc           #31
262: invokevirtual #32
265: iload         6
267: invokevirtual #33
270: ldc           #34
272: invokevirtual #32
275: iconst_1
276: invokevirtual #33
279: ldc           #31
281: invokevirtual #32
284: invokevirtual #35
287: iload         6
289: iconst_1
290: if_icmpne     297
293: iconst_1
294: goto          298
297: iconst_0
298: invokestatic  #36
301: new           #29
304: dup
305: invokespecial #30
308: ldc           #31
310: invokevirtual #32
313: iload         7
315: invokevirtual #33
318: ldc           #34
320: invokevirtual #32
323: iconst_1
324: invokevirtual #33
327: ldc           #31
329: invokevirtual #32
332: invokevirtual #35
335: iload         7
337: iconst_1
338: if_icmpne     345
341: iconst_1
342: goto          346
345: iconst_0
346: invokestatic  #36
349: new           #29
352: dup
353: invokespecial #30
356: ldc           #31
358: invokevirtual #32
361: iload         8
363: invokevirtual #33
366: ldc           #34
368: invokevirtual #32
371: iconst_m1
372: invokevirtual #33
375: ldc           #31
377: invokevirtual #32
380: invokevirtual #35
383: iload         8
385: iconst_m1
386: if_icmpne     393
389: iconst_1
390: goto          394
393: iconst_0
394: invokestatic  #36
397: new           #29
400: dup
401: invokespecial #30
404: ldc           #31
406: invokevirtual #32
409: iload         9
411: invokevirtual #33
414: ldc           #34
416: invokevirtual #32
419: iconst_m1
420: invokevirtual #33
423: ldc           #31
425: invokevirtual #32
428: invokevirtual #35
431: iload         9
433: iconst_m1
434: if_icmpne     441
437: iconst_1
438: goto          442
441: iconst_0
442: invokestatic  #36
445: new           #29
448: dup
449: invokespecial #30
452: ldc           #31
454: invokevirtual #32
457: iload         10
459: invokevirtual #33
462: ldc           #34
464: invokevirtual #32
467: iconst_1
468: invokevirtual #33
471: ldc           #31
473: invokevirtual #32
476: invokevirtual #35
479: iload         10
481: iconst_1
482: if_icmpne     489
485: iconst_1
486: goto          490
489: iconst_0
490: invokestatic  #36
493: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0431
Start line: 9317
End line: 0
Method source code: 
    public void test0431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0431");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.defaultLongOptPrefix = "hi!";
        java.lang.String str4 = helpFormatter0.createPadding(10);
        int int8 = helpFormatter0.findWrapPos("", 10, (int) ' ');
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "          " + "'", str4, "          ");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #537
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #25
36: putfield      #55
39: aload_1
40: bipush        10
42: invokevirtual #108
45: astore_2
46: aload_1
47: ldc           #10
49: bipush        10
51: bipush        32
53: invokevirtual #93
56: istore_3
57: new           #29
60: dup
61: invokespecial #30
64: ldc           #31
66: invokevirtual #32
69: aload_2
70: invokevirtual #32
73: ldc           #204
75: invokevirtual #32
78: invokevirtual #35
81: aload_2
82: ldc           #114
84: invokestatic  #53
87: new           #29
90: dup
91: invokespecial #30
94: ldc           #31
96: invokevirtual #32
99: iload_3
100: invokevirtual #33
103: ldc           #34
105: invokevirtual #32
108: iconst_m1
109: invokevirtual #33
112: ldc           #31
114: invokevirtual #32
117: invokevirtual #35
120: iload_3
121: iconst_m1
122: if_icmpne     129
125: iconst_1
126: goto          130
129: iconst_0
130: invokestatic  #36
133: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0432
Start line: 9329
End line: 0
Method source code: 
    public void test0432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0432");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.defaultDescPad = '4';
        helpFormatter0.setNewLine("");
        helpFormatter0.setLongOptPrefix(" ");
        java.lang.String str10 = helpFormatter0.getSyntaxPrefix();
        java.io.PrintWriter printWriter11 = null;
        org.apache.commons.cli.Options options13 = null;
        try {
            helpFormatter0.printOptions(printWriter11, (int) ' ', options13, 1, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: null");
        } catch (java.lang.NegativeArraySizeException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "usage: " + "'", str10, "usage: ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #538
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: bipush        52
47: putfield      #76
50: aload_1
51: ldc           #10
53: invokevirtual #131
56: aload_1
57: ldc           #24
59: invokevirtual #49
62: aload_1
63: invokevirtual #102
66: astore_3
67: aconst_null
68: astore        4
70: aconst_null
71: astore        5
73: aload_1
74: aload         4
76: bipush        32
78: aload         5
80: iconst_1
81: iconst_m1
82: invokevirtual #18
85: ldc           #19
87: invokestatic  #15
90: goto          95
93: astore        6
95: new           #29
98: dup
99: invokespecial #30
102: ldc           #31
104: invokevirtual #32
107: iload_2
108: invokevirtual #33
111: ldc           #34
113: invokevirtual #32
116: iconst_1
117: invokevirtual #33
120: ldc           #31
122: invokevirtual #32
125: invokevirtual #35
128: iload_2
129: iconst_1
130: if_icmpne     137
133: iconst_1
134: goto          138
137: iconst_0
138: invokestatic  #36
141: new           #29
144: dup
145: invokespecial #30
148: ldc           #31
150: invokevirtual #32
153: aload_3
154: invokevirtual #32
157: ldc           #99
159: invokevirtual #32
162: invokevirtual #35
165: aload_3
166: ldc           #12
168: invokestatic  #53
171: return
Exception table:
from    to  target type
73    90    93   Class java/lang/NegativeArraySizeException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0433
Start line: 9353
End line: 0
Method source code: 
    public void test0433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0433");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str6 = helpFormatter0.getNewLine();
        java.util.Comparator comparator7 = helpFormatter0.getOptionComparator();
        helpFormatter0.setDescPadding(3);
        org.apache.commons.cli.Options options13 = null;
        try {
            helpFormatter0.printHelp((-1), "usage: ", "          ", options13, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\n" + "'", str6, "\n");
        org.junit.Assert.assertNotNull(comparator7);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #539
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #10
36: invokevirtual #11
39: aload_1
40: ldc           #10
42: putfield      #55
45: aload_1
46: getfield      #55
49: astore_2
50: aload_1
51: invokevirtual #72
54: astore_3
55: aload_1
56: invokevirtual #106
59: astore        4
61: aload_1
62: iconst_3
63: invokevirtual #38
66: aconst_null
67: astore        5
69: aload_1
70: iconst_m1
71: ldc           #12
73: ldc           #114
75: aload         5
77: ldc           #10
79: invokevirtual #45
82: ldc           #14
84: invokestatic  #15
87: goto          92
90: astore        6
92: new           #29
95: dup
96: invokespecial #30
99: ldc           #31
101: invokevirtual #32
104: aload_2
105: invokevirtual #32
108: ldc           #68
110: invokevirtual #32
113: invokevirtual #35
116: aload_2
117: ldc           #10
119: invokestatic  #53
122: new           #29
125: dup
126: invokespecial #30
129: ldc           #31
131: invokevirtual #32
134: aload_3
135: invokevirtual #32
138: ldc           #74
140: invokevirtual #32
143: invokevirtual #35
146: aload_3
147: ldc           #65
149: invokestatic  #53
152: aload         4
154: invokestatic  #51
157: return
Exception table:
from    to  target type
69    87    90   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0434
Start line: 9377
End line: 0
Method source code: 
    public void test0434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0434");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        java.lang.String str6 = helpFormatter0.getOptPrefix();
        java.lang.String str7 = helpFormatter0.getNewLine();
        helpFormatter0.defaultOptPrefix = "";
        helpFormatter0.setNewLine("");
        helpFormatter0.defaultSyntaxPrefix = "usage: ";
        java.lang.String str14 = helpFormatter0.getArgName();
        java.util.Comparator comparator15 = helpFormatter0.optionComparator;
        java.lang.String str16 = helpFormatter0.getLongOptSeparator();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "-" + "'", str6, "-");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "arg" + "'", str14, "arg");
        org.junit.Assert.assertNotNull(comparator15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + " " + "'", str16, " ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #540
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: bipush        10
47: invokevirtual #38
50: aload_1
51: invokevirtual #123
54: astore_3
55: aload_1
56: invokevirtual #72
59: astore        4
61: aload_1
62: ldc           #10
64: putfield      #63
67: aload_1
68: ldc           #10
70: invokevirtual #131
73: aload_1
74: ldc           #12
76: putfield      #97
79: aload_1
80: invokevirtual #104
83: astore        5
85: aload_1
86: getfield      #47
89: astore        6
91: aload_1
92: invokevirtual #86
95: astore        7
97: new           #29
100: dup
101: invokespecial #30
104: ldc           #31
106: invokevirtual #32
109: iload_2
110: invokevirtual #33
113: ldc           #34
115: invokevirtual #32
118: iconst_1
119: invokevirtual #33
122: ldc           #31
124: invokevirtual #32
127: invokevirtual #35
130: iload_2
131: iconst_1
132: if_icmpne     139
135: iconst_1
136: goto          140
139: iconst_0
140: invokestatic  #36
143: new           #29
146: dup
147: invokespecial #30
150: ldc           #31
152: invokevirtual #32
155: aload_3
156: invokevirtual #32
159: ldc           #66
161: invokevirtual #32
164: invokevirtual #35
167: aload_3
168: ldc           #67
170: invokestatic  #53
173: new           #29
176: dup
177: invokespecial #30
180: ldc           #31
182: invokevirtual #32
185: aload         4
187: invokevirtual #32
190: ldc           #68
192: invokevirtual #32
195: invokevirtual #35
198: aload         4
200: ldc           #10
202: invokestatic  #53
205: new           #29
208: dup
209: invokespecial #30
212: ldc           #31
214: invokevirtual #32
217: aload         5
219: invokevirtual #32
222: ldc           #78
224: invokevirtual #32
227: invokevirtual #35
230: aload         5
232: ldc           #79
234: invokestatic  #53
237: aload         6
239: invokestatic  #51
242: new           #29
245: dup
246: invokespecial #30
249: ldc           #31
251: invokevirtual #32
254: aload         7
256: invokevirtual #32
259: ldc           #88
261: invokevirtual #32
264: invokevirtual #35
267: aload         7
269: ldc           #24
271: invokestatic  #53
274: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0435
Start line: 9401
End line: 0
Method source code: 
    public void test0435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0435");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.util.Comparator comparator1 = helpFormatter0.optionComparator;
        int int2 = helpFormatter0.getLeftPadding();
        int int6 = helpFormatter0.findWrapPos("-", 100, (-1));
        helpFormatter0.defaultWidth = (short) 100;
        java.lang.String str9 = helpFormatter0.getNewLine();
        java.util.Comparator comparator10 = helpFormatter0.getOptionComparator();
        org.junit.Assert.assertNotNull(comparator1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\n" + "'", str9, "\n");
        org.junit.Assert.assertNotNull(comparator10);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #541
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: getfield      #47
37: astore_2
38: aload_1
39: invokevirtual #22
42: istore_3
43: aload_1
44: ldc           #67
46: bipush        100
48: iconst_m1
49: invokevirtual #93
52: istore        4
54: aload_1
55: bipush        100
57: putfield      #110
60: aload_1
61: invokevirtual #72
64: astore        5
66: aload_1
67: invokevirtual #106
70: astore        6
72: aload_2
73: invokestatic  #51
76: new           #29
79: dup
80: invokespecial #30
83: ldc           #31
85: invokevirtual #32
88: iload_3
89: invokevirtual #33
92: ldc           #34
94: invokevirtual #32
97: iconst_1
98: invokevirtual #33
101: ldc           #31
103: invokevirtual #32
106: invokevirtual #35
109: iload_3
110: iconst_1
111: if_icmpne     118
114: iconst_1
115: goto          119
118: iconst_0
119: invokestatic  #36
122: new           #29
125: dup
126: invokespecial #30
129: ldc           #31
131: invokevirtual #32
134: iload         4
136: invokevirtual #33
139: ldc           #34
141: invokevirtual #32
144: iconst_m1
145: invokevirtual #33
148: ldc           #31
150: invokevirtual #32
153: invokevirtual #35
156: iload         4
158: iconst_m1
159: if_icmpne     166
162: iconst_1
163: goto          167
166: iconst_0
167: invokestatic  #36
170: new           #29
173: dup
174: invokespecial #30
177: ldc           #31
179: invokevirtual #32
182: aload         5
184: invokevirtual #32
187: ldc           #74
189: invokevirtual #32
192: invokevirtual #35
195: aload         5
197: ldc           #65
199: invokestatic  #53
202: aload         6
204: invokestatic  #51
207: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0436
Start line: 9419
End line: 0
Method source code: 
    public void test0436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0436");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.getArgName();
        helpFormatter0.setLongOptPrefix("                                                                                                 ");
        helpFormatter0.defaultWidth = (short) 100;
        java.lang.String str7 = helpFormatter0.getSyntaxPrefix();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "arg" + "'", str2, "arg");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "usage: " + "'", str7, "usage: ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #542
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: invokevirtual #104
42: astore_3
43: aload_1
44: ldc           #141
46: invokevirtual #49
49: aload_1
50: bipush        100
52: putfield      #110
55: aload_1
56: invokevirtual #102
59: astore        4
61: new           #29
64: dup
65: invokespecial #30
68: ldc           #31
70: invokevirtual #32
73: iload_2
74: invokevirtual #33
77: ldc           #34
79: invokevirtual #32
82: iconst_1
83: invokevirtual #33
86: ldc           #31
88: invokevirtual #32
91: invokevirtual #35
94: iload_2
95: iconst_1
96: if_icmpne     103
99: iconst_1
100: goto          104
103: iconst_0
104: invokestatic  #36
107: new           #29
110: dup
111: invokespecial #30
114: ldc           #31
116: invokevirtual #32
119: aload_3
120: invokevirtual #32
123: ldc           #78
125: invokevirtual #32
128: invokevirtual #35
131: aload_3
132: ldc           #79
134: invokestatic  #53
137: new           #29
140: dup
141: invokespecial #30
144: ldc           #31
146: invokevirtual #32
149: aload         4
151: invokevirtual #32
154: ldc           #99
156: invokevirtual #32
159: invokevirtual #35
162: aload         4
164: ldc           #12
166: invokestatic  #53
169: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0437
Start line: 9434
End line: 0
Method source code: 
    public void test0437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0437");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        java.lang.String str6 = helpFormatter0.rtrim("");
        java.lang.String str8 = helpFormatter0.rtrim("-");
        helpFormatter0.defaultOptPrefix = "--";
        helpFormatter0.defaultDescPad = 0;
        helpFormatter0.setLongOptPrefix("usage:");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "-" + "'", str8, "-");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #543
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: getfield      #63
48: astore_3
49: aload_1
50: ldc           #10
52: invokevirtual #64
55: astore        4
57: aload_1
58: ldc           #67
60: invokevirtual #64
63: astore        5
65: aload_1
66: ldc           #44
68: putfield      #63
71: aload_1
72: iconst_0
73: putfield      #76
76: aload_1
77: ldc_w         #501
80: invokevirtual #49
83: new           #29
86: dup
87: invokespecial #30
90: ldc           #31
92: invokevirtual #32
95: iload_2
96: invokevirtual #33
99: ldc           #34
101: invokevirtual #32
104: iconst_1
105: invokevirtual #33
108: ldc           #31
110: invokevirtual #32
113: invokevirtual #35
116: iload_2
117: iconst_1
118: if_icmpne     125
121: iconst_1
122: goto          126
125: iconst_0
126: invokestatic  #36
129: new           #29
132: dup
133: invokespecial #30
136: ldc           #31
138: invokevirtual #32
141: aload_3
142: invokevirtual #32
145: ldc           #66
147: invokevirtual #32
150: invokevirtual #35
153: aload_3
154: ldc           #67
156: invokestatic  #53
159: new           #29
162: dup
163: invokespecial #30
166: ldc           #31
168: invokevirtual #32
171: aload         4
173: invokevirtual #32
176: ldc           #68
178: invokevirtual #32
181: invokevirtual #35
184: aload         4
186: ldc           #10
188: invokestatic  #53
191: new           #29
194: dup
195: invokespecial #30
198: ldc           #31
200: invokevirtual #32
203: aload         5
205: invokevirtual #32
208: ldc           #66
210: invokevirtual #32
213: invokevirtual #35
216: aload         5
218: ldc           #67
220: invokestatic  #53
223: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0438
Start line: 9453
End line: 0
Method source code: 
    public void test0438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0438");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        helpFormatter0.setSyntaxPrefix(" ");
        int int11 = helpFormatter0.findWrapPos("arg", (int) (byte) -1, (int) (byte) -1);
        helpFormatter0.setWidth(74);
        java.lang.String str14 = helpFormatter0.getOptPrefix();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-2) + "'", int11 == (-2));
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "-" + "'", str14, "-");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #544
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: bipush        10
47: invokevirtual #38
50: aload_1
51: ldc           #24
53: invokevirtual #39
56: aload_1
57: ldc           #79
59: iconst_m1
60: iconst_m1
61: invokevirtual #93
64: istore_3
65: aload_1
66: bipush        74
68: invokevirtual #156
71: aload_1
72: invokevirtual #123
75: astore        4
77: new           #29
80: dup
81: invokespecial #30
84: ldc           #31
86: invokevirtual #32
89: iload_2
90: invokevirtual #33
93: ldc           #34
95: invokevirtual #32
98: iconst_1
99: invokevirtual #33
102: ldc           #31
104: invokevirtual #32
107: invokevirtual #35
110: iload_2
111: iconst_1
112: if_icmpne     119
115: iconst_1
116: goto          120
119: iconst_0
120: invokestatic  #36
123: new           #29
126: dup
127: invokespecial #30
130: ldc           #31
132: invokevirtual #32
135: iload_3
136: invokevirtual #33
139: ldc           #34
141: invokevirtual #32
144: bipush        -2
146: invokevirtual #33
149: ldc           #31
151: invokevirtual #32
154: invokevirtual #35
157: iload_3
158: bipush        -2
160: if_icmpne     167
163: iconst_1
164: goto          168
167: iconst_0
168: invokestatic  #36
171: new           #29
174: dup
175: invokespecial #30
178: ldc           #31
180: invokevirtual #32
183: aload         4
185: invokevirtual #32
188: ldc           #66
190: invokevirtual #32
193: invokevirtual #35
196: aload         4
198: ldc           #67
200: invokestatic  #53
203: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0439
Start line: 9470
End line: 0
Method source code: 
    public void test0439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0439");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str3 = helpFormatter0.getOptPrefix();
        java.util.Comparator comparator4 = helpFormatter0.optionComparator;
        helpFormatter0.setArgName("--");
        helpFormatter0.defaultArgName = "";
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "--" + "'", str2, "--");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "-" + "'", str3, "-");
        org.junit.Assert.assertNotNull(comparator4);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #545
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: getfield      #55
42: astore_3
43: aload_1
44: invokevirtual #123
47: astore        4
49: aload_1
50: getfield      #47
53: astore        5
55: aload_1
56: ldc           #44
58: invokevirtual #146
61: aload_1
62: ldc           #10
64: putfield      #77
67: new           #29
70: dup
71: invokespecial #30
74: ldc           #31
76: invokevirtual #32
79: iload_2
80: invokevirtual #33
83: ldc           #34
85: invokevirtual #32
88: iconst_1
89: invokevirtual #33
92: ldc           #31
94: invokevirtual #32
97: invokevirtual #35
100: iload_2
101: iconst_1
102: if_icmpne     109
105: iconst_1
106: goto          110
109: iconst_0
110: invokestatic  #36
113: new           #29
116: dup
117: invokespecial #30
120: ldc           #31
122: invokevirtual #32
125: aload_3
126: invokevirtual #32
129: ldc           #52
131: invokevirtual #32
134: invokevirtual #35
137: aload_3
138: ldc           #44
140: invokestatic  #53
143: new           #29
146: dup
147: invokespecial #30
150: ldc           #31
152: invokevirtual #32
155: aload         4
157: invokevirtual #32
160: ldc           #66
162: invokevirtual #32
165: invokevirtual #35
168: aload         4
170: ldc           #67
172: invokestatic  #53
175: aload         5
177: invokestatic  #51
180: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0440
Start line: 9487
End line: 0
Method source code: 
    public void test0440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0440");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.defaultLongOptPrefix = "hi!";
        helpFormatter0.setWidth((int) (short) 0);
        int int5 = helpFormatter0.getDescPadding();
        int int6 = helpFormatter0.getLeftPadding();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 3 + "'", int5 == 3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #546
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #25
36: putfield      #55
39: aload_1
40: iconst_0
41: invokevirtual #156
44: aload_1
45: invokevirtual #118
48: istore_2
49: aload_1
50: invokevirtual #22
53: istore_3
54: new           #29
57: dup
58: invokespecial #30
61: ldc           #31
63: invokevirtual #32
66: iload_2
67: invokevirtual #33
70: ldc           #34
72: invokevirtual #32
75: iconst_3
76: invokevirtual #33
79: ldc           #31
81: invokevirtual #32
84: invokevirtual #35
87: iload_2
88: iconst_3
89: if_icmpne     96
92: iconst_1
93: goto          97
96: iconst_0
97: invokestatic  #36
100: new           #29
103: dup
104: invokespecial #30
107: ldc           #31
109: invokevirtual #32
112: iload_3
113: invokevirtual #33
116: ldc           #34
118: invokevirtual #32
121: iconst_1
122: invokevirtual #33
125: ldc           #31
127: invokevirtual #32
130: invokevirtual #35
133: iload_3
134: iconst_1
135: if_icmpne     142
138: iconst_1
139: goto          143
142: iconst_0
143: invokestatic  #36
146: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0441
Start line: 9500
End line: 0
Method source code: 
    public void test0441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0441");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        java.lang.String str6 = helpFormatter0.rtrim("");
        int int7 = helpFormatter0.getDescPadding();
        int int8 = helpFormatter0.getDescPadding();
        helpFormatter0.setWidth((int) '4');
        int int11 = helpFormatter0.defaultWidth;
        helpFormatter0.setNewLine("hi!");
        java.lang.StringBuffer stringBuffer14 = null;
        org.apache.commons.cli.Options options16 = null;
        try {
            java.lang.StringBuffer stringBuffer19 = helpFormatter0.renderOptions(stringBuffer14, (int) '#', options16, (int) (short) 10, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 3 + "'", int7 == 3);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 3 + "'", int8 == 3);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #547
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: getfield      #63
48: astore_3
49: aload_1
50: ldc           #10
52: invokevirtual #64
55: astore        4
57: aload_1
58: invokevirtual #118
61: istore        5
63: aload_1
64: invokevirtual #118
67: istore        6
69: aload_1
70: bipush        52
72: invokevirtual #156
75: aload_1
76: getfield      #110
79: istore        7
81: aload_1
82: ldc           #25
84: invokevirtual #131
87: aconst_null
88: astore        8
90: aconst_null
91: astore        9
93: aload_1
94: aload         8
96: bipush        35
98: aload         9
100: bipush        10
102: bipush        100
104: invokevirtual #98
107: astore        10
109: ldc           #14
111: invokestatic  #15
114: goto          119
117: astore        10
119: new           #29
122: dup
123: invokespecial #30
126: ldc           #31
128: invokevirtual #32
131: iload_2
132: invokevirtual #33
135: ldc           #34
137: invokevirtual #32
140: iconst_1
141: invokevirtual #33
144: ldc           #31
146: invokevirtual #32
149: invokevirtual #35
152: iload_2
153: iconst_1
154: if_icmpne     161
157: iconst_1
158: goto          162
161: iconst_0
162: invokestatic  #36
165: new           #29
168: dup
169: invokespecial #30
172: ldc           #31
174: invokevirtual #32
177: aload_3
178: invokevirtual #32
181: ldc           #66
183: invokevirtual #32
186: invokevirtual #35
189: aload_3
190: ldc           #67
192: invokestatic  #53
195: new           #29
198: dup
199: invokespecial #30
202: ldc           #31
204: invokevirtual #32
207: aload         4
209: invokevirtual #32
212: ldc           #68
214: invokevirtual #32
217: invokevirtual #35
220: aload         4
222: ldc           #10
224: invokestatic  #53
227: new           #29
230: dup
231: invokespecial #30
234: ldc           #31
236: invokevirtual #32
239: iload         5
241: invokevirtual #33
244: ldc           #34
246: invokevirtual #32
249: iconst_3
250: invokevirtual #33
253: ldc           #31
255: invokevirtual #32
258: invokevirtual #35
261: iload         5
263: iconst_3
264: if_icmpne     271
267: iconst_1
268: goto          272
271: iconst_0
272: invokestatic  #36
275: new           #29
278: dup
279: invokespecial #30
282: ldc           #31
284: invokevirtual #32
287: iload         6
289: invokevirtual #33
292: ldc           #34
294: invokevirtual #32
297: iconst_3
298: invokevirtual #33
301: ldc           #31
303: invokevirtual #32
306: invokevirtual #35
309: iload         6
311: iconst_3
312: if_icmpne     319
315: iconst_1
316: goto          320
319: iconst_0
320: invokestatic  #36
323: new           #29
326: dup
327: invokespecial #30
330: ldc           #31
332: invokevirtual #32
335: iload         7
337: invokevirtual #33
340: ldc           #34
342: invokevirtual #32
345: bipush        52
347: invokevirtual #33
350: ldc           #31
352: invokevirtual #32
355: invokevirtual #35
358: iload         7
360: bipush        52
362: if_icmpne     369
365: iconst_1
366: goto          370
369: iconst_0
370: invokestatic  #36
373: return
Exception table:
from    to  target type
93   114   117   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0442
Start line: 9531
End line: 0
Method source code: 
    public void test0442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0442");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setLongOptPrefix(" ");
        java.lang.String str7 = helpFormatter0.getLongOptPrefix();
        helpFormatter0.setNewLine("usage: ");
        helpFormatter0.setOptPrefix(" ");
        java.lang.String str13 = helpFormatter0.createPadding((int) ' ');
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + " " + "'", str7, " ");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "                                " + "'", str13, "                                ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #548
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: getfield      #63
48: astore_3
49: aload_1
50: ldc           #24
52: invokevirtual #49
55: aload_1
56: invokevirtual #48
59: astore        4
61: aload_1
62: ldc           #12
64: invokevirtual #131
67: aload_1
68: ldc           #24
70: invokevirtual #11
73: aload_1
74: bipush        32
76: invokevirtual #108
79: astore        5
81: new           #29
84: dup
85: invokespecial #30
88: ldc           #31
90: invokevirtual #32
93: iload_2
94: invokevirtual #33
97: ldc           #34
99: invokevirtual #32
102: iconst_1
103: invokevirtual #33
106: ldc           #31
108: invokevirtual #32
111: invokevirtual #35
114: iload_2
115: iconst_1
116: if_icmpne     123
119: iconst_1
120: goto          124
123: iconst_0
124: invokestatic  #36
127: new           #29
130: dup
131: invokespecial #30
134: ldc           #31
136: invokevirtual #32
139: aload_3
140: invokevirtual #32
143: ldc           #66
145: invokevirtual #32
148: invokevirtual #35
151: aload_3
152: ldc           #67
154: invokestatic  #53
157: new           #29
160: dup
161: invokespecial #30
164: ldc           #31
166: invokevirtual #32
169: aload         4
171: invokevirtual #32
174: ldc           #88
176: invokevirtual #32
179: invokevirtual #35
182: aload         4
184: ldc           #24
186: invokestatic  #53
189: new           #29
192: dup
193: invokespecial #30
196: ldc           #31
198: invokevirtual #32
201: aload         5
203: invokevirtual #32
206: ldc_w         #455
209: invokevirtual #32
212: invokevirtual #35
215: aload         5
217: ldc_w         #456
220: invokestatic  #53
223: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0443
Start line: 9550
End line: 0
Method source code: 
    public void test0443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0443");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.defaultArgName;
        java.lang.String str3 = helpFormatter0.defaultSyntaxPrefix;
        org.apache.commons.cli.Options options5 = null;
        try {
            helpFormatter0.printHelp("                                                    ", options5, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "arg" + "'", str2, "arg");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "usage: " + "'", str3, "usage: ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #549
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: getfield      #77
42: astore_3
43: aload_1
44: getfield      #97
47: astore        4
49: aconst_null
50: astore        5
52: aload_1
53: ldc_w         #313
56: aload         5
58: iconst_1
59: invokevirtual #135
62: ldc           #14
64: invokestatic  #15
67: goto          72
70: astore        6
72: new           #29
75: dup
76: invokespecial #30
79: ldc           #31
81: invokevirtual #32
84: iload_2
85: invokevirtual #33
88: ldc           #34
90: invokevirtual #32
93: iconst_1
94: invokevirtual #33
97: ldc           #31
99: invokevirtual #32
102: invokevirtual #35
105: iload_2
106: iconst_1
107: if_icmpne     114
110: iconst_1
111: goto          115
114: iconst_0
115: invokestatic  #36
118: new           #29
121: dup
122: invokespecial #30
125: ldc           #31
127: invokevirtual #32
130: aload_3
131: invokevirtual #32
134: ldc           #78
136: invokevirtual #32
139: invokevirtual #35
142: aload_3
143: ldc           #79
145: invokestatic  #53
148: new           #29
151: dup
152: invokespecial #30
155: ldc           #31
157: invokevirtual #32
160: aload         4
162: invokevirtual #32
165: ldc           #99
167: invokevirtual #32
170: invokevirtual #35
173: aload         4
175: ldc           #12
177: invokestatic  #53
180: return
Exception table:
from    to  target type
52    67    70   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0444
Start line: 9571
End line: 0
Method source code: 
    public void test0444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0444");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setLongOptPrefix(" ");
        helpFormatter0.defaultDescPad = (short) 10;
        java.lang.String str9 = helpFormatter0.defaultArgName;
        org.apache.commons.cli.Options options11 = null;
        try {
            helpFormatter0.printHelp("usage:", options11, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "arg" + "'", str9, "arg");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #550
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: getfield      #63
48: astore_3
49: aload_1
50: ldc           #24
52: invokevirtual #49
55: aload_1
56: bipush        10
58: putfield      #76
61: aload_1
62: getfield      #77
65: astore        4
67: aconst_null
68: astore        5
70: aload_1
71: ldc_w         #501
74: aload         5
76: iconst_0
77: invokevirtual #135
80: ldc           #14
82: invokestatic  #15
85: goto          90
88: astore        6
90: new           #29
93: dup
94: invokespecial #30
97: ldc           #31
99: invokevirtual #32
102: iload_2
103: invokevirtual #33
106: ldc           #34
108: invokevirtual #32
111: iconst_1
112: invokevirtual #33
115: ldc           #31
117: invokevirtual #32
120: invokevirtual #35
123: iload_2
124: iconst_1
125: if_icmpne     132
128: iconst_1
129: goto          133
132: iconst_0
133: invokestatic  #36
136: new           #29
139: dup
140: invokespecial #30
143: ldc           #31
145: invokevirtual #32
148: aload_3
149: invokevirtual #32
152: ldc           #66
154: invokevirtual #32
157: invokevirtual #35
160: aload_3
161: ldc           #67
163: invokestatic  #53
166: new           #29
169: dup
170: invokespecial #30
173: ldc           #31
175: invokevirtual #32
178: aload         4
180: invokevirtual #32
183: ldc           #78
185: invokevirtual #32
188: invokevirtual #35
191: aload         4
193: ldc           #79
195: invokestatic  #53
198: return
Exception table:
from    to  target type
70    85    88   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0445
Start line: 9595
End line: 0
Method source code: 
    public void test0445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0445");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.util.Comparator comparator1 = helpFormatter0.optionComparator;
        java.lang.String str3 = helpFormatter0.rtrim("");
        helpFormatter0.setLongOptSeparator(" ");
        org.apache.commons.cli.HelpFormatter helpFormatter6 = new org.apache.commons.cli.HelpFormatter();
        int int7 = helpFormatter6.getLeftPadding();
        helpFormatter6.defaultNewLine = "";
        helpFormatter6.defaultDescPad = '4';
        helpFormatter6.setNewLine("");
        int int17 = helpFormatter6.findWrapPos("\n", (int) ' ', 3);
        java.util.Comparator comparator18 = helpFormatter6.optionComparator;
        helpFormatter0.setOptionComparator(comparator18);
        helpFormatter0.setLongOptPrefix("   ");
        helpFormatter0.setWidth((-2));
        org.junit.Assert.assertNotNull(comparator1);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(comparator18);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #551
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: getfield      #47
37: astore_2
38: aload_1
39: ldc           #10
41: invokevirtual #64
44: astore_3
45: aload_1
46: ldc           #24
48: invokevirtual #91
51: new           #8
54: dup
55: invokespecial #9
58: astore        4
60: aload         4
62: invokevirtual #22
65: istore        5
67: aload         4
69: ldc           #10
71: putfield      #23
74: aload         4
76: bipush        52
78: putfield      #76
81: aload         4
83: ldc           #10
85: invokevirtual #131
88: aload         4
90: ldc           #65
92: bipush        32
94: iconst_3
95: invokevirtual #93
98: istore        6
100: aload         4
102: getfield      #47
105: astore        7
107: aload_1
108: aload         7
110: invokevirtual #152
113: aload_1
114: ldc_w         #259
117: invokevirtual #49
120: aload_1
121: bipush        -2
123: invokevirtual #156
126: aload_2
127: invokestatic  #51
130: new           #29
133: dup
134: invokespecial #30
137: ldc           #31
139: invokevirtual #32
142: aload_3
143: invokevirtual #32
146: ldc           #68
148: invokevirtual #32
151: invokevirtual #35
154: aload_3
155: ldc           #10
157: invokestatic  #53
160: new           #29
163: dup
164: invokespecial #30
167: ldc           #31
169: invokevirtual #32
172: iload         5
174: invokevirtual #33
177: ldc           #34
179: invokevirtual #32
182: iconst_1
183: invokevirtual #33
186: ldc           #31
188: invokevirtual #32
191: invokevirtual #35
194: iload         5
196: iconst_1
197: if_icmpne     204
200: iconst_1
201: goto          205
204: iconst_0
205: invokestatic  #36
208: new           #29
211: dup
212: invokespecial #30
215: ldc           #31
217: invokevirtual #32
220: iload         6
222: invokevirtual #33
225: ldc           #34
227: invokevirtual #32
230: iconst_m1
231: invokevirtual #33
234: ldc           #31
236: invokevirtual #32
239: invokevirtual #35
242: iload         6
244: iconst_m1
245: if_icmpne     252
248: iconst_1
249: goto          253
252: iconst_0
253: invokestatic  #36
256: aload         7
258: invokestatic  #51
261: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0446
Start line: 9620
End line: 0
Method source code: 
    public void test0446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0446");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str3 = helpFormatter0.getOptPrefix();
        java.util.Comparator comparator4 = helpFormatter0.optionComparator;
        java.lang.String str5 = helpFormatter0.getOptPrefix();
        java.lang.String str7 = helpFormatter0.rtrim("                                                                                                 ");
        org.apache.commons.cli.Options options11 = null;
        try {
            helpFormatter0.printHelp(52, "                                                                                                    ", "   ", options11, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "--" + "'", str2, "--");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "-" + "'", str3, "-");
        org.junit.Assert.assertNotNull(comparator4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "-" + "'", str5, "-");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #552
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: getfield      #55
42: astore_3
43: aload_1
44: invokevirtual #123
47: astore        4
49: aload_1
50: getfield      #47
53: astore        5
55: aload_1
56: invokevirtual #123
59: astore        6
61: aload_1
62: ldc           #141
64: invokevirtual #64
67: astore        7
69: aconst_null
70: astore        8
72: aload_1
73: bipush        52
75: ldc           #240
77: ldc_w         #259
80: aload         8
82: ldc           #10
84: invokevirtual #45
87: ldc           #14
89: invokestatic  #15
92: goto          97
95: astore        9
97: new           #29
100: dup
101: invokespecial #30
104: ldc           #31
106: invokevirtual #32
109: iload_2
110: invokevirtual #33
113: ldc           #34
115: invokevirtual #32
118: iconst_1
119: invokevirtual #33
122: ldc           #31
124: invokevirtual #32
127: invokevirtual #35
130: iload_2
131: iconst_1
132: if_icmpne     139
135: iconst_1
136: goto          140
139: iconst_0
140: invokestatic  #36
143: new           #29
146: dup
147: invokespecial #30
150: ldc           #31
152: invokevirtual #32
155: aload_3
156: invokevirtual #32
159: ldc           #52
161: invokevirtual #32
164: invokevirtual #35
167: aload_3
168: ldc           #44
170: invokestatic  #53
173: new           #29
176: dup
177: invokespecial #30
180: ldc           #31
182: invokevirtual #32
185: aload         4
187: invokevirtual #32
190: ldc           #66
192: invokevirtual #32
195: invokevirtual #35
198: aload         4
200: ldc           #67
202: invokestatic  #53
205: aload         5
207: invokestatic  #51
210: new           #29
213: dup
214: invokespecial #30
217: ldc           #31
219: invokevirtual #32
222: aload         6
224: invokevirtual #32
227: ldc           #66
229: invokevirtual #32
232: invokevirtual #35
235: aload         6
237: ldc           #67
239: invokestatic  #53
242: new           #29
245: dup
246: invokespecial #30
249: ldc           #31
251: invokevirtual #32
254: aload         7
256: invokevirtual #32
259: ldc           #68
261: invokevirtual #32
264: invokevirtual #35
267: aload         7
269: ldc           #10
271: invokestatic  #53
274: return
Exception table:
from    to  target type
72    92    95   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0447
Start line: 9647
End line: 0
Method source code: 
    public void test0447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0447");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        helpFormatter0.defaultArgName = "hi!";
        java.lang.String str9 = helpFormatter0.createPadding((int) (byte) 10);
        int int10 = helpFormatter0.defaultDescPad;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "          " + "'", str9, "          ");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 10 + "'", int10 == 10);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #553
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: bipush        10
47: invokevirtual #38
50: aload_1
51: ldc           #25
53: putfield      #77
56: aload_1
57: bipush        10
59: invokevirtual #108
62: astore_3
63: aload_1
64: getfield      #76
67: istore        4
69: new           #29
72: dup
73: invokespecial #30
76: ldc           #31
78: invokevirtual #32
81: iload_2
82: invokevirtual #33
85: ldc           #34
87: invokevirtual #32
90: iconst_1
91: invokevirtual #33
94: ldc           #31
96: invokevirtual #32
99: invokevirtual #35
102: iload_2
103: iconst_1
104: if_icmpne     111
107: iconst_1
108: goto          112
111: iconst_0
112: invokestatic  #36
115: new           #29
118: dup
119: invokespecial #30
122: ldc           #31
124: invokevirtual #32
127: aload_3
128: invokevirtual #32
131: ldc           #204
133: invokevirtual #32
136: invokevirtual #35
139: aload_3
140: ldc           #114
142: invokestatic  #53
145: new           #29
148: dup
149: invokespecial #30
152: ldc           #31
154: invokevirtual #32
157: iload         4
159: invokevirtual #33
162: ldc           #34
164: invokevirtual #32
167: bipush        10
169: invokevirtual #33
172: ldc           #31
174: invokevirtual #32
177: invokevirtual #35
180: iload         4
182: bipush        10
184: if_icmpne     191
187: iconst_1
188: goto          192
191: iconst_0
192: invokestatic  #36
195: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0448
Start line: 9663
End line: 0
Method source code: 
    public void test0448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0448");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        java.lang.String str3 = helpFormatter0.getLongOptSeparator();
        helpFormatter0.setWidth(0);
        helpFormatter0.defaultNewLine = "          ";
        java.lang.String str9 = helpFormatter0.createPadding(0);
        helpFormatter0.setDescPadding(74);
        helpFormatter0.defaultArgName = "   ";
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + " " + "'", str3, " ");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #554
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #10
36: invokevirtual #11
39: aload_1
40: invokevirtual #86
43: astore_2
44: aload_1
45: iconst_0
46: invokevirtual #156
49: aload_1
50: ldc           #114
52: putfield      #23
55: aload_1
56: iconst_0
57: invokevirtual #108
60: astore_3
61: aload_1
62: bipush        74
64: invokevirtual #38
67: aload_1
68: ldc_w         #259
71: putfield      #77
74: new           #29
77: dup
78: invokespecial #30
81: ldc           #31
83: invokevirtual #32
86: aload_2
87: invokevirtual #32
90: ldc           #88
92: invokevirtual #32
95: invokevirtual #35
98: aload_2
99: ldc           #24
101: invokestatic  #53
104: new           #29
107: dup
108: invokespecial #30
111: ldc           #31
113: invokevirtual #32
116: aload_3
117: invokevirtual #32
120: ldc           #68
122: invokevirtual #32
125: invokevirtual #35
128: aload_3
129: ldc           #10
131: invokestatic  #53
134: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0449
Start line: 9679
End line: 0
Method source code: 
    public void test0449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0449");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.defaultArgName;
        java.lang.String str3 = helpFormatter0.defaultNewLine;
        helpFormatter0.defaultLeftPad = 10;
        java.lang.String str6 = helpFormatter0.defaultSyntaxPrefix;
        java.lang.String str7 = helpFormatter0.getOptPrefix();
        java.io.PrintWriter printWriter8 = null;
        try {
            helpFormatter0.printWrapped(printWriter8, (-2), "usage:");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "arg" + "'", str2, "arg");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\n" + "'", str3, "\n");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "usage: " + "'", str6, "usage: ");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "-" + "'", str7, "-");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #555
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: getfield      #77
42: astore_3
43: aload_1
44: getfield      #23
47: astore        4
49: aload_1
50: bipush        10
52: putfield      #60
55: aload_1
56: getfield      #97
59: astore        5
61: aload_1
62: invokevirtual #123
65: astore        6
67: aconst_null
68: astore        7
70: aload_1
71: aload         7
73: bipush        -2
75: ldc_w         #501
78: invokevirtual #82
81: ldc           #178
83: invokestatic  #15
86: goto          91
89: astore        8
91: new           #29
94: dup
95: invokespecial #30
98: ldc           #31
100: invokevirtual #32
103: iload_2
104: invokevirtual #33
107: ldc           #34
109: invokevirtual #32
112: iconst_1
113: invokevirtual #33
116: ldc           #31
118: invokevirtual #32
121: invokevirtual #35
124: iload_2
125: iconst_1
126: if_icmpne     133
129: iconst_1
130: goto          134
133: iconst_0
134: invokestatic  #36
137: new           #29
140: dup
141: invokespecial #30
144: ldc           #31
146: invokevirtual #32
149: aload_3
150: invokevirtual #32
153: ldc           #78
155: invokevirtual #32
158: invokevirtual #35
161: aload_3
162: ldc           #79
164: invokestatic  #53
167: new           #29
170: dup
171: invokespecial #30
174: ldc           #31
176: invokevirtual #32
179: aload         4
181: invokevirtual #32
184: ldc           #74
186: invokevirtual #32
189: invokevirtual #35
192: aload         4
194: ldc           #65
196: invokestatic  #53
199: new           #29
202: dup
203: invokespecial #30
206: ldc           #31
208: invokevirtual #32
211: aload         5
213: invokevirtual #32
216: ldc           #99
218: invokevirtual #32
221: invokevirtual #35
224: aload         5
226: ldc           #12
228: invokestatic  #53
231: new           #29
234: dup
235: invokespecial #30
238: ldc           #31
240: invokevirtual #32
243: aload         6
245: invokevirtual #32
248: ldc           #66
250: invokevirtual #32
253: invokevirtual #35
256: aload         6
258: ldc           #67
260: invokestatic  #53
263: return
Exception table:
from    to  target type
70    86    89   Class java/lang/StringIndexOutOfBoundsException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0450
Start line: 9705
End line: 0
Method source code: 
    public void test0450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0450");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        java.lang.String str6 = helpFormatter0.getOptPrefix();
        java.lang.String str7 = helpFormatter0.getNewLine();
        helpFormatter0.defaultOptPrefix = "";
        helpFormatter0.defaultLeftPad = (short) 10;
        org.apache.commons.cli.Options options15 = null;
        try {
            helpFormatter0.printHelp(100, "", "                                ", options15, "          ", false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: cmdLineSyntax not provided");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "-" + "'", str6, "-");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #556
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: bipush        10
47: invokevirtual #38
50: aload_1
51: invokevirtual #123
54: astore_3
55: aload_1
56: invokevirtual #72
59: astore        4
61: aload_1
62: ldc           #10
64: putfield      #63
67: aload_1
68: bipush        10
70: putfield      #60
73: aconst_null
74: astore        5
76: aload_1
77: bipush        100
79: ldc           #10
81: ldc_w         #456
84: aload         5
86: ldc           #114
88: iconst_0
89: invokevirtual #26
92: ldc           #27
94: invokestatic  #15
97: goto          102
100: astore        6
102: new           #29
105: dup
106: invokespecial #30
109: ldc           #31
111: invokevirtual #32
114: iload_2
115: invokevirtual #33
118: ldc           #34
120: invokevirtual #32
123: iconst_1
124: invokevirtual #33
127: ldc           #31
129: invokevirtual #32
132: invokevirtual #35
135: iload_2
136: iconst_1
137: if_icmpne     144
140: iconst_1
141: goto          145
144: iconst_0
145: invokestatic  #36
148: new           #29
151: dup
152: invokespecial #30
155: ldc           #31
157: invokevirtual #32
160: aload_3
161: invokevirtual #32
164: ldc           #66
166: invokevirtual #32
169: invokevirtual #35
172: aload_3
173: ldc           #67
175: invokestatic  #53
178: new           #29
181: dup
182: invokespecial #30
185: ldc           #31
187: invokevirtual #32
190: aload         4
192: invokevirtual #32
195: ldc           #68
197: invokevirtual #32
200: invokevirtual #35
203: aload         4
205: ldc           #10
207: invokestatic  #53
210: return
Exception table:
from    to  target type
76    97   100   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0451
Start line: 9730
End line: 0
Method source code: 
    public void test0451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0451");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        java.lang.String str6 = helpFormatter0.rtrim("");
        int int7 = helpFormatter0.getDescPadding();
        int int8 = helpFormatter0.getDescPadding();
        java.lang.String str9 = helpFormatter0.getArgName();
        helpFormatter0.setDescPadding(0);
        helpFormatter0.defaultDescPad = (short) 100;
        java.util.Comparator comparator14 = helpFormatter0.optionComparator;
        java.lang.String str15 = helpFormatter0.getNewLine();
        helpFormatter0.defaultSyntaxPrefix = "";
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 3 + "'", int7 == 3);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 3 + "'", int8 == 3);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "arg" + "'", str9, "arg");
        org.junit.Assert.assertNotNull(comparator14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #557
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: getfield      #63
48: astore_3
49: aload_1
50: ldc           #10
52: invokevirtual #64
55: astore        4
57: aload_1
58: invokevirtual #118
61: istore        5
63: aload_1
64: invokevirtual #118
67: istore        6
69: aload_1
70: invokevirtual #104
73: astore        7
75: aload_1
76: iconst_0
77: invokevirtual #38
80: aload_1
81: bipush        100
83: putfield      #76
86: aload_1
87: getfield      #47
90: astore        8
92: aload_1
93: invokevirtual #72
96: astore        9
98: aload_1
99: ldc           #10
101: putfield      #97
104: new           #29
107: dup
108: invokespecial #30
111: ldc           #31
113: invokevirtual #32
116: iload_2
117: invokevirtual #33
120: ldc           #34
122: invokevirtual #32
125: iconst_1
126: invokevirtual #33
129: ldc           #31
131: invokevirtual #32
134: invokevirtual #35
137: iload_2
138: iconst_1
139: if_icmpne     146
142: iconst_1
143: goto          147
146: iconst_0
147: invokestatic  #36
150: new           #29
153: dup
154: invokespecial #30
157: ldc           #31
159: invokevirtual #32
162: aload_3
163: invokevirtual #32
166: ldc           #66
168: invokevirtual #32
171: invokevirtual #35
174: aload_3
175: ldc           #67
177: invokestatic  #53
180: new           #29
183: dup
184: invokespecial #30
187: ldc           #31
189: invokevirtual #32
192: aload         4
194: invokevirtual #32
197: ldc           #68
199: invokevirtual #32
202: invokevirtual #35
205: aload         4
207: ldc           #10
209: invokestatic  #53
212: new           #29
215: dup
216: invokespecial #30
219: ldc           #31
221: invokevirtual #32
224: iload         5
226: invokevirtual #33
229: ldc           #34
231: invokevirtual #32
234: iconst_3
235: invokevirtual #33
238: ldc           #31
240: invokevirtual #32
243: invokevirtual #35
246: iload         5
248: iconst_3
249: if_icmpne     256
252: iconst_1
253: goto          257
256: iconst_0
257: invokestatic  #36
260: new           #29
263: dup
264: invokespecial #30
267: ldc           #31
269: invokevirtual #32
272: iload         6
274: invokevirtual #33
277: ldc           #34
279: invokevirtual #32
282: iconst_3
283: invokevirtual #33
286: ldc           #31
288: invokevirtual #32
291: invokevirtual #35
294: iload         6
296: iconst_3
297: if_icmpne     304
300: iconst_1
301: goto          305
304: iconst_0
305: invokestatic  #36
308: new           #29
311: dup
312: invokespecial #30
315: ldc           #31
317: invokevirtual #32
320: aload         7
322: invokevirtual #32
325: ldc           #78
327: invokevirtual #32
330: invokevirtual #35
333: aload         7
335: ldc           #79
337: invokestatic  #53
340: aload         8
342: invokestatic  #51
345: new           #29
348: dup
349: invokespecial #30
352: ldc           #31
354: invokevirtual #32
357: aload         9
359: invokevirtual #32
362: ldc           #68
364: invokevirtual #32
367: invokevirtual #35
370: aload         9
372: ldc           #10
374: invokestatic  #53
377: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0452
Start line: 9757
End line: 0
Method source code: 
    public void test0452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0452");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str3 = helpFormatter0.getOptPrefix();
        java.util.Comparator comparator4 = helpFormatter0.optionComparator;
        helpFormatter0.setArgName("--");
        org.apache.commons.cli.HelpFormatter helpFormatter7 = new org.apache.commons.cli.HelpFormatter();
        int int8 = helpFormatter7.getLeftPadding();
        helpFormatter7.defaultNewLine = "";
        helpFormatter7.setDescPadding(10);
        helpFormatter7.setSyntaxPrefix(" ");
        int int15 = helpFormatter7.defaultLeftPad;
        helpFormatter7.setLeftPadding(1);
        java.util.Comparator comparator18 = helpFormatter7.optionComparator;
        helpFormatter0.setOptionComparator(comparator18);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "--" + "'", str2, "--");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "-" + "'", str3, "-");
        org.junit.Assert.assertNotNull(comparator4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(comparator18);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #558
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: getfield      #55
42: astore_3
43: aload_1
44: invokevirtual #123
47: astore        4
49: aload_1
50: getfield      #47
53: astore        5
55: aload_1
56: ldc           #44
58: invokevirtual #146
61: new           #8
64: dup
65: invokespecial #9
68: astore        6
70: aload         6
72: invokevirtual #22
75: istore        7
77: aload         6
79: ldc           #10
81: putfield      #23
84: aload         6
86: bipush        10
88: invokevirtual #38
91: aload         6
93: ldc           #24
95: invokevirtual #39
98: aload         6
100: getfield      #60
103: istore        8
105: aload         6
107: iconst_1
108: invokevirtual #193
111: aload         6
113: getfield      #47
116: astore        9
118: aload_1
119: aload         9
121: invokevirtual #152
124: new           #29
127: dup
128: invokespecial #30
131: ldc           #31
133: invokevirtual #32
136: iload_2
137: invokevirtual #33
140: ldc           #34
142: invokevirtual #32
145: iconst_1
146: invokevirtual #33
149: ldc           #31
151: invokevirtual #32
154: invokevirtual #35
157: iload_2
158: iconst_1
159: if_icmpne     166
162: iconst_1
163: goto          167
166: iconst_0
167: invokestatic  #36
170: new           #29
173: dup
174: invokespecial #30
177: ldc           #31
179: invokevirtual #32
182: aload_3
183: invokevirtual #32
186: ldc           #52
188: invokevirtual #32
191: invokevirtual #35
194: aload_3
195: ldc           #44
197: invokestatic  #53
200: new           #29
203: dup
204: invokespecial #30
207: ldc           #31
209: invokevirtual #32
212: aload         4
214: invokevirtual #32
217: ldc           #66
219: invokevirtual #32
222: invokevirtual #35
225: aload         4
227: ldc           #67
229: invokestatic  #53
232: aload         5
234: invokestatic  #51
237: new           #29
240: dup
241: invokespecial #30
244: ldc           #31
246: invokevirtual #32
249: iload         7
251: invokevirtual #33
254: ldc           #34
256: invokevirtual #32
259: iconst_1
260: invokevirtual #33
263: ldc           #31
265: invokevirtual #32
268: invokevirtual #35
271: iload         7
273: iconst_1
274: if_icmpne     281
277: iconst_1
278: goto          282
281: iconst_0
282: invokestatic  #36
285: new           #29
288: dup
289: invokespecial #30
292: ldc           #31
294: invokevirtual #32
297: iload         8
299: invokevirtual #33
302: ldc           #34
304: invokevirtual #32
307: iconst_1
308: invokevirtual #33
311: ldc           #31
313: invokevirtual #32
316: invokevirtual #35
319: iload         8
321: iconst_1
322: if_icmpne     329
325: iconst_1
326: goto          330
329: iconst_0
330: invokestatic  #36
333: aload         9
335: invokestatic  #51
338: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0453
Start line: 9785
End line: 0
Method source code: 
    public void test0453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0453");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        int int4 = helpFormatter0.defaultWidth;
        java.util.Comparator comparator5 = helpFormatter0.getOptionComparator();
        java.lang.String str6 = helpFormatter0.getLongOptSeparator();
        helpFormatter0.setArgName("hi!");
        java.io.PrintWriter printWriter9 = null;
        try {
            helpFormatter0.printWrapped(printWriter9, (int) (short) 0, (int) (short) 0, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 74 + "'", int4 == 74);
        org.junit.Assert.assertNotNull(comparator5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + " " + "'", str6, " ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #559
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: getfield      #110
48: istore_3
49: aload_1
50: invokevirtual #106
53: astore        4
55: aload_1
56: invokevirtual #86
59: astore        5
61: aload_1
62: ldc           #25
64: invokevirtual #146
67: aconst_null
68: astore        6
70: aload_1
71: aload         6
73: iconst_0
74: iconst_0
75: ldc           #10
77: invokevirtual #61
80: ldc           #14
82: invokestatic  #15
85: goto          90
88: astore        7
90: new           #29
93: dup
94: invokespecial #30
97: ldc           #31
99: invokevirtual #32
102: iload_2
103: invokevirtual #33
106: ldc           #34
108: invokevirtual #32
111: iconst_1
112: invokevirtual #33
115: ldc           #31
117: invokevirtual #32
120: invokevirtual #35
123: iload_2
124: iconst_1
125: if_icmpne     132
128: iconst_1
129: goto          133
132: iconst_0
133: invokestatic  #36
136: new           #29
139: dup
140: invokespecial #30
143: ldc           #31
145: invokevirtual #32
148: iload_3
149: invokevirtual #33
152: ldc           #34
154: invokevirtual #32
157: bipush        74
159: invokevirtual #33
162: ldc           #31
164: invokevirtual #32
167: invokevirtual #35
170: iload_3
171: bipush        74
173: if_icmpne     180
176: iconst_1
177: goto          181
180: iconst_0
181: invokestatic  #36
184: aload         4
186: invokestatic  #51
189: new           #29
192: dup
193: invokespecial #30
196: ldc           #31
198: invokevirtual #32
201: aload         5
203: invokevirtual #32
206: ldc           #88
208: invokevirtual #32
211: invokevirtual #35
214: aload         5
216: ldc           #24
218: invokestatic  #53
221: return
Exception table:
from    to  target type
70    85    88   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0454
Start line: 9810
End line: 0
Method source code: 
    public void test0454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0454");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setLongOptPrefix(" ");
        helpFormatter0.defaultDescPad = (short) 10;
        helpFormatter0.defaultSyntaxPrefix = "";
        helpFormatter0.setLongOptPrefix("");
        java.lang.String str13 = helpFormatter0.defaultNewLine;
        java.lang.String str14 = helpFormatter0.getLongOptPrefix();
        int int15 = helpFormatter0.getLeftPadding();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #560
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: getfield      #63
48: astore_3
49: aload_1
50: ldc           #24
52: invokevirtual #49
55: aload_1
56: bipush        10
58: putfield      #76
61: aload_1
62: ldc           #10
64: putfield      #97
67: aload_1
68: ldc           #10
70: invokevirtual #49
73: aload_1
74: getfield      #23
77: astore        4
79: aload_1
80: invokevirtual #48
83: astore        5
85: aload_1
86: invokevirtual #22
89: istore        6
91: new           #29
94: dup
95: invokespecial #30
98: ldc           #31
100: invokevirtual #32
103: iload_2
104: invokevirtual #33
107: ldc           #34
109: invokevirtual #32
112: iconst_1
113: invokevirtual #33
116: ldc           #31
118: invokevirtual #32
121: invokevirtual #35
124: iload_2
125: iconst_1
126: if_icmpne     133
129: iconst_1
130: goto          134
133: iconst_0
134: invokestatic  #36
137: new           #29
140: dup
141: invokespecial #30
144: ldc           #31
146: invokevirtual #32
149: aload_3
150: invokevirtual #32
153: ldc           #66
155: invokevirtual #32
158: invokevirtual #35
161: aload_3
162: ldc           #67
164: invokestatic  #53
167: new           #29
170: dup
171: invokespecial #30
174: ldc           #31
176: invokevirtual #32
179: aload         4
181: invokevirtual #32
184: ldc           #68
186: invokevirtual #32
189: invokevirtual #35
192: aload         4
194: ldc           #10
196: invokestatic  #53
199: new           #29
202: dup
203: invokespecial #30
206: ldc           #31
208: invokevirtual #32
211: aload         5
213: invokevirtual #32
216: ldc           #68
218: invokevirtual #32
221: invokevirtual #35
224: aload         5
226: ldc           #10
228: invokestatic  #53
231: new           #29
234: dup
235: invokespecial #30
238: ldc           #31
240: invokevirtual #32
243: iload         6
245: invokevirtual #33
248: ldc           #34
250: invokevirtual #32
253: iconst_1
254: invokevirtual #33
257: ldc           #31
259: invokevirtual #32
262: invokevirtual #35
265: iload         6
267: iconst_1
268: if_icmpne     275
271: iconst_1
272: goto          276
275: iconst_0
276: invokestatic  #36
279: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0455
Start line: 9832
End line: 0
Method source code: 
    public void test0455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0455");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        java.lang.String str6 = helpFormatter0.rtrim("");
        java.lang.String str7 = helpFormatter0.getNewLine();
        java.lang.String str8 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str9 = helpFormatter0.defaultNewLine;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "--" + "'", str8, "--");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #561
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: getfield      #63
48: astore_3
49: aload_1
50: ldc           #10
52: invokevirtual #64
55: astore        4
57: aload_1
58: invokevirtual #72
61: astore        5
63: aload_1
64: getfield      #55
67: astore        6
69: aload_1
70: getfield      #23
73: astore        7
75: new           #29
78: dup
79: invokespecial #30
82: ldc           #31
84: invokevirtual #32
87: iload_2
88: invokevirtual #33
91: ldc           #34
93: invokevirtual #32
96: iconst_1
97: invokevirtual #33
100: ldc           #31
102: invokevirtual #32
105: invokevirtual #35
108: iload_2
109: iconst_1
110: if_icmpne     117
113: iconst_1
114: goto          118
117: iconst_0
118: invokestatic  #36
121: new           #29
124: dup
125: invokespecial #30
128: ldc           #31
130: invokevirtual #32
133: aload_3
134: invokevirtual #32
137: ldc           #66
139: invokevirtual #32
142: invokevirtual #35
145: aload_3
146: ldc           #67
148: invokestatic  #53
151: new           #29
154: dup
155: invokespecial #30
158: ldc           #31
160: invokevirtual #32
163: aload         4
165: invokevirtual #32
168: ldc           #68
170: invokevirtual #32
173: invokevirtual #35
176: aload         4
178: ldc           #10
180: invokestatic  #53
183: new           #29
186: dup
187: invokespecial #30
190: ldc           #31
192: invokevirtual #32
195: aload         5
197: invokevirtual #32
200: ldc           #68
202: invokevirtual #32
205: invokevirtual #35
208: aload         5
210: ldc           #10
212: invokestatic  #53
215: new           #29
218: dup
219: invokespecial #30
222: ldc           #31
224: invokevirtual #32
227: aload         6
229: invokevirtual #32
232: ldc           #52
234: invokevirtual #32
237: invokevirtual #35
240: aload         6
242: ldc           #44
244: invokestatic  #53
247: new           #29
250: dup
251: invokespecial #30
254: ldc           #31
256: invokevirtual #32
259: aload         7
261: invokevirtual #32
264: ldc           #68
266: invokevirtual #32
269: invokevirtual #35
272: aload         7
274: ldc           #10
276: invokestatic  #53
279: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0456
Start line: 9852
End line: 0
Method source code: 
    public void test0456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0456");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.util.Comparator comparator1 = helpFormatter0.optionComparator;
        int int2 = helpFormatter0.getLeftPadding();
        int int3 = helpFormatter0.defaultLeftPad;
        java.lang.String str5 = helpFormatter0.createPadding((int) 'a');
        org.apache.commons.cli.HelpFormatter helpFormatter6 = new org.apache.commons.cli.HelpFormatter();
        int int7 = helpFormatter6.getLeftPadding();
        helpFormatter6.defaultNewLine = "";
        helpFormatter6.defaultDescPad = '4';
        helpFormatter6.setNewLine("");
        int int17 = helpFormatter6.findWrapPos("\n", (int) ' ', 3);
        java.util.Comparator comparator18 = helpFormatter6.optionComparator;
        helpFormatter0.setOptionComparator(comparator18);
        org.apache.commons.cli.Options options23 = null;
        try {
            helpFormatter0.printHelp((int) (short) 10, "hi!", "                                                                                                    ", options23, "--");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(comparator1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "                                                                                                 " + "'", str5, "                                                                                                 ");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(comparator18);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #562
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: getfield      #47
37: astore_2
38: aload_1
39: invokevirtual #22
42: istore_3
43: aload_1
44: getfield      #60
47: istore        4
49: aload_1
50: bipush        97
52: invokevirtual #108
55: astore        5
57: new           #8
60: dup
61: invokespecial #9
64: astore        6
66: aload         6
68: invokevirtual #22
71: istore        7
73: aload         6
75: ldc           #10
77: putfield      #23
80: aload         6
82: bipush        52
84: putfield      #76
87: aload         6
89: ldc           #10
91: invokevirtual #131
94: aload         6
96: ldc           #65
98: bipush        32
100: iconst_3
101: invokevirtual #93
104: istore        8
106: aload         6
108: getfield      #47
111: astore        9
113: aload_1
114: aload         9
116: invokevirtual #152
119: aconst_null
120: astore        10
122: aload_1
123: bipush        10
125: ldc           #25
127: ldc           #240
129: aload         10
131: ldc           #44
133: invokevirtual #45
136: ldc           #14
138: invokestatic  #15
141: goto          146
144: astore        11
146: aload_2
147: invokestatic  #51
150: new           #29
153: dup
154: invokespecial #30
157: ldc           #31
159: invokevirtual #32
162: iload_3
163: invokevirtual #33
166: ldc           #34
168: invokevirtual #32
171: iconst_1
172: invokevirtual #33
175: ldc           #31
177: invokevirtual #32
180: invokevirtual #35
183: iload_3
184: iconst_1
185: if_icmpne     192
188: iconst_1
189: goto          193
192: iconst_0
193: invokestatic  #36
196: new           #29
199: dup
200: invokespecial #30
203: ldc           #31
205: invokevirtual #32
208: iload         4
210: invokevirtual #33
213: ldc           #34
215: invokevirtual #32
218: iconst_1
219: invokevirtual #33
222: ldc           #31
224: invokevirtual #32
227: invokevirtual #35
230: iload         4
232: iconst_1
233: if_icmpne     240
236: iconst_1
237: goto          241
240: iconst_0
241: invokestatic  #36
244: new           #29
247: dup
248: invokespecial #30
251: ldc           #31
253: invokevirtual #32
256: aload         5
258: invokevirtual #32
261: ldc           #185
263: invokevirtual #32
266: invokevirtual #35
269: aload         5
271: ldc           #141
273: invokestatic  #53
276: new           #29
279: dup
280: invokespecial #30
283: ldc           #31
285: invokevirtual #32
288: iload         7
290: invokevirtual #33
293: ldc           #34
295: invokevirtual #32
298: iconst_1
299: invokevirtual #33
302: ldc           #31
304: invokevirtual #32
307: invokevirtual #35
310: iload         7
312: iconst_1
313: if_icmpne     320
316: iconst_1
317: goto          321
320: iconst_0
321: invokestatic  #36
324: new           #29
327: dup
328: invokespecial #30
331: ldc           #31
333: invokevirtual #32
336: iload         8
338: invokevirtual #33
341: ldc           #34
343: invokevirtual #32
346: iconst_m1
347: invokevirtual #33
350: ldc           #31
352: invokevirtual #32
355: invokevirtual #35
358: iload         8
360: iconst_m1
361: if_icmpne     368
364: iconst_1
365: goto          369
368: iconst_0
369: invokestatic  #36
372: aload         9
374: invokestatic  #51
377: return
Exception table:
from    to  target type
122   141   144   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0457
Start line: 9886
End line: 0
Method source code: 
    public void test0457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0457");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        helpFormatter0.defaultDescPad = 0;
        org.apache.commons.cli.HelpFormatter helpFormatter8 = new org.apache.commons.cli.HelpFormatter();
        java.util.Comparator comparator9 = helpFormatter8.optionComparator;
        int int10 = helpFormatter8.getLeftPadding();
        int int11 = helpFormatter8.defaultLeftPad;
        java.lang.String str13 = helpFormatter8.createPadding((int) 'a');
        org.apache.commons.cli.HelpFormatter helpFormatter14 = new org.apache.commons.cli.HelpFormatter();
        int int15 = helpFormatter14.getLeftPadding();
        helpFormatter14.defaultNewLine = "";
        helpFormatter14.defaultDescPad = '4';
        helpFormatter14.setNewLine("");
        int int25 = helpFormatter14.findWrapPos("\n", (int) ' ', 3);
        java.util.Comparator comparator26 = helpFormatter14.optionComparator;
        helpFormatter8.setOptionComparator(comparator26);
        helpFormatter0.setOptionComparator(comparator26);
        int int29 = helpFormatter0.getLeftPadding();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(comparator9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "                                                                                                 " + "'", str13, "                                                                                                 ");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(comparator26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #563
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #10
36: invokevirtual #11
39: aload_1
40: ldc           #10
42: putfield      #55
45: aload_1
46: getfield      #55
49: astore_2
50: aload_1
51: iconst_0
52: putfield      #76
55: new           #8
58: dup
59: invokespecial #9
62: astore_3
63: aload_3
64: getfield      #47
67: astore        4
69: aload_3
70: invokevirtual #22
73: istore        5
75: aload_3
76: getfield      #60
79: istore        6
81: aload_3
82: bipush        97
84: invokevirtual #108
87: astore        7
89: new           #8
92: dup
93: invokespecial #9
96: astore        8
98: aload         8
100: invokevirtual #22
103: istore        9
105: aload         8
107: ldc           #10
109: putfield      #23
112: aload         8
114: bipush        52
116: putfield      #76
119: aload         8
121: ldc           #10
123: invokevirtual #131
126: aload         8
128: ldc           #65
130: bipush        32
132: iconst_3
133: invokevirtual #93
136: istore        10
138: aload         8
140: getfield      #47
143: astore        11
145: aload_3
146: aload         11
148: invokevirtual #152
151: aload_1
152: aload         11
154: invokevirtual #152
157: aload_1
158: invokevirtual #22
161: istore        12
163: new           #29
166: dup
167: invokespecial #30
170: ldc           #31
172: invokevirtual #32
175: aload_2
176: invokevirtual #32
179: ldc           #68
181: invokevirtual #32
184: invokevirtual #35
187: aload_2
188: ldc           #10
190: invokestatic  #53
193: aload         4
195: invokestatic  #51
198: new           #29
201: dup
202: invokespecial #30
205: ldc           #31
207: invokevirtual #32
210: iload         5
212: invokevirtual #33
215: ldc           #34
217: invokevirtual #32
220: iconst_1
221: invokevirtual #33
224: ldc           #31
226: invokevirtual #32
229: invokevirtual #35
232: iload         5
234: iconst_1
235: if_icmpne     242
238: iconst_1
239: goto          243
242: iconst_0
243: invokestatic  #36
246: new           #29
249: dup
250: invokespecial #30
253: ldc           #31
255: invokevirtual #32
258: iload         6
260: invokevirtual #33
263: ldc           #34
265: invokevirtual #32
268: iconst_1
269: invokevirtual #33
272: ldc           #31
274: invokevirtual #32
277: invokevirtual #35
280: iload         6
282: iconst_1
283: if_icmpne     290
286: iconst_1
287: goto          291
290: iconst_0
291: invokestatic  #36
294: new           #29
297: dup
298: invokespecial #30
301: ldc           #31
303: invokevirtual #32
306: aload         7
308: invokevirtual #32
311: ldc           #185
313: invokevirtual #32
316: invokevirtual #35
319: aload         7
321: ldc           #141
323: invokestatic  #53
326: new           #29
329: dup
330: invokespecial #30
333: ldc           #31
335: invokevirtual #32
338: iload         9
340: invokevirtual #33
343: ldc           #34
345: invokevirtual #32
348: iconst_1
349: invokevirtual #33
352: ldc           #31
354: invokevirtual #32
357: invokevirtual #35
360: iload         9
362: iconst_1
363: if_icmpne     370
366: iconst_1
367: goto          371
370: iconst_0
371: invokestatic  #36
374: new           #29
377: dup
378: invokespecial #30
381: ldc           #31
383: invokevirtual #32
386: iload         10
388: invokevirtual #33
391: ldc           #34
393: invokevirtual #32
396: iconst_m1
397: invokevirtual #33
400: ldc           #31
402: invokevirtual #32
405: invokevirtual #35
408: iload         10
410: iconst_m1
411: if_icmpne     418
414: iconst_1
415: goto          419
418: iconst_0
419: invokestatic  #36
422: aload         11
424: invokestatic  #51
427: new           #29
430: dup
431: invokespecial #30
434: ldc           #31
436: invokevirtual #32
439: iload         12
441: invokevirtual #33
444: ldc           #34
446: invokevirtual #32
449: iconst_1
450: invokevirtual #33
453: ldc           #31
455: invokevirtual #32
458: invokevirtual #35
461: iload         12
463: iconst_1
464: if_icmpne     471
467: iconst_1
468: goto          472
471: iconst_0
472: invokestatic  #36
475: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0458
Start line: 9921
End line: 0
Method source code: 
    public void test0458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0458");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.lang.String str1 = helpFormatter0.defaultSyntaxPrefix;
        int int2 = helpFormatter0.getWidth();
        java.lang.String str3 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setLongOptSeparator("                                                                                                 ");
        java.lang.String str7 = helpFormatter0.createPadding((int) (byte) 100);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "usage: " + "'", str1, "usage: ");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 74 + "'", int2 == 74);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "-" + "'", str3, "-");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "                                                                                                    " + "'", str7, "                                                                                                    ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #564
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: getfield      #97
37: astore_2
38: aload_1
39: invokevirtual #129
42: istore_3
43: aload_1
44: getfield      #63
47: astore        4
49: aload_1
50: ldc           #141
52: invokevirtual #91
55: aload_1
56: bipush        100
58: invokevirtual #108
61: astore        5
63: new           #29
66: dup
67: invokespecial #30
70: ldc           #31
72: invokevirtual #32
75: aload_2
76: invokevirtual #32
79: ldc           #99
81: invokevirtual #32
84: invokevirtual #35
87: aload_2
88: ldc           #12
90: invokestatic  #53
93: new           #29
96: dup
97: invokespecial #30
100: ldc           #31
102: invokevirtual #32
105: iload_3
106: invokevirtual #33
109: ldc           #34
111: invokevirtual #32
114: bipush        74
116: invokevirtual #33
119: ldc           #31
121: invokevirtual #32
124: invokevirtual #35
127: iload_3
128: bipush        74
130: if_icmpne     137
133: iconst_1
134: goto          138
137: iconst_0
138: invokestatic  #36
141: new           #29
144: dup
145: invokespecial #30
148: ldc           #31
150: invokevirtual #32
153: aload         4
155: invokevirtual #32
158: ldc           #66
160: invokevirtual #32
163: invokevirtual #35
166: aload         4
168: ldc           #67
170: invokestatic  #53
173: new           #29
176: dup
177: invokespecial #30
180: ldc           #31
182: invokevirtual #32
185: aload         5
187: invokevirtual #32
190: ldc_w         #299
193: invokevirtual #32
196: invokevirtual #35
199: aload         5
201: ldc           #240
203: invokestatic  #53
206: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0459
Start line: 9937
End line: 0
Method source code: 
    public void test0459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0459");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        java.lang.String str6 = helpFormatter0.rtrim("");
        java.lang.String str7 = helpFormatter0.getNewLine();
        java.lang.String str8 = helpFormatter0.defaultNewLine;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #565
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: getfield      #63
48: astore_3
49: aload_1
50: ldc           #10
52: invokevirtual #64
55: astore        4
57: aload_1
58: invokevirtual #72
61: astore        5
63: aload_1
64: getfield      #23
67: astore        6
69: new           #29
72: dup
73: invokespecial #30
76: ldc           #31
78: invokevirtual #32
81: iload_2
82: invokevirtual #33
85: ldc           #34
87: invokevirtual #32
90: iconst_1
91: invokevirtual #33
94: ldc           #31
96: invokevirtual #32
99: invokevirtual #35
102: iload_2
103: iconst_1
104: if_icmpne     111
107: iconst_1
108: goto          112
111: iconst_0
112: invokestatic  #36
115: new           #29
118: dup
119: invokespecial #30
122: ldc           #31
124: invokevirtual #32
127: aload_3
128: invokevirtual #32
131: ldc           #66
133: invokevirtual #32
136: invokevirtual #35
139: aload_3
140: ldc           #67
142: invokestatic  #53
145: new           #29
148: dup
149: invokespecial #30
152: ldc           #31
154: invokevirtual #32
157: aload         4
159: invokevirtual #32
162: ldc           #68
164: invokevirtual #32
167: invokevirtual #35
170: aload         4
172: ldc           #10
174: invokestatic  #53
177: new           #29
180: dup
181: invokespecial #30
184: ldc           #31
186: invokevirtual #32
189: aload         5
191: invokevirtual #32
194: ldc           #68
196: invokevirtual #32
199: invokevirtual #35
202: aload         5
204: ldc           #10
206: invokestatic  #53
209: new           #29
212: dup
213: invokespecial #30
216: ldc           #31
218: invokevirtual #32
221: aload         6
223: invokevirtual #32
226: ldc           #68
228: invokevirtual #32
231: invokevirtual #35
234: aload         6
236: ldc           #10
238: invokestatic  #53
241: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0460
Start line: 9955
End line: 0
Method source code: 
    public void test0460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0460");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str3 = helpFormatter0.getOptPrefix();
        java.util.Comparator comparator4 = helpFormatter0.optionComparator;
        java.lang.String str5 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.defaultWidth = (short) 0;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "--" + "'", str2, "--");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "-" + "'", str3, "-");
        org.junit.Assert.assertNotNull(comparator4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "-" + "'", str5, "-");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #566
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: getfield      #55
42: astore_3
43: aload_1
44: invokevirtual #123
47: astore        4
49: aload_1
50: getfield      #47
53: astore        5
55: aload_1
56: getfield      #63
59: astore        6
61: aload_1
62: iconst_0
63: putfield      #110
66: new           #29
69: dup
70: invokespecial #30
73: ldc           #31
75: invokevirtual #32
78: iload_2
79: invokevirtual #33
82: ldc           #34
84: invokevirtual #32
87: iconst_1
88: invokevirtual #33
91: ldc           #31
93: invokevirtual #32
96: invokevirtual #35
99: iload_2
100: iconst_1
101: if_icmpne     108
104: iconst_1
105: goto          109
108: iconst_0
109: invokestatic  #36
112: new           #29
115: dup
116: invokespecial #30
119: ldc           #31
121: invokevirtual #32
124: aload_3
125: invokevirtual #32
128: ldc           #52
130: invokevirtual #32
133: invokevirtual #35
136: aload_3
137: ldc           #44
139: invokestatic  #53
142: new           #29
145: dup
146: invokespecial #30
149: ldc           #31
151: invokevirtual #32
154: aload         4
156: invokevirtual #32
159: ldc           #66
161: invokevirtual #32
164: invokevirtual #35
167: aload         4
169: ldc           #67
171: invokestatic  #53
174: aload         5
176: invokestatic  #51
179: new           #29
182: dup
183: invokespecial #30
186: ldc           #31
188: invokevirtual #32
191: aload         6
193: invokevirtual #32
196: ldc           #66
198: invokevirtual #32
201: invokevirtual #35
204: aload         6
206: ldc           #67
208: invokestatic  #53
211: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0461
Start line: 9973
End line: 0
Method source code: 
    public void test0461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0461");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.util.Comparator comparator1 = helpFormatter0.optionComparator;
        int int2 = helpFormatter0.defaultLeftPad;
        helpFormatter0.defaultLongOptPrefix = "";
        helpFormatter0.setWidth(0);
        org.junit.Assert.assertNotNull(comparator1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #567
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: getfield      #47
37: astore_2
38: aload_1
39: getfield      #60
42: istore_3
43: aload_1
44: ldc           #10
46: putfield      #55
49: aload_1
50: iconst_0
51: invokevirtual #156
54: aload_2
55: invokestatic  #51
58: new           #29
61: dup
62: invokespecial #30
65: ldc           #31
67: invokevirtual #32
70: iload_3
71: invokevirtual #33
74: ldc           #34
76: invokevirtual #32
79: iconst_1
80: invokevirtual #33
83: ldc           #31
85: invokevirtual #32
88: invokevirtual #35
91: iload_3
92: iconst_1
93: if_icmpne     100
96: iconst_1
97: goto          101
100: iconst_0
101: invokestatic  #36
104: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0462
Start line: 9986
End line: 0
Method source code: 
    public void test0462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0462");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        int int6 = helpFormatter0.defaultWidth;
        java.lang.String str7 = helpFormatter0.getLongOptPrefix();
        java.lang.String str8 = helpFormatter0.getLongOptPrefix();
        helpFormatter0.setLongOptSeparator("hi!");
        int int11 = helpFormatter0.getWidth();
        java.lang.String str12 = helpFormatter0.defaultSyntaxPrefix;
        helpFormatter0.setSyntaxPrefix("arg");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "--" + "'", str5, "--");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 74 + "'", int6 == 74);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "--" + "'", str7, "--");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "--" + "'", str8, "--");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 74 + "'", int11 == 74);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "usage: " + "'", str12, "usage: ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #568
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: getfield      #63
48: astore_3
49: aload_1
50: getfield      #55
53: astore        4
55: aload_1
56: getfield      #110
59: istore        5
61: aload_1
62: invokevirtual #48
65: astore        6
67: aload_1
68: invokevirtual #48
71: astore        7
73: aload_1
74: ldc           #25
76: invokevirtual #91
79: aload_1
80: invokevirtual #129
83: istore        8
85: aload_1
86: getfield      #97
89: astore        9
91: aload_1
92: ldc           #79
94: invokevirtual #39
97: new           #29
100: dup
101: invokespecial #30
104: ldc           #31
106: invokevirtual #32
109: iload_2
110: invokevirtual #33
113: ldc           #34
115: invokevirtual #32
118: iconst_1
119: invokevirtual #33
122: ldc           #31
124: invokevirtual #32
127: invokevirtual #35
130: iload_2
131: iconst_1
132: if_icmpne     139
135: iconst_1
136: goto          140
139: iconst_0
140: invokestatic  #36
143: new           #29
146: dup
147: invokespecial #30
150: ldc           #31
152: invokevirtual #32
155: aload_3
156: invokevirtual #32
159: ldc           #66
161: invokevirtual #32
164: invokevirtual #35
167: aload_3
168: ldc           #67
170: invokestatic  #53
173: new           #29
176: dup
177: invokespecial #30
180: ldc           #31
182: invokevirtual #32
185: aload         4
187: invokevirtual #32
190: ldc           #52
192: invokevirtual #32
195: invokevirtual #35
198: aload         4
200: ldc           #44
202: invokestatic  #53
205: new           #29
208: dup
209: invokespecial #30
212: ldc           #31
214: invokevirtual #32
217: iload         5
219: invokevirtual #33
222: ldc           #34
224: invokevirtual #32
227: bipush        74
229: invokevirtual #33
232: ldc           #31
234: invokevirtual #32
237: invokevirtual #35
240: iload         5
242: bipush        74
244: if_icmpne     251
247: iconst_1
248: goto          252
251: iconst_0
252: invokestatic  #36
255: new           #29
258: dup
259: invokespecial #30
262: ldc           #31
264: invokevirtual #32
267: aload         6
269: invokevirtual #32
272: ldc           #52
274: invokevirtual #32
277: invokevirtual #35
280: aload         6
282: ldc           #44
284: invokestatic  #53
287: new           #29
290: dup
291: invokespecial #30
294: ldc           #31
296: invokevirtual #32
299: aload         7
301: invokevirtual #32
304: ldc           #52
306: invokevirtual #32
309: invokevirtual #35
312: aload         7
314: ldc           #44
316: invokestatic  #53
319: new           #29
322: dup
323: invokespecial #30
326: ldc           #31
328: invokevirtual #32
331: iload         8
333: invokevirtual #33
336: ldc           #34
338: invokevirtual #32
341: bipush        74
343: invokevirtual #33
346: ldc           #31
348: invokevirtual #32
351: invokevirtual #35
354: iload         8
356: bipush        74
358: if_icmpne     365
361: iconst_1
362: goto          366
365: iconst_0
366: invokestatic  #36
369: new           #29
372: dup
373: invokespecial #30
376: ldc           #31
378: invokevirtual #32
381: aload         9
383: invokevirtual #32
386: ldc           #99
388: invokevirtual #32
391: invokevirtual #35
394: aload         9
396: ldc           #12
398: invokestatic  #53
401: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0463
Start line: 10012
End line: 0
Method source code: 
    public void test0463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0463");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.lang.String str1 = helpFormatter0.defaultSyntaxPrefix;
        int int2 = helpFormatter0.getWidth();
        helpFormatter0.setDescPadding((int) '4');
        org.apache.commons.cli.Options options7 = null;
        try {
            helpFormatter0.printHelp(" ", "", options7, "arg", false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "usage: " + "'", str1, "usage: ");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 74 + "'", int2 == 74);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #569
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: getfield      #97
37: astore_2
38: aload_1
39: invokevirtual #129
42: istore_3
43: aload_1
44: bipush        52
46: invokevirtual #38
49: aconst_null
50: astore        4
52: aload_1
53: ldc           #24
55: ldc           #10
57: aload         4
59: ldc           #79
61: iconst_0
62: invokevirtual #73
65: ldc           #14
67: invokestatic  #15
70: goto          75
73: astore        5
75: new           #29
78: dup
79: invokespecial #30
82: ldc           #31
84: invokevirtual #32
87: aload_2
88: invokevirtual #32
91: ldc           #99
93: invokevirtual #32
96: invokevirtual #35
99: aload_2
100: ldc           #12
102: invokestatic  #53
105: new           #29
108: dup
109: invokespecial #30
112: ldc           #31
114: invokevirtual #32
117: iload_3
118: invokevirtual #33
121: ldc           #34
123: invokevirtual #32
126: bipush        74
128: invokevirtual #33
131: ldc           #31
133: invokevirtual #32
136: invokevirtual #35
139: iload_3
140: bipush        74
142: if_icmpne     149
145: iconst_1
146: goto          150
149: iconst_0
150: invokestatic  #36
153: return
Exception table:
from    to  target type
52    70    73   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0464
Start line: 10032
End line: 0
Method source code: 
    public void test0464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0464");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        java.lang.String str6 = helpFormatter0.rtrim("");
        int int7 = helpFormatter0.getDescPadding();
        int int8 = helpFormatter0.getDescPadding();
        java.lang.String str9 = helpFormatter0.getLongOptPrefix();
        java.util.Comparator comparator10 = helpFormatter0.optionComparator;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 3 + "'", int7 == 3);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 3 + "'", int8 == 3);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "--" + "'", str9, "--");
        org.junit.Assert.assertNotNull(comparator10);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #570
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: getfield      #63
48: astore_3
49: aload_1
50: ldc           #10
52: invokevirtual #64
55: astore        4
57: aload_1
58: invokevirtual #118
61: istore        5
63: aload_1
64: invokevirtual #118
67: istore        6
69: aload_1
70: invokevirtual #48
73: astore        7
75: aload_1
76: getfield      #47
79: astore        8
81: new           #29
84: dup
85: invokespecial #30
88: ldc           #31
90: invokevirtual #32
93: iload_2
94: invokevirtual #33
97: ldc           #34
99: invokevirtual #32
102: iconst_1
103: invokevirtual #33
106: ldc           #31
108: invokevirtual #32
111: invokevirtual #35
114: iload_2
115: iconst_1
116: if_icmpne     123
119: iconst_1
120: goto          124
123: iconst_0
124: invokestatic  #36
127: new           #29
130: dup
131: invokespecial #30
134: ldc           #31
136: invokevirtual #32
139: aload_3
140: invokevirtual #32
143: ldc           #66
145: invokevirtual #32
148: invokevirtual #35
151: aload_3
152: ldc           #67
154: invokestatic  #53
157: new           #29
160: dup
161: invokespecial #30
164: ldc           #31
166: invokevirtual #32
169: aload         4
171: invokevirtual #32
174: ldc           #68
176: invokevirtual #32
179: invokevirtual #35
182: aload         4
184: ldc           #10
186: invokestatic  #53
189: new           #29
192: dup
193: invokespecial #30
196: ldc           #31
198: invokevirtual #32
201: iload         5
203: invokevirtual #33
206: ldc           #34
208: invokevirtual #32
211: iconst_3
212: invokevirtual #33
215: ldc           #31
217: invokevirtual #32
220: invokevirtual #35
223: iload         5
225: iconst_3
226: if_icmpne     233
229: iconst_1
230: goto          234
233: iconst_0
234: invokestatic  #36
237: new           #29
240: dup
241: invokespecial #30
244: ldc           #31
246: invokevirtual #32
249: iload         6
251: invokevirtual #33
254: ldc           #34
256: invokevirtual #32
259: iconst_3
260: invokevirtual #33
263: ldc           #31
265: invokevirtual #32
268: invokevirtual #35
271: iload         6
273: iconst_3
274: if_icmpne     281
277: iconst_1
278: goto          282
281: iconst_0
282: invokestatic  #36
285: new           #29
288: dup
289: invokespecial #30
292: ldc           #31
294: invokevirtual #32
297: aload         7
299: invokevirtual #32
302: ldc           #52
304: invokevirtual #32
307: invokevirtual #35
310: aload         7
312: ldc           #44
314: invokestatic  #53
317: aload         8
319: invokestatic  #51
322: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0465
Start line: 10054
End line: 0
Method source code: 
    public void test0465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0465");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setLongOptPrefix(" ");
        helpFormatter0.defaultDescPad = (short) 10;
        helpFormatter0.defaultSyntaxPrefix = "";
        helpFormatter0.setLongOptPrefix("");
        int int13 = helpFormatter0.defaultWidth;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 74 + "'", int13 == 74);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #571
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: getfield      #63
48: astore_3
49: aload_1
50: ldc           #24
52: invokevirtual #49
55: aload_1
56: bipush        10
58: putfield      #76
61: aload_1
62: ldc           #10
64: putfield      #97
67: aload_1
68: ldc           #10
70: invokevirtual #49
73: aload_1
74: getfield      #110
77: istore        4
79: new           #29
82: dup
83: invokespecial #30
86: ldc           #31
88: invokevirtual #32
91: iload_2
92: invokevirtual #33
95: ldc           #34
97: invokevirtual #32
100: iconst_1
101: invokevirtual #33
104: ldc           #31
106: invokevirtual #32
109: invokevirtual #35
112: iload_2
113: iconst_1
114: if_icmpne     121
117: iconst_1
118: goto          122
121: iconst_0
122: invokestatic  #36
125: new           #29
128: dup
129: invokespecial #30
132: ldc           #31
134: invokevirtual #32
137: aload_3
138: invokevirtual #32
141: ldc           #66
143: invokevirtual #32
146: invokevirtual #35
149: aload_3
150: ldc           #67
152: invokestatic  #53
155: new           #29
158: dup
159: invokespecial #30
162: ldc           #31
164: invokevirtual #32
167: iload         4
169: invokevirtual #33
172: ldc           #34
174: invokevirtual #32
177: bipush        74
179: invokevirtual #33
182: ldc           #31
184: invokevirtual #32
187: invokevirtual #35
190: iload         4
192: bipush        74
194: if_icmpne     201
197: iconst_1
198: goto          202
201: iconst_0
202: invokestatic  #36
205: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0466
Start line: 10072
End line: 0
Method source code: 
    public void test0466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0466");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.defaultDescPad = '4';
        helpFormatter0.setNewLine("");
        helpFormatter0.defaultDescPad = 'a';
        java.lang.String str10 = helpFormatter0.defaultNewLine;
        int int14 = helpFormatter0.findWrapPos("--", 0, (int) (short) 0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #572
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: bipush        52
47: putfield      #76
50: aload_1
51: ldc           #10
53: invokevirtual #131
56: aload_1
57: bipush        97
59: putfield      #76
62: aload_1
63: getfield      #23
66: astore_3
67: aload_1
68: ldc           #44
70: iconst_0
71: iconst_0
72: invokevirtual #93
75: istore        4
77: new           #29
80: dup
81: invokespecial #30
84: ldc           #31
86: invokevirtual #32
89: iload_2
90: invokevirtual #33
93: ldc           #34
95: invokevirtual #32
98: iconst_1
99: invokevirtual #33
102: ldc           #31
104: invokevirtual #32
107: invokevirtual #35
110: iload_2
111: iconst_1
112: if_icmpne     119
115: iconst_1
116: goto          120
119: iconst_0
120: invokestatic  #36
123: new           #29
126: dup
127: invokespecial #30
130: ldc           #31
132: invokevirtual #32
135: aload_3
136: invokevirtual #32
139: ldc           #68
141: invokevirtual #32
144: invokevirtual #35
147: aload_3
148: ldc           #10
150: invokestatic  #53
153: new           #29
156: dup
157: invokespecial #30
160: ldc           #31
162: invokevirtual #32
165: iload         4
167: invokevirtual #33
170: ldc           #34
172: invokevirtual #32
175: iconst_0
176: invokevirtual #33
179: ldc           #31
181: invokevirtual #32
184: invokevirtual #35
187: iload         4
189: ifne          196
192: iconst_1
193: goto          197
196: iconst_0
197: invokestatic  #36
200: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0467
Start line: 10089
End line: 0
Method source code: 
    public void test0467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0467");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        java.lang.String str6 = helpFormatter0.getLongOptSeparator();
        java.lang.String str7 = helpFormatter0.getLongOptSeparator();
        int int8 = helpFormatter0.defaultWidth;
        java.util.Comparator comparator9 = helpFormatter0.optionComparator;
        java.lang.StringBuffer stringBuffer10 = null;
        try {
            java.lang.StringBuffer stringBuffer14 = helpFormatter0.renderWrappedText(stringBuffer10, 0, 0, "          ");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + " " + "'", str6, " ");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + " " + "'", str7, " ");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 74 + "'", int8 == 74);
        org.junit.Assert.assertNotNull(comparator9);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #573
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: bipush        10
47: invokevirtual #38
50: aload_1
51: invokevirtual #86
54: astore_3
55: aload_1
56: invokevirtual #86
59: astore        4
61: aload_1
62: getfield      #110
65: istore        5
67: aload_1
68: getfield      #47
71: astore        6
73: aconst_null
74: astore        7
76: aload_1
77: aload         7
79: iconst_0
80: iconst_0
81: ldc           #114
83: invokevirtual #70
86: astore        8
88: ldc           #14
90: invokestatic  #15
93: goto          98
96: astore        8
98: new           #29
101: dup
102: invokespecial #30
105: ldc           #31
107: invokevirtual #32
110: iload_2
111: invokevirtual #33
114: ldc           #34
116: invokevirtual #32
119: iconst_1
120: invokevirtual #33
123: ldc           #31
125: invokevirtual #32
128: invokevirtual #35
131: iload_2
132: iconst_1
133: if_icmpne     140
136: iconst_1
137: goto          141
140: iconst_0
141: invokestatic  #36
144: new           #29
147: dup
148: invokespecial #30
151: ldc           #31
153: invokevirtual #32
156: aload_3
157: invokevirtual #32
160: ldc           #88
162: invokevirtual #32
165: invokevirtual #35
168: aload_3
169: ldc           #24
171: invokestatic  #53
174: new           #29
177: dup
178: invokespecial #30
181: ldc           #31
183: invokevirtual #32
186: aload         4
188: invokevirtual #32
191: ldc           #88
193: invokevirtual #32
196: invokevirtual #35
199: aload         4
201: ldc           #24
203: invokestatic  #53
206: new           #29
209: dup
210: invokespecial #30
213: ldc           #31
215: invokevirtual #32
218: iload         5
220: invokevirtual #33
223: ldc           #34
225: invokevirtual #32
228: bipush        74
230: invokevirtual #33
233: ldc           #31
235: invokevirtual #32
238: invokevirtual #35
241: iload         5
243: bipush        74
245: if_icmpne     252
248: iconst_1
249: goto          253
252: iconst_0
253: invokestatic  #36
256: aload         6
258: invokestatic  #51
261: return
Exception table:
from    to  target type
76    93    96   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0468
Start line: 10116
End line: 0
Method source code: 
    public void test0468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0468");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.defaultArgName;
        java.lang.String str3 = helpFormatter0.defaultNewLine;
        helpFormatter0.setDescPadding((int) ' ');
        java.io.PrintWriter printWriter6 = null;
        try {
            helpFormatter0.printWrapped(printWriter6, (int) (short) 100, "                                                                                                    ");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "arg" + "'", str2, "arg");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\n" + "'", str3, "\n");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #574
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: getfield      #77
42: astore_3
43: aload_1
44: getfield      #23
47: astore        4
49: aload_1
50: bipush        32
52: invokevirtual #38
55: aconst_null
56: astore        5
58: aload_1
59: aload         5
61: bipush        100
63: ldc           #240
65: invokevirtual #82
68: ldc           #14
70: invokestatic  #15
73: goto          78
76: astore        6
78: new           #29
81: dup
82: invokespecial #30
85: ldc           #31
87: invokevirtual #32
90: iload_2
91: invokevirtual #33
94: ldc           #34
96: invokevirtual #32
99: iconst_1
100: invokevirtual #33
103: ldc           #31
105: invokevirtual #32
108: invokevirtual #35
111: iload_2
112: iconst_1
113: if_icmpne     120
116: iconst_1
117: goto          121
120: iconst_0
121: invokestatic  #36
124: new           #29
127: dup
128: invokespecial #30
131: ldc           #31
133: invokevirtual #32
136: aload_3
137: invokevirtual #32
140: ldc           #78
142: invokevirtual #32
145: invokevirtual #35
148: aload_3
149: ldc           #79
151: invokestatic  #53
154: new           #29
157: dup
158: invokespecial #30
161: ldc           #31
163: invokevirtual #32
166: aload         4
168: invokevirtual #32
171: ldc           #74
173: invokevirtual #32
176: invokevirtual #35
179: aload         4
181: ldc           #65
183: invokestatic  #53
186: return
Exception table:
from    to  target type
58    73    76   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0469
Start line: 10138
End line: 0
Method source code: 
    public void test0469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0469");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        java.lang.String str6 = helpFormatter0.getOptPrefix();
        java.lang.String str7 = helpFormatter0.getNewLine();
        helpFormatter0.defaultOptPrefix = "";
        helpFormatter0.setNewLine("");
        java.lang.String str12 = helpFormatter0.getArgName();
        java.lang.String str13 = helpFormatter0.getSyntaxPrefix();
        java.util.Comparator comparator14 = helpFormatter0.optionComparator;
        org.apache.commons.cli.Options options16 = null;
        try {
            helpFormatter0.printHelp("usage:", options16, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "-" + "'", str6, "-");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "arg" + "'", str12, "arg");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "usage: " + "'", str13, "usage: ");
        org.junit.Assert.assertNotNull(comparator14);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #575
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: bipush        10
47: invokevirtual #38
50: aload_1
51: invokevirtual #123
54: astore_3
55: aload_1
56: invokevirtual #72
59: astore        4
61: aload_1
62: ldc           #10
64: putfield      #63
67: aload_1
68: ldc           #10
70: invokevirtual #131
73: aload_1
74: invokevirtual #104
77: astore        5
79: aload_1
80: invokevirtual #102
83: astore        6
85: aload_1
86: getfield      #47
89: astore        7
91: aconst_null
92: astore        8
94: aload_1
95: ldc_w         #501
98: aload         8
100: iconst_1
101: invokevirtual #135
104: ldc           #14
106: invokestatic  #15
109: goto          114
112: astore        9
114: new           #29
117: dup
118: invokespecial #30
121: ldc           #31
123: invokevirtual #32
126: iload_2
127: invokevirtual #33
130: ldc           #34
132: invokevirtual #32
135: iconst_1
136: invokevirtual #33
139: ldc           #31
141: invokevirtual #32
144: invokevirtual #35
147: iload_2
148: iconst_1
149: if_icmpne     156
152: iconst_1
153: goto          157
156: iconst_0
157: invokestatic  #36
160: new           #29
163: dup
164: invokespecial #30
167: ldc           #31
169: invokevirtual #32
172: aload_3
173: invokevirtual #32
176: ldc           #66
178: invokevirtual #32
181: invokevirtual #35
184: aload_3
185: ldc           #67
187: invokestatic  #53
190: new           #29
193: dup
194: invokespecial #30
197: ldc           #31
199: invokevirtual #32
202: aload         4
204: invokevirtual #32
207: ldc           #68
209: invokevirtual #32
212: invokevirtual #35
215: aload         4
217: ldc           #10
219: invokestatic  #53
222: new           #29
225: dup
226: invokespecial #30
229: ldc           #31
231: invokevirtual #32
234: aload         5
236: invokevirtual #32
239: ldc           #78
241: invokevirtual #32
244: invokevirtual #35
247: aload         5
249: ldc           #79
251: invokestatic  #53
254: new           #29
257: dup
258: invokespecial #30
261: ldc           #31
263: invokevirtual #32
266: aload         6
268: invokevirtual #32
271: ldc           #99
273: invokevirtual #32
276: invokevirtual #35
279: aload         6
281: ldc           #12
283: invokestatic  #53
286: aload         7
288: invokestatic  #51
291: return
Exception table:
from    to  target type
94   109   112   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0470
Start line: 10169
End line: 0
Method source code: 
    public void test0470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0470");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str6 = helpFormatter0.getNewLine();
        java.util.Comparator comparator7 = helpFormatter0.getOptionComparator();
        java.lang.Class<?> wildcardClass8 = helpFormatter0.getClass();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\n" + "'", str6, "\n");
        org.junit.Assert.assertNotNull(comparator7);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #576
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #10
36: invokevirtual #11
39: aload_1
40: ldc           #10
42: putfield      #55
45: aload_1
46: getfield      #55
49: astore_2
50: aload_1
51: invokevirtual #72
54: astore_3
55: aload_1
56: invokevirtual #106
59: astore        4
61: aload_1
62: invokevirtual #56
65: astore        5
67: new           #29
70: dup
71: invokespecial #30
74: ldc           #31
76: invokevirtual #32
79: aload_2
80: invokevirtual #32
83: ldc           #68
85: invokevirtual #32
88: invokevirtual #35
91: aload_2
92: ldc           #10
94: invokestatic  #53
97: new           #29
100: dup
101: invokespecial #30
104: ldc           #31
106: invokevirtual #32
109: aload_3
110: invokevirtual #32
113: ldc           #74
115: invokevirtual #32
118: invokevirtual #35
121: aload_3
122: ldc           #65
124: invokestatic  #53
127: aload         4
129: invokestatic  #51
132: aload         5
134: invokestatic  #51
137: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0471
Start line: 10186
End line: 0
Method source code: 
    public void test0471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0471");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        java.lang.String str6 = helpFormatter0.getLongOptSeparator();
        java.lang.String str7 = helpFormatter0.getLongOptSeparator();
        int int8 = helpFormatter0.defaultWidth;
        int int9 = helpFormatter0.defaultWidth;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + " " + "'", str6, " ");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + " " + "'", str7, " ");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 74 + "'", int8 == 74);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 74 + "'", int9 == 74);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #577
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: bipush        10
47: invokevirtual #38
50: aload_1
51: invokevirtual #86
54: astore_3
55: aload_1
56: invokevirtual #86
59: astore        4
61: aload_1
62: getfield      #110
65: istore        5
67: aload_1
68: getfield      #110
71: istore        6
73: new           #29
76: dup
77: invokespecial #30
80: ldc           #31
82: invokevirtual #32
85: iload_2
86: invokevirtual #33
89: ldc           #34
91: invokevirtual #32
94: iconst_1
95: invokevirtual #33
98: ldc           #31
100: invokevirtual #32
103: invokevirtual #35
106: iload_2
107: iconst_1
108: if_icmpne     115
111: iconst_1
112: goto          116
115: iconst_0
116: invokestatic  #36
119: new           #29
122: dup
123: invokespecial #30
126: ldc           #31
128: invokevirtual #32
131: aload_3
132: invokevirtual #32
135: ldc           #88
137: invokevirtual #32
140: invokevirtual #35
143: aload_3
144: ldc           #24
146: invokestatic  #53
149: new           #29
152: dup
153: invokespecial #30
156: ldc           #31
158: invokevirtual #32
161: aload         4
163: invokevirtual #32
166: ldc           #88
168: invokevirtual #32
171: invokevirtual #35
174: aload         4
176: ldc           #24
178: invokestatic  #53
181: new           #29
184: dup
185: invokespecial #30
188: ldc           #31
190: invokevirtual #32
193: iload         5
195: invokevirtual #33
198: ldc           #34
200: invokevirtual #32
203: bipush        74
205: invokevirtual #33
208: ldc           #31
210: invokevirtual #32
213: invokevirtual #35
216: iload         5
218: bipush        74
220: if_icmpne     227
223: iconst_1
224: goto          228
227: iconst_0
228: invokestatic  #36
231: new           #29
234: dup
235: invokespecial #30
238: ldc           #31
240: invokevirtual #32
243: iload         6
245: invokevirtual #33
248: ldc           #34
250: invokevirtual #32
253: bipush        74
255: invokevirtual #33
258: ldc           #31
260: invokevirtual #32
263: invokevirtual #35
266: iload         6
268: bipush        74
270: if_icmpne     277
273: iconst_1
274: goto          278
277: iconst_0
278: invokestatic  #36
281: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0472
Start line: 10205
End line: 0
Method source code: 
    public void test0472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0472");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str6 = helpFormatter0.defaultArgName;
        java.lang.String str7 = helpFormatter0.getLongOptSeparator();
        try {
            int int11 = helpFormatter0.findWrapPos("usage: ", (int) (short) 1, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "arg" + "'", str6, "arg");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + " " + "'", str7, " ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #578
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #10
36: invokevirtual #11
39: aload_1
40: ldc           #10
42: putfield      #55
45: aload_1
46: getfield      #55
49: astore_2
50: aload_1
51: getfield      #77
54: astore_3
55: aload_1
56: invokevirtual #86
59: astore        4
61: aload_1
62: ldc           #12
64: iconst_1
65: iconst_m1
66: invokevirtual #93
69: istore        5
71: ldc           #94
73: invokestatic  #15
76: goto          81
79: astore        5
81: new           #29
84: dup
85: invokespecial #30
88: ldc           #31
90: invokevirtual #32
93: aload_2
94: invokevirtual #32
97: ldc           #68
99: invokevirtual #32
102: invokevirtual #35
105: aload_2
106: ldc           #10
108: invokestatic  #53
111: new           #29
114: dup
115: invokespecial #30
118: ldc           #31
120: invokevirtual #32
123: aload_3
124: invokevirtual #32
127: ldc           #78
129: invokevirtual #32
132: invokevirtual #35
135: aload_3
136: ldc           #79
138: invokestatic  #53
141: new           #29
144: dup
145: invokespecial #30
148: ldc           #31
150: invokevirtual #32
153: aload         4
155: invokevirtual #32
158: ldc           #88
160: invokevirtual #32
163: invokevirtual #35
166: aload         4
168: ldc           #24
170: invokestatic  #53
173: return
Exception table:
from    to  target type
61    76    79   Class java/lang/StringIndexOutOfBoundsException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0473
Start line: 10227
End line: 0
Method source code: 
    public void test0473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0473");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str6 = helpFormatter0.getNewLine();
        java.lang.String str7 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setDescPadding(74);
        helpFormatter0.setLeftPadding(52);
        java.lang.String str13 = helpFormatter0.rtrim("-");
        java.lang.StringBuffer stringBuffer14 = null;
        try {
            java.lang.StringBuffer stringBuffer18 = helpFormatter0.renderWrappedText(stringBuffer14, (int) (short) 1, 100, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\n" + "'", str6, "\n");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "-" + "'", str13, "-");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #579
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #10
36: invokevirtual #11
39: aload_1
40: ldc           #10
42: putfield      #55
45: aload_1
46: getfield      #55
49: astore_2
50: aload_1
51: invokevirtual #72
54: astore_3
55: aload_1
56: getfield      #63
59: astore        4
61: aload_1
62: bipush        74
64: invokevirtual #38
67: aload_1
68: bipush        52
70: invokevirtual #193
73: aload_1
74: ldc           #67
76: invokevirtual #64
79: astore        5
81: aconst_null
82: astore        6
84: aload_1
85: aload         6
87: iconst_1
88: bipush        100
90: ldc           #10
92: invokevirtual #70
95: astore        7
97: ldc           #14
99: invokestatic  #15
102: goto          107
105: astore        7
107: new           #29
110: dup
111: invokespecial #30
114: ldc           #31
116: invokevirtual #32
119: aload_2
120: invokevirtual #32
123: ldc           #68
125: invokevirtual #32
128: invokevirtual #35
131: aload_2
132: ldc           #10
134: invokestatic  #53
137: new           #29
140: dup
141: invokespecial #30
144: ldc           #31
146: invokevirtual #32
149: aload_3
150: invokevirtual #32
153: ldc           #74
155: invokevirtual #32
158: invokevirtual #35
161: aload_3
162: ldc           #65
164: invokestatic  #53
167: new           #29
170: dup
171: invokespecial #30
174: ldc           #31
176: invokevirtual #32
179: aload         4
181: invokevirtual #32
184: ldc           #68
186: invokevirtual #32
189: invokevirtual #35
192: aload         4
194: ldc           #10
196: invokestatic  #53
199: new           #29
202: dup
203: invokespecial #30
206: ldc           #31
208: invokevirtual #32
211: aload         5
213: invokevirtual #32
216: ldc           #66
218: invokevirtual #32
221: invokevirtual #35
224: aload         5
226: ldc           #67
228: invokestatic  #53
231: return
Exception table:
from    to  target type
84   102   105   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0474
Start line: 10254
End line: 0
Method source code: 
    public void test0474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0474");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str6 = helpFormatter0.getNewLine();
        helpFormatter0.setSyntaxPrefix(" ");
        java.lang.String str9 = helpFormatter0.defaultSyntaxPrefix;
        int int10 = helpFormatter0.getWidth();
        int int11 = helpFormatter0.defaultDescPad;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\n" + "'", str6, "\n");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + " " + "'", str9, " ");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 74 + "'", int10 == 74);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 3 + "'", int11 == 3);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #580
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #10
36: invokevirtual #11
39: aload_1
40: ldc           #10
42: putfield      #55
45: aload_1
46: getfield      #55
49: astore_2
50: aload_1
51: invokevirtual #72
54: astore_3
55: aload_1
56: ldc           #24
58: invokevirtual #39
61: aload_1
62: getfield      #97
65: astore        4
67: aload_1
68: invokevirtual #129
71: istore        5
73: aload_1
74: getfield      #76
77: istore        6
79: new           #29
82: dup
83: invokespecial #30
86: ldc           #31
88: invokevirtual #32
91: aload_2
92: invokevirtual #32
95: ldc           #68
97: invokevirtual #32
100: invokevirtual #35
103: aload_2
104: ldc           #10
106: invokestatic  #53
109: new           #29
112: dup
113: invokespecial #30
116: ldc           #31
118: invokevirtual #32
121: aload_3
122: invokevirtual #32
125: ldc           #74
127: invokevirtual #32
130: invokevirtual #35
133: aload_3
134: ldc           #65
136: invokestatic  #53
139: new           #29
142: dup
143: invokespecial #30
146: ldc           #31
148: invokevirtual #32
151: aload         4
153: invokevirtual #32
156: ldc           #88
158: invokevirtual #32
161: invokevirtual #35
164: aload         4
166: ldc           #24
168: invokestatic  #53
171: new           #29
174: dup
175: invokespecial #30
178: ldc           #31
180: invokevirtual #32
183: iload         5
185: invokevirtual #33
188: ldc           #34
190: invokevirtual #32
193: bipush        74
195: invokevirtual #33
198: ldc           #31
200: invokevirtual #32
203: invokevirtual #35
206: iload         5
208: bipush        74
210: if_icmpne     217
213: iconst_1
214: goto          218
217: iconst_0
218: invokestatic  #36
221: new           #29
224: dup
225: invokespecial #30
228: ldc           #31
230: invokevirtual #32
233: iload         6
235: invokevirtual #33
238: ldc           #34
240: invokevirtual #32
243: iconst_3
244: invokevirtual #33
247: ldc           #31
249: invokevirtual #32
252: invokevirtual #35
255: iload         6
257: iconst_3
258: if_icmpne     265
261: iconst_1
262: goto          266
265: iconst_0
266: invokestatic  #36
269: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0475
Start line: 10274
End line: 0
Method source code: 
    public void test0475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0475");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        int int9 = helpFormatter0.findWrapPos(" ", (int) (byte) 10, (int) '4');
        helpFormatter0.defaultOptPrefix = "arg";
        int int12 = helpFormatter0.defaultLeftPad;
        java.lang.String str14 = helpFormatter0.rtrim("\n");
        helpFormatter0.setSyntaxPrefix("          ");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #581
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #10
36: invokevirtual #11
39: aload_1
40: ldc           #10
42: putfield      #55
45: aload_1
46: getfield      #55
49: astore_2
50: aload_1
51: ldc           #24
53: bipush        10
55: bipush        52
57: invokevirtual #93
60: istore_3
61: aload_1
62: ldc           #79
64: putfield      #63
67: aload_1
68: getfield      #60
71: istore        4
73: aload_1
74: ldc           #65
76: invokevirtual #64
79: astore        5
81: aload_1
82: ldc           #114
84: invokevirtual #39
87: new           #29
90: dup
91: invokespecial #30
94: ldc           #31
96: invokevirtual #32
99: aload_2
100: invokevirtual #32
103: ldc           #68
105: invokevirtual #32
108: invokevirtual #35
111: aload_2
112: ldc           #10
114: invokestatic  #53
117: new           #29
120: dup
121: invokespecial #30
124: ldc           #31
126: invokevirtual #32
129: iload_3
130: invokevirtual #33
133: ldc           #34
135: invokevirtual #32
138: iconst_m1
139: invokevirtual #33
142: ldc           #31
144: invokevirtual #32
147: invokevirtual #35
150: iload_3
151: iconst_m1
152: if_icmpne     159
155: iconst_1
156: goto          160
159: iconst_0
160: invokestatic  #36
163: new           #29
166: dup
167: invokespecial #30
170: ldc           #31
172: invokevirtual #32
175: iload         4
177: invokevirtual #33
180: ldc           #34
182: invokevirtual #32
185: iconst_1
186: invokevirtual #33
189: ldc           #31
191: invokevirtual #32
194: invokevirtual #35
197: iload         4
199: iconst_1
200: if_icmpne     207
203: iconst_1
204: goto          208
207: iconst_0
208: invokestatic  #36
211: new           #29
214: dup
215: invokespecial #30
218: ldc           #31
220: invokevirtual #32
223: aload         5
225: invokevirtual #32
228: ldc           #68
230: invokevirtual #32
233: invokevirtual #35
236: aload         5
238: ldc           #10
240: invokestatic  #53
243: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0476
Start line: 10293
End line: 0
Method source code: 
    public void test0476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0476");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        java.lang.StringBuffer stringBuffer5 = null;
        try {
            java.lang.StringBuffer stringBuffer9 = helpFormatter0.renderWrappedText(stringBuffer5, (int) ' ', (int) (short) -1, "\n");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #582
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: getfield      #63
48: astore_3
49: aconst_null
50: astore        4
52: aload_1
53: aload         4
55: bipush        32
57: iconst_m1
58: ldc           #65
60: invokevirtual #70
63: astore        5
65: ldc           #14
67: invokestatic  #15
70: goto          75
73: astore        5
75: new           #29
78: dup
79: invokespecial #30
82: ldc           #31
84: invokevirtual #32
87: iload_2
88: invokevirtual #33
91: ldc           #34
93: invokevirtual #32
96: iconst_1
97: invokevirtual #33
100: ldc           #31
102: invokevirtual #32
105: invokevirtual #35
108: iload_2
109: iconst_1
110: if_icmpne     117
113: iconst_1
114: goto          118
117: iconst_0
118: invokestatic  #36
121: new           #29
124: dup
125: invokespecial #30
128: ldc           #31
130: invokevirtual #32
133: aload_3
134: invokevirtual #32
137: ldc           #66
139: invokevirtual #32
142: invokevirtual #35
145: aload_3
146: ldc           #67
148: invokestatic  #53
151: return
Exception table:
from    to  target type
52    70    73   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0477
Start line: 10313
End line: 0
Method source code: 
    public void test0477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0477");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        java.lang.String str6 = helpFormatter0.getOptPrefix();
        java.lang.String str7 = helpFormatter0.getNewLine();
        helpFormatter0.defaultOptPrefix = "";
        helpFormatter0.setNewLine("");
        java.lang.String str12 = helpFormatter0.getArgName();
        org.apache.commons.cli.HelpFormatter helpFormatter13 = new org.apache.commons.cli.HelpFormatter();
        int int14 = helpFormatter13.getLeftPadding();
        helpFormatter13.defaultNewLine = "";
        helpFormatter13.setDescPadding(10);
        java.lang.String str19 = helpFormatter13.defaultNewLine;
        helpFormatter13.setDescPadding(10);
        org.apache.commons.cli.HelpFormatter helpFormatter22 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter22.setOptPrefix("");
        helpFormatter22.defaultLongOptPrefix = "";
        java.lang.String str27 = helpFormatter22.defaultLongOptPrefix;
        java.lang.String str28 = helpFormatter22.getNewLine();
        java.util.Comparator comparator29 = helpFormatter22.getOptionComparator();
        helpFormatter13.optionComparator = comparator29;
        helpFormatter0.optionComparator = comparator29;
        helpFormatter0.defaultOptPrefix = "";
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "-" + "'", str6, "-");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "arg" + "'", str12, "arg");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "\n" + "'", str28, "\n");
        org.junit.Assert.assertNotNull(comparator29);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #583
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: bipush        10
47: invokevirtual #38
50: aload_1
51: invokevirtual #123
54: astore_3
55: aload_1
56: invokevirtual #72
59: astore        4
61: aload_1
62: ldc           #10
64: putfield      #63
67: aload_1
68: ldc           #10
70: invokevirtual #131
73: aload_1
74: invokevirtual #104
77: astore        5
79: new           #8
82: dup
83: invokespecial #9
86: astore        6
88: aload         6
90: invokevirtual #22
93: istore        7
95: aload         6
97: ldc           #10
99: putfield      #23
102: aload         6
104: bipush        10
106: invokevirtual #38
109: aload         6
111: getfield      #23
114: astore        8
116: aload         6
118: bipush        10
120: invokevirtual #38
123: new           #8
126: dup
127: invokespecial #9
130: astore        9
132: aload         9
134: ldc           #10
136: invokevirtual #11
139: aload         9
141: ldc           #10
143: putfield      #55
146: aload         9
148: getfield      #55
151: astore        10
153: aload         9
155: invokevirtual #72
158: astore        11
160: aload         9
162: invokevirtual #106
165: astore        12
167: aload         6
169: aload         12
171: putfield      #47
174: aload_1
175: aload         12
177: putfield      #47
180: aload_1
181: ldc           #10
183: putfield      #63
186: new           #29
189: dup
190: invokespecial #30
193: ldc           #31
195: invokevirtual #32
198: iload_2
199: invokevirtual #33
202: ldc           #34
204: invokevirtual #32
207: iconst_1
208: invokevirtual #33
211: ldc           #31
213: invokevirtual #32
216: invokevirtual #35
219: iload_2
220: iconst_1
221: if_icmpne     228
224: iconst_1
225: goto          229
228: iconst_0
229: invokestatic  #36
232: new           #29
235: dup
236: invokespecial #30
239: ldc           #31
241: invokevirtual #32
244: aload_3
245: invokevirtual #32
248: ldc           #66
250: invokevirtual #32
253: invokevirtual #35
256: aload_3
257: ldc           #67
259: invokestatic  #53
262: new           #29
265: dup
266: invokespecial #30
269: ldc           #31
271: invokevirtual #32
274: aload         4
276: invokevirtual #32
279: ldc           #68
281: invokevirtual #32
284: invokevirtual #35
287: aload         4
289: ldc           #10
291: invokestatic  #53
294: new           #29
297: dup
298: invokespecial #30
301: ldc           #31
303: invokevirtual #32
306: aload         5
308: invokevirtual #32
311: ldc           #78
313: invokevirtual #32
316: invokevirtual #35
319: aload         5
321: ldc           #79
323: invokestatic  #53
326: new           #29
329: dup
330: invokespecial #30
333: ldc           #31
335: invokevirtual #32
338: iload         7
340: invokevirtual #33
343: ldc           #34
345: invokevirtual #32
348: iconst_1
349: invokevirtual #33
352: ldc           #31
354: invokevirtual #32
357: invokevirtual #35
360: iload         7
362: iconst_1
363: if_icmpne     370
366: iconst_1
367: goto          371
370: iconst_0
371: invokestatic  #36
374: new           #29
377: dup
378: invokespecial #30
381: ldc           #31
383: invokevirtual #32
386: aload         8
388: invokevirtual #32
391: ldc           #68
393: invokevirtual #32
396: invokevirtual #35
399: aload         8
401: ldc           #10
403: invokestatic  #53
406: new           #29
409: dup
410: invokespecial #30
413: ldc           #31
415: invokevirtual #32
418: aload         10
420: invokevirtual #32
423: ldc           #68
425: invokevirtual #32
428: invokevirtual #35
431: aload         10
433: ldc           #10
435: invokestatic  #53
438: new           #29
441: dup
442: invokespecial #30
445: ldc           #31
447: invokevirtual #32
450: aload         11
452: invokevirtual #32
455: ldc           #74
457: invokevirtual #32
460: invokevirtual #35
463: aload         11
465: ldc           #65
467: invokestatic  #53
470: aload         12
472: invokestatic  #51
475: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0478
Start line: 10352
End line: 0
Method source code: 
    public void test0478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0478");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.util.Comparator comparator1 = helpFormatter0.optionComparator;
        int int2 = helpFormatter0.getLeftPadding();
        helpFormatter0.setNewLine("\n");
        org.junit.Assert.assertNotNull(comparator1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #584
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: getfield      #47
37: astore_2
38: aload_1
39: invokevirtual #22
42: istore_3
43: aload_1
44: ldc           #65
46: invokevirtual #131
49: aload_2
50: invokestatic  #51
53: new           #29
56: dup
57: invokespecial #30
60: ldc           #31
62: invokevirtual #32
65: iload_3
66: invokevirtual #33
69: ldc           #34
71: invokevirtual #32
74: iconst_1
75: invokevirtual #33
78: ldc           #31
80: invokevirtual #32
83: invokevirtual #35
86: iload_3
87: iconst_1
88: if_icmpne     95
91: iconst_1
92: goto          96
95: iconst_0
96: invokestatic  #36
99: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0479
Start line: 10364
End line: 0
Method source code: 
    public void test0479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0479");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        java.lang.String str6 = helpFormatter0.rtrim("");
        java.lang.String str8 = helpFormatter0.rtrim("-");
        java.lang.String str10 = helpFormatter0.rtrim("-");
        java.lang.String str11 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str12 = helpFormatter0.getOptPrefix();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "-" + "'", str8, "-");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "-" + "'", str10, "-");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "--" + "'", str11, "--");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "-" + "'", str12, "-");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #585
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: getfield      #63
48: astore_3
49: aload_1
50: ldc           #10
52: invokevirtual #64
55: astore        4
57: aload_1
58: ldc           #67
60: invokevirtual #64
63: astore        5
65: aload_1
66: ldc           #67
68: invokevirtual #64
71: astore        6
73: aload_1
74: getfield      #55
77: astore        7
79: aload_1
80: invokevirtual #123
83: astore        8
85: new           #29
88: dup
89: invokespecial #30
92: ldc           #31
94: invokevirtual #32
97: iload_2
98: invokevirtual #33
101: ldc           #34
103: invokevirtual #32
106: iconst_1
107: invokevirtual #33
110: ldc           #31
112: invokevirtual #32
115: invokevirtual #35
118: iload_2
119: iconst_1
120: if_icmpne     127
123: iconst_1
124: goto          128
127: iconst_0
128: invokestatic  #36
131: new           #29
134: dup
135: invokespecial #30
138: ldc           #31
140: invokevirtual #32
143: aload_3
144: invokevirtual #32
147: ldc           #66
149: invokevirtual #32
152: invokevirtual #35
155: aload_3
156: ldc           #67
158: invokestatic  #53
161: new           #29
164: dup
165: invokespecial #30
168: ldc           #31
170: invokevirtual #32
173: aload         4
175: invokevirtual #32
178: ldc           #68
180: invokevirtual #32
183: invokevirtual #35
186: aload         4
188: ldc           #10
190: invokestatic  #53
193: new           #29
196: dup
197: invokespecial #30
200: ldc           #31
202: invokevirtual #32
205: aload         5
207: invokevirtual #32
210: ldc           #66
212: invokevirtual #32
215: invokevirtual #35
218: aload         5
220: ldc           #67
222: invokestatic  #53
225: new           #29
228: dup
229: invokespecial #30
232: ldc           #31
234: invokevirtual #32
237: aload         6
239: invokevirtual #32
242: ldc           #66
244: invokevirtual #32
247: invokevirtual #35
250: aload         6
252: ldc           #67
254: invokestatic  #53
257: new           #29
260: dup
261: invokespecial #30
264: ldc           #31
266: invokevirtual #32
269: aload         7
271: invokevirtual #32
274: ldc           #52
276: invokevirtual #32
279: invokevirtual #35
282: aload         7
284: ldc           #44
286: invokestatic  #53
289: new           #29
292: dup
293: invokespecial #30
296: ldc           #31
298: invokevirtual #32
301: aload         8
303: invokevirtual #32
306: ldc           #66
308: invokevirtual #32
311: invokevirtual #35
314: aload         8
316: ldc           #67
318: invokestatic  #53
321: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0480
Start line: 10386
End line: 0
Method source code: 
    public void test0480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0480");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.util.Comparator comparator1 = helpFormatter0.optionComparator;
        int int2 = helpFormatter0.getLeftPadding();
        java.lang.String str4 = helpFormatter0.rtrim("-");
        java.io.PrintWriter printWriter5 = null;
        try {
            helpFormatter0.printUsage(printWriter5, 97, "          ");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(comparator1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #586
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: getfield      #47
37: astore_2
38: aload_1
39: invokevirtual #22
42: istore_3
43: aload_1
44: ldc           #67
46: invokevirtual #64
49: astore        4
51: aconst_null
52: astore        5
54: aload_1
55: aload         5
57: bipush        97
59: ldc           #114
61: invokevirtual #87
64: ldc           #14
66: invokestatic  #15
69: goto          74
72: astore        6
74: aload_2
75: invokestatic  #51
78: new           #29
81: dup
82: invokespecial #30
85: ldc           #31
87: invokevirtual #32
90: iload_3
91: invokevirtual #33
94: ldc           #34
96: invokevirtual #32
99: iconst_1
100: invokevirtual #33
103: ldc           #31
105: invokevirtual #32
108: invokevirtual #35
111: iload_3
112: iconst_1
113: if_icmpne     120
116: iconst_1
117: goto          121
120: iconst_0
121: invokestatic  #36
124: new           #29
127: dup
128: invokespecial #30
131: ldc           #31
133: invokevirtual #32
136: aload         4
138: invokevirtual #32
141: ldc           #66
143: invokevirtual #32
146: invokevirtual #35
149: aload         4
151: ldc           #67
153: invokestatic  #53
156: return
Exception table:
from    to  target type
54    69    72   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0481
Start line: 10407
End line: 0
Method source code: 
    public void test0481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0481");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        int int4 = helpFormatter0.defaultWidth;
        java.lang.String str5 = helpFormatter0.getNewLine();
        helpFormatter0.setWidth(1);
        java.lang.String str8 = helpFormatter0.getLongOptSeparator();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 74 + "'", int4 == 74);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + " " + "'", str8, " ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #587
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: getfield      #110
48: istore_3
49: aload_1
50: invokevirtual #72
53: astore        4
55: aload_1
56: iconst_1
57: invokevirtual #156
60: aload_1
61: invokevirtual #86
64: astore        5
66: new           #29
69: dup
70: invokespecial #30
73: ldc           #31
75: invokevirtual #32
78: iload_2
79: invokevirtual #33
82: ldc           #34
84: invokevirtual #32
87: iconst_1
88: invokevirtual #33
91: ldc           #31
93: invokevirtual #32
96: invokevirtual #35
99: iload_2
100: iconst_1
101: if_icmpne     108
104: iconst_1
105: goto          109
108: iconst_0
109: invokestatic  #36
112: new           #29
115: dup
116: invokespecial #30
119: ldc           #31
121: invokevirtual #32
124: iload_3
125: invokevirtual #33
128: ldc           #34
130: invokevirtual #32
133: bipush        74
135: invokevirtual #33
138: ldc           #31
140: invokevirtual #32
143: invokevirtual #35
146: iload_3
147: bipush        74
149: if_icmpne     156
152: iconst_1
153: goto          157
156: iconst_0
157: invokestatic  #36
160: new           #29
163: dup
164: invokespecial #30
167: ldc           #31
169: invokevirtual #32
172: aload         4
174: invokevirtual #32
177: ldc           #68
179: invokevirtual #32
182: invokevirtual #35
185: aload         4
187: ldc           #10
189: invokestatic  #53
192: new           #29
195: dup
196: invokespecial #30
199: ldc           #31
201: invokevirtual #32
204: aload         5
206: invokevirtual #32
209: ldc           #88
211: invokevirtual #32
214: invokevirtual #35
217: aload         5
219: ldc           #24
221: invokestatic  #53
224: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0482
Start line: 10424
End line: 0
Method source code: 
    public void test0482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0482");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        int int6 = helpFormatter0.defaultWidth;
        java.lang.String str7 = helpFormatter0.getLongOptPrefix();
        java.lang.String str8 = helpFormatter0.getLongOptPrefix();
        helpFormatter0.setLongOptSeparator("hi!");
        int int11 = helpFormatter0.getWidth();
        java.lang.String str12 = helpFormatter0.defaultLongOptPrefix;
        java.util.Comparator comparator13 = helpFormatter0.getOptionComparator();
        helpFormatter0.setNewLine("-");
        org.apache.commons.cli.Options options18 = null;
        try {
            helpFormatter0.printHelp(" ", "usage:", options18, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "--" + "'", str5, "--");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 74 + "'", int6 == 74);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "--" + "'", str7, "--");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "--" + "'", str8, "--");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 74 + "'", int11 == 74);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "--" + "'", str12, "--");
        org.junit.Assert.assertNotNull(comparator13);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #588
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: getfield      #63
48: astore_3
49: aload_1
50: getfield      #55
53: astore        4
55: aload_1
56: getfield      #110
59: istore        5
61: aload_1
62: invokevirtual #48
65: astore        6
67: aload_1
68: invokevirtual #48
71: astore        7
73: aload_1
74: ldc           #25
76: invokevirtual #91
79: aload_1
80: invokevirtual #129
83: istore        8
85: aload_1
86: getfield      #55
89: astore        9
91: aload_1
92: invokevirtual #106
95: astore        10
97: aload_1
98: ldc           #67
100: invokevirtual #131
103: aconst_null
104: astore        11
106: aload_1
107: ldc           #24
109: ldc_w         #501
112: aload         11
114: ldc           #10
116: invokevirtual #13
119: ldc           #14
121: invokestatic  #15
124: goto          129
127: astore        12
129: new           #29
132: dup
133: invokespecial #30
136: ldc           #31
138: invokevirtual #32
141: iload_2
142: invokevirtual #33
145: ldc           #34
147: invokevirtual #32
150: iconst_1
151: invokevirtual #33
154: ldc           #31
156: invokevirtual #32
159: invokevirtual #35
162: iload_2
163: iconst_1
164: if_icmpne     171
167: iconst_1
168: goto          172
171: iconst_0
172: invokestatic  #36
175: new           #29
178: dup
179: invokespecial #30
182: ldc           #31
184: invokevirtual #32
187: aload_3
188: invokevirtual #32
191: ldc           #66
193: invokevirtual #32
196: invokevirtual #35
199: aload_3
200: ldc           #67
202: invokestatic  #53
205: new           #29
208: dup
209: invokespecial #30
212: ldc           #31
214: invokevirtual #32
217: aload         4
219: invokevirtual #32
222: ldc           #52
224: invokevirtual #32
227: invokevirtual #35
230: aload         4
232: ldc           #44
234: invokestatic  #53
237: new           #29
240: dup
241: invokespecial #30
244: ldc           #31
246: invokevirtual #32
249: iload         5
251: invokevirtual #33
254: ldc           #34
256: invokevirtual #32
259: bipush        74
261: invokevirtual #33
264: ldc           #31
266: invokevirtual #32
269: invokevirtual #35
272: iload         5
274: bipush        74
276: if_icmpne     283
279: iconst_1
280: goto          284
283: iconst_0
284: invokestatic  #36
287: new           #29
290: dup
291: invokespecial #30
294: ldc           #31
296: invokevirtual #32
299: aload         6
301: invokevirtual #32
304: ldc           #52
306: invokevirtual #32
309: invokevirtual #35
312: aload         6
314: ldc           #44
316: invokestatic  #53
319: new           #29
322: dup
323: invokespecial #30
326: ldc           #31
328: invokevirtual #32
331: aload         7
333: invokevirtual #32
336: ldc           #52
338: invokevirtual #32
341: invokevirtual #35
344: aload         7
346: ldc           #44
348: invokestatic  #53
351: new           #29
354: dup
355: invokespecial #30
358: ldc           #31
360: invokevirtual #32
363: iload         8
365: invokevirtual #33
368: ldc           #34
370: invokevirtual #32
373: bipush        74
375: invokevirtual #33
378: ldc           #31
380: invokevirtual #32
383: invokevirtual #35
386: iload         8
388: bipush        74
390: if_icmpne     397
393: iconst_1
394: goto          398
397: iconst_0
398: invokestatic  #36
401: new           #29
404: dup
405: invokespecial #30
408: ldc           #31
410: invokevirtual #32
413: aload         9
415: invokevirtual #32
418: ldc           #52
420: invokevirtual #32
423: invokevirtual #35
426: aload         9
428: ldc           #44
430: invokestatic  #53
433: aload         10
435: invokestatic  #51
438: return
Exception table:
from    to  target type
106   124   127   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0483
Start line: 10460
End line: 0
Method source code: 
    public void test0483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0483");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.util.Comparator comparator1 = helpFormatter0.optionComparator;
        java.lang.String str3 = helpFormatter0.rtrim("");
        helpFormatter0.setLongOptSeparator(" ");
        helpFormatter0.setSyntaxPrefix("usage: ");
        helpFormatter0.defaultWidth = 100;
        org.junit.Assert.assertNotNull(comparator1);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #589
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: getfield      #47
37: astore_2
38: aload_1
39: ldc           #10
41: invokevirtual #64
44: astore_3
45: aload_1
46: ldc           #24
48: invokevirtual #91
51: aload_1
52: ldc           #12
54: invokevirtual #39
57: aload_1
58: bipush        100
60: putfield      #110
63: aload_2
64: invokestatic  #51
67: new           #29
70: dup
71: invokespecial #30
74: ldc           #31
76: invokevirtual #32
79: aload_3
80: invokevirtual #32
83: ldc           #68
85: invokevirtual #32
88: invokevirtual #35
91: aload_3
92: ldc           #10
94: invokestatic  #53
97: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0484
Start line: 10474
End line: 0
Method source code: 
    public void test0484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0484");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setDescPadding(10);
        java.util.Comparator comparator6 = helpFormatter0.optionComparator;
        helpFormatter0.setLongOptPrefix("hi!");
        java.lang.String str9 = helpFormatter0.getLongOptSeparator();
        org.apache.commons.cli.HelpFormatter helpFormatter10 = new org.apache.commons.cli.HelpFormatter();
        int int11 = helpFormatter10.getLeftPadding();
        java.lang.String str12 = helpFormatter10.getArgName();
        helpFormatter10.setSyntaxPrefix("usage: ");
        org.apache.commons.cli.HelpFormatter helpFormatter15 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter15.setOptPrefix("");
        helpFormatter15.defaultLongOptPrefix = "";
        java.lang.String str20 = helpFormatter15.defaultLongOptPrefix;
        java.lang.String str21 = helpFormatter15.getNewLine();
        java.lang.String str22 = helpFormatter15.defaultOptPrefix;
        helpFormatter15.setDescPadding(74);
        java.util.Comparator comparator25 = helpFormatter15.getOptionComparator();
        helpFormatter10.optionComparator = comparator25;
        helpFormatter0.optionComparator = comparator25;
        int int28 = helpFormatter0.defaultLeftPad;
        java.lang.StringBuffer stringBuffer29 = null;
        org.apache.commons.cli.Options options31 = null;
        try {
            java.lang.StringBuffer stringBuffer34 = helpFormatter0.renderOptions(stringBuffer29, 32, options31, (int) (short) 10, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(comparator6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + " " + "'", str9, " ");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "arg" + "'", str12, "arg");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "\n" + "'", str21, "\n");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(comparator25);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #590
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: bipush        10
47: invokevirtual #38
50: aload_1
51: getfield      #47
54: astore_3
55: aload_1
56: ldc           #25
58: invokevirtual #49
61: aload_1
62: invokevirtual #86
65: astore        4
67: new           #8
70: dup
71: invokespecial #9
74: astore        5
76: aload         5
78: invokevirtual #22
81: istore        6
83: aload         5
85: invokevirtual #104
88: astore        7
90: aload         5
92: ldc           #12
94: invokevirtual #39
97: new           #8
100: dup
101: invokespecial #9
104: astore        8
106: aload         8
108: ldc           #10
110: invokevirtual #11
113: aload         8
115: ldc           #10
117: putfield      #55
120: aload         8
122: getfield      #55
125: astore        9
127: aload         8
129: invokevirtual #72
132: astore        10
134: aload         8
136: getfield      #63
139: astore        11
141: aload         8
143: bipush        74
145: invokevirtual #38
148: aload         8
150: invokevirtual #106
153: astore        12
155: aload         5
157: aload         12
159: putfield      #47
162: aload_1
163: aload         12
165: putfield      #47
168: aload_1
169: getfield      #60
172: istore        13
174: aconst_null
175: astore        14
177: aconst_null
178: astore        15
180: aload_1
181: aload         14
183: bipush        32
185: aload         15
187: bipush        10
189: iconst_1
190: invokevirtual #98
193: astore        16
195: ldc           #14
197: invokestatic  #15
200: goto          205
203: astore        16
205: new           #29
208: dup
209: invokespecial #30
212: ldc           #31
214: invokevirtual #32
217: iload_2
218: invokevirtual #33
221: ldc           #34
223: invokevirtual #32
226: iconst_1
227: invokevirtual #33
230: ldc           #31
232: invokevirtual #32
235: invokevirtual #35
238: iload_2
239: iconst_1
240: if_icmpne     247
243: iconst_1
244: goto          248
247: iconst_0
248: invokestatic  #36
251: aload_3
252: invokestatic  #51
255: new           #29
258: dup
259: invokespecial #30
262: ldc           #31
264: invokevirtual #32
267: aload         4
269: invokevirtual #32
272: ldc           #88
274: invokevirtual #32
277: invokevirtual #35
280: aload         4
282: ldc           #24
284: invokestatic  #53
287: new           #29
290: dup
291: invokespecial #30
294: ldc           #31
296: invokevirtual #32
299: iload         6
301: invokevirtual #33
304: ldc           #34
306: invokevirtual #32
309: iconst_1
310: invokevirtual #33
313: ldc           #31
315: invokevirtual #32
318: invokevirtual #35
321: iload         6
323: iconst_1
324: if_icmpne     331
327: iconst_1
328: goto          332
331: iconst_0
332: invokestatic  #36
335: new           #29
338: dup
339: invokespecial #30
342: ldc           #31
344: invokevirtual #32
347: aload         7
349: invokevirtual #32
352: ldc           #78
354: invokevirtual #32
357: invokevirtual #35
360: aload         7
362: ldc           #79
364: invokestatic  #53
367: new           #29
370: dup
371: invokespecial #30
374: ldc           #31
376: invokevirtual #32
379: aload         9
381: invokevirtual #32
384: ldc           #68
386: invokevirtual #32
389: invokevirtual #35
392: aload         9
394: ldc           #10
396: invokestatic  #53
399: new           #29
402: dup
403: invokespecial #30
406: ldc           #31
408: invokevirtual #32
411: aload         10
413: invokevirtual #32
416: ldc           #74
418: invokevirtual #32
421: invokevirtual #35
424: aload         10
426: ldc           #65
428: invokestatic  #53
431: new           #29
434: dup
435: invokespecial #30
438: ldc           #31
440: invokevirtual #32
443: aload         11
445: invokevirtual #32
448: ldc           #68
450: invokevirtual #32
453: invokevirtual #35
456: aload         11
458: ldc           #10
460: invokestatic  #53
463: aload         12
465: invokestatic  #51
468: new           #29
471: dup
472: invokespecial #30
475: ldc           #31
477: invokevirtual #32
480: iload         13
482: invokevirtual #33
485: ldc           #34
487: invokevirtual #32
490: iconst_1
491: invokevirtual #33
494: ldc           #31
496: invokevirtual #32
499: invokevirtual #35
502: iload         13
504: iconst_1
505: if_icmpne     512
508: iconst_1
509: goto          513
512: iconst_0
513: invokestatic  #36
516: return
Exception table:
from    to  target type
180   200   203   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0485
Start line: 10521
End line: 0
Method source code: 
    public void test0485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0485");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.defaultDescPad = '4';
        helpFormatter0.setNewLine("");
        helpFormatter0.defaultWidth = 0;
        helpFormatter0.setDescPadding((int) 'a');
        helpFormatter0.setLongOptSeparator("arg");
        int int14 = helpFormatter0.getDescPadding();
        org.apache.commons.cli.HelpFormatter helpFormatter15 = new org.apache.commons.cli.HelpFormatter();
        int int16 = helpFormatter15.getLeftPadding();
        helpFormatter15.defaultNewLine = "";
        helpFormatter15.setDescPadding(10);
        helpFormatter15.setSyntaxPrefix(" ");
        java.util.Comparator comparator23 = helpFormatter15.getOptionComparator();
        helpFormatter0.optionComparator = comparator23;
        java.lang.String str25 = helpFormatter0.defaultLongOptPrefix;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 97 + "'", int14 == 97);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(comparator23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "--" + "'", str25, "--");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #591
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: bipush        52
47: putfield      #76
50: aload_1
51: ldc           #10
53: invokevirtual #131
56: aload_1
57: iconst_0
58: putfield      #110
61: aload_1
62: bipush        97
64: invokevirtual #38
67: aload_1
68: ldc           #79
70: invokevirtual #91
73: aload_1
74: invokevirtual #118
77: istore_3
78: new           #8
81: dup
82: invokespecial #9
85: astore        4
87: aload         4
89: invokevirtual #22
92: istore        5
94: aload         4
96: ldc           #10
98: putfield      #23
101: aload         4
103: bipush        10
105: invokevirtual #38
108: aload         4
110: ldc           #24
112: invokevirtual #39
115: aload         4
117: invokevirtual #106
120: astore        6
122: aload_1
123: aload         6
125: putfield      #47
128: aload_1
129: getfield      #55
132: astore        7
134: new           #29
137: dup
138: invokespecial #30
141: ldc           #31
143: invokevirtual #32
146: iload_2
147: invokevirtual #33
150: ldc           #34
152: invokevirtual #32
155: iconst_1
156: invokevirtual #33
159: ldc           #31
161: invokevirtual #32
164: invokevirtual #35
167: iload_2
168: iconst_1
169: if_icmpne     176
172: iconst_1
173: goto          177
176: iconst_0
177: invokestatic  #36
180: new           #29
183: dup
184: invokespecial #30
187: ldc           #31
189: invokevirtual #32
192: iload_3
193: invokevirtual #33
196: ldc           #34
198: invokevirtual #32
201: bipush        97
203: invokevirtual #33
206: ldc           #31
208: invokevirtual #32
211: invokevirtual #35
214: iload_3
215: bipush        97
217: if_icmpne     224
220: iconst_1
221: goto          225
224: iconst_0
225: invokestatic  #36
228: new           #29
231: dup
232: invokespecial #30
235: ldc           #31
237: invokevirtual #32
240: iload         5
242: invokevirtual #33
245: ldc           #34
247: invokevirtual #32
250: iconst_1
251: invokevirtual #33
254: ldc           #31
256: invokevirtual #32
259: invokevirtual #35
262: iload         5
264: iconst_1
265: if_icmpne     272
268: iconst_1
269: goto          273
272: iconst_0
273: invokestatic  #36
276: aload         6
278: invokestatic  #51
281: new           #29
284: dup
285: invokespecial #30
288: ldc           #31
290: invokevirtual #32
293: aload         7
295: invokevirtual #32
298: ldc           #52
300: invokevirtual #32
303: invokevirtual #35
306: aload         7
308: ldc           #44
310: invokestatic  #53
313: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0486
Start line: 10549
End line: 0
Method source code: 
    public void test0486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0486");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str6 = helpFormatter0.getNewLine();
        helpFormatter0.setSyntaxPrefix(" ");
        java.lang.String str9 = helpFormatter0.defaultSyntaxPrefix;
        org.apache.commons.cli.HelpFormatter helpFormatter10 = new org.apache.commons.cli.HelpFormatter();
        java.lang.String str11 = helpFormatter10.defaultSyntaxPrefix;
        java.util.Comparator comparator12 = helpFormatter10.optionComparator;
        helpFormatter0.optionComparator = comparator12;
        java.lang.String str14 = helpFormatter0.defaultNewLine;
        java.lang.StringBuffer stringBuffer15 = null;
        org.apache.commons.cli.Options options17 = null;
        try {
            java.lang.StringBuffer stringBuffer20 = helpFormatter0.renderOptions(stringBuffer15, (int) (byte) 100, options17, 10, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\n" + "'", str6, "\n");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + " " + "'", str9, " ");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "usage: " + "'", str11, "usage: ");
        org.junit.Assert.assertNotNull(comparator12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\n" + "'", str14, "\n");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #592
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #10
36: invokevirtual #11
39: aload_1
40: ldc           #10
42: putfield      #55
45: aload_1
46: getfield      #55
49: astore_2
50: aload_1
51: invokevirtual #72
54: astore_3
55: aload_1
56: ldc           #24
58: invokevirtual #39
61: aload_1
62: getfield      #97
65: astore        4
67: new           #8
70: dup
71: invokespecial #9
74: astore        5
76: aload         5
78: getfield      #97
81: astore        6
83: aload         5
85: getfield      #47
88: astore        7
90: aload_1
91: aload         7
93: putfield      #47
96: aload_1
97: getfield      #23
100: astore        8
102: aconst_null
103: astore        9
105: aconst_null
106: astore        10
108: aload_1
109: aload         9
111: bipush        100
113: aload         10
115: bipush        10
117: bipush        35
119: invokevirtual #98
122: astore        11
124: ldc           #14
126: invokestatic  #15
129: goto          134
132: astore        11
134: new           #29
137: dup
138: invokespecial #30
141: ldc           #31
143: invokevirtual #32
146: aload_2
147: invokevirtual #32
150: ldc           #68
152: invokevirtual #32
155: invokevirtual #35
158: aload_2
159: ldc           #10
161: invokestatic  #53
164: new           #29
167: dup
168: invokespecial #30
171: ldc           #31
173: invokevirtual #32
176: aload_3
177: invokevirtual #32
180: ldc           #74
182: invokevirtual #32
185: invokevirtual #35
188: aload_3
189: ldc           #65
191: invokestatic  #53
194: new           #29
197: dup
198: invokespecial #30
201: ldc           #31
203: invokevirtual #32
206: aload         4
208: invokevirtual #32
211: ldc           #88
213: invokevirtual #32
216: invokevirtual #35
219: aload         4
221: ldc           #24
223: invokestatic  #53
226: new           #29
229: dup
230: invokespecial #30
233: ldc           #31
235: invokevirtual #32
238: aload         6
240: invokevirtual #32
243: ldc           #99
245: invokevirtual #32
248: invokevirtual #35
251: aload         6
253: ldc           #12
255: invokestatic  #53
258: aload         7
260: invokestatic  #51
263: new           #29
266: dup
267: invokespecial #30
270: ldc           #31
272: invokevirtual #32
275: aload         8
277: invokevirtual #32
280: ldc           #74
282: invokevirtual #32
285: invokevirtual #35
288: aload         8
290: ldc           #65
292: invokestatic  #53
295: return
Exception table:
from    to  target type
108   129   132   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0487
Start line: 10582
End line: 0
Method source code: 
    public void test0487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0487");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.defaultLongOptPrefix = "";
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str6 = helpFormatter0.getNewLine();
        helpFormatter0.setSyntaxPrefix(" ");
        java.lang.String str9 = helpFormatter0.defaultSyntaxPrefix;
        org.apache.commons.cli.HelpFormatter helpFormatter10 = new org.apache.commons.cli.HelpFormatter();
        java.lang.String str11 = helpFormatter10.defaultSyntaxPrefix;
        java.util.Comparator comparator12 = helpFormatter10.optionComparator;
        helpFormatter0.optionComparator = comparator12;
        helpFormatter0.defaultDescPad = (byte) 0;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\n" + "'", str6, "\n");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + " " + "'", str9, " ");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "usage: " + "'", str11, "usage: ");
        org.junit.Assert.assertNotNull(comparator12);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #593
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #10
36: invokevirtual #11
39: aload_1
40: ldc           #10
42: putfield      #55
45: aload_1
46: getfield      #55
49: astore_2
50: aload_1
51: invokevirtual #72
54: astore_3
55: aload_1
56: ldc           #24
58: invokevirtual #39
61: aload_1
62: getfield      #97
65: astore        4
67: new           #8
70: dup
71: invokespecial #9
74: astore        5
76: aload         5
78: getfield      #97
81: astore        6
83: aload         5
85: getfield      #47
88: astore        7
90: aload_1
91: aload         7
93: putfield      #47
96: aload_1
97: iconst_0
98: putfield      #76
101: new           #29
104: dup
105: invokespecial #30
108: ldc           #31
110: invokevirtual #32
113: aload_2
114: invokevirtual #32
117: ldc           #68
119: invokevirtual #32
122: invokevirtual #35
125: aload_2
126: ldc           #10
128: invokestatic  #53
131: new           #29
134: dup
135: invokespecial #30
138: ldc           #31
140: invokevirtual #32
143: aload_3
144: invokevirtual #32
147: ldc           #74
149: invokevirtual #32
152: invokevirtual #35
155: aload_3
156: ldc           #65
158: invokestatic  #53
161: new           #29
164: dup
165: invokespecial #30
168: ldc           #31
170: invokevirtual #32
173: aload         4
175: invokevirtual #32
178: ldc           #88
180: invokevirtual #32
183: invokevirtual #35
186: aload         4
188: ldc           #24
190: invokestatic  #53
193: new           #29
196: dup
197: invokespecial #30
200: ldc           #31
202: invokevirtual #32
205: aload         6
207: invokevirtual #32
210: ldc           #99
212: invokevirtual #32
215: invokevirtual #35
218: aload         6
220: ldc           #12
222: invokestatic  #53
225: aload         7
227: invokestatic  #51
230: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0488
Start line: 10605
End line: 0
Method source code: 
    public void test0488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0488");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        java.lang.String str5 = helpFormatter0.defaultLongOptPrefix;
        int int6 = helpFormatter0.defaultWidth;
        java.lang.String str7 = helpFormatter0.getLongOptPrefix();
        helpFormatter0.setOptPrefix("\n");
        org.apache.commons.cli.Options options11 = null;
        try {
            helpFormatter0.printHelp("usage:", options11, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "--" + "'", str5, "--");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 74 + "'", int6 == 74);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "--" + "'", str7, "--");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #594
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: getfield      #63
48: astore_3
49: aload_1
50: getfield      #55
53: astore        4
55: aload_1
56: getfield      #110
59: istore        5
61: aload_1
62: invokevirtual #48
65: astore        6
67: aload_1
68: ldc           #65
70: invokevirtual #11
73: aconst_null
74: astore        7
76: aload_1
77: ldc_w         #501
80: aload         7
82: iconst_0
83: invokevirtual #135
86: ldc           #14
88: invokestatic  #15
91: goto          96
94: astore        8
96: new           #29
99: dup
100: invokespecial #30
103: ldc           #31
105: invokevirtual #32
108: iload_2
109: invokevirtual #33
112: ldc           #34
114: invokevirtual #32
117: iconst_1
118: invokevirtual #33
121: ldc           #31
123: invokevirtual #32
126: invokevirtual #35
129: iload_2
130: iconst_1
131: if_icmpne     138
134: iconst_1
135: goto          139
138: iconst_0
139: invokestatic  #36
142: new           #29
145: dup
146: invokespecial #30
149: ldc           #31
151: invokevirtual #32
154: aload_3
155: invokevirtual #32
158: ldc           #66
160: invokevirtual #32
163: invokevirtual #35
166: aload_3
167: ldc           #67
169: invokestatic  #53
172: new           #29
175: dup
176: invokespecial #30
179: ldc           #31
181: invokevirtual #32
184: aload         4
186: invokevirtual #32
189: ldc           #52
191: invokevirtual #32
194: invokevirtual #35
197: aload         4
199: ldc           #44
201: invokestatic  #53
204: new           #29
207: dup
208: invokespecial #30
211: ldc           #31
213: invokevirtual #32
216: iload         5
218: invokevirtual #33
221: ldc           #34
223: invokevirtual #32
226: bipush        74
228: invokevirtual #33
231: ldc           #31
233: invokevirtual #32
236: invokevirtual #35
239: iload         5
241: bipush        74
243: if_icmpne     250
246: iconst_1
247: goto          251
250: iconst_0
251: invokestatic  #36
254: new           #29
257: dup
258: invokespecial #30
261: ldc           #31
263: invokevirtual #32
266: aload         6
268: invokevirtual #32
271: ldc           #52
273: invokevirtual #32
276: invokevirtual #35
279: aload         6
281: ldc           #44
283: invokestatic  #53
286: return
Exception table:
from    to  target type
76    91    94   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0489
Start line: 10632
End line: 0
Method source code: 
    public void test0489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0489");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        int int4 = helpFormatter0.defaultDescPad;
        helpFormatter0.defaultNewLine = " ";
        java.io.PrintWriter printWriter7 = null;
        org.apache.commons.cli.Options options11 = null;
        try {
            helpFormatter0.printHelp(printWriter7, 100, "-", "                                ", options11, 1, 0, "                                                                                                 ", true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 3 + "'", int4 == 3);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #595
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: getfield      #76
48: istore_3
49: aload_1
50: ldc           #24
52: putfield      #23
55: aconst_null
56: astore        4
58: aconst_null
59: astore        5
61: aload_1
62: aload         4
64: bipush        100
66: ldc           #67
68: ldc_w         #456
71: aload         5
73: iconst_1
74: iconst_0
75: ldc           #141
77: iconst_1
78: invokevirtual #40
81: ldc           #14
83: invokestatic  #15
86: goto          91
89: astore        6
91: new           #29
94: dup
95: invokespecial #30
98: ldc           #31
100: invokevirtual #32
103: iload_2
104: invokevirtual #33
107: ldc           #34
109: invokevirtual #32
112: iconst_1
113: invokevirtual #33
116: ldc           #31
118: invokevirtual #32
121: invokevirtual #35
124: iload_2
125: iconst_1
126: if_icmpne     133
129: iconst_1
130: goto          134
133: iconst_0
134: invokestatic  #36
137: new           #29
140: dup
141: invokespecial #30
144: ldc           #31
146: invokevirtual #32
149: iload_3
150: invokevirtual #33
153: ldc           #34
155: invokevirtual #32
158: iconst_3
159: invokevirtual #33
162: ldc           #31
164: invokevirtual #32
167: invokevirtual #35
170: iload_3
171: iconst_3
172: if_icmpne     179
175: iconst_1
176: goto          180
179: iconst_0
180: invokestatic  #36
183: return
Exception table:
from    to  target type
61    86    89   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0490
Start line: 10654
End line: 0
Method source code: 
    public void test0490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0490");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter0.setOptPrefix("");
        helpFormatter0.setWidth(1);
        java.lang.String str5 = helpFormatter0.getNewLine();
        helpFormatter0.defaultLeftPad = (short) 1;
        java.io.PrintWriter printWriter8 = null;
        org.apache.commons.cli.Options options10 = null;
        try {
            helpFormatter0.printOptions(printWriter8, 52, options10, 1, 52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\n" + "'", str5, "\n");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #596
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: ldc           #10
36: invokevirtual #11
39: aload_1
40: iconst_1
41: invokevirtual #156
44: aload_1
45: invokevirtual #72
48: astore_2
49: aload_1
50: iconst_1
51: putfield      #60
54: aconst_null
55: astore_3
56: aconst_null
57: astore        4
59: aload_1
60: aload_3
61: bipush        52
63: aload         4
65: iconst_1
66: bipush        52
68: invokevirtual #18
71: ldc           #14
73: invokestatic  #15
76: goto          81
79: astore        5
81: new           #29
84: dup
85: invokespecial #30
88: ldc           #31
90: invokevirtual #32
93: aload_2
94: invokevirtual #32
97: ldc           #74
99: invokevirtual #32
102: invokevirtual #35
105: aload_2
106: ldc           #65
108: invokestatic  #53
111: return
Exception table:
from    to  target type
59    76    79   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0491
Start line: 10675
End line: 0
Method source code: 
    public void test0491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0491");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.defaultDescPad = '4';
        helpFormatter0.setNewLine("");
        helpFormatter0.setSyntaxPrefix("");
        java.io.PrintWriter printWriter10 = null;
        org.apache.commons.cli.Options options14 = null;
        try {
            helpFormatter0.printHelp(printWriter10, (int) (short) 1, "--", "          ", options14, 1, (int) ' ', "                                                    ", true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #597
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: bipush        52
47: putfield      #76
50: aload_1
51: ldc           #10
53: invokevirtual #131
56: aload_1
57: ldc           #10
59: invokevirtual #39
62: aconst_null
63: astore_3
64: aconst_null
65: astore        4
67: aload_1
68: aload_3
69: iconst_1
70: ldc           #44
72: ldc           #114
74: aload         4
76: iconst_1
77: bipush        32
79: ldc_w         #313
82: iconst_1
83: invokevirtual #40
86: ldc           #14
88: invokestatic  #15
91: goto          96
94: astore        5
96: new           #29
99: dup
100: invokespecial #30
103: ldc           #31
105: invokevirtual #32
108: iload_2
109: invokevirtual #33
112: ldc           #34
114: invokevirtual #32
117: iconst_1
118: invokevirtual #33
121: ldc           #31
123: invokevirtual #32
126: invokevirtual #35
129: iload_2
130: iconst_1
131: if_icmpne     138
134: iconst_1
135: goto          139
138: iconst_0
139: invokestatic  #36
142: return
Exception table:
from    to  target type
67    91    94   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0492
Start line: 10697
End line: 0
Method source code: 
    public void test0492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0492");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        helpFormatter0.setLongOptPrefix(" ");
        helpFormatter0.defaultDescPad = (short) 10;
        helpFormatter0.defaultSyntaxPrefix = "";
        helpFormatter0.setLongOptPrefix("");
        java.io.PrintWriter printWriter13 = null;
        org.apache.commons.cli.Options options15 = null;
        try {
            helpFormatter0.printOptions(printWriter13, 0, options15, (-2), (-2));
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: null");
        } catch (java.lang.NegativeArraySizeException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #598
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: getfield      #63
48: astore_3
49: aload_1
50: ldc           #24
52: invokevirtual #49
55: aload_1
56: bipush        10
58: putfield      #76
61: aload_1
62: ldc           #10
64: putfield      #97
67: aload_1
68: ldc           #10
70: invokevirtual #49
73: aconst_null
74: astore        4
76: aconst_null
77: astore        5
79: aload_1
80: aload         4
82: iconst_0
83: aload         5
85: bipush        -2
87: bipush        -2
89: invokevirtual #18
92: ldc           #19
94: invokestatic  #15
97: goto          102
100: astore        6
102: new           #29
105: dup
106: invokespecial #30
109: ldc           #31
111: invokevirtual #32
114: iload_2
115: invokevirtual #33
118: ldc           #34
120: invokevirtual #32
123: iconst_1
124: invokevirtual #33
127: ldc           #31
129: invokevirtual #32
132: invokevirtual #35
135: iload_2
136: iconst_1
137: if_icmpne     144
140: iconst_1
141: goto          145
144: iconst_0
145: invokestatic  #36
148: new           #29
151: dup
152: invokespecial #30
155: ldc           #31
157: invokevirtual #32
160: aload_3
161: invokevirtual #32
164: ldc           #66
166: invokevirtual #32
169: invokevirtual #35
172: aload_3
173: ldc           #67
175: invokestatic  #53
178: return
Exception table:
from    to  target type
79    97   100   Class java/lang/NegativeArraySizeException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0493
Start line: 10722
End line: 0
Method source code: 
    public void test0493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0493");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        java.lang.String str6 = helpFormatter0.rtrim("");
        java.lang.String str8 = helpFormatter0.rtrim("-");
        java.lang.String str9 = helpFormatter0.getLongOptSeparator();
        helpFormatter0.defaultNewLine = "";
        helpFormatter0.setWidth((int) (byte) 100);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "-" + "'", str8, "-");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + " " + "'", str9, " ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #599
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: getfield      #63
48: astore_3
49: aload_1
50: ldc           #10
52: invokevirtual #64
55: astore        4
57: aload_1
58: ldc           #67
60: invokevirtual #64
63: astore        5
65: aload_1
66: invokevirtual #86
69: astore        6
71: aload_1
72: ldc           #10
74: putfield      #23
77: aload_1
78: bipush        100
80: invokevirtual #156
83: new           #29
86: dup
87: invokespecial #30
90: ldc           #31
92: invokevirtual #32
95: iload_2
96: invokevirtual #33
99: ldc           #34
101: invokevirtual #32
104: iconst_1
105: invokevirtual #33
108: ldc           #31
110: invokevirtual #32
113: invokevirtual #35
116: iload_2
117: iconst_1
118: if_icmpne     125
121: iconst_1
122: goto          126
125: iconst_0
126: invokestatic  #36
129: new           #29
132: dup
133: invokespecial #30
136: ldc           #31
138: invokevirtual #32
141: aload_3
142: invokevirtual #32
145: ldc           #66
147: invokevirtual #32
150: invokevirtual #35
153: aload_3
154: ldc           #67
156: invokestatic  #53
159: new           #29
162: dup
163: invokespecial #30
166: ldc           #31
168: invokevirtual #32
171: aload         4
173: invokevirtual #32
176: ldc           #68
178: invokevirtual #32
181: invokevirtual #35
184: aload         4
186: ldc           #10
188: invokestatic  #53
191: new           #29
194: dup
195: invokespecial #30
198: ldc           #31
200: invokevirtual #32
203: aload         5
205: invokevirtual #32
208: ldc           #66
210: invokevirtual #32
213: invokevirtual #35
216: aload         5
218: ldc           #67
220: invokestatic  #53
223: new           #29
226: dup
227: invokespecial #30
230: ldc           #31
232: invokevirtual #32
235: aload         6
237: invokevirtual #32
240: ldc           #88
242: invokevirtual #32
245: invokevirtual #35
248: aload         6
250: ldc           #24
252: invokestatic  #53
255: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0494
Start line: 10742
End line: 0
Method source code: 
    public void test0494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0494");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        java.lang.String str6 = helpFormatter0.rtrim("");
        java.lang.String str8 = helpFormatter0.rtrim("-");
        java.lang.String str9 = helpFormatter0.getLongOptSeparator();
        helpFormatter0.defaultLeftPad = (byte) -1;
        helpFormatter0.defaultArgName = "\n";
        helpFormatter0.defaultNewLine = "usage: ";
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "-" + "'", str8, "-");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + " " + "'", str9, " ");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #600
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: getfield      #63
48: astore_3
49: aload_1
50: ldc           #10
52: invokevirtual #64
55: astore        4
57: aload_1
58: ldc           #67
60: invokevirtual #64
63: astore        5
65: aload_1
66: invokevirtual #86
69: astore        6
71: aload_1
72: iconst_m1
73: putfield      #60
76: aload_1
77: ldc           #65
79: putfield      #77
82: aload_1
83: ldc           #12
85: putfield      #23
88: new           #29
91: dup
92: invokespecial #30
95: ldc           #31
97: invokevirtual #32
100: iload_2
101: invokevirtual #33
104: ldc           #34
106: invokevirtual #32
109: iconst_1
110: invokevirtual #33
113: ldc           #31
115: invokevirtual #32
118: invokevirtual #35
121: iload_2
122: iconst_1
123: if_icmpne     130
126: iconst_1
127: goto          131
130: iconst_0
131: invokestatic  #36
134: new           #29
137: dup
138: invokespecial #30
141: ldc           #31
143: invokevirtual #32
146: aload_3
147: invokevirtual #32
150: ldc           #66
152: invokevirtual #32
155: invokevirtual #35
158: aload_3
159: ldc           #67
161: invokestatic  #53
164: new           #29
167: dup
168: invokespecial #30
171: ldc           #31
173: invokevirtual #32
176: aload         4
178: invokevirtual #32
181: ldc           #68
183: invokevirtual #32
186: invokevirtual #35
189: aload         4
191: ldc           #10
193: invokestatic  #53
196: new           #29
199: dup
200: invokespecial #30
203: ldc           #31
205: invokevirtual #32
208: aload         5
210: invokevirtual #32
213: ldc           #66
215: invokevirtual #32
218: invokevirtual #35
221: aload         5
223: ldc           #67
225: invokestatic  #53
228: new           #29
231: dup
232: invokespecial #30
235: ldc           #31
237: invokevirtual #32
240: aload         6
242: invokevirtual #32
245: ldc           #88
247: invokevirtual #32
250: invokevirtual #35
253: aload         6
255: ldc           #24
257: invokestatic  #53
260: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0495
Start line: 10763
End line: 0
Method source code: 
    public void test0495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0495");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        int int4 = helpFormatter0.defaultWidth;
        java.util.Comparator comparator5 = helpFormatter0.getOptionComparator();
        helpFormatter0.setArgName("\n");
        org.apache.commons.cli.Options options11 = null;
        try {
            helpFormatter0.printHelp(0, "", "                                ", options11, "arg");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: cmdLineSyntax not provided");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 74 + "'", int4 == 74);
        org.junit.Assert.assertNotNull(comparator5);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #601
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: getfield      #110
48: istore_3
49: aload_1
50: invokevirtual #106
53: astore        4
55: aload_1
56: ldc           #65
58: invokevirtual #146
61: aconst_null
62: astore        5
64: aload_1
65: iconst_0
66: ldc           #10
68: ldc_w         #456
71: aload         5
73: ldc           #79
75: invokevirtual #45
78: ldc           #27
80: invokestatic  #15
83: goto          88
86: astore        6
88: new           #29
91: dup
92: invokespecial #30
95: ldc           #31
97: invokevirtual #32
100: iload_2
101: invokevirtual #33
104: ldc           #34
106: invokevirtual #32
109: iconst_1
110: invokevirtual #33
113: ldc           #31
115: invokevirtual #32
118: invokevirtual #35
121: iload_2
122: iconst_1
123: if_icmpne     130
126: iconst_1
127: goto          131
130: iconst_0
131: invokestatic  #36
134: new           #29
137: dup
138: invokespecial #30
141: ldc           #31
143: invokevirtual #32
146: iload_3
147: invokevirtual #33
150: ldc           #34
152: invokevirtual #32
155: bipush        74
157: invokevirtual #33
160: ldc           #31
162: invokevirtual #32
165: invokevirtual #35
168: iload_3
169: bipush        74
171: if_icmpne     178
174: iconst_1
175: goto          179
178: iconst_0
179: invokestatic  #36
182: aload         4
184: invokestatic  #51
187: return
Exception table:
from    to  target type
64    83    86   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0496
Start line: 10786
End line: 0
Method source code: 
    public void test0496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0496");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.getArgName();
        helpFormatter0.defaultNewLine = "\n";
        helpFormatter0.defaultLeftPad = (byte) -1;
        helpFormatter0.setLongOptSeparator("");
        org.apache.commons.cli.HelpFormatter helpFormatter9 = new org.apache.commons.cli.HelpFormatter();
        int int10 = helpFormatter9.getLeftPadding();
        helpFormatter9.defaultNewLine = "";
        helpFormatter9.setDescPadding(10);
        helpFormatter9.setSyntaxPrefix(" ");
        java.util.Comparator comparator17 = helpFormatter9.getOptionComparator();
        helpFormatter0.setOptionComparator(comparator17);
        java.lang.String str19 = helpFormatter0.getLongOptPrefix();
        java.io.PrintWriter printWriter20 = null;
        try {
            helpFormatter0.printWrapped(printWriter20, (-1), (int) (byte) 100, "                                                                                                    ");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "arg" + "'", str2, "arg");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(comparator17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "--" + "'", str19, "--");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #602
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: invokevirtual #104
42: astore_3
43: aload_1
44: ldc           #65
46: putfield      #23
49: aload_1
50: iconst_m1
51: putfield      #60
54: aload_1
55: ldc           #10
57: invokevirtual #91
60: new           #8
63: dup
64: invokespecial #9
67: astore        4
69: aload         4
71: invokevirtual #22
74: istore        5
76: aload         4
78: ldc           #10
80: putfield      #23
83: aload         4
85: bipush        10
87: invokevirtual #38
90: aload         4
92: ldc           #24
94: invokevirtual #39
97: aload         4
99: invokevirtual #106
102: astore        6
104: aload_1
105: aload         6
107: invokevirtual #152
110: aload_1
111: invokevirtual #48
114: astore        7
116: aconst_null
117: astore        8
119: aload_1
120: aload         8
122: iconst_m1
123: bipush        100
125: ldc           #240
127: invokevirtual #61
130: ldc           #14
132: invokestatic  #15
135: goto          140
138: astore        9
140: new           #29
143: dup
144: invokespecial #30
147: ldc           #31
149: invokevirtual #32
152: iload_2
153: invokevirtual #33
156: ldc           #34
158: invokevirtual #32
161: iconst_1
162: invokevirtual #33
165: ldc           #31
167: invokevirtual #32
170: invokevirtual #35
173: iload_2
174: iconst_1
175: if_icmpne     182
178: iconst_1
179: goto          183
182: iconst_0
183: invokestatic  #36
186: new           #29
189: dup
190: invokespecial #30
193: ldc           #31
195: invokevirtual #32
198: aload_3
199: invokevirtual #32
202: ldc           #78
204: invokevirtual #32
207: invokevirtual #35
210: aload_3
211: ldc           #79
213: invokestatic  #53
216: new           #29
219: dup
220: invokespecial #30
223: ldc           #31
225: invokevirtual #32
228: iload         5
230: invokevirtual #33
233: ldc           #34
235: invokevirtual #32
238: iconst_1
239: invokevirtual #33
242: ldc           #31
244: invokevirtual #32
247: invokevirtual #35
250: iload         5
252: iconst_1
253: if_icmpne     260
256: iconst_1
257: goto          261
260: iconst_0
261: invokestatic  #36
264: aload         6
266: invokestatic  #51
269: new           #29
272: dup
273: invokespecial #30
276: ldc           #31
278: invokevirtual #32
281: aload         7
283: invokevirtual #32
286: ldc           #52
288: invokevirtual #32
291: invokevirtual #35
294: aload         7
296: ldc           #44
298: invokestatic  #53
301: return
Exception table:
from    to  target type
119   135   138   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0497
Start line: 10819
End line: 0
Method source code: 
    public void test0497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0497");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        java.lang.String str6 = helpFormatter0.rtrim("");
        int int7 = helpFormatter0.getDescPadding();
        int int8 = helpFormatter0.getDescPadding();
        java.lang.String str9 = helpFormatter0.getArgName();
        helpFormatter0.setDescPadding(0);
        helpFormatter0.defaultDescPad = (short) 100;
        java.util.Comparator comparator14 = helpFormatter0.optionComparator;
        java.lang.String str15 = helpFormatter0.getNewLine();
        org.apache.commons.cli.HelpFormatter helpFormatter16 = new org.apache.commons.cli.HelpFormatter();
        helpFormatter16.setOptPrefix("");
        helpFormatter16.defaultLongOptPrefix = "";
        java.lang.String str21 = helpFormatter16.defaultLongOptPrefix;
        java.lang.String str22 = helpFormatter16.getNewLine();
        helpFormatter16.setSyntaxPrefix(" ");
        java.lang.String str25 = helpFormatter16.defaultSyntaxPrefix;
        org.apache.commons.cli.HelpFormatter helpFormatter26 = new org.apache.commons.cli.HelpFormatter();
        java.lang.String str27 = helpFormatter26.defaultSyntaxPrefix;
        java.util.Comparator comparator28 = helpFormatter26.optionComparator;
        helpFormatter16.optionComparator = comparator28;
        helpFormatter0.setOptionComparator(comparator28);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 3 + "'", int7 == 3);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 3 + "'", int8 == 3);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "arg" + "'", str9, "arg");
        org.junit.Assert.assertNotNull(comparator14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "\n" + "'", str22, "\n");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + " " + "'", str25, " ");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "usage: " + "'", str27, "usage: ");
        org.junit.Assert.assertNotNull(comparator28);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #603
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: getfield      #63
48: astore_3
49: aload_1
50: ldc           #10
52: invokevirtual #64
55: astore        4
57: aload_1
58: invokevirtual #118
61: istore        5
63: aload_1
64: invokevirtual #118
67: istore        6
69: aload_1
70: invokevirtual #104
73: astore        7
75: aload_1
76: iconst_0
77: invokevirtual #38
80: aload_1
81: bipush        100
83: putfield      #76
86: aload_1
87: getfield      #47
90: astore        8
92: aload_1
93: invokevirtual #72
96: astore        9
98: new           #8
101: dup
102: invokespecial #9
105: astore        10
107: aload         10
109: ldc           #10
111: invokevirtual #11
114: aload         10
116: ldc           #10
118: putfield      #55
121: aload         10
123: getfield      #55
126: astore        11
128: aload         10
130: invokevirtual #72
133: astore        12
135: aload         10
137: ldc           #24
139: invokevirtual #39
142: aload         10
144: getfield      #97
147: astore        13
149: new           #8
152: dup
153: invokespecial #9
156: astore        14
158: aload         14
160: getfield      #97
163: astore        15
165: aload         14
167: getfield      #47
170: astore        16
172: aload         10
174: aload         16
176: putfield      #47
179: aload_1
180: aload         16
182: invokevirtual #152
185: new           #29
188: dup
189: invokespecial #30
192: ldc           #31
194: invokevirtual #32
197: iload_2
198: invokevirtual #33
201: ldc           #34
203: invokevirtual #32
206: iconst_1
207: invokevirtual #33
210: ldc           #31
212: invokevirtual #32
215: invokevirtual #35
218: iload_2
219: iconst_1
220: if_icmpne     227
223: iconst_1
224: goto          228
227: iconst_0
228: invokestatic  #36
231: new           #29
234: dup
235: invokespecial #30
238: ldc           #31
240: invokevirtual #32
243: aload_3
244: invokevirtual #32
247: ldc           #66
249: invokevirtual #32
252: invokevirtual #35
255: aload_3
256: ldc           #67
258: invokestatic  #53
261: new           #29
264: dup
265: invokespecial #30
268: ldc           #31
270: invokevirtual #32
273: aload         4
275: invokevirtual #32
278: ldc           #68
280: invokevirtual #32
283: invokevirtual #35
286: aload         4
288: ldc           #10
290: invokestatic  #53
293: new           #29
296: dup
297: invokespecial #30
300: ldc           #31
302: invokevirtual #32
305: iload         5
307: invokevirtual #33
310: ldc           #34
312: invokevirtual #32
315: iconst_3
316: invokevirtual #33
319: ldc           #31
321: invokevirtual #32
324: invokevirtual #35
327: iload         5
329: iconst_3
330: if_icmpne     337
333: iconst_1
334: goto          338
337: iconst_0
338: invokestatic  #36
341: new           #29
344: dup
345: invokespecial #30
348: ldc           #31
350: invokevirtual #32
353: iload         6
355: invokevirtual #33
358: ldc           #34
360: invokevirtual #32
363: iconst_3
364: invokevirtual #33
367: ldc           #31
369: invokevirtual #32
372: invokevirtual #35
375: iload         6
377: iconst_3
378: if_icmpne     385
381: iconst_1
382: goto          386
385: iconst_0
386: invokestatic  #36
389: new           #29
392: dup
393: invokespecial #30
396: ldc           #31
398: invokevirtual #32
401: aload         7
403: invokevirtual #32
406: ldc           #78
408: invokevirtual #32
411: invokevirtual #35
414: aload         7
416: ldc           #79
418: invokestatic  #53
421: aload         8
423: invokestatic  #51
426: new           #29
429: dup
430: invokespecial #30
433: ldc           #31
435: invokevirtual #32
438: aload         9
440: invokevirtual #32
443: ldc           #68
445: invokevirtual #32
448: invokevirtual #35
451: aload         9
453: ldc           #10
455: invokestatic  #53
458: new           #29
461: dup
462: invokespecial #30
465: ldc           #31
467: invokevirtual #32
470: aload         11
472: invokevirtual #32
475: ldc           #68
477: invokevirtual #32
480: invokevirtual #35
483: aload         11
485: ldc           #10
487: invokestatic  #53
490: new           #29
493: dup
494: invokespecial #30
497: ldc           #31
499: invokevirtual #32
502: aload         12
504: invokevirtual #32
507: ldc           #74
509: invokevirtual #32
512: invokevirtual #35
515: aload         12
517: ldc           #65
519: invokestatic  #53
522: new           #29
525: dup
526: invokespecial #30
529: ldc           #31
531: invokevirtual #32
534: aload         13
536: invokevirtual #32
539: ldc           #88
541: invokevirtual #32
544: invokevirtual #35
547: aload         13
549: ldc           #24
551: invokestatic  #53
554: new           #29
557: dup
558: invokespecial #30
561: ldc           #31
563: invokevirtual #32
566: aload         15
568: invokevirtual #32
571: ldc           #99
573: invokevirtual #32
576: invokevirtual #35
579: aload         15
581: ldc           #12
583: invokestatic  #53
586: aload         16
588: invokestatic  #51
591: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0498
Start line: 10862
End line: 0
Method source code: 
    public void test0498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0498");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        java.lang.String str1 = helpFormatter0.getArgName();
        helpFormatter0.defaultLeftPad = 1;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "arg" + "'", str1, "arg");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #604
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #104
37: astore_2
38: aload_1
39: iconst_1
40: putfield      #60
43: new           #29
46: dup
47: invokespecial #30
50: ldc           #31
52: invokevirtual #32
55: aload_2
56: invokevirtual #32
59: ldc           #78
61: invokevirtual #32
64: invokevirtual #35
67: aload_2
68: ldc           #79
70: invokestatic  #53
73: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0499
Start line: 10872
End line: 0
Method source code: 
    public void test0499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0499");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        helpFormatter0.defaultNewLine = "";
        java.lang.String str4 = helpFormatter0.defaultOptPrefix;
        java.lang.String str6 = helpFormatter0.rtrim("");
        int int7 = helpFormatter0.getDescPadding();
        helpFormatter0.defaultWidth = 0;
        java.util.Comparator comparator10 = helpFormatter0.optionComparator;
        helpFormatter0.defaultLeftPad = 52;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-" + "'", str4, "-");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 3 + "'", int7 == 3);
        org.junit.Assert.assertNotNull(comparator10);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #605
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: ldc           #10
41: putfield      #23
44: aload_1
45: getfield      #63
48: astore_3
49: aload_1
50: ldc           #10
52: invokevirtual #64
55: astore        4
57: aload_1
58: invokevirtual #118
61: istore        5
63: aload_1
64: iconst_0
65: putfield      #110
68: aload_1
69: getfield      #47
72: astore        6
74: aload_1
75: bipush        52
77: putfield      #60
80: new           #29
83: dup
84: invokespecial #30
87: ldc           #31
89: invokevirtual #32
92: iload_2
93: invokevirtual #33
96: ldc           #34
98: invokevirtual #32
101: iconst_1
102: invokevirtual #33
105: ldc           #31
107: invokevirtual #32
110: invokevirtual #35
113: iload_2
114: iconst_1
115: if_icmpne     122
118: iconst_1
119: goto          123
122: iconst_0
123: invokestatic  #36
126: new           #29
129: dup
130: invokespecial #30
133: ldc           #31
135: invokevirtual #32
138: aload_3
139: invokevirtual #32
142: ldc           #66
144: invokevirtual #32
147: invokevirtual #35
150: aload_3
151: ldc           #67
153: invokestatic  #53
156: new           #29
159: dup
160: invokespecial #30
163: ldc           #31
165: invokevirtual #32
168: aload         4
170: invokevirtual #32
173: ldc           #68
175: invokevirtual #32
178: invokevirtual #35
181: aload         4
183: ldc           #10
185: invokestatic  #53
188: new           #29
191: dup
192: invokespecial #30
195: ldc           #31
197: invokevirtual #32
200: iload         5
202: invokevirtual #33
205: ldc           #34
207: invokevirtual #32
210: iconst_3
211: invokevirtual #33
214: ldc           #31
216: invokevirtual #32
219: invokevirtual #35
222: iload         5
224: iconst_3
225: if_icmpne     232
228: iconst_1
229: goto          233
232: iconst_0
233: invokestatic  #36
236: aload         6
238: invokestatic  #51
241: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/RegressionTest0.class
Class name: RegressionTest0
Method name: test0500
Start line: 10892
End line: 0
Method source code: 
    public void test0500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0500");
        org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter();
        int int1 = helpFormatter0.getLeftPadding();
        java.lang.String str2 = helpFormatter0.defaultLongOptPrefix;
        java.lang.String str3 = helpFormatter0.getOptPrefix();
        int int4 = helpFormatter0.defaultDescPad;
        helpFormatter0.setOptPrefix("");
        java.lang.String str7 = helpFormatter0.defaultArgName;
        helpFormatter0.defaultDescPad = 0;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "--" + "'", str2, "--");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "-" + "'", str3, "-");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 3 + "'", int4 == 3);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "arg" + "'", str7, "arg");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #606
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #22
37: istore_2
38: aload_1
39: getfield      #55
42: astore_3
43: aload_1
44: invokevirtual #123
47: astore        4
49: aload_1
50: getfield      #76
53: istore        5
55: aload_1
56: ldc           #10
58: invokevirtual #11
61: aload_1
62: getfield      #77
65: astore        6
67: aload_1
68: iconst_0
69: putfield      #76
72: new           #29
75: dup
76: invokespecial #30
79: ldc           #31
81: invokevirtual #32
84: iload_2
85: invokevirtual #33
88: ldc           #34
90: invokevirtual #32
93: iconst_1
94: invokevirtual #33
97: ldc           #31
99: invokevirtual #32
102: invokevirtual #35
105: iload_2
106: iconst_1
107: if_icmpne     114
110: iconst_1
111: goto          115
114: iconst_0
115: invokestatic  #36
118: new           #29
121: dup
122: invokespecial #30
125: ldc           #31
127: invokevirtual #32
130: aload_3
131: invokevirtual #32
134: ldc           #52
136: invokevirtual #32
139: invokevirtual #35
142: aload_3
143: ldc           #44
145: invokestatic  #53
148: new           #29
151: dup
152: invokespecial #30
155: ldc           #31
157: invokevirtual #32
160: aload         4
162: invokevirtual #32
165: ldc           #66
167: invokevirtual #32
170: invokevirtual #35
173: aload         4
175: ldc           #67
177: invokestatic  #53
180: new           #29
183: dup
184: invokespecial #30
187: ldc           #31
189: invokevirtual #32
192: iload         5
194: invokevirtual #33
197: ldc           #34
199: invokevirtual #32
202: iconst_3
203: invokevirtual #33
206: ldc           #31
208: invokevirtual #32
211: invokevirtual #35
214: iload         5
216: iconst_3
217: if_icmpne     224
220: iconst_1
221: goto          225
224: iconst_0
225: invokestatic  #36
228: new           #29
231: dup
232: invokespecial #30
235: ldc           #31
237: invokevirtual #32
240: aload         6
242: invokevirtual #32
245: ldc           #78
247: invokevirtual #32
250: invokevirtual #35
253: aload         6
255: ldc           #79
257: invokestatic  #53
260: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/HelpFormatter_ESTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/HelpFormatter_ESTest.class
Class name: HelpFormatter_ESTest
Method name: test00
Start line: 24
End line: 0
Method source code: 
  public void test00()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      int int0 = helpFormatter0.getWidth();
      assertEquals(3, helpFormatter0.defaultDescPad);
      assertEquals("usage: ", helpFormatter0.getSyntaxPrefix());
      assertEquals(" ", helpFormatter0.getLongOptSeparator());
      assertEquals(1, helpFormatter0.defaultLeftPad);
      assertEquals(74, int0);
      assertEquals("--", helpFormatter0.getLongOptPrefix());
      assertEquals("-", helpFormatter0.getOptPrefix());
      assertEquals("arg", helpFormatter0.getArgName());
  }
Method byte code: 
0: new           #2
3: dup
4: invokespecial #3
7: astore_1
8: aload_1
9: invokevirtual #4
12: istore_2
13: ldc2_w        #5
16: aload_1
17: getfield      #7
20: i2l
21: invokestatic  #8
24: ldc           #9
26: aload_1
27: invokevirtual #10
30: invokestatic  #11
33: ldc           #12
35: aload_1
36: invokevirtual #13
39: invokestatic  #11
42: lconst_1
43: aload_1
44: getfield      #14
47: i2l
48: invokestatic  #8
51: ldc2_w        #15
54: iload_2
55: i2l
56: invokestatic  #8
59: ldc           #17
61: aload_1
62: invokevirtual #18
65: invokestatic  #11
68: ldc           #19
70: aload_1
71: invokevirtual #20
74: invokestatic  #11
77: ldc           #21
79: aload_1
80: invokevirtual #22
83: invokestatic  #11
86: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/HelpFormatter_ESTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/HelpFormatter_ESTest.class
Class name: HelpFormatter_ESTest
Method name: test01
Start line: 38
End line: 0
Method source code: 
  public void test01()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setLongOptPrefix("usage: ");
      assertEquals("usage: ", helpFormatter0.getLongOptPrefix());
  }
Method byte code: 
0: new           #2
3: dup
4: invokespecial #3
7: astore_1
8: aload_1
9: ldc           #9
11: invokevirtual #23
14: ldc           #9
16: aload_1
17: invokevirtual #18
20: invokestatic  #11
23: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/HelpFormatter_ESTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/HelpFormatter_ESTest.class
Class name: HelpFormatter_ESTest
Method name: test02
Start line: 45
End line: 0
Method source code: 
  public void test02()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      int int0 = helpFormatter0.getDescPadding();
      assertEquals(74, helpFormatter0.defaultWidth);
      assertEquals(1, helpFormatter0.defaultLeftPad);
      assertEquals("usage: ", helpFormatter0.getSyntaxPrefix());
      assertEquals(" ", helpFormatter0.getLongOptSeparator());
      assertEquals(3, int0);
      assertEquals("--", helpFormatter0.getLongOptPrefix());
      assertEquals("-", helpFormatter0.getOptPrefix());
      assertEquals("arg", helpFormatter0.getArgName());
  }
Method byte code: 
0: new           #2
3: dup
4: invokespecial #3
7: astore_1
8: aload_1
9: invokevirtual #24
12: istore_2
13: ldc2_w        #15
16: aload_1
17: getfield      #25
20: i2l
21: invokestatic  #8
24: lconst_1
25: aload_1
26: getfield      #14
29: i2l
30: invokestatic  #8
33: ldc           #9
35: aload_1
36: invokevirtual #10
39: invokestatic  #11
42: ldc           #12
44: aload_1
45: invokevirtual #13
48: invokestatic  #11
51: ldc2_w        #5
54: iload_2
55: i2l
56: invokestatic  #8
59: ldc           #17
61: aload_1
62: invokevirtual #18
65: invokestatic  #11
68: ldc           #19
70: aload_1
71: invokevirtual #20
74: invokestatic  #11
77: ldc           #21
79: aload_1
80: invokevirtual #22
83: invokestatic  #11
86: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/HelpFormatter_ESTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/HelpFormatter_ESTest.class
Class name: HelpFormatter_ESTest
Method name: test03
Start line: 59
End line: 0
Method source code: 
  public void test03()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setLongOptSeparator("-");
      assertEquals("-", helpFormatter0.getLongOptSeparator());
  }
Method byte code: 
0: new           #2
3: dup
4: invokespecial #3
7: astore_1
8: aload_1
9: ldc           #19
11: invokevirtual #26
14: ldc           #19
16: aload_1
17: invokevirtual #13
20: invokestatic  #11
23: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/HelpFormatter_ESTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/HelpFormatter_ESTest.class
Class name: HelpFormatter_ESTest
Method name: test04
Start line: 66
End line: 0
Method source code: 
  public void test04()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setNewLine("w_]i0)k@S");
      assertEquals("w_]i0)k@S", helpFormatter0.getNewLine());
  }
Method byte code: 
0: new           #2
3: dup
4: invokespecial #3
7: astore_1
8: aload_1
9: ldc           #27
11: invokevirtual #28
14: ldc           #27
16: aload_1
17: invokevirtual #29
20: invokestatic  #11
23: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/HelpFormatter_ESTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/HelpFormatter_ESTest.class
Class name: HelpFormatter_ESTest
Method name: test05
Start line: 73
End line: 0
Method source code: 
  public void test05()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setArgName("--");
      assertEquals("--", helpFormatter0.getArgName());
  }
Method byte code: 
0: new           #2
3: dup
4: invokespecial #3
7: astore_1
8: aload_1
9: ldc           #17
11: invokevirtual #30
14: ldc           #17
16: aload_1
17: invokevirtual #22
20: invokestatic  #11
23: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/HelpFormatter_ESTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/HelpFormatter_ESTest.class
Class name: HelpFormatter_ESTest
Method name: test06
Start line: 80
End line: 0
Method source code: 
  public void test06()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      try { 
        helpFormatter0.printHelp((PrintWriter) null, 3, "-", "-", options0, 3, 3, "-");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }
Method byte code: 
0: new           #2
3: dup
4: invokespecial #3
7: astore_1
8: new           #31
11: dup
12: invokespecial #32
15: astore_2
16: aload_1
17: aconst_null
18: checkcast     #33
21: iconst_3
22: ldc           #19
24: ldc           #19
26: aload_2
27: iconst_3
28: iconst_3
29: ldc           #19
31: invokevirtual #34
34: ldc           #35
36: invokestatic  #36
39: goto          49
42: astore_3
43: ldc           #38
45: aload_3
46: invokestatic  #39
49: return
Exception table:
from    to  target type
16    39    42   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/HelpFormatter_ESTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/HelpFormatter_ESTest.class
Class name: HelpFormatter_ESTest
Method name: test07
Start line: 97
End line: 0
Method source code: 
  public void test07()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setSyntaxPrefix("arg");
      assertEquals("arg", helpFormatter0.getSyntaxPrefix());
  }
Method byte code: 
0: new           #2
3: dup
4: invokespecial #3
7: astore_1
8: aload_1
9: ldc           #21
11: invokevirtual #40
14: ldc           #21
16: aload_1
17: invokevirtual #10
20: invokestatic  #11
23: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/HelpFormatter_ESTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/HelpFormatter_ESTest.class
Class name: HelpFormatter_ESTest
Method name: test09
Start line: 104
End line: 0
Method source code: 
  public void test09()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      try { 
        helpFormatter0.printHelp("-", (Options) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }
Method byte code: 
0: new           #2
3: dup
4: invokespecial #3
7: astore_1
8: aload_1
9: ldc           #19
11: aconst_null
12: checkcast     #31
15: invokevirtual #41
18: ldc           #35
20: invokestatic  #36
23: goto          33
26: astore_2
27: ldc           #38
29: aload_2
30: invokestatic  #39
33: return
Exception table:
from    to  target type
8    23    26   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/HelpFormatter_ESTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/HelpFormatter_ESTest.class
Class name: HelpFormatter_ESTest
Method name: test10
Start line: 120
End line: 0
Method source code: 
  public void test10()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = helpFormatter0.getLongOptSeparator();
      assertEquals(3, helpFormatter0.defaultDescPad);
      assertEquals(" ", string0);
      assertEquals("arg", helpFormatter0.getArgName());
      assertEquals("--", helpFormatter0.getLongOptPrefix());
      assertEquals(74, helpFormatter0.defaultWidth);
      assertEquals("usage: ", helpFormatter0.getSyntaxPrefix());
      assertEquals("-", helpFormatter0.getOptPrefix());
      assertEquals(1, helpFormatter0.defaultLeftPad);
  }
Method byte code: 
0: new           #2
3: dup
4: invokespecial #3
7: astore_1
8: aload_1
9: invokevirtual #13
12: astore_2
13: ldc2_w        #5
16: aload_1
17: getfield      #7
20: i2l
21: invokestatic  #8
24: ldc           #12
26: aload_2
27: invokestatic  #11
30: ldc           #21
32: aload_1
33: invokevirtual #22
36: invokestatic  #11
39: ldc           #17
41: aload_1
42: invokevirtual #18
45: invokestatic  #11
48: ldc2_w        #15
51: aload_1
52: getfield      #25
55: i2l
56: invokestatic  #8
59: ldc           #9
61: aload_1
62: invokevirtual #10
65: invokestatic  #11
68: ldc           #19
70: aload_1
71: invokevirtual #20
74: invokestatic  #11
77: lconst_1
78: aload_1
79: getfield      #14
82: i2l
83: invokestatic  #8
86: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/HelpFormatter_ESTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/HelpFormatter_ESTest.class
Class name: HelpFormatter_ESTest
Method name: test11
Start line: 134
End line: 0
Method source code: 
  public void test11()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setWidth((-1079));
      assertEquals((-1079), helpFormatter0.defaultWidth);
  }
Method byte code: 
0: new           #2
3: dup
4: invokespecial #3
7: astore_1
8: aload_1
9: sipush        -1079
12: invokevirtual #42
15: ldc2_w        #43
18: aload_1
19: getfield      #25
22: i2l
23: invokestatic  #8
26: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/HelpFormatter_ESTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/HelpFormatter_ESTest.class
Class name: HelpFormatter_ESTest
Method name: test12
Start line: 141
End line: 0
Method source code: 
  public void test12()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setOptPrefix("-");
      assertEquals("-", helpFormatter0.getOptPrefix());
      assertEquals(1, helpFormatter0.defaultLeftPad);
      assertEquals("arg", helpFormatter0.getArgName());
      assertEquals(3, helpFormatter0.defaultDescPad);
      assertEquals("--", helpFormatter0.getLongOptPrefix());
      assertEquals(" ", helpFormatter0.getLongOptSeparator());
      assertEquals("usage: ", helpFormatter0.getSyntaxPrefix());
      assertEquals(74, helpFormatter0.defaultWidth);
  }
Method byte code: 
0: new           #2
3: dup
4: invokespecial #3
7: astore_1
8: aload_1
9: ldc           #19
11: invokevirtual #45
14: ldc           #19
16: aload_1
17: invokevirtual #20
20: invokestatic  #11
23: lconst_1
24: aload_1
25: getfield      #14
28: i2l
29: invokestatic  #8
32: ldc           #21
34: aload_1
35: invokevirtual #22
38: invokestatic  #11
41: ldc2_w        #5
44: aload_1
45: getfield      #7
48: i2l
49: invokestatic  #8
52: ldc           #17
54: aload_1
55: invokevirtual #18
58: invokestatic  #11
61: ldc           #12
63: aload_1
64: invokevirtual #13
67: invokestatic  #11
70: ldc           #9
72: aload_1
73: invokevirtual #10
76: invokestatic  #11
79: ldc2_w        #15
82: aload_1
83: getfield      #25
86: i2l
87: invokestatic  #8
90: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/HelpFormatter_ESTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/HelpFormatter_ESTest.class
Class name: HelpFormatter_ESTest
Method name: test13
Start line: 155
End line: 0
Method source code: 
  public void test13()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      int int0 = helpFormatter0.getLeftPadding();
      assertEquals(" ", helpFormatter0.getLongOptSeparator());
      assertEquals(1, int0);
      assertEquals(74, helpFormatter0.defaultWidth);
      assertEquals("usage: ", helpFormatter0.getSyntaxPrefix());
      assertEquals("arg", helpFormatter0.getArgName());
      assertEquals("--", helpFormatter0.getLongOptPrefix());
      assertEquals(3, helpFormatter0.defaultDescPad);
      assertEquals("-", helpFormatter0.getOptPrefix());
  }
Method byte code: 
0: new           #2
3: dup
4: invokespecial #3
7: astore_1
8: aload_1
9: invokevirtual #46
12: istore_2
13: ldc           #12
15: aload_1
16: invokevirtual #13
19: invokestatic  #11
22: lconst_1
23: iload_2
24: i2l
25: invokestatic  #8
28: ldc2_w        #15
31: aload_1
32: getfield      #25
35: i2l
36: invokestatic  #8
39: ldc           #9
41: aload_1
42: invokevirtual #10
45: invokestatic  #11
48: ldc           #21
50: aload_1
51: invokevirtual #22
54: invokestatic  #11
57: ldc           #17
59: aload_1
60: invokevirtual #18
63: invokestatic  #11
66: ldc2_w        #5
69: aload_1
70: getfield      #7
73: i2l
74: invokestatic  #8
77: ldc           #19
79: aload_1
80: invokevirtual #20
83: invokestatic  #11
86: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/HelpFormatter_ESTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/HelpFormatter_ESTest.class
Class name: HelpFormatter_ESTest
Method name: test14
Start line: 169
End line: 0
Method source code: 
  public void test14()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setDescPadding(3);
      assertEquals("arg", helpFormatter0.getArgName());
      assertEquals(3, helpFormatter0.defaultDescPad);
      assertEquals(1, helpFormatter0.defaultLeftPad);
      assertEquals("--", helpFormatter0.getLongOptPrefix());
      assertEquals("-", helpFormatter0.getOptPrefix());
      assertEquals(74, helpFormatter0.defaultWidth);
      assertEquals("usage: ", helpFormatter0.getSyntaxPrefix());
      assertEquals(" ", helpFormatter0.getLongOptSeparator());
  }
Method byte code: 
0: new           #2
3: dup
4: invokespecial #3
7: astore_1
8: aload_1
9: iconst_3
10: invokevirtual #47
13: ldc           #21
15: aload_1
16: invokevirtual #22
19: invokestatic  #11
22: ldc2_w        #5
25: aload_1
26: getfield      #7
29: i2l
30: invokestatic  #8
33: lconst_1
34: aload_1
35: getfield      #14
38: i2l
39: invokestatic  #8
42: ldc           #17
44: aload_1
45: invokevirtual #18
48: invokestatic  #11
51: ldc           #19
53: aload_1
54: invokevirtual #20
57: invokestatic  #11
60: ldc2_w        #15
63: aload_1
64: getfield      #25
67: i2l
68: invokestatic  #8
71: ldc           #9
73: aload_1
74: invokevirtual #10
77: invokestatic  #11
80: ldc           #12
82: aload_1
83: invokevirtual #13
86: invokestatic  #11
89: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/HelpFormatter_ESTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/HelpFormatter_ESTest.class
Class name: HelpFormatter_ESTest
Method name: test15
Start line: 183
End line: 0
Method source code: 
  public void test15()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      assertEquals(3, helpFormatter0.defaultDescPad);
      
      Options options0 = new Options();
      helpFormatter0.printHelp("\n", "--", options0, "--");
      assertEquals(" ", helpFormatter0.getLongOptSeparator());
      assertEquals("usage: ", helpFormatter0.getSyntaxPrefix());
  }
Method byte code: 
0: new           #2
3: dup
4: invokespecial #3
7: astore_1
8: ldc2_w        #5
11: aload_1
12: getfield      #7
15: i2l
16: invokestatic  #8
19: new           #31
22: dup
23: invokespecial #32
26: astore_2
27: aload_1
28: ldc           #48
30: ldc           #17
32: aload_2
33: ldc           #17
35: invokevirtual #49
38: ldc           #12
40: aload_1
41: invokevirtual #13
44: invokestatic  #11
47: ldc           #9
49: aload_1
50: invokevirtual #10
53: invokestatic  #11
56: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/HelpFormatter_ESTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/HelpFormatter_ESTest.class
Class name: HelpFormatter_ESTest
Method name: test16
Start line: 194
End line: 0
Method source code: 
  public void test16()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = helpFormatter0.getNewLine();
      assertEquals("--", helpFormatter0.getLongOptPrefix());
      assertEquals(74, helpFormatter0.defaultWidth);
      assertEquals("usage: ", helpFormatter0.getSyntaxPrefix());
      assertEquals(1, helpFormatter0.defaultLeftPad);
      assertEquals(" ", helpFormatter0.getLongOptSeparator());
      assertEquals(3, helpFormatter0.defaultDescPad);
      assertEquals("arg", helpFormatter0.getArgName());
      assertEquals("\n", string0);
      assertEquals("-", helpFormatter0.getOptPrefix());
  }
Method byte code: 
0: new           #2
3: dup
4: invokespecial #3
7: astore_1
8: aload_1
9: invokevirtual #29
12: astore_2
13: ldc           #17
15: aload_1
16: invokevirtual #18
19: invokestatic  #11
22: ldc2_w        #15
25: aload_1
26: getfield      #25
29: i2l
30: invokestatic  #8
33: ldc           #9
35: aload_1
36: invokevirtual #10
39: invokestatic  #11
42: lconst_1
43: aload_1
44: getfield      #14
47: i2l
48: invokestatic  #8
51: ldc           #12
53: aload_1
54: invokevirtual #13
57: invokestatic  #11
60: ldc2_w        #5
63: aload_1
64: getfield      #7
67: i2l
68: invokestatic  #8
71: ldc           #21
73: aload_1
74: invokevirtual #22
77: invokestatic  #11
80: ldc           #48
82: aload_2
83: invokestatic  #11
86: ldc           #19
88: aload_1
89: invokevirtual #20
92: invokestatic  #11
95: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/HelpFormatter_ESTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/HelpFormatter_ESTest.class
Class name: HelpFormatter_ESTest
Method name: test17
Start line: 209
End line: 0
Method source code: 
  public void test17()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = helpFormatter0.getLongOptPrefix();
      assertEquals("-", helpFormatter0.getOptPrefix());
      assertEquals(1, helpFormatter0.defaultLeftPad);
      assertEquals(" ", helpFormatter0.getLongOptSeparator());
      assertEquals("arg", helpFormatter0.getArgName());
      assertEquals("--", string0);
      assertEquals(3, helpFormatter0.defaultDescPad);
      assertEquals("usage: ", helpFormatter0.getSyntaxPrefix());
      assertEquals(74, helpFormatter0.defaultWidth);
  }
Method byte code: 
0: new           #2
3: dup
4: invokespecial #3
7: astore_1
8: aload_1
9: invokevirtual #18
12: astore_2
13: ldc           #19
15: aload_1
16: invokevirtual #20
19: invokestatic  #11
22: lconst_1
23: aload_1
24: getfield      #14
27: i2l
28: invokestatic  #8
31: ldc           #12
33: aload_1
34: invokevirtual #13
37: invokestatic  #11
40: ldc           #21
42: aload_1
43: invokevirtual #22
46: invokestatic  #11
49: ldc           #17
51: aload_2
52: invokestatic  #11
55: ldc2_w        #5
58: aload_1
59: getfield      #7
62: i2l
63: invokestatic  #8
66: ldc           #9
68: aload_1
69: invokevirtual #10
72: invokestatic  #11
75: ldc2_w        #15
78: aload_1
79: getfield      #25
82: i2l
83: invokestatic  #8
86: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/HelpFormatter_ESTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/HelpFormatter_ESTest.class
Class name: HelpFormatter_ESTest
Method name: test18
Start line: 223
End line: 0
Method source code: 
  public void test18()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = helpFormatter0.getSyntaxPrefix();
      assertEquals("-", helpFormatter0.getOptPrefix());
      assertEquals("--", helpFormatter0.getLongOptPrefix());
      assertEquals(74, helpFormatter0.defaultWidth);
      assertEquals(3, helpFormatter0.defaultDescPad);
      assertEquals("arg", helpFormatter0.getArgName());
      assertEquals(" ", helpFormatter0.getLongOptSeparator());
      assertEquals("usage: ", string0);
      assertEquals(1, helpFormatter0.defaultLeftPad);
  }
Method byte code: 
0: new           #2
3: dup
4: invokespecial #3
7: astore_1
8: aload_1
9: invokevirtual #10
12: astore_2
13: ldc           #19
15: aload_1
16: invokevirtual #20
19: invokestatic  #11
22: ldc           #17
24: aload_1
25: invokevirtual #18
28: invokestatic  #11
31: ldc2_w        #15
34: aload_1
35: getfield      #25
38: i2l
39: invokestatic  #8
42: ldc2_w        #5
45: aload_1
46: getfield      #7
49: i2l
50: invokestatic  #8
53: ldc           #21
55: aload_1
56: invokevirtual #22
59: invokestatic  #11
62: ldc           #12
64: aload_1
65: invokevirtual #13
68: invokestatic  #11
71: ldc           #9
73: aload_2
74: invokestatic  #11
77: lconst_1
78: aload_1
79: getfield      #14
82: i2l
83: invokestatic  #8
86: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/HelpFormatter_ESTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/HelpFormatter_ESTest.class
Class name: HelpFormatter_ESTest
Method name: test19
Start line: 237
End line: 0
Method source code: 
  public void test19()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = helpFormatter0.getOptPrefix();
      assertEquals(1, helpFormatter0.defaultLeftPad);
      assertEquals(" ", helpFormatter0.getLongOptSeparator());
      assertEquals("usage: ", helpFormatter0.getSyntaxPrefix());
      assertEquals(3, helpFormatter0.defaultDescPad);
      assertEquals("arg", helpFormatter0.getArgName());
      assertEquals("--", helpFormatter0.getLongOptPrefix());
      assertEquals("-", string0);
      assertEquals(74, helpFormatter0.defaultWidth);
  }
Method byte code: 
0: new           #2
3: dup
4: invokespecial #3
7: astore_1
8: aload_1
9: invokevirtual #20
12: astore_2
13: lconst_1
14: aload_1
15: getfield      #14
18: i2l
19: invokestatic  #8
22: ldc           #12
24: aload_1
25: invokevirtual #13
28: invokestatic  #11
31: ldc           #9
33: aload_1
34: invokevirtual #10
37: invokestatic  #11
40: ldc2_w        #5
43: aload_1
44: getfield      #7
47: i2l
48: invokestatic  #8
51: ldc           #21
53: aload_1
54: invokevirtual #22
57: invokestatic  #11
60: ldc           #17
62: aload_1
63: invokevirtual #18
66: invokestatic  #11
69: ldc           #19
71: aload_2
72: invokestatic  #11
75: ldc2_w        #15
78: aload_1
79: getfield      #25
82: i2l
83: invokestatic  #8
86: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/HelpFormatter_ESTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/HelpFormatter_ESTest.class
Class name: HelpFormatter_ESTest
Method name: test20
Start line: 251
End line: 0
Method source code: 
  public void test20()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      helpFormatter0.setOptionComparator(comparator0);
      assertEquals("usage: ", helpFormatter0.getSyntaxPrefix());
      assertEquals(" ", helpFormatter0.getLongOptSeparator());
      assertEquals("-", helpFormatter0.getOptPrefix());
      assertEquals(3, helpFormatter0.defaultDescPad);
      assertEquals(1, helpFormatter0.defaultLeftPad);
      assertEquals("--", helpFormatter0.getLongOptPrefix());
      assertEquals("arg", helpFormatter0.getArgName());
      assertEquals(74, helpFormatter0.defaultWidth);
  }
Method byte code: 
0: new           #2
3: dup
4: invokespecial #3
7: astore_1
8: ldc           #50
10: new           #51
13: dup
14: invokespecial #52
17: invokestatic  #53
20: checkcast     #50
23: astore_2
24: aload_1
25: aload_2
26: invokevirtual #54
29: ldc           #9
31: aload_1
32: invokevirtual #10
35: invokestatic  #11
38: ldc           #12
40: aload_1
41: invokevirtual #13
44: invokestatic  #11
47: ldc           #19
49: aload_1
50: invokevirtual #20
53: invokestatic  #11
56: ldc2_w        #5
59: aload_1
60: getfield      #7
63: i2l
64: invokestatic  #8
67: lconst_1
68: aload_1
69: getfield      #14
72: i2l
73: invokestatic  #8
76: ldc           #17
78: aload_1
79: invokevirtual #18
82: invokestatic  #11
85: ldc           #21
87: aload_1
88: invokevirtual #22
91: invokestatic  #11
94: ldc2_w        #15
97: aload_1
98: getfield      #25
101: i2l
102: invokestatic  #8
105: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/HelpFormatter_ESTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/HelpFormatter_ESTest.class
Class name: HelpFormatter_ESTest
Method name: test21
Start line: 266
End line: 0
Method source code: 
  public void test21()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setOptionComparator((Comparator) null);
      assertEquals(3, helpFormatter0.defaultDescPad);
      assertEquals("usage: ", helpFormatter0.getSyntaxPrefix());
      assertEquals(" ", helpFormatter0.getLongOptSeparator());
      assertEquals(1, helpFormatter0.defaultLeftPad);
      assertEquals("-", helpFormatter0.getOptPrefix());
      assertEquals("--", helpFormatter0.getLongOptPrefix());
      assertEquals("arg", helpFormatter0.getArgName());
      assertEquals(74, helpFormatter0.defaultWidth);
  }
Method byte code: 
0: new           #2
3: dup
4: invokespecial #3
7: astore_1
8: aload_1
9: aconst_null
10: checkcast     #50
13: invokevirtual #54
16: ldc2_w        #5
19: aload_1
20: getfield      #7
23: i2l
24: invokestatic  #8
27: ldc           #9
29: aload_1
30: invokevirtual #10
33: invokestatic  #11
36: ldc           #12
38: aload_1
39: invokevirtual #13
42: invokestatic  #11
45: lconst_1
46: aload_1
47: getfield      #14
50: i2l
51: invokestatic  #8
54: ldc           #19
56: aload_1
57: invokevirtual #20
60: invokestatic  #11
63: ldc           #17
65: aload_1
66: invokevirtual #18
69: invokestatic  #11
72: ldc           #21
74: aload_1
75: invokevirtual #22
78: invokestatic  #11
81: ldc2_w        #15
84: aload_1
85: getfield      #25
88: i2l
89: invokestatic  #8
92: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/HelpFormatter_ESTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/HelpFormatter_ESTest.class
Class name: HelpFormatter_ESTest
Method name: test22
Start line: 280
End line: 0
Method source code: 
  public void test22()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      try { 
        helpFormatter0.printHelp(1, (String) null, (String) null, options0, (String) null, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }
Method byte code: 
0: new           #2
3: dup
4: invokespecial #3
7: astore_1
8: new           #31
11: dup
12: invokespecial #32
15: astore_2
16: aload_1
17: iconst_1
18: aconst_null
19: checkcast     #55
22: aconst_null
23: checkcast     #55
26: aload_2
27: aconst_null
28: checkcast     #55
31: iconst_0
32: invokevirtual #56
35: ldc           #57
37: invokestatic  #36
40: goto          50
43: astore_3
44: ldc           #38
46: aload_3
47: invokestatic  #39
50: return
Exception table:
from    to  target type
16    40    43   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/HelpFormatter_ESTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/HelpFormatter_ESTest.class
Class name: HelpFormatter_ESTest
Method name: test23
Start line: 297
End line: 0
Method source code: 
  public void test23()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      try { 
        helpFormatter0.printHelp(1, "", "", options0, "", true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }
Method byte code: 
0: new           #2
3: dup
4: invokespecial #3
7: astore_1
8: new           #31
11: dup
12: invokespecial #32
15: astore_2
16: aload_1
17: iconst_1
18: ldc           #59
20: ldc           #59
22: aload_2
23: ldc           #59
25: iconst_1
26: invokevirtual #56
29: ldc           #57
31: invokestatic  #36
34: goto          44
37: astore_3
38: ldc           #38
40: aload_3
41: invokestatic  #39
44: return
Exception table:
from    to  target type
16    34    37   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/HelpFormatter_ESTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/HelpFormatter_ESTest.class
Class name: HelpFormatter_ESTest
Method name: test24
Start line: 314
End line: 0
Method source code: 
  public void test24()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      helpFormatter0.printHelp(74, "-", " ", options0, "usage: ", false);
      assertEquals(3, helpFormatter0.defaultDescPad);
      assertEquals("usage: ", helpFormatter0.getSyntaxPrefix());
      assertEquals("-", helpFormatter0.getOptPrefix());
      assertEquals(74, helpFormatter0.defaultWidth);
  }
Method byte code: 
0: new           #2
3: dup
4: invokespecial #3
7: astore_1
8: new           #31
11: dup
12: invokespecial #32
15: astore_2
16: aload_1
17: bipush        74
19: ldc           #19
21: ldc           #12
23: aload_2
24: ldc           #9
26: iconst_0
27: invokevirtual #56
30: ldc2_w        #5
33: aload_1
34: getfield      #7
37: i2l
38: invokestatic  #8
41: ldc           #9
43: aload_1
44: invokevirtual #10
47: invokestatic  #11
50: ldc           #19
52: aload_1
53: invokevirtual #20
56: invokestatic  #11
59: ldc2_w        #15
62: aload_1
63: getfield      #25
66: i2l
67: invokestatic  #8
70: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/HelpFormatter_ESTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/HelpFormatter_ESTest.class
Class name: HelpFormatter_ESTest
Method name: test25
Start line: 325
End line: 0
Method source code: 
  public void test25()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Option option0 = new Option("arg", ")o", false, "");
      optionGroup0.addOption(option0);
      Option option1 = new Option("", "arg");
      OptionGroup optionGroup1 = optionGroup0.addOption(option1);
      options0.addOptionGroup(optionGroup1);
      helpFormatter0.printHelp("arg", options0, true);
      assertEquals(3, helpFormatter0.defaultDescPad);
  }
Method byte code: 
0: new           #2
3: dup
4: invokespecial #3
7: astore_1
8: new           #31
11: dup
12: invokespecial #32
15: astore_2
16: new           #60
19: dup
20: invokespecial #61
23: astore_3
24: new           #62
27: dup
28: ldc           #21
30: ldc           #63
32: iconst_0
33: ldc           #59
35: invokespecial #64
38: astore        4
40: aload_3
41: aload         4
43: invokevirtual #65
46: pop
47: new           #62
50: dup
51: ldc           #59
53: ldc           #21
55: invokespecial #66
58: astore        5
60: aload_3
61: aload         5
63: invokevirtual #65
66: astore        6
68: aload_2
69: aload         6
71: invokevirtual #67
74: pop
75: aload_1
76: ldc           #21
78: aload_2
79: iconst_1
80: invokevirtual #68
83: ldc2_w        #5
86: aload_1
87: getfield      #7
90: i2l
91: invokestatic  #8
94: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/HelpFormatter_ESTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/HelpFormatter_ESTest.class
Class name: HelpFormatter_ESTest
Method name: test26
Start line: 339
End line: 0
Method source code: 
  public void test26()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Option option0 = new Option("arg", "org.apache.commons.cli.Util");
      OptionGroup optionGroup1 = optionGroup0.addOption(option0);
      optionGroup0.setRequired(true);
      options0.addOptionGroup(optionGroup1);
      try { 
        helpFormatter0.printHelp((-2), "\n", "arg", options0, "usage: ", true);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }
Method byte code: 
0: new           #2
3: dup
4: invokespecial #3
7: astore_1
8: new           #31
11: dup
12: invokespecial #32
15: astore_2
16: new           #60
19: dup
20: invokespecial #61
23: astore_3
24: new           #62
27: dup
28: ldc           #21
30: ldc           #69
32: invokespecial #66
35: astore        4
37: aload_3
38: aload         4
40: invokevirtual #65
43: astore        5
45: aload_3
46: iconst_1
47: invokevirtual #70
50: aload_2
51: aload         5
53: invokevirtual #67
56: pop
57: aload_1
58: bipush        -2
60: ldc           #48
62: ldc           #21
64: aload_2
65: ldc           #9
67: iconst_1
68: invokevirtual #56
71: ldc           #71
73: invokestatic  #36
76: goto          81
79: astore        6
81: return
Exception table:
from    to  target type
57    76    79   Class java/lang/StringIndexOutOfBoundsException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/HelpFormatter_ESTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/HelpFormatter_ESTest.class
Class name: HelpFormatter_ESTest
Method name: test28
Start line: 357
End line: 0
Method source code: 
  public void test28()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Option option0 = new Option("arg", false, "--");
      OptionGroup optionGroup1 = optionGroup0.addOption(option0);
      options0.addOptionGroup(optionGroup1);
      option0.setArgName("");
      option0.setArgs(35);
      helpFormatter0.printHelp(3, "   ", "--", options0, " ", true);
      assertEquals(3, helpFormatter0.defaultDescPad);
      assertEquals(74, helpFormatter0.defaultWidth);
  }
Method byte code: 
0: new           #2
3: dup
4: invokespecial #3
7: astore_1
8: new           #31
11: dup
12: invokespecial #32
15: astore_2
16: new           #60
19: dup
20: invokespecial #61
23: astore_3
24: new           #62
27: dup
28: ldc           #21
30: iconst_0
31: ldc           #17
33: invokespecial #73
36: astore        4
38: aload_3
39: aload         4
41: invokevirtual #65
44: astore        5
46: aload_2
47: aload         5
49: invokevirtual #67
52: pop
53: aload         4
55: ldc           #59
57: invokevirtual #74
60: aload         4
62: bipush        35
64: invokevirtual #75
67: aload_1
68: iconst_3
69: ldc           #76
71: ldc           #17
73: aload_2
74: ldc           #12
76: iconst_1
77: invokevirtual #56
80: ldc2_w        #5
83: aload_1
84: getfield      #7
87: i2l
88: invokestatic  #8
91: ldc2_w        #15
94: aload_1
95: getfield      #25
98: i2l
99: invokestatic  #8
102: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/HelpFormatter_ESTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/HelpFormatter_ESTest.class
Class name: HelpFormatter_ESTest
Method name: test29
Start line: 372
End line: 0
Method source code: 
  public void test29()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      Option option0 = new Option("arg", "--");
      option0.setArgName("--");
      option0.setArgs((-2));
      options0.addOption(option0);
      helpFormatter0.printHelp(882, "--", "usage: ", options0, "usage: ", true);
      assertEquals("-", helpFormatter0.getOptPrefix());
  }
Method byte code: 
0: new           #2
3: dup
4: invokespecial #3
7: astore_1
8: new           #31
11: dup
12: invokespecial #32
15: astore_2
16: new           #62
19: dup
20: ldc           #21
22: ldc           #17
24: invokespecial #66
27: astore_3
28: aload_3
29: ldc           #17
31: invokevirtual #74
34: aload_3
35: bipush        -2
37: invokevirtual #75
40: aload_2
41: aload_3
42: invokevirtual #77
45: pop
46: aload_1
47: sipush        882
50: ldc           #17
52: ldc           #9
54: aload_2
55: ldc           #9
57: iconst_1
58: invokevirtual #56
61: ldc           #19
63: aload_1
64: invokevirtual #20
67: invokestatic  #11
70: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/HelpFormatter_ESTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/HelpFormatter_ESTest.class
Class name: HelpFormatter_ESTest
Method name: test30
Start line: 384
End line: 0
Method source code: 
  public void test30()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      options0.addOption((String) null, "\n", true, "-");
      helpFormatter0.printHelp(3, "--", "usage: ", options0, "--", true);
      assertEquals("arg", helpFormatter0.getArgName());
      assertEquals("--", helpFormatter0.getLongOptPrefix());
      assertEquals(74, helpFormatter0.defaultWidth);
  }
Method byte code: 
0: new           #2
3: dup
4: invokespecial #3
7: astore_1
8: new           #31
11: dup
12: invokespecial #32
15: astore_2
16: aload_2
17: aconst_null
18: checkcast     #55
21: ldc           #48
23: iconst_1
24: ldc           #19
26: invokevirtual #78
29: pop
30: aload_1
31: iconst_3
32: ldc           #17
34: ldc           #9
36: aload_2
37: ldc           #17
39: iconst_1
40: invokevirtual #56
43: ldc           #21
45: aload_1
46: invokevirtual #22
49: invokestatic  #11
52: ldc           #17
54: aload_1
55: invokevirtual #18
58: invokestatic  #11
61: ldc2_w        #15
64: aload_1
65: getfield      #25
68: i2l
69: invokestatic  #8
72: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/HelpFormatter_ESTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/HelpFormatter_ESTest.class
Class name: HelpFormatter_ESTest
Method name: test31
Start line: 395
End line: 0
Method source code: 
  public void test31()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      Option option0 = new Option("q", "usage: ");
      options0.addOption(option0);
      options0.addOption("arg", "\n", true, "arg");
      helpFormatter0.printHelp(3, "--", "-", options0, "--", true);
      assertEquals("arg", helpFormatter0.getArgName());
      assertEquals(3, helpFormatter0.defaultDescPad);
  }
Method byte code: 
0: new           #2
3: dup
4: invokespecial #3
7: astore_1
8: new           #31
11: dup
12: invokespecial #32
15: astore_2
16: new           #62
19: dup
20: ldc           #79
22: ldc           #9
24: invokespecial #66
27: astore_3
28: aload_2
29: aload_3
30: invokevirtual #77
33: pop
34: aload_2
35: ldc           #21
37: ldc           #48
39: iconst_1
40: ldc           #21
42: invokevirtual #78
45: pop
46: aload_1
47: iconst_3
48: ldc           #17
50: ldc           #19
52: aload_2
53: ldc           #17
55: iconst_1
56: invokevirtual #56
59: ldc           #21
61: aload_1
62: invokevirtual #22
65: invokestatic  #11
68: ldc2_w        #5
71: aload_1
72: getfield      #7
75: i2l
76: invokestatic  #8
79: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/HelpFormatter_ESTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/HelpFormatter_ESTest.class
Class name: HelpFormatter_ESTest
Method name: test32
Start line: 407
End line: 0
Method source code: 
  public void test32()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      helpFormatter0.setLeftPadding(59);
      options0.addOption("arg", "\n", true, "arg");
      helpFormatter0.printHelp(3, "--", "-", options0, "--", true);
      assertEquals(59, helpFormatter0.defaultLeftPad);
  }
Method byte code: 
0: new           #2
3: dup
4: invokespecial #3
7: astore_1
8: new           #31
11: dup
12: invokespecial #32
15: astore_2
16: aload_1
17: bipush        59
19: invokevirtual #80
22: aload_2
23: ldc           #21
25: ldc           #48
27: iconst_1
28: ldc           #21
30: invokevirtual #78
33: pop
34: aload_1
35: iconst_3
36: ldc           #17
38: ldc           #19
40: aload_2
41: ldc           #17
43: iconst_1
44: invokevirtual #56
47: ldc2_w        #81
50: aload_1
51: getfield      #14
54: i2l
55: invokestatic  #8
58: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/HelpFormatter_ESTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/HelpFormatter_ESTest.class
Class name: HelpFormatter_ESTest
Method name: test33
Start line: 417
End line: 0
Method source code: 
  public void test33()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      Option option0 = new Option("arg", (String) null);
      options0.addOption(option0);
      helpFormatter0.printHelp(3, "arg", "arg", options0, "-", true);
      assertEquals(3, helpFormatter0.defaultDescPad);
  }
Method byte code: 
0: new           #2
3: dup
4: invokespecial #3
7: astore_1
8: new           #31
11: dup
12: invokespecial #32
15: astore_2
16: new           #62
19: dup
20: ldc           #21
22: aconst_null
23: checkcast     #55
26: invokespecial #66
29: astore_3
30: aload_2
31: aload_3
32: invokevirtual #77
35: pop
36: aload_1
37: iconst_3
38: ldc           #21
40: ldc           #21
42: aload_2
43: ldc           #19
45: iconst_1
46: invokevirtual #56
49: ldc2_w        #5
52: aload_1
53: getfield      #7
56: i2l
57: invokestatic  #8
60: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/src/test/java/org/apache/commons/cli/HelpFormatter_ESTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/cli/32/target/test-classes/org/apache/commons/cli/HelpFormatter_ESTest.class
Class name: HelpFormatter_ESTest
Method name: test35
Start line: 427
End line: 0
Method source code: 
  public void test35()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = helpFormatter0.rtrim((String) null);
      assertEquals(3, helpFormatter0.defaultDescPad);
      assertNull(string0);
      assertEquals(" ", helpFormatter0.getLongOptSeparator());
      assertEquals("usage: ", helpFormatter0.getSyntaxPrefix());
      assertEquals(1, helpFormatter0.defaultLeftPad);
      assertEquals(74, helpFormatter0.defaultWidth);
      assertEquals("-", helpFormatter0.getOptPrefix());
      assertEquals("arg", helpFormatter0.getArgName());
      assertEquals("--", helpFormatter0.getLongOptPrefix());
  }
Method byte code: 
0: new           #2
3: dup
4: invokespecial #3
7: astore_1
8: aload_1
9: aconst_null
10: checkcast     #55
13: invokevirtual #83
16: astore_2
17: ldc2_w        #5
20: aload_1
21: getfield      #7
24: i2l
25: invokestatic  #8
28: aload_2
29: invokestatic  #84
32: ldc           #12
34: aload_1
35: invokevirtual #13
38: invokestatic  #11
41: ldc           #9
43: aload_1
44: invokevirtual #10
47: invokestatic  #11
50: lconst_1
51: aload_1
52: getfield      #14
55: i2l
56: invokestatic  #8
59: ldc2_w        #15
62: aload_1
63: getfield      #25
66: i2l
67: invokestatic  #8
70: ldc           #19
72: aload_1
73: invokevirtual #20
76: invokestatic  #11
79: ldc           #21
81: aload_1
82: invokevirtual #22
85: invokestatic  #11
88: ldc           #17
90: aload_1
91: invokevirtual #18
94: invokestatic  #11
97: return
}
